QuestionId,QuestionTitle,QuestionBody,QuestionTags,Date,ViewCount,Score,NumberOfAnswers,AnswerId,AnswerBody,YearMonth,CleanedQuestionBody,CleanedAnswerBody,Tags,TokenizedQuestionBody,TokenizedAnswerBody,LemmatizedQuestionBody,LemmatizedAnswerBody,LDATopicName,LDATopic,VaderSentimentScores,TextBlobSentiment,BlobSourceTopicfromLDA,BlobTopicName,QueryName
75698058,How to find correlation of two set of software requirements,"<p>I have a thought to find correlation between given set of high level software requirements to customer requirement specification both of which are represented by English text. I want to do this to find which high level requirement corresponds to which customer requirement specification. Can anyone guide me how to do this? Are there any open source libraries to use?</p>
<p>I don't know much on machine learning or natural language processing, so have not tried anything yet</p>
",<machine-learning><nlp>,2023-03-10 15:34:07,16,0,1,75700898,"<p>You can use many methods
One of them I like is using NLTK or spaCy to tokenize and preprocess the text, and then use scikit-learn to compute the similar.</p>
<p>Here is an example:</p>
<pre><code>import nltk

def split_sentences(text):
    words = nltk.word_tokenize(text)
    
    tagged_words = nltk.pos_tag(words)
    
    sentences = []
    
    buffer = []
    
    for word, tag in tagged_words:
        if tag == 'VBZ' or tag == 'VBP' or tag == 'VBG' or tag == 'VBN' or tag == 'VBD':
            if buffer:
                sentence = ' '.join(buffer)
                sentences.append(sentence)
                buffer = []
        else:
            buffer.append(word)
    
    if buffer:
        sentence = ' '.join(buffer)
        sentences.append(sentence)
    
    return sentences
</code></pre>
",2023-03,i have a thought to find correlation between given set of high level software requirements to customer requirement specification both of which are represented by english text i want to do this to find which high level requirement corresponds to which customer requirement specification can anyone guide me how to do this are there any open source libraries to use i don t know much on machine learning or natural language processing so have not tried anything yet,you can use many methods one of them i like is using nltk or spacy to tokenize and preprocess the text and then use scikit learn to compute the similar here is an example import nltk def split_sentences text words nltk word_tokenize text tagged_words nltk pos_tag words sentences buffer for word tag in tagged_words if tag vbz or tag vbp or tag vbg or tag vbn or tag vbd if buffer sentence join buffer sentences append sentence buffer else buffer append word if buffer sentence join buffer sentences append sentence return sentences,"['machine-learning', 'nlp']","['i', 'have', 'a', 'thought', 'to', 'find', 'correlation', 'between', 'given', 'set', 'of', 'high', 'level', 'software', 'requirements', 'to', 'customer', 'requirement', 'specification', 'both', 'of', 'which', 'are', 'represented', 'by', 'english', 'text', 'i', 'want', 'to', 'do', 'this', 'to', 'find', 'which', 'high', 'level', 'requirement', 'corresponds', 'to', 'which', 'customer', 'requirement', 'specification', 'can', 'anyone', 'guide', 'me', 'how', 'to', 'do', 'this', 'are', 'there', 'any', 'open', 'source', 'libraries', 'to', 'use', 'i', 'don', 't', 'know', 'much', 'on', 'machine', 'learning', 'or', 'natural', 'language', 'processing', 'so', 'have', 'not', 'tried', 'anything', 'yet']","['you', 'can', 'use', 'many', 'methods', 'one', 'of', 'them', 'i', 'like', 'is', 'using', 'nltk', 'or', 'spacy', 'to', 'tokenize', 'and', 'preprocess', 'the', 'text', 'and', 'then', 'use', 'scikit', 'learn', 'to', 'compute', 'the', 'similar', 'here', 'is', 'an', 'example', 'import', 'nltk', 'def', 'split_sentences', 'text', 'words', 'nltk', 'word_tokenize', 'text', 'tagged_words', 'nltk', 'pos_tag', 'words', 'sentences', 'buffer', 'for', 'word', 'tag', 'in', 'tagged_words', 'if', 'tag', 'vbz', 'or', 'tag', 'vbp', 'or', 'tag', 'vbg', 'or', 'tag', 'vbn', 'or', 'tag', 'vbd', 'if', 'buffer', 'sentence', 'join', 'buffer', 'sentences', 'append', 'sentence', 'buffer', 'else', 'buffer', 'append', 'word', 'if', 'buffer', 'sentence', 'join', 'buffer', 'sentences', 'append', 'sentence', 'return', 'sentences']","['thought', 'find', 'correlation', 'given', 'set', 'high', 'level', 'software', 'requirement', 'customer', 'requirement', 'specification', 'represented', 'english', 'text', 'want', 'find', 'high', 'level', 'requirement', 'corresponds', 'customer', 'requirement', 'specification', 'anyone', 'guide', 'open', 'source', 'library', 'use', 'know', 'much', 'machine', 'learning', 'natural', 'language', 'processing', 'tried', 'anything', 'yet']","['you', 'can', 'use', 'many', 'method', 'one', 'of', 'them', 'i', 'like', 'is', 'using', 'nltk', 'or', 'spacy', 'to', 'tokenize', 'and', 'preprocess', 'the', 'text', 'and', 'then', 'use', 'scikit', 'learn', 'to', 'compute', 'the', 'similar', 'here', 'is', 'an', 'example', 'import', 'nltk', 'def', 'split_sentences', 'text', 'word', 'nltk', 'word_tokenize', 'text', 'tagged_words', 'nltk', 'pos_tag', 'word', 'sentence', 'buffer', 'for', 'word', 'tag', 'in', 'tagged_words', 'if', 'tag', 'vbz', 'or', 'tag', 'vbp', 'or', 'tag', 'vbg', 'or', 'tag', 'vbn', 'or', 'tag', 'vbd', 'if', 'buffer', 'sentence', 'join', 'buffer', 'sentence', 'append', 'sentence', 'buffer', 'else', 'buffer', 'append', 'word', 'if', 'buffer', 'sentence', 'join', 'buffer', 'sentence', 'append', 'sentence', 'return', 'sentence']",System Requirements and AWS,1,"{'neg': 0.0, 'neu': 0.946, 'pos': 0.054, 'compound': 0.4871}",0.10333333333333333,1,Package Management and File Handling,3query
75137480,Use dictionaries as requirements for if statements,"<p>First of all, I`m sorry if I might ask this question and if it was already answered somewhere else. I couldnt find any solution for the following Problem:</p>
<p>I want to create a list where I apply multiple restricions. But instead of using over hundreads of if statements i just want to use a dictionary in one if statement to apply the requirements. So to say I want to use the keys of the dictionary as requirements and its values as factors for the data.</p>
<p>Lets take a look at a small example:</p>
<p>I want to create data for a countourplot where x/y range from [-50,50] in steps of 1 and the z function has requirements based on the if statements:</p>
<p>The following code is what works, but the more requirements I add the longer and more unreadalbe the code gets:</p>
<pre><code>x = np.linspace(-50 , 50, 100)
y = np.linspace(-50 , 50, 100)
z = []
z_0 = 100
for i in x:
   for j in y:
      if i**2 + j**2 &lt;= 10**2:
         z.append(1.9 * z_0)
      elif i**2 + j**2 &lt;= 20**2:
         z.append(1.5 * z_0)
      elif i**2 + j**2 &lt;= 30**2:
         z.append(1.4 * z_0)
      elif i**2 + j**2 &lt;= 40**2:
         z.append(1.05 * z_0)
      else
         z.append(z_0)
</code></pre>
<p>This would create a map with radial decreasing hight as a function of z on different positions. Is it possible to do this in the following way which is way less redundant? My main problem is how to assing the correct value.</p>
<pre><code>x = np.linspace(-50 , 50, 100)
y = np.linspace(-50 , 50, 100)
z = []
requirements_dict = {10:1,9, 20:1.5, 30:1.4, 40:1.05}
z_0 = 100
for i in x:
   for j in y:
      if i**2 + j**2 &lt;= (each key of the requirements_dict) :
         z.append( (corresponding value of the requirements dict)   * z_0)
      else
         z.append(z_0)
</code></pre>
<p>Thanks in advance for the help and sorry again if this question was already asked.</p>
",<python-3.x><dictionary><if-statement><requirements>,2023-01-16 17:09:21,38,0,1,75137627,"<p>Is this what you're looking for?</p>
<p>EDIT:</p>
<pre><code>import numpy as np

x = np.linspace(-50 , 50, 100)
y = np.linspace(-50 , 50, 100)
z = []
requirements_dict = {10: 1.9, 20: 1.5, 30: 1.4, 40: 1.05}
z_0 = 100
for i in x:
    for j in y:
        for key, value in requirements_dict.items():
            if i**2 + j**2 &lt;= key:
                z.append(value * z_0)
                break
        else:
            z.append(z_0)
</code></pre>
",2023-01,first of all i m sorry if i might ask this question and if it was already answered somewhere else i couldnt find any solution for the following problem i want to create a list where i apply multiple restricions but instead of using over hundreads of if statements i just want to use a dictionary in one if statement to apply the requirements so to say i want to use the keys of the dictionary as requirements and its values as factors for the data lets take a look at a small example i want to create data for a countourplot where x y range from     in steps of   and the z function has requirements based on the if statements the following code is what works but the more requirements i add the longer and more unreadalbe the code gets x np linspace       y np linspace       z z_    for i in x for j in y if i   j       z append     z_  elif i   j       z append     z_  elif i   j       z append     z_  elif i   j       z append     z_  else z append z_  this would create a map with radial decreasing hight as a function of z on different positions is it possible to do this in the following way which is way less redundant my main problem is how to assing the correct value x np linspace       y np linspace       z requirements_dict                         z_    for i in x for j in y if i   j   each key of the requirements_dict z append corresponding value of the requirements dict z_  else z append z_  thanks in advance for the help and sorry again if this question was already asked,is this what you re looking for edit import numpy as np x np linspace       y np linspace       z requirements_dict                         z_    for i in x for j in y for key value in requirements_dict items if i   j   key z append value z_  break else z append z_,"['python-3.x', 'dictionary', 'if-statement', 'requirements']","['first', 'of', 'all', 'i', 'm', 'sorry', 'if', 'i', 'might', 'ask', 'this', 'question', 'and', 'if', 'it', 'was', 'already', 'answered', 'somewhere', 'else', 'i', 'couldnt', 'find', 'any', 'solution', 'for', 'the', 'following', 'problem', 'i', 'want', 'to', 'create', 'a', 'list', 'where', 'i', 'apply', 'multiple', 'restricions', 'but', 'instead', 'of', 'using', 'over', 'hundreads', 'of', 'if', 'statements', 'i', 'just', 'want', 'to', 'use', 'a', 'dictionary', 'in', 'one', 'if', 'statement', 'to', 'apply', 'the', 'requirements', 'so', 'to', 'say', 'i', 'want', 'to', 'use', 'the', 'keys', 'of', 'the', 'dictionary', 'as', 'requirements', 'and', 'its', 'values', 'as', 'factors', 'for', 'the', 'data', 'lets', 'take', 'a', 'look', 'at', 'a', 'small', 'example', 'i', 'want', 'to', 'create', 'data', 'for', 'a', 'countourplot', 'where', 'x', 'y', 'range', 'from', 'in', 'steps', 'of', 'and', 'the', 'z', 'function', 'has', 'requirements', 'based', 'on', 'the', 'if', 'statements', 'the', 'following', 'code', 'is', 'what', 'works', 'but', 'the', 'more', 'requirements', 'i', 'add', 'the', 'longer', 'and', 'more', 'unreadalbe', 'the', 'code', 'gets', 'x', 'np', 'linspace', 'y', 'np', 'linspace', 'z', 'z_', 'for', 'i', 'in', 'x', 'for', 'j', 'in', 'y', 'if', 'i', 'j', 'z', 'append', 'z_', 'elif', 'i', 'j', 'z', 'append', 'z_', 'elif', 'i', 'j', 'z', 'append', 'z_', 'elif', 'i', 'j', 'z', 'append', 'z_', 'else', 'z', 'append', 'z_', 'this', 'would', 'create', 'a', 'map', 'with', 'radial', 'decreasing', 'hight', 'as', 'a', 'function', 'of', 'z', 'on', 'different', 'positions', 'is', 'it', 'possible', 'to', 'do', 'this', 'in', 'the', 'following', 'way', 'which', 'is', 'way', 'less', 'redundant', 'my', 'main', 'problem', 'is', 'how', 'to', 'assing', 'the', 'correct', 'value', 'x', 'np', 'linspace', 'y', 'np', 'linspace', 'z', 'requirements_dict', 'z_', 'for', 'i', 'in', 'x', 'for', 'j', 'in', 'y', 'if', 'i', 'j', 'each', 'key', 'of', 'the', 'requirements_dict', 'z', 'append', 'corresponding', 'value', 'of', 'the', 'requirements', 'dict', 'z_', 'else', 'z', 'append', 'z_', 'thanks', 'in', 'advance', 'for', 'the', 'help', 'and', 'sorry', 'again', 'if', 'this', 'question', 'was', 'already', 'asked']","['is', 'this', 'what', 'you', 're', 'looking', 'for', 'edit', 'import', 'numpy', 'as', 'np', 'x', 'np', 'linspace', 'y', 'np', 'linspace', 'z', 'requirements_dict', 'z_', 'for', 'i', 'in', 'x', 'for', 'j', 'in', 'y', 'for', 'key', 'value', 'in', 'requirements_dict', 'items', 'if', 'i', 'j', 'key', 'z', 'append', 'value', 'z_', 'break', 'else', 'z', 'append', 'z_']","['first', 'sorry', 'might', 'ask', 'question', 'wa', 'already', 'answered', 'somewhere', 'else', 'couldnt', 'find', 'solution', 'following', 'problem', 'want', 'create', 'list', 'apply', 'multiple', 'restricions', 'instead', 'using', 'hundreads', 'statement', 'want', 'use', 'dictionary', 'one', 'statement', 'apply', 'requirement', 'say', 'want', 'use', 'key', 'dictionary', 'requirement', 'value', 'factor', 'data', 'let', 'take', 'look', 'small', 'example', 'want', 'create', 'data', 'countourplot', 'x', 'range', 'step', 'z', 'function', 'ha', 'requirement', 'based', 'statement', 'following', 'code', 'work', 'requirement', 'add', 'longer', 'unreadalbe', 'code', 'get', 'x', 'np', 'linspace', 'np', 'linspace', 'z', 'z_', 'x', 'j', 'j', 'z', 'append', 'z_', 'elif', 'j', 'z', 'append', 'z_', 'elif', 'j', 'z', 'append', 'z_', 'elif', 'j', 'z', 'append', 'z_', 'else', 'z', 'append', 'z_', 'would', 'create', 'map', 'radial', 'decreasing', 'hight', 'function', 'z', 'different', 'position', 'possible', 'following', 'way', 'way', 'le', 'redundant', 'main', 'problem', 'assing', 'correct', 'value', 'x', 'np', 'linspace', 'np', 'linspace', 'z', 'requirements_dict', 'z_', 'x', 'j', 'j', 'key', 'requirements_dict', 'z', 'append', 'corresponding', 'value', 'requirement', 'dict', 'z_', 'else', 'z', 'append', 'z_', 'thanks', 'advance', 'help', 'sorry', 'question', 'wa', 'already', 'asked']","['is', 'this', 'what', 'you', 're', 'looking', 'for', 'edit', 'import', 'numpy', 'a', 'np', 'x', 'np', 'linspace', 'y', 'np', 'linspace', 'z', 'requirements_dict', 'z_', 'for', 'i', 'in', 'x', 'for', 'j', 'in', 'y', 'for', 'key', 'value', 'in', 'requirements_dict', 'item', 'if', 'i', 'j', 'key', 'z', 'append', 'value', 'z_', 'break', 'else', 'z', 'append', 'z_']",System Requirements and AWS,0,"{'neg': 0.027, 'neu': 0.895, 'pos': 0.079, 'compound': 0.9173}",-0.075,0,System Requirements and AWS,3query
75111771,How to create a custom excel template for export customized work items for a project in Polarion?,"<p>I am trying to create a custom export template for excel export of workitems in my polarion project but every time I upload a template it and when I select that template at the time of exporting it It shows me this error: &quot;Server error: java.lang.NullPointerException&quot;.
I tried to even make export template by using existing templates but it still shows me the same error.</p>
",<java><export-to-excel><requirements><polarion><system-requirements>,2023-01-13 16:13:42,72,-1,1,75113368,"<p>To save yourself from trouble, it is easiest to make the template starting from one of the provided templates. Make sure you don't delete the sheet titled &quot;Polarion&quot;. In the &quot;Export Work Items&quot; dialog, use the &quot;Show template&quot; link to download an empty template.</p>
<p>In Excel, in the &quot;Polarion&quot; sheet and &quot;Sheet1&quot; sheet, configure your Work Item type and the fields that you want to export. Make sure all fields that you specify actually exist in your Work Item configuration. You may want to make changes step-by-step: make only a small change and test the template to make sure it still works, until you become more confident about the structure.</p>
<p>If you follow the instructions for your version of Polarion, it should work. See &quot;Customize export templates for Microsoft Excel&quot; in the Polarion help. On my system with 22R1, this is the direct help link: <a href=""http://localhost/polarion/help/topic/com.polarion.xray.doc.user/guide/xid1747724.html?cp=0_3_18_10"" rel=""nofollow noreferrer"">http://localhost/polarion/help/topic/com.polarion.xray.doc.user/guide/xid1747724.html?cp=0_3_18_10</a>. The Polarion help for 19.2 is available online: <a href=""https://docs.plm.automation.siemens.com/content/polarion/19.2/help/en_US/user_and_administration_help/administrators_guide/advanced_administration/customize_export_templates_for_microsoft_excel.html"" rel=""nofollow noreferrer"">https://docs.plm.automation.siemens.com/content/polarion/19.2/help/en_US/user_and_administration_help/administrators_guide/advanced_administration/customize_export_templates_for_microsoft_excel.html</a></p>
<p>If you've followed the instructions exactly and it still doesn't work, it's likely that something is wrong with your installation. You'll have to check the logs in <code>C:\Polarion\data\logs\main\</code> to see what is going wrong.</p>
",2023-01,i am trying to create a custom export template for excel export of workitems in my polarion project but every time i upload a template it and when i select that template at the time of exporting it it shows me this error server error java lang nullpointerexception i tried to even make export template by using existing templates but it still shows me the same error,to save yourself from trouble it is easiest to make the template starting from one of the provided templates make sure you don t delete the sheet titled polarion in the export work items dialog use the show template link to download an empty template in excel in the polarion sheet and sheet  sheet configure your work item type and the fields that you want to export make sure all fields that you specify actually exist in your work item configuration you may want to make changes step by step make only a small change and test the template to make sure it still works until you become more confident about the structure if you follow the instructions for your version of polarion it should work see customize export templates for microsoft excel in the polarion help on my system with  r  this is the direct help link http localhost polarion help topic com polarion xray doc user guide xid  html cp  _ _ _  the polarion help for     is available online https docs plm automation siemens com content polarion     help en_us user_and_administration_help administrators_guide advanced_administration customize_export_templates_for_microsoft_excel html if you ve followed the instructions exactly and it still doesn t work it s likely that something is wrong with your installation you ll have to check the logs in c polarion data logs main to see what is going wrong,"['java', 'export-to-excel', 'requirements', 'polarion', 'system-requirements']","['i', 'am', 'trying', 'to', 'create', 'a', 'custom', 'export', 'template', 'for', 'excel', 'export', 'of', 'workitems', 'in', 'my', 'polarion', 'project', 'but', 'every', 'time', 'i', 'upload', 'a', 'template', 'it', 'and', 'when', 'i', 'select', 'that', 'template', 'at', 'the', 'time', 'of', 'exporting', 'it', 'it', 'shows', 'me', 'this', 'error', 'server', 'error', 'java', 'lang', 'nullpointerexception', 'i', 'tried', 'to', 'even', 'make', 'export', 'template', 'by', 'using', 'existing', 'templates', 'but', 'it', 'still', 'shows', 'me', 'the', 'same', 'error']","['to', 'save', 'yourself', 'from', 'trouble', 'it', 'is', 'easiest', 'to', 'make', 'the', 'template', 'starting', 'from', 'one', 'of', 'the', 'provided', 'templates', 'make', 'sure', 'you', 'don', 't', 'delete', 'the', 'sheet', 'titled', 'polarion', 'in', 'the', 'export', 'work', 'items', 'dialog', 'use', 'the', 'show', 'template', 'link', 'to', 'download', 'an', 'empty', 'template', 'in', 'excel', 'in', 'the', 'polarion', 'sheet', 'and', 'sheet', 'sheet', 'configure', 'your', 'work', 'item', 'type', 'and', 'the', 'fields', 'that', 'you', 'want', 'to', 'export', 'make', 'sure', 'all', 'fields', 'that', 'you', 'specify', 'actually', 'exist', 'in', 'your', 'work', 'item', 'configuration', 'you', 'may', 'want', 'to', 'make', 'changes', 'step', 'by', 'step', 'make', 'only', 'a', 'small', 'change', 'and', 'test', 'the', 'template', 'to', 'make', 'sure', 'it', 'still', 'works', 'until', 'you', 'become', 'more', 'confident', 'about', 'the', 'structure', 'if', 'you', 'follow', 'the', 'instructions', 'for', 'your', 'version', 'of', 'polarion', 'it', 'should', 'work', 'see', 'customize', 'export', 'templates', 'for', 'microsoft', 'excel', 'in', 'the', 'polarion', 'help', 'on', 'my', 'system', 'with', 'r', 'this', 'is', 'the', 'direct', 'help', 'link', 'http', 'localhost', 'polarion', 'help', 'topic', 'com', 'polarion', 'xray', 'doc', 'user', 'guide', 'xid', 'html', 'cp', '_', '_', '_', 'the', 'polarion', 'help', 'for', 'is', 'available', 'online', 'https', 'docs', 'plm', 'automation', 'siemens', 'com', 'content', 'polarion', 'help', 'en_us', 'user_and_administration_help', 'administrators_guide', 'advanced_administration', 'customize_export_templates_for_microsoft_excel', 'html', 'if', 'you', 've', 'followed', 'the', 'instructions', 'exactly', 'and', 'it', 'still', 'doesn', 't', 'work', 'it', 's', 'likely', 'that', 'something', 'is', 'wrong', 'with', 'your', 'installation', 'you', 'll', 'have', 'to', 'check', 'the', 'logs', 'in', 'c', 'polarion', 'data', 'logs', 'main', 'to', 'see', 'what', 'is', 'going', 'wrong']","['trying', 'create', 'custom', 'export', 'template', 'excel', 'export', 'workitems', 'polarion', 'project', 'every', 'time', 'upload', 'template', 'select', 'template', 'time', 'exporting', 'show', 'error', 'server', 'error', 'java', 'lang', 'nullpointerexception', 'tried', 'even', 'make', 'export', 'template', 'using', 'existing', 'template', 'still', 'show', 'error']","['to', 'save', 'yourself', 'from', 'trouble', 'it', 'is', 'easiest', 'to', 'make', 'the', 'template', 'starting', 'from', 'one', 'of', 'the', 'provided', 'template', 'make', 'sure', 'you', 'don', 't', 'delete', 'the', 'sheet', 'titled', 'polarion', 'in', 'the', 'export', 'work', 'item', 'dialog', 'use', 'the', 'show', 'template', 'link', 'to', 'download', 'an', 'empty', 'template', 'in', 'excel', 'in', 'the', 'polarion', 'sheet', 'and', 'sheet', 'sheet', 'configure', 'your', 'work', 'item', 'type', 'and', 'the', 'field', 'that', 'you', 'want', 'to', 'export', 'make', 'sure', 'all', 'field', 'that', 'you', 'specify', 'actually', 'exist', 'in', 'your', 'work', 'item', 'configuration', 'you', 'may', 'want', 'to', 'make', 'change', 'step', 'by', 'step', 'make', 'only', 'a', 'small', 'change', 'and', 'test', 'the', 'template', 'to', 'make', 'sure', 'it', 'still', 'work', 'until', 'you', 'become', 'more', 'confident', 'about', 'the', 'structure', 'if', 'you', 'follow', 'the', 'instruction', 'for', 'your', 'version', 'of', 'polarion', 'it', 'should', 'work', 'see', 'customize', 'export', 'template', 'for', 'microsoft', 'excel', 'in', 'the', 'polarion', 'help', 'on', 'my', 'system', 'with', 'r', 'this', 'is', 'the', 'direct', 'help', 'link', 'http', 'localhost', 'polarion', 'help', 'topic', 'com', 'polarion', 'xray', 'doc', 'user', 'guide', 'xid', 'html', 'cp', '_', '_', '_', 'the', 'polarion', 'help', 'for', 'is', 'available', 'online', 'http', 'doc', 'plm', 'automation', 'siemens', 'com', 'content', 'polarion', 'help', 'en_us', 'user_and_administration_help', 'administrators_guide', 'advanced_administration', 'customize_export_templates_for_microsoft_excel', 'html', 'if', 'you', 've', 'followed', 'the', 'instruction', 'exactly', 'and', 'it', 'still', 'doesn', 't', 'work', 'it', 's', 'likely', 'that', 'something', 'is', 'wrong', 'with', 'your', 'installation', 'you', 'll', 'have', 'to', 'check', 'the', 'log', 'in', 'c', 'polarion', 'data', 'log', 'main', 'to', 'see', 'what', 'is', 'going', 'wrong']",System Requirements and AWS,3,"{'neg': 0.123, 'neu': 0.824, 'pos': 0.052, 'compound': -0.7798}",0.0,3,Python Package Installation and Management,3query
74837919,Alloy dynamic modelling with predicates,"<p>I am trying to model in alloy a system where the users can make comments on forum threads. I want to describe with a predicate a situation where a new comment is added to a forum thread.</p>
<p>This is what I have done:</p>
<pre><code>//other signatures (including User, DateTime, ...)

sig ForumThread {
    title: one String,
    datePosted: one DateTime,
    author: one User,
    content: one String,
    comments: set Comment
}

sig Comment {
    content: one String,
    datePosted: one DateTime,
    author: one User,
}

//other signatures ...

fact allCommentsAreInAThread{
    all c: Comment | one t: ForumThread | c in t.comments
}

//other facts ...

pred addComment[t, t': ForumThread , c: Comment ] {
    t'.comments = t.comments + c
    t'.datePosted = t.datePosted
    t'.author = t.author
    t'.content = t.content
    t'.title = t.title
}
run addComment

//...
</code></pre>
<p>Now, this predicates is consistent (as the analyzer said). However, i think that it can be true only in trivial models, that are the ones where c is already in t.comments and where t is exactly t’. This, because the first fact says that a Comment must always have to be exactly in a ForumThread. Is what i am saying true? If yes, is there a way i can model what i am trying to do without eliminating the fact (since it wouldn't have sense to have comments that are in nothing)?</p>
",<model><logic><alloy><requirements>,2022-12-17 22:32:21,40,0,1,74848619,"<blockquote>
<p>However, i think that it can be true only in trivial models, that are the ones where c is already in t.comments and where t is exactly t’.</p>
</blockquote>
<p>Indeed, because of <code>allCommentsAreInAThread</code>, which is a fact (= an axiom) so any model necessarily respects it.</p>
<blockquote>
<p>is there a way i can model what i am trying to do without eliminating the fact (since it wouldn't have sense to have comments that are in nothing)?</p>
</blockquote>
<p>You must remove the fact as, as you realized, it already imposes what you expect. Instead, you must <em>check</em> a property, which says that there's never a comment without a parent thread, in whichever <em>state</em> of your system. Hence, you need (1) a notion of state and (2) to check the property (here: an invariant) on any state.</p>
<p>There are two main ways to design a notion of state:</p>
<ol>
<li>The &quot;global state&quot; approach: you create a <code>State</code> sig (say) that gathers all state variables.</li>
<li>The &quot;local state&quot; approach: signatures contain both constant and time-varying fields.</li>
</ol>
<p>AFAIK, the latter approach is more frequent in Alloy.</p>
<p>Finally, notice Alloy 6 now has features that make it easier to model and specify state-related properties. You can find some information <a href=""https://haslab.github.io/formal-software-design/"" rel=""nofollow noreferrer"">here</a>.</p>
",2022-12,i am trying to model in alloy a system where the users can make comments on forum threads i want to describe with a predicate a situation where a new comment is added to a forum thread this is what i have done other signatures including user datetime sig forumthread title one string dateposted one datetime author one user content one string comments set comment sig comment content one string dateposted one datetime author one user other signatures fact allcommentsareinathread all c comment one t forumthread c in t comments other facts pred addcomment t t forumthread c comment t comments t comments c t dateposted t dateposted t author t author t content t content t title t title run addcomment now this predicates is consistent as the analyzer said however i think that it can be true only in trivial models that are the ones where c is already in t comments and where t is exactly t this because the first fact says that a comment must always have to be exactly in a forumthread is what i am saying true if yes is there a way i can model what i am trying to do without eliminating the fact since it wouldn t have sense to have comments that are in nothing,however i think that it can be true only in trivial models that are the ones where c is already in t comments and where t is exactly t indeed because of allcommentsareinathread which is a fact an axiom so any model necessarily respects it is there a way i can model what i am trying to do without eliminating the fact since it wouldn t have sense to have comments that are in nothing you must remove the fact as as you realized it already imposes what you expect instead you must check a property which says that there s never a comment without a parent thread in whichever state of your system hence you need   a notion of state and   to check the property here an invariant on any state there are two main ways to design a notion of state the global state approach you create a state sig say that gathers all state variables the local state approach signatures contain both constant and time varying fields afaik the latter approach is more frequent in alloy finally notice alloy   now has features that make it easier to model and specify state related properties you can find some information here,"['model', 'logic', 'alloy', 'requirements']","['i', 'am', 'trying', 'to', 'model', 'in', 'alloy', 'a', 'system', 'where', 'the', 'users', 'can', 'make', 'comments', 'on', 'forum', 'threads', 'i', 'want', 'to', 'describe', 'with', 'a', 'predicate', 'a', 'situation', 'where', 'a', 'new', 'comment', 'is', 'added', 'to', 'a', 'forum', 'thread', 'this', 'is', 'what', 'i', 'have', 'done', 'other', 'signatures', 'including', 'user', 'datetime', 'sig', 'forumthread', 'title', 'one', 'string', 'dateposted', 'one', 'datetime', 'author', 'one', 'user', 'content', 'one', 'string', 'comments', 'set', 'comment', 'sig', 'comment', 'content', 'one', 'string', 'dateposted', 'one', 'datetime', 'author', 'one', 'user', 'other', 'signatures', 'fact', 'allcommentsareinathread', 'all', 'c', 'comment', 'one', 't', 'forumthread', 'c', 'in', 't', 'comments', 'other', 'facts', 'pred', 'addcomment', 't', 't', 'forumthread', 'c', 'comment', 't', 'comments', 't', 'comments', 'c', 't', 'dateposted', 't', 'dateposted', 't', 'author', 't', 'author', 't', 'content', 't', 'content', 't', 'title', 't', 'title', 'run', 'addcomment', 'now', 'this', 'predicates', 'is', 'consistent', 'as', 'the', 'analyzer', 'said', 'however', 'i', 'think', 'that', 'it', 'can', 'be', 'true', 'only', 'in', 'trivial', 'models', 'that', 'are', 'the', 'ones', 'where', 'c', 'is', 'already', 'in', 't', 'comments', 'and', 'where', 't', 'is', 'exactly', 't', 'this', 'because', 'the', 'first', 'fact', 'says', 'that', 'a', 'comment', 'must', 'always', 'have', 'to', 'be', 'exactly', 'in', 'a', 'forumthread', 'is', 'what', 'i', 'am', 'saying', 'true', 'if', 'yes', 'is', 'there', 'a', 'way', 'i', 'can', 'model', 'what', 'i', 'am', 'trying', 'to', 'do', 'without', 'eliminating', 'the', 'fact', 'since', 'it', 'wouldn', 't', 'have', 'sense', 'to', 'have', 'comments', 'that', 'are', 'in', 'nothing']","['however', 'i', 'think', 'that', 'it', 'can', 'be', 'true', 'only', 'in', 'trivial', 'models', 'that', 'are', 'the', 'ones', 'where', 'c', 'is', 'already', 'in', 't', 'comments', 'and', 'where', 't', 'is', 'exactly', 't', 'indeed', 'because', 'of', 'allcommentsareinathread', 'which', 'is', 'a', 'fact', 'an', 'axiom', 'so', 'any', 'model', 'necessarily', 'respects', 'it', 'is', 'there', 'a', 'way', 'i', 'can', 'model', 'what', 'i', 'am', 'trying', 'to', 'do', 'without', 'eliminating', 'the', 'fact', 'since', 'it', 'wouldn', 't', 'have', 'sense', 'to', 'have', 'comments', 'that', 'are', 'in', 'nothing', 'you', 'must', 'remove', 'the', 'fact', 'as', 'as', 'you', 'realized', 'it', 'already', 'imposes', 'what', 'you', 'expect', 'instead', 'you', 'must', 'check', 'a', 'property', 'which', 'says', 'that', 'there', 's', 'never', 'a', 'comment', 'without', 'a', 'parent', 'thread', 'in', 'whichever', 'state', 'of', 'your', 'system', 'hence', 'you', 'need', 'a', 'notion', 'of', 'state', 'and', 'to', 'check', 'the', 'property', 'here', 'an', 'invariant', 'on', 'any', 'state', 'there', 'are', 'two', 'main', 'ways', 'to', 'design', 'a', 'notion', 'of', 'state', 'the', 'global', 'state', 'approach', 'you', 'create', 'a', 'state', 'sig', 'say', 'that', 'gathers', 'all', 'state', 'variables', 'the', 'local', 'state', 'approach', 'signatures', 'contain', 'both', 'constant', 'and', 'time', 'varying', 'fields', 'afaik', 'the', 'latter', 'approach', 'is', 'more', 'frequent', 'in', 'alloy', 'finally', 'notice', 'alloy', 'now', 'has', 'features', 'that', 'make', 'it', 'easier', 'to', 'model', 'and', 'specify', 'state', 'related', 'properties', 'you', 'can', 'find', 'some', 'information', 'here']","['trying', 'model', 'alloy', 'system', 'user', 'make', 'comment', 'forum', 'thread', 'want', 'describe', 'predicate', 'situation', 'new', 'comment', 'added', 'forum', 'thread', 'done', 'signature', 'including', 'user', 'datetime', 'sig', 'forumthread', 'title', 'one', 'string', 'dateposted', 'one', 'datetime', 'author', 'one', 'user', 'content', 'one', 'string', 'comment', 'set', 'comment', 'sig', 'comment', 'content', 'one', 'string', 'dateposted', 'one', 'datetime', 'author', 'one', 'user', 'signature', 'fact', 'allcommentsareinathread', 'c', 'comment', 'one', 'forumthread', 'c', 'comment', 'fact', 'pred', 'addcomment', 'forumthread', 'c', 'comment', 'comment', 'comment', 'c', 'dateposted', 'dateposted', 'author', 'author', 'content', 'content', 'title', 'title', 'run', 'addcomment', 'predicate', 'consistent', 'analyzer', 'said', 'however', 'think', 'true', 'trivial', 'model', 'one', 'c', 'already', 'comment', 'exactly', 'first', 'fact', 'say', 'comment', 'must', 'always', 'exactly', 'forumthread', 'saying', 'true', 'yes', 'way', 'model', 'trying', 'without', 'eliminating', 'fact', 'since', 'sense', 'comment', 'nothing']","['however', 'i', 'think', 'that', 'it', 'can', 'be', 'true', 'only', 'in', 'trivial', 'model', 'that', 'are', 'the', 'one', 'where', 'c', 'is', 'already', 'in', 't', 'comment', 'and', 'where', 't', 'is', 'exactly', 't', 'indeed', 'because', 'of', 'allcommentsareinathread', 'which', 'is', 'a', 'fact', 'an', 'axiom', 'so', 'any', 'model', 'necessarily', 'respect', 'it', 'is', 'there', 'a', 'way', 'i', 'can', 'model', 'what', 'i', 'am', 'trying', 'to', 'do', 'without', 'eliminating', 'the', 'fact', 'since', 'it', 'wouldn', 't', 'have', 'sense', 'to', 'have', 'comment', 'that', 'are', 'in', 'nothing', 'you', 'must', 'remove', 'the', 'fact', 'a', 'a', 'you', 'realized', 'it', 'already', 'imposes', 'what', 'you', 'expect', 'instead', 'you', 'must', 'check', 'a', 'property', 'which', 'say', 'that', 'there', 's', 'never', 'a', 'comment', 'without', 'a', 'parent', 'thread', 'in', 'whichever', 'state', 'of', 'your', 'system', 'hence', 'you', 'need', 'a', 'notion', 'of', 'state', 'and', 'to', 'check', 'the', 'property', 'here', 'an', 'invariant', 'on', 'any', 'state', 'there', 'are', 'two', 'main', 'way', 'to', 'design', 'a', 'notion', 'of', 'state', 'the', 'global', 'state', 'approach', 'you', 'create', 'a', 'state', 'sig', 'say', 'that', 'gather', 'all', 'state', 'variable', 'the', 'local', 'state', 'approach', 'signature', 'contain', 'both', 'constant', 'and', 'time', 'varying', 'field', 'afaik', 'the', 'latter', 'approach', 'is', 'more', 'frequent', 'in', 'alloy', 'finally', 'notice', 'alloy', 'now', 'ha', 'feature', 'that', 'make', 'it', 'easier', 'to', 'model', 'and', 'specify', 'state', 'related', 'property', 'you', 'can', 'find', 'some', 'information', 'here']",System Requirements and AWS,2,"{'neg': 0.006, 'neu': 0.943, 'pos': 0.051, 'compound': 0.8343}",0.22954545454545455,2,Python Libraries and Environment,3query
74560990,PyCharm doesn't see installed packages,"<p>After reimporting the project form VCS I'm trying to install packages listed in requirements.txt. Pycharm installs all packages (also I tried to do it manually; remove requirements.txt and install packages manually, then generate new requirements.txt; etc.). Installation completes successfully and installed packages not highlighted and present in the interpreter settings.
But every time I'm trying to run tests, e.g. <code>pytest tests/folder/test</code> I'm getting na error</p>
<pre><code>AttributeError: type object 'Test_**' has no attribute 'driver'
</code></pre>
<p>I suppose fixture which creates driver doesn't initiates\</p>
<p>Sometimes, doing exact the same actions I'm able to run tests successfully, but debugger refuses to work, returning the same error.</p>
<p>Struggling with that already a week, have no idea what to do.</p>
",<python-3.x><pycharm><pytest><virtualenv><requirements>,2022-11-24 12:42:48,55,0,1,74616479,"<p>I found out that issue was related not to the PyCharm or virtualenv, but to the python 3.11. Revert to the python 3.10 and reinstall of virtualenv solved the problem</p>
",2022-11,after reimporting the project form vcs i m trying to install packages listed in requirements txt pycharm installs all packages also i tried to do it manually remove requirements txt and install packages manually then generate new requirements txt etc installation completes successfully and installed packages not highlighted and present in the interpreter settings but every time i m trying to run tests e g pytest tests folder test i m getting na error attributeerror type object test_ has no attribute driver i suppose fixture which creates driver doesn t initiates sometimes doing exact the same actions i m able to run tests successfully but debugger refuses to work returning the same error struggling with that already a week have no idea what to do,i found out that issue was related not to the pycharm or virtualenv but to the python     revert to the python     and reinstall of virtualenv solved the problem,"['python-3.x', 'pycharm', 'pytest', 'virtualenv', 'requirements']","['after', 'reimporting', 'the', 'project', 'form', 'vcs', 'i', 'm', 'trying', 'to', 'install', 'packages', 'listed', 'in', 'requirements', 'txt', 'pycharm', 'installs', 'all', 'packages', 'also', 'i', 'tried', 'to', 'do', 'it', 'manually', 'remove', 'requirements', 'txt', 'and', 'install', 'packages', 'manually', 'then', 'generate', 'new', 'requirements', 'txt', 'etc', 'installation', 'completes', 'successfully', 'and', 'installed', 'packages', 'not', 'highlighted', 'and', 'present', 'in', 'the', 'interpreter', 'settings', 'but', 'every', 'time', 'i', 'm', 'trying', 'to', 'run', 'tests', 'e', 'g', 'pytest', 'tests', 'folder', 'test', 'i', 'm', 'getting', 'na', 'error', 'attributeerror', 'type', 'object', 'test_', 'has', 'no', 'attribute', 'driver', 'i', 'suppose', 'fixture', 'which', 'creates', 'driver', 'doesn', 't', 'initiates', 'sometimes', 'doing', 'exact', 'the', 'same', 'actions', 'i', 'm', 'able', 'to', 'run', 'tests', 'successfully', 'but', 'debugger', 'refuses', 'to', 'work', 'returning', 'the', 'same', 'error', 'struggling', 'with', 'that', 'already', 'a', 'week', 'have', 'no', 'idea', 'what', 'to', 'do']","['i', 'found', 'out', 'that', 'issue', 'was', 'related', 'not', 'to', 'the', 'pycharm', 'or', 'virtualenv', 'but', 'to', 'the', 'python', 'revert', 'to', 'the', 'python', 'and', 'reinstall', 'of', 'virtualenv', 'solved', 'the', 'problem']","['reimporting', 'project', 'form', 'vcs', 'trying', 'install', 'package', 'listed', 'requirement', 'txt', 'pycharm', 'installs', 'package', 'also', 'tried', 'manually', 'remove', 'requirement', 'txt', 'install', 'package', 'manually', 'generate', 'new', 'requirement', 'txt', 'etc', 'installation', 'completes', 'successfully', 'installed', 'package', 'highlighted', 'present', 'interpreter', 'setting', 'every', 'time', 'trying', 'run', 'test', 'e', 'g', 'pytest', 'test', 'folder', 'test', 'getting', 'na', 'error', 'attributeerror', 'type', 'object', 'test_', 'ha', 'attribute', 'driver', 'suppose', 'fixture', 'creates', 'driver', 'initiate', 'sometimes', 'exact', 'action', 'able', 'run', 'test', 'successfully', 'debugger', 'refuse', 'work', 'returning', 'error', 'struggling', 'already', 'week', 'idea']","['i', 'found', 'out', 'that', 'issue', 'wa', 'related', 'not', 'to', 'the', 'pycharm', 'or', 'virtualenv', 'but', 'to', 'the', 'python', 'revert', 'to', 'the', 'python', 'and', 'reinstall', 'of', 'virtualenv', 'solved', 'the', 'problem']",System Requirements and AWS,3,"{'neg': 0.046, 'neu': 0.881, 'pos': 0.074, 'compound': 0.5346}",0.29829545454545453,3,Python Package Installation and Management,3query
73705196,How to show interaction between two statuses on a diagram?,"<p>Imagine there are two statuses that an application is operating with, e.g. order status and shipment status.</p>
<p>When the order status is placed, the shipment status is blank.
When the order status is &quot;paid&quot;, the shipment status is &quot;ready to ship&quot;.
Then the shipment status is being changed to &quot;assigned&quot; through &quot;shipped&quot;, &quot;on delivery&quot; and &quot;delivered&quot;.
Should the order status be set to &quot;Cancelled&quot; the &quot;shipped&quot; or &quot;on delivery&quot; shipment status is changed to &quot;being returned&quot; and then &quot;received at the warehouse&quot;.</p>
<p>What is the best way to describe the interaction between the two statuses on a diagram?</p>
<p>I know two types of diagrams that could be utilized here, but both have drawbacks for the task:</p>
<ol>
<li>Activity Diagram - will perfectly describe the use cases, but is hard to read</li>
<li>State Machine Diagram - can only describe one status, so there can be two state diagrams, but it won't be clear how the statuses interact with each other.</li>
</ol>
<p>What would you recommend?</p>
",<uml><analysis><diagram><requirements><system-requirements>,2022-09-13 15:00:26,66,2,1,73731045,"<p>Your UML model contains two state machines. A UML model can be visualized by one or more UML diagrams. A UML diagram may visualize any subset of the UML model, or even the whole model (see UML specification version 2.5.1, Annex A). Therefore, it is allowed to show both state machines in one diagram.</p>
<p>The dependencies between two state machines can be modeled in two ways:</p>
<ol>
<li><p>Using 'signal send symbols' in one state machine to send a message to the other state machine. The other state machine uses these messages by means of 'signal receipt symbols'. See figure 14.32 of UML spec 2.5.1.</p>
</li>
<li><p>Using actions in one state machine and corresponding triggers in the other. This is the most convenient technique for your problem, as illustrated by the diagram fragment below. Actions are written behind a slash.</p>
</li>
</ol>
<p><a href=""https://i.stack.imgur.com/CRa11.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CRa11.png"" alt=""two-machines-in-one-diagram"" /></a></p>
",2022-09,imagine there are two statuses that an application is operating with e g order status and shipment status when the order status is placed the shipment status is blank when the order status is paid the shipment status is ready to ship then the shipment status is being changed to assigned through shipped on delivery and delivered should the order status be set to cancelled the shipped or on delivery shipment status is changed to being returned and then received at the warehouse what is the best way to describe the interaction between the two statuses on a diagram i know two types of diagrams that could be utilized here but both have drawbacks for the task activity diagram will perfectly describe the use cases but is hard to read state machine diagram can only describe one status so there can be two state diagrams but it won t be clear how the statuses interact with each other what would you recommend,your uml model contains two state machines a uml model can be visualized by one or more uml diagrams a uml diagram may visualize any subset of the uml model or even the whole model see uml specification version       annex a therefore it is allowed to show both state machines in one diagram the dependencies between two state machines can be modeled in two ways using signal send symbols in one state machine to send a message to the other state machine the other state machine uses these messages by means of signal receipt symbols see figure     of uml spec       using actions in one state machine and corresponding triggers in the other this is the most convenient technique for your problem as illustrated by the diagram fragment below actions are written behind a slash,"['uml', 'analysis', 'diagram', 'requirements', 'system-requirements']","['imagine', 'there', 'are', 'two', 'statuses', 'that', 'an', 'application', 'is', 'operating', 'with', 'e', 'g', 'order', 'status', 'and', 'shipment', 'status', 'when', 'the', 'order', 'status', 'is', 'placed', 'the', 'shipment', 'status', 'is', 'blank', 'when', 'the', 'order', 'status', 'is', 'paid', 'the', 'shipment', 'status', 'is', 'ready', 'to', 'ship', 'then', 'the', 'shipment', 'status', 'is', 'being', 'changed', 'to', 'assigned', 'through', 'shipped', 'on', 'delivery', 'and', 'delivered', 'should', 'the', 'order', 'status', 'be', 'set', 'to', 'cancelled', 'the', 'shipped', 'or', 'on', 'delivery', 'shipment', 'status', 'is', 'changed', 'to', 'being', 'returned', 'and', 'then', 'received', 'at', 'the', 'warehouse', 'what', 'is', 'the', 'best', 'way', 'to', 'describe', 'the', 'interaction', 'between', 'the', 'two', 'statuses', 'on', 'a', 'diagram', 'i', 'know', 'two', 'types', 'of', 'diagrams', 'that', 'could', 'be', 'utilized', 'here', 'but', 'both', 'have', 'drawbacks', 'for', 'the', 'task', 'activity', 'diagram', 'will', 'perfectly', 'describe', 'the', 'use', 'cases', 'but', 'is', 'hard', 'to', 'read', 'state', 'machine', 'diagram', 'can', 'only', 'describe', 'one', 'status', 'so', 'there', 'can', 'be', 'two', 'state', 'diagrams', 'but', 'it', 'won', 't', 'be', 'clear', 'how', 'the', 'statuses', 'interact', 'with', 'each', 'other', 'what', 'would', 'you', 'recommend']","['your', 'uml', 'model', 'contains', 'two', 'state', 'machines', 'a', 'uml', 'model', 'can', 'be', 'visualized', 'by', 'one', 'or', 'more', 'uml', 'diagrams', 'a', 'uml', 'diagram', 'may', 'visualize', 'any', 'subset', 'of', 'the', 'uml', 'model', 'or', 'even', 'the', 'whole', 'model', 'see', 'uml', 'specification', 'version', 'annex', 'a', 'therefore', 'it', 'is', 'allowed', 'to', 'show', 'both', 'state', 'machines', 'in', 'one', 'diagram', 'the', 'dependencies', 'between', 'two', 'state', 'machines', 'can', 'be', 'modeled', 'in', 'two', 'ways', 'using', 'signal', 'send', 'symbols', 'in', 'one', 'state', 'machine', 'to', 'send', 'a', 'message', 'to', 'the', 'other', 'state', 'machine', 'the', 'other', 'state', 'machine', 'uses', 'these', 'messages', 'by', 'means', 'of', 'signal', 'receipt', 'symbols', 'see', 'figure', 'of', 'uml', 'spec', 'using', 'actions', 'in', 'one', 'state', 'machine', 'and', 'corresponding', 'triggers', 'in', 'the', 'other', 'this', 'is', 'the', 'most', 'convenient', 'technique', 'for', 'your', 'problem', 'as', 'illustrated', 'by', 'the', 'diagram', 'fragment', 'below', 'actions', 'are', 'written', 'behind', 'a', 'slash']","['imagine', 'two', 'status', 'application', 'operating', 'e', 'g', 'order', 'status', 'shipment', 'status', 'order', 'status', 'placed', 'shipment', 'status', 'blank', 'order', 'status', 'paid', 'shipment', 'status', 'ready', 'ship', 'shipment', 'status', 'changed', 'assigned', 'shipped', 'delivery', 'delivered', 'order', 'status', 'set', 'cancelled', 'shipped', 'delivery', 'shipment', 'status', 'changed', 'returned', 'received', 'warehouse', 'best', 'way', 'describe', 'interaction', 'two', 'status', 'diagram', 'know', 'two', 'type', 'diagram', 'could', 'utilized', 'drawback', 'task', 'activity', 'diagram', 'perfectly', 'describe', 'use', 'case', 'hard', 'read', 'state', 'machine', 'diagram', 'describe', 'one', 'status', 'two', 'state', 'diagram', 'clear', 'status', 'interact', 'would', 'recommend']","['your', 'uml', 'model', 'contains', 'two', 'state', 'machine', 'a', 'uml', 'model', 'can', 'be', 'visualized', 'by', 'one', 'or', 'more', 'uml', 'diagram', 'a', 'uml', 'diagram', 'may', 'visualize', 'any', 'subset', 'of', 'the', 'uml', 'model', 'or', 'even', 'the', 'whole', 'model', 'see', 'uml', 'specification', 'version', 'annex', 'a', 'therefore', 'it', 'is', 'allowed', 'to', 'show', 'both', 'state', 'machine', 'in', 'one', 'diagram', 'the', 'dependency', 'between', 'two', 'state', 'machine', 'can', 'be', 'modeled', 'in', 'two', 'way', 'using', 'signal', 'send', 'symbol', 'in', 'one', 'state', 'machine', 'to', 'send', 'a', 'message', 'to', 'the', 'other', 'state', 'machine', 'the', 'other', 'state', 'machine', 'us', 'these', 'message', 'by', 'mean', 'of', 'signal', 'receipt', 'symbol', 'see', 'figure', 'of', 'uml', 'spec', 'using', 'action', 'in', 'one', 'state', 'machine', 'and', 'corresponding', 'trigger', 'in', 'the', 'other', 'this', 'is', 'the', 'most', 'convenient', 'technique', 'for', 'your', 'problem', 'a', 'illustrated', 'by', 'the', 'diagram', 'fragment', 'below', 'action', 'are', 'written', 'behind', 'a', 'slash']",System Requirements and AWS,3,"{'neg': 0.026, 'neu': 0.923, 'pos': 0.051, 'compound': 0.7494}",0.3013888888888889,3,Python Package Installation and Management,3query
73654054,Modeling UML Use Case Diagram for Library Online Management System,"<p>I have a list of functionality that the system should have and I have created a case diagram for it, but I am not sure if it correspond to said functionality and want a second look on my solution. Hopefully it is readable and I appreciate any feedback on my trail of design.</p>
<p>Description of said functions:</p>
<blockquote>
<p>The system shall allow people to register as a student or faculty member. To sign up, users must provide their name, e-mail address, phone number, and a password. In addition, students add the name of their program and their student id; faculty members add the name of their department and their employee id.</p>
<p>A user shall be able to search for books, the library system shall indicate the availability for books. If available for loan, a logged in user shall be able to reserve a book for loan. When reserved, the librarian will move the book to a pick-up shelf. To loan a book, users shall login at the library in person, and checkout the books.</p>
<p>The library has an automated booth where users can leave the books and the system shall process the return, upon return, the system shall send a digital receipt sent to their e-mail address.
When a book is not returned in time, the system shall send a reminder e-mail with a fine for each day it is late.</p>
<p>The system shall allow users to extend the loan period of a loaned book at most two times. The system shall allow users to have at most five books on loan simultaneously. If a book is not available in current library, but is in another one, users can ask the system to transfer and vice versa. Books have a title, author, ISBN, edition, and shelf number denoting their location in the library. The library has varying stock for different books, it has a single copy for most books but up to ten physical copies for some popular books.</p>
<p>Librarians shall be able to add new books to the system and edit the information of existing books.</p>
</blockquote>
<p>The design :</p>
<p><a href=""https://i.stack.imgur.com/vvvE6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vvvE6.png"" alt=""enter image description here"" /></a></p>
<p><strong>Update based on feedback</strong>:
<a href=""https://i.stack.imgur.com/W2cku.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/W2cku.png"" alt=""enter image description here"" /></a></p>
",<uml><use-case><requirements><use-case-diagram>,2022-09-08 19:13:46,996,1,2,73654300,"<p>I will not make a detailed review of your diagram, since this is very specific to your needs and will not help anybody else.  However,  I'd like to address some general issues that are frequent in these kind of diagrams:</p>
<ul>
<li><p>It appears in the requirements that users may be a student or  faculty member (or both?), whereas your diagram suggest that a user is another independent category of actors.</p>
</li>
<li><p>Having several actors for a use case is ambiguous.  It cannot always be avoided, but here, it's not clear if all the actors are involved at the same time for a search, or if they are involved one after the other, or if only one may be involved at a time.</p>
</li>
<li><p>Your diagram is a functional decomposition of the requirements.  For example, <code>Register</code> and <code>Verify registry</code> are not independent,  but the second belongs to the detailed decomposition of the first, without being an independent user goal (in fact, the verification doesn't make sense without the first). The same applies to all the verifications (&quot;maximum...&quot;) as well.   This is not forbidden but strongly discouraged as it leads to too detailed and complex diagrams.</p>
</li>
<li><p>Sometimes your diagram seems to be a sequence of action:  e.g. <code>Return a book</code> is followed by a <code>confirmation email</code>.  Use-case diagrams shall not show any sequence.  If you want to show the workflow, you need to use an activity diagram and not a use-case diagram.</p>
</li>
<li><p>extend corresponds to an optional use-case. Here, you seem to say that books are returned only for some loans.</p>
</li>
</ul>
<p>In conclusion,  simplify your diagram to show only user goals.  Avoid extend and include dependencies as much as possible, to keep it simple and understandable.  If you want to document details, document them in a narrative, not in the diagram.</p>
",2022-09,i have a list of functionality that the system should have and i have created a case diagram for it but i am not sure if it correspond to said functionality and want a second look on my solution hopefully it is readable and i appreciate any feedback on my trail of design description of said functions the system shall allow people to register as a student or faculty member to sign up users must provide their name e mail address phone number and a password in addition students add the name of their program and their student id faculty members add the name of their department and their employee id a user shall be able to search for books the library system shall indicate the availability for books if available for loan a logged in user shall be able to reserve a book for loan when reserved the librarian will move the book to a pick up shelf to loan a book users shall login at the library in person and checkout the books the library has an automated booth where users can leave the books and the system shall process the return upon return the system shall send a digital receipt sent to their e mail address when a book is not returned in time the system shall send a reminder e mail with a fine for each day it is late the system shall allow users to extend the loan period of a loaned book at most two times the system shall allow users to have at most five books on loan simultaneously if a book is not available in current library but is in another one users can ask the system to transfer and vice versa books have a title author isbn edition and shelf number denoting their location in the library the library has varying stock for different books it has a single copy for most books but up to ten physical copies for some popular books librarians shall be able to add new books to the system and edit the information of existing books the design update based on feedback,i will not make a detailed review of your diagram since this is very specific to your needs and will not help anybody else however i d like to address some general issues that are frequent in these kind of diagrams it appears in the requirements that users may be a student or faculty member or both whereas your diagram suggest that a user is another independent category of actors having several actors for a use case is ambiguous it cannot always be avoided but here it s not clear if all the actors are involved at the same time for a search or if they are involved one after the other or if only one may be involved at a time your diagram is a functional decomposition of the requirements for example register and verify registry are not independent but the second belongs to the detailed decomposition of the first without being an independent user goal in fact the verification doesn t make sense without the first the same applies to all the verifications maximum as well this is not forbidden but strongly discouraged as it leads to too detailed and complex diagrams sometimes your diagram seems to be a sequence of action e g return a book is followed by a confirmation email use case diagrams shall not show any sequence if you want to show the workflow you need to use an activity diagram and not a use case diagram extend corresponds to an optional use case here you seem to say that books are returned only for some loans in conclusion simplify your diagram to show only user goals avoid extend and include dependencies as much as possible to keep it simple and understandable if you want to document details document them in a narrative not in the diagram,"['uml', 'use-case', 'requirements', 'use-case-diagram']","['i', 'have', 'a', 'list', 'of', 'functionality', 'that', 'the', 'system', 'should', 'have', 'and', 'i', 'have', 'created', 'a', 'case', 'diagram', 'for', 'it', 'but', 'i', 'am', 'not', 'sure', 'if', 'it', 'correspond', 'to', 'said', 'functionality', 'and', 'want', 'a', 'second', 'look', 'on', 'my', 'solution', 'hopefully', 'it', 'is', 'readable', 'and', 'i', 'appreciate', 'any', 'feedback', 'on', 'my', 'trail', 'of', 'design', 'description', 'of', 'said', 'functions', 'the', 'system', 'shall', 'allow', 'people', 'to', 'register', 'as', 'a', 'student', 'or', 'faculty', 'member', 'to', 'sign', 'up', 'users', 'must', 'provide', 'their', 'name', 'e', 'mail', 'address', 'phone', 'number', 'and', 'a', 'password', 'in', 'addition', 'students', 'add', 'the', 'name', 'of', 'their', 'program', 'and', 'their', 'student', 'id', 'faculty', 'members', 'add', 'the', 'name', 'of', 'their', 'department', 'and', 'their', 'employee', 'id', 'a', 'user', 'shall', 'be', 'able', 'to', 'search', 'for', 'books', 'the', 'library', 'system', 'shall', 'indicate', 'the', 'availability', 'for', 'books', 'if', 'available', 'for', 'loan', 'a', 'logged', 'in', 'user', 'shall', 'be', 'able', 'to', 'reserve', 'a', 'book', 'for', 'loan', 'when', 'reserved', 'the', 'librarian', 'will', 'move', 'the', 'book', 'to', 'a', 'pick', 'up', 'shelf', 'to', 'loan', 'a', 'book', 'users', 'shall', 'login', 'at', 'the', 'library', 'in', 'person', 'and', 'checkout', 'the', 'books', 'the', 'library', 'has', 'an', 'automated', 'booth', 'where', 'users', 'can', 'leave', 'the', 'books', 'and', 'the', 'system', 'shall', 'process', 'the', 'return', 'upon', 'return', 'the', 'system', 'shall', 'send', 'a', 'digital', 'receipt', 'sent', 'to', 'their', 'e', 'mail', 'address', 'when', 'a', 'book', 'is', 'not', 'returned', 'in', 'time', 'the', 'system', 'shall', 'send', 'a', 'reminder', 'e', 'mail', 'with', 'a', 'fine', 'for', 'each', 'day', 'it', 'is', 'late', 'the', 'system', 'shall', 'allow', 'users', 'to', 'extend', 'the', 'loan', 'period', 'of', 'a', 'loaned', 'book', 'at', 'most', 'two', 'times', 'the', 'system', 'shall', 'allow', 'users', 'to', 'have', 'at', 'most', 'five', 'books', 'on', 'loan', 'simultaneously', 'if', 'a', 'book', 'is', 'not', 'available', 'in', 'current', 'library', 'but', 'is', 'in', 'another', 'one', 'users', 'can', 'ask', 'the', 'system', 'to', 'transfer', 'and', 'vice', 'versa', 'books', 'have', 'a', 'title', 'author', 'isbn', 'edition', 'and', 'shelf', 'number', 'denoting', 'their', 'location', 'in', 'the', 'library', 'the', 'library', 'has', 'varying', 'stock', 'for', 'different', 'books', 'it', 'has', 'a', 'single', 'copy', 'for', 'most', 'books', 'but', 'up', 'to', 'ten', 'physical', 'copies', 'for', 'some', 'popular', 'books', 'librarians', 'shall', 'be', 'able', 'to', 'add', 'new', 'books', 'to', 'the', 'system', 'and', 'edit', 'the', 'information', 'of', 'existing', 'books', 'the', 'design', 'update', 'based', 'on', 'feedback']","['i', 'will', 'not', 'make', 'a', 'detailed', 'review', 'of', 'your', 'diagram', 'since', 'this', 'is', 'very', 'specific', 'to', 'your', 'needs', 'and', 'will', 'not', 'help', 'anybody', 'else', 'however', 'i', 'd', 'like', 'to', 'address', 'some', 'general', 'issues', 'that', 'are', 'frequent', 'in', 'these', 'kind', 'of', 'diagrams', 'it', 'appears', 'in', 'the', 'requirements', 'that', 'users', 'may', 'be', 'a', 'student', 'or', 'faculty', 'member', 'or', 'both', 'whereas', 'your', 'diagram', 'suggest', 'that', 'a', 'user', 'is', 'another', 'independent', 'category', 'of', 'actors', 'having', 'several', 'actors', 'for', 'a', 'use', 'case', 'is', 'ambiguous', 'it', 'can', 'not', 'always', 'be', 'avoided', 'but', 'here', 'it', 's', 'not', 'clear', 'if', 'all', 'the', 'actors', 'are', 'involved', 'at', 'the', 'same', 'time', 'for', 'a', 'search', 'or', 'if', 'they', 'are', 'involved', 'one', 'after', 'the', 'other', 'or', 'if', 'only', 'one', 'may', 'be', 'involved', 'at', 'a', 'time', 'your', 'diagram', 'is', 'a', 'functional', 'decomposition', 'of', 'the', 'requirements', 'for', 'example', 'register', 'and', 'verify', 'registry', 'are', 'not', 'independent', 'but', 'the', 'second', 'belongs', 'to', 'the', 'detailed', 'decomposition', 'of', 'the', 'first', 'without', 'being', 'an', 'independent', 'user', 'goal', 'in', 'fact', 'the', 'verification', 'doesn', 't', 'make', 'sense', 'without', 'the', 'first', 'the', 'same', 'applies', 'to', 'all', 'the', 'verifications', 'maximum', 'as', 'well', 'this', 'is', 'not', 'forbidden', 'but', 'strongly', 'discouraged', 'as', 'it', 'leads', 'to', 'too', 'detailed', 'and', 'complex', 'diagrams', 'sometimes', 'your', 'diagram', 'seems', 'to', 'be', 'a', 'sequence', 'of', 'action', 'e', 'g', 'return', 'a', 'book', 'is', 'followed', 'by', 'a', 'confirmation', 'email', 'use', 'case', 'diagrams', 'shall', 'not', 'show', 'any', 'sequence', 'if', 'you', 'want', 'to', 'show', 'the', 'workflow', 'you', 'need', 'to', 'use', 'an', 'activity', 'diagram', 'and', 'not', 'a', 'use', 'case', 'diagram', 'extend', 'corresponds', 'to', 'an', 'optional', 'use', 'case', 'here', 'you', 'seem', 'to', 'say', 'that', 'books', 'are', 'returned', 'only', 'for', 'some', 'loans', 'in', 'conclusion', 'simplify', 'your', 'diagram', 'to', 'show', 'only', 'user', 'goals', 'avoid', 'extend', 'and', 'include', 'dependencies', 'as', 'much', 'as', 'possible', 'to', 'keep', 'it', 'simple', 'and', 'understandable', 'if', 'you', 'want', 'to', 'document', 'details', 'document', 'them', 'in', 'a', 'narrative', 'not', 'in', 'the', 'diagram']","['list', 'functionality', 'system', 'created', 'case', 'diagram', 'sure', 'correspond', 'said', 'functionality', 'want', 'second', 'look', 'solution', 'hopefully', 'readable', 'appreciate', 'feedback', 'trail', 'design', 'description', 'said', 'function', 'system', 'shall', 'allow', 'people', 'register', 'student', 'faculty', 'member', 'sign', 'user', 'must', 'provide', 'name', 'e', 'mail', 'address', 'phone', 'number', 'password', 'addition', 'student', 'add', 'name', 'program', 'student', 'id', 'faculty', 'member', 'add', 'name', 'department', 'employee', 'id', 'user', 'shall', 'able', 'search', 'book', 'library', 'system', 'shall', 'indicate', 'availability', 'book', 'available', 'loan', 'logged', 'user', 'shall', 'able', 'reserve', 'book', 'loan', 'reserved', 'librarian', 'move', 'book', 'pick', 'shelf', 'loan', 'book', 'user', 'shall', 'login', 'library', 'person', 'checkout', 'book', 'library', 'ha', 'automated', 'booth', 'user', 'leave', 'book', 'system', 'shall', 'process', 'return', 'upon', 'return', 'system', 'shall', 'send', 'digital', 'receipt', 'sent', 'e', 'mail', 'address', 'book', 'returned', 'time', 'system', 'shall', 'send', 'reminder', 'e', 'mail', 'fine', 'day', 'late', 'system', 'shall', 'allow', 'user', 'extend', 'loan', 'period', 'loaned', 'book', 'two', 'time', 'system', 'shall', 'allow', 'user', 'five', 'book', 'loan', 'simultaneously', 'book', 'available', 'current', 'library', 'another', 'one', 'user', 'ask', 'system', 'transfer', 'vice', 'versa', 'book', 'title', 'author', 'isbn', 'edition', 'shelf', 'number', 'denoting', 'location', 'library', 'library', 'ha', 'varying', 'stock', 'different', 'book', 'ha', 'single', 'copy', 'book', 'ten', 'physical', 'copy', 'popular', 'book', 'librarian', 'shall', 'able', 'add', 'new', 'book', 'system', 'edit', 'information', 'existing', 'book', 'design', 'update', 'based', 'feedback']","['i', 'will', 'not', 'make', 'a', 'detailed', 'review', 'of', 'your', 'diagram', 'since', 'this', 'is', 'very', 'specific', 'to', 'your', 'need', 'and', 'will', 'not', 'help', 'anybody', 'else', 'however', 'i', 'd', 'like', 'to', 'address', 'some', 'general', 'issue', 'that', 'are', 'frequent', 'in', 'these', 'kind', 'of', 'diagram', 'it', 'appears', 'in', 'the', 'requirement', 'that', 'user', 'may', 'be', 'a', 'student', 'or', 'faculty', 'member', 'or', 'both', 'whereas', 'your', 'diagram', 'suggest', 'that', 'a', 'user', 'is', 'another', 'independent', 'category', 'of', 'actor', 'having', 'several', 'actor', 'for', 'a', 'use', 'case', 'is', 'ambiguous', 'it', 'can', 'not', 'always', 'be', 'avoided', 'but', 'here', 'it', 's', 'not', 'clear', 'if', 'all', 'the', 'actor', 'are', 'involved', 'at', 'the', 'same', 'time', 'for', 'a', 'search', 'or', 'if', 'they', 'are', 'involved', 'one', 'after', 'the', 'other', 'or', 'if', 'only', 'one', 'may', 'be', 'involved', 'at', 'a', 'time', 'your', 'diagram', 'is', 'a', 'functional', 'decomposition', 'of', 'the', 'requirement', 'for', 'example', 'register', 'and', 'verify', 'registry', 'are', 'not', 'independent', 'but', 'the', 'second', 'belongs', 'to', 'the', 'detailed', 'decomposition', 'of', 'the', 'first', 'without', 'being', 'an', 'independent', 'user', 'goal', 'in', 'fact', 'the', 'verification', 'doesn', 't', 'make', 'sense', 'without', 'the', 'first', 'the', 'same', 'applies', 'to', 'all', 'the', 'verification', 'maximum', 'a', 'well', 'this', 'is', 'not', 'forbidden', 'but', 'strongly', 'discouraged', 'a', 'it', 'lead', 'to', 'too', 'detailed', 'and', 'complex', 'diagram', 'sometimes', 'your', 'diagram', 'seems', 'to', 'be', 'a', 'sequence', 'of', 'action', 'e', 'g', 'return', 'a', 'book', 'is', 'followed', 'by', 'a', 'confirmation', 'email', 'use', 'case', 'diagram', 'shall', 'not', 'show', 'any', 'sequence', 'if', 'you', 'want', 'to', 'show', 'the', 'workflow', 'you', 'need', 'to', 'use', 'an', 'activity', 'diagram', 'and', 'not', 'a', 'use', 'case', 'diagram', 'extend', 'corresponds', 'to', 'an', 'optional', 'use', 'case', 'here', 'you', 'seem', 'to', 'say', 'that', 'book', 'are', 'returned', 'only', 'for', 'some', 'loan', 'in', 'conclusion', 'simplify', 'your', 'diagram', 'to', 'show', 'only', 'user', 'goal', 'avoid', 'extend', 'and', 'include', 'dependency', 'a', 'much', 'a', 'possible', 'to', 'keep', 'it', 'simple', 'and', 'understandable', 'if', 'you', 'want', 'to', 'document', 'detail', 'document', 'them', 'in', 'a', 'narrative', 'not', 'in', 'the', 'diagram']",System Requirements and AWS,4,"{'neg': 0.01, 'neu': 0.908, 'pos': 0.082, 'compound': 0.9725}",0.21218956482114376,4,Building and Compiling Python Projects,3query
73654054,Modeling UML Use Case Diagram for Library Online Management System,"<p>I have a list of functionality that the system should have and I have created a case diagram for it, but I am not sure if it correspond to said functionality and want a second look on my solution. Hopefully it is readable and I appreciate any feedback on my trail of design.</p>
<p>Description of said functions:</p>
<blockquote>
<p>The system shall allow people to register as a student or faculty member. To sign up, users must provide their name, e-mail address, phone number, and a password. In addition, students add the name of their program and their student id; faculty members add the name of their department and their employee id.</p>
<p>A user shall be able to search for books, the library system shall indicate the availability for books. If available for loan, a logged in user shall be able to reserve a book for loan. When reserved, the librarian will move the book to a pick-up shelf. To loan a book, users shall login at the library in person, and checkout the books.</p>
<p>The library has an automated booth where users can leave the books and the system shall process the return, upon return, the system shall send a digital receipt sent to their e-mail address.
When a book is not returned in time, the system shall send a reminder e-mail with a fine for each day it is late.</p>
<p>The system shall allow users to extend the loan period of a loaned book at most two times. The system shall allow users to have at most five books on loan simultaneously. If a book is not available in current library, but is in another one, users can ask the system to transfer and vice versa. Books have a title, author, ISBN, edition, and shelf number denoting their location in the library. The library has varying stock for different books, it has a single copy for most books but up to ten physical copies for some popular books.</p>
<p>Librarians shall be able to add new books to the system and edit the information of existing books.</p>
</blockquote>
<p>The design :</p>
<p><a href=""https://i.stack.imgur.com/vvvE6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vvvE6.png"" alt=""enter image description here"" /></a></p>
<p><strong>Update based on feedback</strong>:
<a href=""https://i.stack.imgur.com/W2cku.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/W2cku.png"" alt=""enter image description here"" /></a></p>
",<uml><use-case><requirements><use-case-diagram>,2022-09-08 19:13:46,996,1,2,73659181,"<p>To boil it down: this is no use case synthesis but functional decomposition. Use cases show added value for actors. Full stop. This is obviously the hardest thing to learn when finding use cases. They are like pearls you have to find. It's not about the how-to.</p>
<p>I recommend reading Bittner/Spence about use cases.</p>
",2022-09,i have a list of functionality that the system should have and i have created a case diagram for it but i am not sure if it correspond to said functionality and want a second look on my solution hopefully it is readable and i appreciate any feedback on my trail of design description of said functions the system shall allow people to register as a student or faculty member to sign up users must provide their name e mail address phone number and a password in addition students add the name of their program and their student id faculty members add the name of their department and their employee id a user shall be able to search for books the library system shall indicate the availability for books if available for loan a logged in user shall be able to reserve a book for loan when reserved the librarian will move the book to a pick up shelf to loan a book users shall login at the library in person and checkout the books the library has an automated booth where users can leave the books and the system shall process the return upon return the system shall send a digital receipt sent to their e mail address when a book is not returned in time the system shall send a reminder e mail with a fine for each day it is late the system shall allow users to extend the loan period of a loaned book at most two times the system shall allow users to have at most five books on loan simultaneously if a book is not available in current library but is in another one users can ask the system to transfer and vice versa books have a title author isbn edition and shelf number denoting their location in the library the library has varying stock for different books it has a single copy for most books but up to ten physical copies for some popular books librarians shall be able to add new books to the system and edit the information of existing books the design update based on feedback,to boil it down this is no use case synthesis but functional decomposition use cases show added value for actors full stop this is obviously the hardest thing to learn when finding use cases they are like pearls you have to find it s not about the how to i recommend reading bittner spence about use cases,"['uml', 'use-case', 'requirements', 'use-case-diagram']","['i', 'have', 'a', 'list', 'of', 'functionality', 'that', 'the', 'system', 'should', 'have', 'and', 'i', 'have', 'created', 'a', 'case', 'diagram', 'for', 'it', 'but', 'i', 'am', 'not', 'sure', 'if', 'it', 'correspond', 'to', 'said', 'functionality', 'and', 'want', 'a', 'second', 'look', 'on', 'my', 'solution', 'hopefully', 'it', 'is', 'readable', 'and', 'i', 'appreciate', 'any', 'feedback', 'on', 'my', 'trail', 'of', 'design', 'description', 'of', 'said', 'functions', 'the', 'system', 'shall', 'allow', 'people', 'to', 'register', 'as', 'a', 'student', 'or', 'faculty', 'member', 'to', 'sign', 'up', 'users', 'must', 'provide', 'their', 'name', 'e', 'mail', 'address', 'phone', 'number', 'and', 'a', 'password', 'in', 'addition', 'students', 'add', 'the', 'name', 'of', 'their', 'program', 'and', 'their', 'student', 'id', 'faculty', 'members', 'add', 'the', 'name', 'of', 'their', 'department', 'and', 'their', 'employee', 'id', 'a', 'user', 'shall', 'be', 'able', 'to', 'search', 'for', 'books', 'the', 'library', 'system', 'shall', 'indicate', 'the', 'availability', 'for', 'books', 'if', 'available', 'for', 'loan', 'a', 'logged', 'in', 'user', 'shall', 'be', 'able', 'to', 'reserve', 'a', 'book', 'for', 'loan', 'when', 'reserved', 'the', 'librarian', 'will', 'move', 'the', 'book', 'to', 'a', 'pick', 'up', 'shelf', 'to', 'loan', 'a', 'book', 'users', 'shall', 'login', 'at', 'the', 'library', 'in', 'person', 'and', 'checkout', 'the', 'books', 'the', 'library', 'has', 'an', 'automated', 'booth', 'where', 'users', 'can', 'leave', 'the', 'books', 'and', 'the', 'system', 'shall', 'process', 'the', 'return', 'upon', 'return', 'the', 'system', 'shall', 'send', 'a', 'digital', 'receipt', 'sent', 'to', 'their', 'e', 'mail', 'address', 'when', 'a', 'book', 'is', 'not', 'returned', 'in', 'time', 'the', 'system', 'shall', 'send', 'a', 'reminder', 'e', 'mail', 'with', 'a', 'fine', 'for', 'each', 'day', 'it', 'is', 'late', 'the', 'system', 'shall', 'allow', 'users', 'to', 'extend', 'the', 'loan', 'period', 'of', 'a', 'loaned', 'book', 'at', 'most', 'two', 'times', 'the', 'system', 'shall', 'allow', 'users', 'to', 'have', 'at', 'most', 'five', 'books', 'on', 'loan', 'simultaneously', 'if', 'a', 'book', 'is', 'not', 'available', 'in', 'current', 'library', 'but', 'is', 'in', 'another', 'one', 'users', 'can', 'ask', 'the', 'system', 'to', 'transfer', 'and', 'vice', 'versa', 'books', 'have', 'a', 'title', 'author', 'isbn', 'edition', 'and', 'shelf', 'number', 'denoting', 'their', 'location', 'in', 'the', 'library', 'the', 'library', 'has', 'varying', 'stock', 'for', 'different', 'books', 'it', 'has', 'a', 'single', 'copy', 'for', 'most', 'books', 'but', 'up', 'to', 'ten', 'physical', 'copies', 'for', 'some', 'popular', 'books', 'librarians', 'shall', 'be', 'able', 'to', 'add', 'new', 'books', 'to', 'the', 'system', 'and', 'edit', 'the', 'information', 'of', 'existing', 'books', 'the', 'design', 'update', 'based', 'on', 'feedback']","['to', 'boil', 'it', 'down', 'this', 'is', 'no', 'use', 'case', 'synthesis', 'but', 'functional', 'decomposition', 'use', 'cases', 'show', 'added', 'value', 'for', 'actors', 'full', 'stop', 'this', 'is', 'obviously', 'the', 'hardest', 'thing', 'to', 'learn', 'when', 'finding', 'use', 'cases', 'they', 'are', 'like', 'pearls', 'you', 'have', 'to', 'find', 'it', 's', 'not', 'about', 'the', 'how', 'to', 'i', 'recommend', 'reading', 'bittner', 'spence', 'about', 'use', 'cases']","['list', 'functionality', 'system', 'created', 'case', 'diagram', 'sure', 'correspond', 'said', 'functionality', 'want', 'second', 'look', 'solution', 'hopefully', 'readable', 'appreciate', 'feedback', 'trail', 'design', 'description', 'said', 'function', 'system', 'shall', 'allow', 'people', 'register', 'student', 'faculty', 'member', 'sign', 'user', 'must', 'provide', 'name', 'e', 'mail', 'address', 'phone', 'number', 'password', 'addition', 'student', 'add', 'name', 'program', 'student', 'id', 'faculty', 'member', 'add', 'name', 'department', 'employee', 'id', 'user', 'shall', 'able', 'search', 'book', 'library', 'system', 'shall', 'indicate', 'availability', 'book', 'available', 'loan', 'logged', 'user', 'shall', 'able', 'reserve', 'book', 'loan', 'reserved', 'librarian', 'move', 'book', 'pick', 'shelf', 'loan', 'book', 'user', 'shall', 'login', 'library', 'person', 'checkout', 'book', 'library', 'ha', 'automated', 'booth', 'user', 'leave', 'book', 'system', 'shall', 'process', 'return', 'upon', 'return', 'system', 'shall', 'send', 'digital', 'receipt', 'sent', 'e', 'mail', 'address', 'book', 'returned', 'time', 'system', 'shall', 'send', 'reminder', 'e', 'mail', 'fine', 'day', 'late', 'system', 'shall', 'allow', 'user', 'extend', 'loan', 'period', 'loaned', 'book', 'two', 'time', 'system', 'shall', 'allow', 'user', 'five', 'book', 'loan', 'simultaneously', 'book', 'available', 'current', 'library', 'another', 'one', 'user', 'ask', 'system', 'transfer', 'vice', 'versa', 'book', 'title', 'author', 'isbn', 'edition', 'shelf', 'number', 'denoting', 'location', 'library', 'library', 'ha', 'varying', 'stock', 'different', 'book', 'ha', 'single', 'copy', 'book', 'ten', 'physical', 'copy', 'popular', 'book', 'librarian', 'shall', 'able', 'add', 'new', 'book', 'system', 'edit', 'information', 'existing', 'book', 'design', 'update', 'based', 'feedback']","['to', 'boil', 'it', 'down', 'this', 'is', 'no', 'use', 'case', 'synthesis', 'but', 'functional', 'decomposition', 'use', 'case', 'show', 'added', 'value', 'for', 'actor', 'full', 'stop', 'this', 'is', 'obviously', 'the', 'hardest', 'thing', 'to', 'learn', 'when', 'finding', 'use', 'case', 'they', 'are', 'like', 'pearl', 'you', 'have', 'to', 'find', 'it', 's', 'not', 'about', 'the', 'how', 'to', 'i', 'recommend', 'reading', 'bittner', 'spence', 'about', 'use', 'case']",System Requirements and AWS,4,"{'neg': 0.01, 'neu': 0.908, 'pos': 0.082, 'compound': 0.9725}",0.21218956482114376,4,Building and Compiling Python Projects,3query
73633585,How can I specify dependency minimum and maximum version in setup.cfg?,"<h2>Problem description</h2>
<p>I would want to define the install requirement for my pip package. Let's say FooLibrary's version should be &gt;=2 but &lt;3.2.</p>
<p>Currently, I have</p>
<pre><code>[options]
install_requires =
    FooLibrary &gt;= 2
</code></pre>
<h2>Question</h2>
<p>How can I add a rule for maximum version of the library together with the minimum version rule?</p>
",<python><dependencies><python-packaging><requirements>,2022-09-07 10:03:51,257,1,1,73633691,"<p>Separate version requirements with commas.</p>
<p>So for example, in this case, <code>FooLibrary &gt;=2,&lt;3.2</code> works</p>
",2022-09,problem description i would want to define the install requirement for my pip package let s say foolibrary s version should be   but     currently i have options install_requires foolibrary   question how can i add a rule for maximum version of the library together with the minimum version rule,separate version requirements with commas so for example in this case foolibrary       works,"['python', 'dependencies', 'python-packaging', 'requirements']","['problem', 'description', 'i', 'would', 'want', 'to', 'define', 'the', 'install', 'requirement', 'for', 'my', 'pip', 'package', 'let', 's', 'say', 'foolibrary', 's', 'version', 'should', 'be', 'but', 'currently', 'i', 'have', 'options', 'install_requires', 'foolibrary', 'question', 'how', 'can', 'i', 'add', 'a', 'rule', 'for', 'maximum', 'version', 'of', 'the', 'library', 'together', 'with', 'the', 'minimum', 'version', 'rule']","['separate', 'version', 'requirements', 'with', 'commas', 'so', 'for', 'example', 'in', 'this', 'case', 'foolibrary', 'works']","['problem', 'description', 'would', 'want', 'define', 'install', 'requirement', 'pip', 'package', 'let', 'say', 'foolibrary', 'version', 'currently', 'option', 'install_requires', 'foolibrary', 'question', 'add', 'rule', 'maximum', 'version', 'library', 'together', 'minimum', 'version', 'rule']","['separate', 'version', 'requirement', 'with', 'comma', 'so', 'for', 'example', 'in', 'this', 'case', 'foolibrary', 'work']",Package Management and File Handling,3,"{'neg': 0.0, 'neu': 0.976, 'pos': 0.024, 'compound': 0.0387}",0.0,3,Python Package Installation and Management,3query
73568216,How to calculate execution time in DXL,"<p>I'm trying to make a program in DXL (IBM DOORS) and I have a doubt. I have several ideas about how to make the script, but I would like to know which one has the least cost in time.</p>
<p>For example (this isn't the real program that I want to do, but a triviality to exemplify what I ask), in the program below how can I know the time it takes me in seconds?</p>
<pre><code>Folder f = current Folder;

void ScanFolder(Folder f) {

    Item itm;

    for itm in f do {

        if (type(itm) == &quot;Folder&quot;) {

            print &quot;FOLDER: &quot; fullName(itm) &quot;\n&quot;;
            ScanFolder(folder(itm));

        }

        else if (type(itm) == &quot;Formal&quot;) {

            print &quot;MODULE: &quot; fullName(itm) &quot;\n&quot;;

        }

        else {

            ;

        }

    }

}
</code></pre>
",<performance><time><execution-time><requirements><ibm-doors>,2022-09-01 10:56:53,78,1,1,73568942,"<p>If seconds is detailed enough, you can use <code>intOf (today())</code> as start and end time. In case you need millisecods, there's an undocumented perm <code>int getTickCount_ ()</code></p>
",2022-09,i m trying to make a program in dxl ibm doors and i have a doubt i have several ideas about how to make the script but i would like to know which one has the least cost in time for example this isn t the real program that i want to do but a triviality to exemplify what i ask in the program below how can i know the time it takes me in seconds folder f current folder void scanfolder folder f item itm for itm in f do if type itm folder print folder fullname itm n scanfolder folder itm else if type itm formal print module fullname itm n else,if seconds is detailed enough you can use intof today as start and end time in case you need millisecods there s an undocumented perm int gettickcount_,"['performance', 'time', 'execution-time', 'requirements', 'ibm-doors']","['i', 'm', 'trying', 'to', 'make', 'a', 'program', 'in', 'dxl', 'ibm', 'doors', 'and', 'i', 'have', 'a', 'doubt', 'i', 'have', 'several', 'ideas', 'about', 'how', 'to', 'make', 'the', 'script', 'but', 'i', 'would', 'like', 'to', 'know', 'which', 'one', 'has', 'the', 'least', 'cost', 'in', 'time', 'for', 'example', 'this', 'isn', 't', 'the', 'real', 'program', 'that', 'i', 'want', 'to', 'do', 'but', 'a', 'triviality', 'to', 'exemplify', 'what', 'i', 'ask', 'in', 'the', 'program', 'below', 'how', 'can', 'i', 'know', 'the', 'time', 'it', 'takes', 'me', 'in', 'seconds', 'folder', 'f', 'current', 'folder', 'void', 'scanfolder', 'folder', 'f', 'item', 'itm', 'for', 'itm', 'in', 'f', 'do', 'if', 'type', 'itm', 'folder', 'print', 'folder', 'fullname', 'itm', 'n', 'scanfolder', 'folder', 'itm', 'else', 'if', 'type', 'itm', 'formal', 'print', 'module', 'fullname', 'itm', 'n', 'else']","['if', 'seconds', 'is', 'detailed', 'enough', 'you', 'can', 'use', 'intof', 'today', 'as', 'start', 'and', 'end', 'time', 'in', 'case', 'you', 'need', 'millisecods', 'there', 's', 'an', 'undocumented', 'perm', 'int', 'gettickcount_']","['trying', 'make', 'program', 'dxl', 'ibm', 'door', 'doubt', 'several', 'idea', 'make', 'script', 'would', 'like', 'know', 'one', 'ha', 'least', 'cost', 'time', 'example', 'real', 'program', 'want', 'triviality', 'exemplify', 'ask', 'program', 'know', 'time', 'take', 'second', 'folder', 'f', 'current', 'folder', 'void', 'scanfolder', 'folder', 'f', 'item', 'itm', 'itm', 'f', 'type', 'itm', 'folder', 'print', 'folder', 'fullname', 'itm', 'n', 'scanfolder', 'folder', 'itm', 'else', 'type', 'itm', 'formal', 'print', 'module', 'fullname', 'itm', 'n', 'else']","['if', 'second', 'is', 'detailed', 'enough', 'you', 'can', 'use', 'intof', 'today', 'a', 'start', 'and', 'end', 'time', 'in', 'case', 'you', 'need', 'millisecods', 'there', 's', 'an', 'undocumented', 'perm', 'int', 'gettickcount_']",Package Management and File Handling,4,"{'neg': 0.034, 'neu': 0.921, 'pos': 0.046, 'compound': 0.296}",0.06666666666666667,4,Building and Compiling Python Projects,3query
73295093,How to draw a use-case diagram for the given context?,"<p>Given the following description of a tracking request to DHL</p>
<blockquote>
<p>In the age of Corona, we order many things online. The delivery does not
always work out as planned, so we are interested in getting (more) information
about the delivery.<br />
<br />
The DHL packet service has a comprehensive web service where it
provides information on shipping and receiving packages. Among
other things, page visitors can search for contact information on
the DHL webservice. Another option is to contact DHL via a chat.
Requests in the chat are answered automatically by a DHL AI, one
instance of the DHL webservice. A visitor can send a request (via
the chat), which includes also entering the consignment number of
the package to the DHL AI. Then, in order to get information about
the shipment, the visitor needs to authenticate in the webservice,
which promotes the visitor to a customer and the DHL AI is allowed
to reply to the chat request. In case the DHL AI cannot answer the
request, it forwards the request to a DHL employee. To shorten the
waiting time the customer can optionally contact the DHL employee
via phone.</p>
</blockquote>
<p>How to draw the use-case diagram? Is this correct:
<a href=""https://i.stack.imgur.com/qF8l1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qF8l1.png"" alt=""enter image description here"" /></a></p>
<p>and how would I model the &quot;... optionally contact the DHL employee via phone&quot; use case? Would this use case extend the forward request use case? Can we then just associate the customer with the extended use case like this</p>
<p><a href=""https://i.stack.imgur.com/MuNOk.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/MuNOk.png"" alt=""Use-case diagram extended"" /></a></p>
<p>but then wouldnt the &quot;contact DHL via chat&quot; include the &quot;send request&quot; use case?</p>
",<uml><use-case><requirements><use-case-diagram>,2022-08-09 16:20:58,137,2,1,73297684,"<p>A use case normally should correspond to a user goal, and unless it's an extension, it should also make sense independently of other use-cases. In this regard:</p>
<ul>
<li><code>Reply to request</code>  does not make any sense on its own.  So this &quot;use case&quot; is probably a detail of the use-case <code>Contact DHL</code>.  The DHL AI would then be a secondary actor of the <code>Contact DHL</code> use-case.</li>
<li><code>Send request</code> seems likewise to be a detail of how to contact the DHL agent.</li>
<li>Details such as <code>Enter consignment number</code> or <code>send request</code> are user interface detail.  Use-case should not be used to model user-interface. This is a design topic, and putting it in the use-case would force to use one specific user-interface approach without considering better alternatives.</li>
<li>Authenticate is not a use-case.  It's a constraint.  Imagine that you have a system with Single Sign On (SSO):  an authentication use case would then make no sense since there is no interaction with an actor to achieve it.</li>
</ul>
<p>So keep the use-case as simple as possible:</p>
<ul>
<li>if you start to think about the details of the scenario, and successive steps, you're no longer modeling a use-case, but a control flow:  use an activity diagram fro this level of detail.</li>
<li>if you start to take a use-case and then decompose it into smaller cases based on the narrative,  there are big chances that you'll be mislead to do functional decomposition.  This is not recommended for use-cases, since it leads to very detailed diagrams.</li>
</ul>
<p>Now to the optional use-case: optional typically suggest to use an extension.  But does <code>Contact by phone</code> really extend the <code>Contact via chat</code>?  I believe these two forms of contact are two different things.  I therefore see two approaches:</p>
<ol>
<li>Just make a use-case <code>Contact DHL</code>  and in the description of this use-case you explain that the contact can be via Phone or via Chat. This is my favourite approach.</li>
<li>Make a use-case <code>Contact DHL</code> for the general case.  Make to specialisations <code>Contact DHL by chat</code> and <code>Contact DHL by phone</code> that each could implement the general case as best fits.  This approach is more complicated, but it allows to take into account more fundamental differences between the specialisations, such as the fact that an AI actor is involved in the chat and a human operator is involved on the phone.</li>
</ol>
",2022-08,given the following description of a tracking request to dhl in the age of corona we order many things online the delivery does not always work out as planned so we are interested in getting more information about the delivery the dhl packet service has a comprehensive web service where it provides information on shipping and receiving packages among other things page visitors can search for contact information on the dhl webservice another option is to contact dhl via a chat requests in the chat are answered automatically by a dhl ai one instance of the dhl webservice a visitor can send a request via the chat which includes also entering the consignment number of the package to the dhl ai then in order to get information about the shipment the visitor needs to authenticate in the webservice which promotes the visitor to a customer and the dhl ai is allowed to reply to the chat request in case the dhl ai cannot answer the request it forwards the request to a dhl employee to shorten the waiting time the customer can optionally contact the dhl employee via phone how to draw the use case diagram is this correct and how would i model the optionally contact the dhl employee via phone use case would this use case extend the forward request use case can we then just associate the customer with the extended use case like this but then wouldnt the contact dhl via chat include the send request use case,a use case normally should correspond to a user goal and unless it s an extension it should also make sense independently of other use cases in this regard reply to request does not make any sense on its own so this use case is probably a detail of the use case contact dhl the dhl ai would then be a secondary actor of the contact dhl use case send request seems likewise to be a detail of how to contact the dhl agent details such as enter consignment number or send request are user interface detail use case should not be used to model user interface this is a design topic and putting it in the use case would force to use one specific user interface approach without considering better alternatives authenticate is not a use case it s a constraint imagine that you have a system with single sign on sso an authentication use case would then make no sense since there is no interaction with an actor to achieve it so keep the use case as simple as possible if you start to think about the details of the scenario and successive steps you re no longer modeling a use case but a control flow use an activity diagram fro this level of detail if you start to take a use case and then decompose it into smaller cases based on the narrative there are big chances that you ll be mislead to do functional decomposition this is not recommended for use cases since it leads to very detailed diagrams now to the optional use case optional typically suggest to use an extension but does contact by phone really extend the contact via chat i believe these two forms of contact are two different things i therefore see two approaches just make a use case contact dhl and in the description of this use case you explain that the contact can be via phone or via chat this is my favourite approach make a use case contact dhl for the general case make to specialisations contact dhl by chat and contact dhl by phone that each could implement the general case as best fits this approach is more complicated but it allows to take into account more fundamental differences between the specialisations such as the fact that an ai actor is involved in the chat and a human operator is involved on the phone,"['uml', 'use-case', 'requirements', 'use-case-diagram']","['given', 'the', 'following', 'description', 'of', 'a', 'tracking', 'request', 'to', 'dhl', 'in', 'the', 'age', 'of', 'corona', 'we', 'order', 'many', 'things', 'online', 'the', 'delivery', 'does', 'not', 'always', 'work', 'out', 'as', 'planned', 'so', 'we', 'are', 'interested', 'in', 'getting', 'more', 'information', 'about', 'the', 'delivery', 'the', 'dhl', 'packet', 'service', 'has', 'a', 'comprehensive', 'web', 'service', 'where', 'it', 'provides', 'information', 'on', 'shipping', 'and', 'receiving', 'packages', 'among', 'other', 'things', 'page', 'visitors', 'can', 'search', 'for', 'contact', 'information', 'on', 'the', 'dhl', 'webservice', 'another', 'option', 'is', 'to', 'contact', 'dhl', 'via', 'a', 'chat', 'requests', 'in', 'the', 'chat', 'are', 'answered', 'automatically', 'by', 'a', 'dhl', 'ai', 'one', 'instance', 'of', 'the', 'dhl', 'webservice', 'a', 'visitor', 'can', 'send', 'a', 'request', 'via', 'the', 'chat', 'which', 'includes', 'also', 'entering', 'the', 'consignment', 'number', 'of', 'the', 'package', 'to', 'the', 'dhl', 'ai', 'then', 'in', 'order', 'to', 'get', 'information', 'about', 'the', 'shipment', 'the', 'visitor', 'needs', 'to', 'authenticate', 'in', 'the', 'webservice', 'which', 'promotes', 'the', 'visitor', 'to', 'a', 'customer', 'and', 'the', 'dhl', 'ai', 'is', 'allowed', 'to', 'reply', 'to', 'the', 'chat', 'request', 'in', 'case', 'the', 'dhl', 'ai', 'can', 'not', 'answer', 'the', 'request', 'it', 'forwards', 'the', 'request', 'to', 'a', 'dhl', 'employee', 'to', 'shorten', 'the', 'waiting', 'time', 'the', 'customer', 'can', 'optionally', 'contact', 'the', 'dhl', 'employee', 'via', 'phone', 'how', 'to', 'draw', 'the', 'use', 'case', 'diagram', 'is', 'this', 'correct', 'and', 'how', 'would', 'i', 'model', 'the', 'optionally', 'contact', 'the', 'dhl', 'employee', 'via', 'phone', 'use', 'case', 'would', 'this', 'use', 'case', 'extend', 'the', 'forward', 'request', 'use', 'case', 'can', 'we', 'then', 'just', 'associate', 'the', 'customer', 'with', 'the', 'extended', 'use', 'case', 'like', 'this', 'but', 'then', 'wouldnt', 'the', 'contact', 'dhl', 'via', 'chat', 'include', 'the', 'send', 'request', 'use', 'case']","['a', 'use', 'case', 'normally', 'should', 'correspond', 'to', 'a', 'user', 'goal', 'and', 'unless', 'it', 's', 'an', 'extension', 'it', 'should', 'also', 'make', 'sense', 'independently', 'of', 'other', 'use', 'cases', 'in', 'this', 'regard', 'reply', 'to', 'request', 'does', 'not', 'make', 'any', 'sense', 'on', 'its', 'own', 'so', 'this', 'use', 'case', 'is', 'probably', 'a', 'detail', 'of', 'the', 'use', 'case', 'contact', 'dhl', 'the', 'dhl', 'ai', 'would', 'then', 'be', 'a', 'secondary', 'actor', 'of', 'the', 'contact', 'dhl', 'use', 'case', 'send', 'request', 'seems', 'likewise', 'to', 'be', 'a', 'detail', 'of', 'how', 'to', 'contact', 'the', 'dhl', 'agent', 'details', 'such', 'as', 'enter', 'consignment', 'number', 'or', 'send', 'request', 'are', 'user', 'interface', 'detail', 'use', 'case', 'should', 'not', 'be', 'used', 'to', 'model', 'user', 'interface', 'this', 'is', 'a', 'design', 'topic', 'and', 'putting', 'it', 'in', 'the', 'use', 'case', 'would', 'force', 'to', 'use', 'one', 'specific', 'user', 'interface', 'approach', 'without', 'considering', 'better', 'alternatives', 'authenticate', 'is', 'not', 'a', 'use', 'case', 'it', 's', 'a', 'constraint', 'imagine', 'that', 'you', 'have', 'a', 'system', 'with', 'single', 'sign', 'on', 'sso', 'an', 'authentication', 'use', 'case', 'would', 'then', 'make', 'no', 'sense', 'since', 'there', 'is', 'no', 'interaction', 'with', 'an', 'actor', 'to', 'achieve', 'it', 'so', 'keep', 'the', 'use', 'case', 'as', 'simple', 'as', 'possible', 'if', 'you', 'start', 'to', 'think', 'about', 'the', 'details', 'of', 'the', 'scenario', 'and', 'successive', 'steps', 'you', 're', 'no', 'longer', 'modeling', 'a', 'use', 'case', 'but', 'a', 'control', 'flow', 'use', 'an', 'activity', 'diagram', 'fro', 'this', 'level', 'of', 'detail', 'if', 'you', 'start', 'to', 'take', 'a', 'use', 'case', 'and', 'then', 'decompose', 'it', 'into', 'smaller', 'cases', 'based', 'on', 'the', 'narrative', 'there', 'are', 'big', 'chances', 'that', 'you', 'll', 'be', 'mislead', 'to', 'do', 'functional', 'decomposition', 'this', 'is', 'not', 'recommended', 'for', 'use', 'cases', 'since', 'it', 'leads', 'to', 'very', 'detailed', 'diagrams', 'now', 'to', 'the', 'optional', 'use', 'case', 'optional', 'typically', 'suggest', 'to', 'use', 'an', 'extension', 'but', 'does', 'contact', 'by', 'phone', 'really', 'extend', 'the', 'contact', 'via', 'chat', 'i', 'believe', 'these', 'two', 'forms', 'of', 'contact', 'are', 'two', 'different', 'things', 'i', 'therefore', 'see', 'two', 'approaches', 'just', 'make', 'a', 'use', 'case', 'contact', 'dhl', 'and', 'in', 'the', 'description', 'of', 'this', 'use', 'case', 'you', 'explain', 'that', 'the', 'contact', 'can', 'be', 'via', 'phone', 'or', 'via', 'chat', 'this', 'is', 'my', 'favourite', 'approach', 'make', 'a', 'use', 'case', 'contact', 'dhl', 'for', 'the', 'general', 'case', 'make', 'to', 'specialisations', 'contact', 'dhl', 'by', 'chat', 'and', 'contact', 'dhl', 'by', 'phone', 'that', 'each', 'could', 'implement', 'the', 'general', 'case', 'as', 'best', 'fits', 'this', 'approach', 'is', 'more', 'complicated', 'but', 'it', 'allows', 'to', 'take', 'into', 'account', 'more', 'fundamental', 'differences', 'between', 'the', 'specialisations', 'such', 'as', 'the', 'fact', 'that', 'an', 'ai', 'actor', 'is', 'involved', 'in', 'the', 'chat', 'and', 'a', 'human', 'operator', 'is', 'involved', 'on', 'the', 'phone']","['given', 'following', 'description', 'tracking', 'request', 'dhl', 'age', 'corona', 'order', 'many', 'thing', 'online', 'delivery', 'doe', 'always', 'work', 'planned', 'interested', 'getting', 'information', 'delivery', 'dhl', 'packet', 'service', 'ha', 'comprehensive', 'web', 'service', 'provides', 'information', 'shipping', 'receiving', 'package', 'among', 'thing', 'page', 'visitor', 'search', 'contact', 'information', 'dhl', 'webservice', 'another', 'option', 'contact', 'dhl', 'via', 'chat', 'request', 'chat', 'answered', 'automatically', 'dhl', 'ai', 'one', 'instance', 'dhl', 'webservice', 'visitor', 'send', 'request', 'via', 'chat', 'includes', 'also', 'entering', 'consignment', 'number', 'package', 'dhl', 'ai', 'order', 'get', 'information', 'shipment', 'visitor', 'need', 'authenticate', 'webservice', 'promotes', 'visitor', 'customer', 'dhl', 'ai', 'allowed', 'reply', 'chat', 'request', 'case', 'dhl', 'ai', 'answer', 'request', 'forward', 'request', 'dhl', 'employee', 'shorten', 'waiting', 'time', 'customer', 'optionally', 'contact', 'dhl', 'employee', 'via', 'phone', 'draw', 'use', 'case', 'diagram', 'correct', 'would', 'model', 'optionally', 'contact', 'dhl', 'employee', 'via', 'phone', 'use', 'case', 'would', 'use', 'case', 'extend', 'forward', 'request', 'use', 'case', 'associate', 'customer', 'extended', 'use', 'case', 'like', 'wouldnt', 'contact', 'dhl', 'via', 'chat', 'include', 'send', 'request', 'use', 'case']","['a', 'use', 'case', 'normally', 'should', 'correspond', 'to', 'a', 'user', 'goal', 'and', 'unless', 'it', 's', 'an', 'extension', 'it', 'should', 'also', 'make', 'sense', 'independently', 'of', 'other', 'use', 'case', 'in', 'this', 'regard', 'reply', 'to', 'request', 'doe', 'not', 'make', 'any', 'sense', 'on', 'it', 'own', 'so', 'this', 'use', 'case', 'is', 'probably', 'a', 'detail', 'of', 'the', 'use', 'case', 'contact', 'dhl', 'the', 'dhl', 'ai', 'would', 'then', 'be', 'a', 'secondary', 'actor', 'of', 'the', 'contact', 'dhl', 'use', 'case', 'send', 'request', 'seems', 'likewise', 'to', 'be', 'a', 'detail', 'of', 'how', 'to', 'contact', 'the', 'dhl', 'agent', 'detail', 'such', 'a', 'enter', 'consignment', 'number', 'or', 'send', 'request', 'are', 'user', 'interface', 'detail', 'use', 'case', 'should', 'not', 'be', 'used', 'to', 'model', 'user', 'interface', 'this', 'is', 'a', 'design', 'topic', 'and', 'putting', 'it', 'in', 'the', 'use', 'case', 'would', 'force', 'to', 'use', 'one', 'specific', 'user', 'interface', 'approach', 'without', 'considering', 'better', 'alternative', 'authenticate', 'is', 'not', 'a', 'use', 'case', 'it', 's', 'a', 'constraint', 'imagine', 'that', 'you', 'have', 'a', 'system', 'with', 'single', 'sign', 'on', 'sso', 'an', 'authentication', 'use', 'case', 'would', 'then', 'make', 'no', 'sense', 'since', 'there', 'is', 'no', 'interaction', 'with', 'an', 'actor', 'to', 'achieve', 'it', 'so', 'keep', 'the', 'use', 'case', 'a', 'simple', 'a', 'possible', 'if', 'you', 'start', 'to', 'think', 'about', 'the', 'detail', 'of', 'the', 'scenario', 'and', 'successive', 'step', 'you', 're', 'no', 'longer', 'modeling', 'a', 'use', 'case', 'but', 'a', 'control', 'flow', 'use', 'an', 'activity', 'diagram', 'fro', 'this', 'level', 'of', 'detail', 'if', 'you', 'start', 'to', 'take', 'a', 'use', 'case', 'and', 'then', 'decompose', 'it', 'into', 'smaller', 'case', 'based', 'on', 'the', 'narrative', 'there', 'are', 'big', 'chance', 'that', 'you', 'll', 'be', 'mislead', 'to', 'do', 'functional', 'decomposition', 'this', 'is', 'not', 'recommended', 'for', 'use', 'case', 'since', 'it', 'lead', 'to', 'very', 'detailed', 'diagram', 'now', 'to', 'the', 'optional', 'use', 'case', 'optional', 'typically', 'suggest', 'to', 'use', 'an', 'extension', 'but', 'doe', 'contact', 'by', 'phone', 'really', 'extend', 'the', 'contact', 'via', 'chat', 'i', 'believe', 'these', 'two', 'form', 'of', 'contact', 'are', 'two', 'different', 'thing', 'i', 'therefore', 'see', 'two', 'approach', 'just', 'make', 'a', 'use', 'case', 'contact', 'dhl', 'and', 'in', 'the', 'description', 'of', 'this', 'use', 'case', 'you', 'explain', 'that', 'the', 'contact', 'can', 'be', 'via', 'phone', 'or', 'via', 'chat', 'this', 'is', 'my', 'favourite', 'approach', 'make', 'a', 'use', 'case', 'contact', 'dhl', 'for', 'the', 'general', 'case', 'make', 'to', 'specialisation', 'contact', 'dhl', 'by', 'chat', 'and', 'contact', 'dhl', 'by', 'phone', 'that', 'each', 'could', 'implement', 'the', 'general', 'case', 'a', 'best', 'fit', 'this', 'approach', 'is', 'more', 'complicated', 'but', 'it', 'allows', 'to', 'take', 'into', 'account', 'more', 'fundamental', 'difference', 'between', 'the', 'specialisation', 'such', 'a', 'the', 'fact', 'that', 'an', 'ai', 'actor', 'is', 'involved', 'in', 'the', 'chat', 'and', 'a', 'human', 'operator', 'is', 'involved', 'on', 'the', 'phone']",System Requirements and AWS,2,"{'neg': 0.0, 'neu': 0.95, 'pos': 0.05, 'compound': 0.8962}",0.225,2,Python Libraries and Environment,3query
73269786,APK crash after converting with Buildozer,"<p>After I convert Python To APK using Buildozer my APK file crashes
is there something wrong in my requirements line
requirements = python3,kivy,kivymd,psutil,speedtest,pillow</p>
<pre><code>import datetime
import threading
import random
from time import sleep
import psutil
import speedtest
from kivymd.app import MDApp
from kivy.lang import Builder
from kivy.core.window import Window
from kivy.uix.screenmanager import ScreenManager, Screen
from get_size import get_size
from get_size_bits import get_size_bits
from kivymd.uix.list import OneLineListItem, TwoLineListItem, MDList
</code></pre>
",<kivy><apk><kivymd><buildozer><requirements>,2022-08-07 17:52:08,115,0,2,73269964,"<p>You can use ADB to debug your APK file and see what is causing it to crash.</p>
<p>Android Debug Bridge is a tool that helps you debug Android based devices. The daemon on the Android device connects to the server on the host PC via USB.</p>
<p>You need to enable USB debugging on your Android device if you want to connect it to a computer and use it for development purposes. To do this, you need to enter the &quot;Developer Settings&quot; window and enable the USB debugging option. Once you have done this, you can connect your Android device to your computer using a USB cable.</p>
",2022-08,after i convert python to apk using buildozer my apk file crashes is there something wrong in my requirements line requirements python  kivy kivymd psutil speedtest pillow import datetime import threading import random from time import sleep import psutil import speedtest from kivymd app import mdapp from kivy lang import builder from kivy core window import window from kivy uix screenmanager import screenmanager screen from get_size import get_size from get_size_bits import get_size_bits from kivymd uix list import onelinelistitem twolinelistitem mdlist,you can use adb to debug your apk file and see what is causing it to crash android debug bridge is a tool that helps you debug android based devices the daemon on the android device connects to the server on the host pc via usb you need to enable usb debugging on your android device if you want to connect it to a computer and use it for development purposes to do this you need to enter the developer settings window and enable the usb debugging option once you have done this you can connect your android device to your computer using a usb cable,"['kivy', 'apk', 'kivymd', 'buildozer', 'requirements']","['after', 'i', 'convert', 'python', 'to', 'apk', 'using', 'buildozer', 'my', 'apk', 'file', 'crashes', 'is', 'there', 'something', 'wrong', 'in', 'my', 'requirements', 'line', 'requirements', 'python', 'kivy', 'kivymd', 'psutil', 'speedtest', 'pillow', 'import', 'datetime', 'import', 'threading', 'import', 'random', 'from', 'time', 'import', 'sleep', 'import', 'psutil', 'import', 'speedtest', 'from', 'kivymd', 'app', 'import', 'mdapp', 'from', 'kivy', 'lang', 'import', 'builder', 'from', 'kivy', 'core', 'window', 'import', 'window', 'from', 'kivy', 'uix', 'screenmanager', 'import', 'screenmanager', 'screen', 'from', 'get_size', 'import', 'get_size', 'from', 'get_size_bits', 'import', 'get_size_bits', 'from', 'kivymd', 'uix', 'list', 'import', 'onelinelistitem', 'twolinelistitem', 'mdlist']","['you', 'can', 'use', 'adb', 'to', 'debug', 'your', 'apk', 'file', 'and', 'see', 'what', 'is', 'causing', 'it', 'to', 'crash', 'android', 'debug', 'bridge', 'is', 'a', 'tool', 'that', 'helps', 'you', 'debug', 'android', 'based', 'devices', 'the', 'daemon', 'on', 'the', 'android', 'device', 'connects', 'to', 'the', 'server', 'on', 'the', 'host', 'pc', 'via', 'usb', 'you', 'need', 'to', 'enable', 'usb', 'debugging', 'on', 'your', 'android', 'device', 'if', 'you', 'want', 'to', 'connect', 'it', 'to', 'a', 'computer', 'and', 'use', 'it', 'for', 'development', 'purposes', 'to', 'do', 'this', 'you', 'need', 'to', 'enter', 'the', 'developer', 'settings', 'window', 'and', 'enable', 'the', 'usb', 'debugging', 'option', 'once', 'you', 'have', 'done', 'this', 'you', 'can', 'connect', 'your', 'android', 'device', 'to', 'your', 'computer', 'using', 'a', 'usb', 'cable']","['convert', 'python', 'apk', 'using', 'buildozer', 'apk', 'file', 'crash', 'something', 'wrong', 'requirement', 'line', 'requirement', 'python', 'kivy', 'kivymd', 'psutil', 'speedtest', 'pillow', 'import', 'datetime', 'import', 'threading', 'import', 'random', 'time', 'import', 'sleep', 'import', 'psutil', 'import', 'speedtest', 'kivymd', 'app', 'import', 'mdapp', 'kivy', 'lang', 'import', 'builder', 'kivy', 'core', 'window', 'import', 'window', 'kivy', 'uix', 'screenmanager', 'import', 'screenmanager', 'screen', 'get_size', 'import', 'get_size', 'get_size_bits', 'import', 'get_size_bits', 'kivymd', 'uix', 'list', 'import', 'onelinelistitem', 'twolinelistitem', 'mdlist']","['you', 'can', 'use', 'adb', 'to', 'debug', 'your', 'apk', 'file', 'and', 'see', 'what', 'is', 'causing', 'it', 'to', 'crash', 'android', 'debug', 'bridge', 'is', 'a', 'tool', 'that', 'help', 'you', 'debug', 'android', 'based', 'device', 'the', 'daemon', 'on', 'the', 'android', 'device', 'connects', 'to', 'the', 'server', 'on', 'the', 'host', 'pc', 'via', 'usb', 'you', 'need', 'to', 'enable', 'usb', 'debugging', 'on', 'your', 'android', 'device', 'if', 'you', 'want', 'to', 'connect', 'it', 'to', 'a', 'computer', 'and', 'use', 'it', 'for', 'development', 'purpose', 'to', 'do', 'this', 'you', 'need', 'to', 'enter', 'the', 'developer', 'setting', 'window', 'and', 'enable', 'the', 'usb', 'debugging', 'option', 'once', 'you', 'have', 'done', 'this', 'you', 'can', 'connect', 'your', 'android', 'device', 'to', 'your', 'computer', 'using', 'a', 'usb', 'cable']",System Requirements and AWS,1,"{'neg': 0.045, 'neu': 0.955, 'pos': 0.0, 'compound': -0.4767}",-0.5,1,Package Management and File Handling,3query
73269786,APK crash after converting with Buildozer,"<p>After I convert Python To APK using Buildozer my APK file crashes
is there something wrong in my requirements line
requirements = python3,kivy,kivymd,psutil,speedtest,pillow</p>
<pre><code>import datetime
import threading
import random
from time import sleep
import psutil
import speedtest
from kivymd.app import MDApp
from kivy.lang import Builder
from kivy.core.window import Window
from kivy.uix.screenmanager import ScreenManager, Screen
from get_size import get_size
from get_size_bits import get_size_bits
from kivymd.uix.list import OneLineListItem, TwoLineListItem, MDList
</code></pre>
",<kivy><apk><kivymd><buildozer><requirements>,2022-08-07 17:52:08,115,0,2,73270489,"<p>According to buildozer documentation you can use</p>
<pre><code>buildozer android deploy run logcat
</code></pre>
<p>this command can help you directly deploy to the android device and see the logcat in order to see what is crashing. Read all details <a href=""https://buildozer.readthedocs.io/en/latest/quickstart.html#run-my-application"" rel=""nofollow noreferrer"">here</a>.</p>
<p>Additionally, buildozer is based on python for android so you can also see if any of that troubleshooting help you to identify the crash
<a href=""https://python-for-android.readthedocs.io/en/latest/troubleshooting/"" rel=""nofollow noreferrer"">https://python-for-android.readthedocs.io/en/latest/troubleshooting/</a></p>
",2022-08,after i convert python to apk using buildozer my apk file crashes is there something wrong in my requirements line requirements python  kivy kivymd psutil speedtest pillow import datetime import threading import random from time import sleep import psutil import speedtest from kivymd app import mdapp from kivy lang import builder from kivy core window import window from kivy uix screenmanager import screenmanager screen from get_size import get_size from get_size_bits import get_size_bits from kivymd uix list import onelinelistitem twolinelistitem mdlist,according to buildozer documentation you can use buildozer android deploy run logcat this command can help you directly deploy to the android device and see the logcat in order to see what is crashing read all details here additionally buildozer is based on python for android so you can also see if any of that troubleshooting help you to identify the crash https python for android readthedocs io en latest troubleshooting,"['kivy', 'apk', 'kivymd', 'buildozer', 'requirements']","['after', 'i', 'convert', 'python', 'to', 'apk', 'using', 'buildozer', 'my', 'apk', 'file', 'crashes', 'is', 'there', 'something', 'wrong', 'in', 'my', 'requirements', 'line', 'requirements', 'python', 'kivy', 'kivymd', 'psutil', 'speedtest', 'pillow', 'import', 'datetime', 'import', 'threading', 'import', 'random', 'from', 'time', 'import', 'sleep', 'import', 'psutil', 'import', 'speedtest', 'from', 'kivymd', 'app', 'import', 'mdapp', 'from', 'kivy', 'lang', 'import', 'builder', 'from', 'kivy', 'core', 'window', 'import', 'window', 'from', 'kivy', 'uix', 'screenmanager', 'import', 'screenmanager', 'screen', 'from', 'get_size', 'import', 'get_size', 'from', 'get_size_bits', 'import', 'get_size_bits', 'from', 'kivymd', 'uix', 'list', 'import', 'onelinelistitem', 'twolinelistitem', 'mdlist']","['according', 'to', 'buildozer', 'documentation', 'you', 'can', 'use', 'buildozer', 'android', 'deploy', 'run', 'logcat', 'this', 'command', 'can', 'help', 'you', 'directly', 'deploy', 'to', 'the', 'android', 'device', 'and', 'see', 'the', 'logcat', 'in', 'order', 'to', 'see', 'what', 'is', 'crashing', 'read', 'all', 'details', 'here', 'additionally', 'buildozer', 'is', 'based', 'on', 'python', 'for', 'android', 'so', 'you', 'can', 'also', 'see', 'if', 'any', 'of', 'that', 'troubleshooting', 'help', 'you', 'to', 'identify', 'the', 'crash', 'https', 'python', 'for', 'android', 'readthedocs', 'io', 'en', 'latest', 'troubleshooting']","['convert', 'python', 'apk', 'using', 'buildozer', 'apk', 'file', 'crash', 'something', 'wrong', 'requirement', 'line', 'requirement', 'python', 'kivy', 'kivymd', 'psutil', 'speedtest', 'pillow', 'import', 'datetime', 'import', 'threading', 'import', 'random', 'time', 'import', 'sleep', 'import', 'psutil', 'import', 'speedtest', 'kivymd', 'app', 'import', 'mdapp', 'kivy', 'lang', 'import', 'builder', 'kivy', 'core', 'window', 'import', 'window', 'kivy', 'uix', 'screenmanager', 'import', 'screenmanager', 'screen', 'get_size', 'import', 'get_size', 'get_size_bits', 'import', 'get_size_bits', 'kivymd', 'uix', 'list', 'import', 'onelinelistitem', 'twolinelistitem', 'mdlist']","['according', 'to', 'buildozer', 'documentation', 'you', 'can', 'use', 'buildozer', 'android', 'deploy', 'run', 'logcat', 'this', 'command', 'can', 'help', 'you', 'directly', 'deploy', 'to', 'the', 'android', 'device', 'and', 'see', 'the', 'logcat', 'in', 'order', 'to', 'see', 'what', 'is', 'crashing', 'read', 'all', 'detail', 'here', 'additionally', 'buildozer', 'is', 'based', 'on', 'python', 'for', 'android', 'so', 'you', 'can', 'also', 'see', 'if', 'any', 'of', 'that', 'troubleshooting', 'help', 'you', 'to', 'identify', 'the', 'crash', 'http', 'python', 'for', 'android', 'readthedocs', 'io', 'en', 'latest', 'troubleshooting']",System Requirements and AWS,1,"{'neg': 0.045, 'neu': 0.955, 'pos': 0.0, 'compound': -0.4767}",-0.5,1,Package Management and File Handling,3query
73255403,Can an animal be an actor in use case diagram?,"<p>I am developing a use case diagram for dog veterinary. However, I was confused that whether I should use dog as an actor or not as it cannot communicate with the system. However, everything that system does is totally dependent on dog like, checking, giving injections e.t.c.</p>
",<uml><software-design><use-case><requirements><use-case-diagram>,2022-08-05 21:22:36,88,3,2,73255600,"<p>I would suppose it to be a <em>secondary actor</em>. That means it will take part in a use case but not starting it. You can leave it simply out or if you intend to differntiate between different animals you can also use general forms (like <em>mamal</em>).</p>
<p>Indeed an actor is someone/thing that gets added value from the system under consideration. I would think that a pet feeding has also an animal as primary actor. Probably not the case here, but just think of who gets the added value: that's an (primary) actor.</p>
",2022-08,i am developing a use case diagram for dog veterinary however i was confused that whether i should use dog as an actor or not as it cannot communicate with the system however everything that system does is totally dependent on dog like checking giving injections e t c,i would suppose it to be a secondary actor that means it will take part in a use case but not starting it you can leave it simply out or if you intend to differntiate between different animals you can also use general forms like mamal indeed an actor is someone thing that gets added value from the system under consideration i would think that a pet feeding has also an animal as primary actor probably not the case here but just think of who gets the added value that s an primary actor,"['uml', 'software-design', 'use-case', 'requirements', 'use-case-diagram']","['i', 'am', 'developing', 'a', 'use', 'case', 'diagram', 'for', 'dog', 'veterinary', 'however', 'i', 'was', 'confused', 'that', 'whether', 'i', 'should', 'use', 'dog', 'as', 'an', 'actor', 'or', 'not', 'as', 'it', 'can', 'not', 'communicate', 'with', 'the', 'system', 'however', 'everything', 'that', 'system', 'does', 'is', 'totally', 'dependent', 'on', 'dog', 'like', 'checking', 'giving', 'injections', 'e', 't', 'c']","['i', 'would', 'suppose', 'it', 'to', 'be', 'a', 'secondary', 'actor', 'that', 'means', 'it', 'will', 'take', 'part', 'in', 'a', 'use', 'case', 'but', 'not', 'starting', 'it', 'you', 'can', 'leave', 'it', 'simply', 'out', 'or', 'if', 'you', 'intend', 'to', 'differntiate', 'between', 'different', 'animals', 'you', 'can', 'also', 'use', 'general', 'forms', 'like', 'mamal', 'indeed', 'an', 'actor', 'is', 'someone', 'thing', 'that', 'gets', 'added', 'value', 'from', 'the', 'system', 'under', 'consideration', 'i', 'would', 'think', 'that', 'a', 'pet', 'feeding', 'has', 'also', 'an', 'animal', 'as', 'primary', 'actor', 'probably', 'not', 'the', 'case', 'here', 'but', 'just', 'think', 'of', 'who', 'gets', 'the', 'added', 'value', 'that', 's', 'an', 'primary', 'actor']","['developing', 'use', 'case', 'diagram', 'dog', 'veterinary', 'however', 'wa', 'confused', 'whether', 'use', 'dog', 'actor', 'communicate', 'system', 'however', 'everything', 'system', 'doe', 'totally', 'dependent', 'dog', 'like', 'checking', 'giving', 'injection', 'e', 'c']","['i', 'would', 'suppose', 'it', 'to', 'be', 'a', 'secondary', 'actor', 'that', 'mean', 'it', 'will', 'take', 'part', 'in', 'a', 'use', 'case', 'but', 'not', 'starting', 'it', 'you', 'can', 'leave', 'it', 'simply', 'out', 'or', 'if', 'you', 'intend', 'to', 'differntiate', 'between', 'different', 'animal', 'you', 'can', 'also', 'use', 'general', 'form', 'like', 'mamal', 'indeed', 'an', 'actor', 'is', 'someone', 'thing', 'that', 'get', 'added', 'value', 'from', 'the', 'system', 'under', 'consideration', 'i', 'would', 'think', 'that', 'a', 'pet', 'feeding', 'ha', 'also', 'an', 'animal', 'a', 'primary', 'actor', 'probably', 'not', 'the', 'case', 'here', 'but', 'just', 'think', 'of', 'who', 'get', 'the', 'added', 'value', 'that', 's', 'an', 'primary', 'actor']",Package Management and File Handling,4,"{'neg': 0.048, 'neu': 0.851, 'pos': 0.102, 'compound': 0.3818}",-0.2,4,Building and Compiling Python Projects,3query
73255403,Can an animal be an actor in use case diagram?,"<p>I am developing a use case diagram for dog veterinary. However, I was confused that whether I should use dog as an actor or not as it cannot communicate with the system. However, everything that system does is totally dependent on dog like, checking, giving injections e.t.c.</p>
",<uml><software-design><use-case><requirements><use-case-diagram>,2022-08-05 21:22:36,88,3,2,73255771,"<h2>What is an actor?</h2>
<p>The key is to define precisely the system under consideration (called the <em><strong>subject</strong></em> in UML-speak), since this determines what is or is not an actor:</p>
<blockquote>
<p>Each UseCase specifies some behavior that a <em><strong>subject</strong></em> can perform <em><strong>in collaboration with</strong></em> one or more <strong>Actors</strong>.<br />
(...) An <strong>Actor</strong> models a type of role played by an entity that <em><strong>interacts with the subjects</strong></em> of its associated UseCases (e.g., by exchanging signals and data). Actors may represent roles played by human users, external hardware, or other systems.</p>
</blockquote>
<p>A more general requirement analysis concept is the <em><strong>stakeholder</strong></em>.  All the actors are stakeholders, but there may be stakeholders that are not be actors, for example, if they benefit from a system indirectly.</p>
<h2>Is the dog an actor?</h2>
<p>It depends on the system under consideration.  The main cases are:</p>
<ul>
<li><p>The system is an <strong>app only used by the veterinary</strong>: the dog is <strong>not an actor</strong>.  The system supports the veterinary to achieve his/her goals.  There is no direct interaction between the dog and the system (except by accident, if he jumps on the keyboard). The dog nevertheless benefits indirectly from the system, so you may consider it as a stakeholder (should not be represented on the diagram)</p>
</li>
<li><p>The system is composed of a veterinary <strong>app and equipment that exchanges signals with the dog</strong> (e.g. microphone for AI barking analysis, camera, cardiovascular monitoring electrodes, echographic scanner...). The dog is an actor, even if the dog is passive in the interaction and does not realise that there is a computer involved. The dog is a <strong>secondary actor</strong> because the use-case supports primarily the goals of the veterinary.</p>
</li>
<li><p>The system is the <strong>veterinary clinic</strong>:  You are then making a <strong>business analysis</strong>.  The dog owner would be a primary actor, since he/she interacts with the clinic for achieving his/her goals, i.e. keeping his/her best companion in good health.  The dog would be a secondary actor since it would also interact with the clinic for the use-cases of the owner (wilfully or not). But in such an analysis, the veterinary would be part of the system under consideration and not an actor.</p>
</li>
</ul>
<p>In view of the wording of your question, you're most probably in the first case.</p>
",2022-08,i am developing a use case diagram for dog veterinary however i was confused that whether i should use dog as an actor or not as it cannot communicate with the system however everything that system does is totally dependent on dog like checking giving injections e t c,what is an actor the key is to define precisely the system under consideration called the subject in uml speak since this determines what is or is not an actor each usecase specifies some behavior that a subject can perform in collaboration with one or more actors an actor models a type of role played by an entity that interacts with the subjects of its associated usecases e g by exchanging signals and data actors may represent roles played by human users external hardware or other systems a more general requirement analysis concept is the stakeholder all the actors are stakeholders but there may be stakeholders that are not be actors for example if they benefit from a system indirectly is the dog an actor it depends on the system under consideration the main cases are the system is an app only used by the veterinary the dog is not an actor the system supports the veterinary to achieve his her goals there is no direct interaction between the dog and the system except by accident if he jumps on the keyboard the dog nevertheless benefits indirectly from the system so you may consider it as a stakeholder should not be represented on the diagram the system is composed of a veterinary app and equipment that exchanges signals with the dog e g microphone for ai barking analysis camera cardiovascular monitoring electrodes echographic scanner the dog is an actor even if the dog is passive in the interaction and does not realise that there is a computer involved the dog is a secondary actor because the use case supports primarily the goals of the veterinary the system is the veterinary clinic you are then making a business analysis the dog owner would be a primary actor since he she interacts with the clinic for achieving his her goals i e keeping his her best companion in good health the dog would be a secondary actor since it would also interact with the clinic for the use cases of the owner wilfully or not but in such an analysis the veterinary would be part of the system under consideration and not an actor in view of the wording of your question you re most probably in the first case,"['uml', 'software-design', 'use-case', 'requirements', 'use-case-diagram']","['i', 'am', 'developing', 'a', 'use', 'case', 'diagram', 'for', 'dog', 'veterinary', 'however', 'i', 'was', 'confused', 'that', 'whether', 'i', 'should', 'use', 'dog', 'as', 'an', 'actor', 'or', 'not', 'as', 'it', 'can', 'not', 'communicate', 'with', 'the', 'system', 'however', 'everything', 'that', 'system', 'does', 'is', 'totally', 'dependent', 'on', 'dog', 'like', 'checking', 'giving', 'injections', 'e', 't', 'c']","['what', 'is', 'an', 'actor', 'the', 'key', 'is', 'to', 'define', 'precisely', 'the', 'system', 'under', 'consideration', 'called', 'the', 'subject', 'in', 'uml', 'speak', 'since', 'this', 'determines', 'what', 'is', 'or', 'is', 'not', 'an', 'actor', 'each', 'usecase', 'specifies', 'some', 'behavior', 'that', 'a', 'subject', 'can', 'perform', 'in', 'collaboration', 'with', 'one', 'or', 'more', 'actors', 'an', 'actor', 'models', 'a', 'type', 'of', 'role', 'played', 'by', 'an', 'entity', 'that', 'interacts', 'with', 'the', 'subjects', 'of', 'its', 'associated', 'usecases', 'e', 'g', 'by', 'exchanging', 'signals', 'and', 'data', 'actors', 'may', 'represent', 'roles', 'played', 'by', 'human', 'users', 'external', 'hardware', 'or', 'other', 'systems', 'a', 'more', 'general', 'requirement', 'analysis', 'concept', 'is', 'the', 'stakeholder', 'all', 'the', 'actors', 'are', 'stakeholders', 'but', 'there', 'may', 'be', 'stakeholders', 'that', 'are', 'not', 'be', 'actors', 'for', 'example', 'if', 'they', 'benefit', 'from', 'a', 'system', 'indirectly', 'is', 'the', 'dog', 'an', 'actor', 'it', 'depends', 'on', 'the', 'system', 'under', 'consideration', 'the', 'main', 'cases', 'are', 'the', 'system', 'is', 'an', 'app', 'only', 'used', 'by', 'the', 'veterinary', 'the', 'dog', 'is', 'not', 'an', 'actor', 'the', 'system', 'supports', 'the', 'veterinary', 'to', 'achieve', 'his', 'her', 'goals', 'there', 'is', 'no', 'direct', 'interaction', 'between', 'the', 'dog', 'and', 'the', 'system', 'except', 'by', 'accident', 'if', 'he', 'jumps', 'on', 'the', 'keyboard', 'the', 'dog', 'nevertheless', 'benefits', 'indirectly', 'from', 'the', 'system', 'so', 'you', 'may', 'consider', 'it', 'as', 'a', 'stakeholder', 'should', 'not', 'be', 'represented', 'on', 'the', 'diagram', 'the', 'system', 'is', 'composed', 'of', 'a', 'veterinary', 'app', 'and', 'equipment', 'that', 'exchanges', 'signals', 'with', 'the', 'dog', 'e', 'g', 'microphone', 'for', 'ai', 'barking', 'analysis', 'camera', 'cardiovascular', 'monitoring', 'electrodes', 'echographic', 'scanner', 'the', 'dog', 'is', 'an', 'actor', 'even', 'if', 'the', 'dog', 'is', 'passive', 'in', 'the', 'interaction', 'and', 'does', 'not', 'realise', 'that', 'there', 'is', 'a', 'computer', 'involved', 'the', 'dog', 'is', 'a', 'secondary', 'actor', 'because', 'the', 'use', 'case', 'supports', 'primarily', 'the', 'goals', 'of', 'the', 'veterinary', 'the', 'system', 'is', 'the', 'veterinary', 'clinic', 'you', 'are', 'then', 'making', 'a', 'business', 'analysis', 'the', 'dog', 'owner', 'would', 'be', 'a', 'primary', 'actor', 'since', 'he', 'she', 'interacts', 'with', 'the', 'clinic', 'for', 'achieving', 'his', 'her', 'goals', 'i', 'e', 'keeping', 'his', 'her', 'best', 'companion', 'in', 'good', 'health', 'the', 'dog', 'would', 'be', 'a', 'secondary', 'actor', 'since', 'it', 'would', 'also', 'interact', 'with', 'the', 'clinic', 'for', 'the', 'use', 'cases', 'of', 'the', 'owner', 'wilfully', 'or', 'not', 'but', 'in', 'such', 'an', 'analysis', 'the', 'veterinary', 'would', 'be', 'part', 'of', 'the', 'system', 'under', 'consideration', 'and', 'not', 'an', 'actor', 'in', 'view', 'of', 'the', 'wording', 'of', 'your', 'question', 'you', 're', 'most', 'probably', 'in', 'the', 'first', 'case']","['developing', 'use', 'case', 'diagram', 'dog', 'veterinary', 'however', 'wa', 'confused', 'whether', 'use', 'dog', 'actor', 'communicate', 'system', 'however', 'everything', 'system', 'doe', 'totally', 'dependent', 'dog', 'like', 'checking', 'giving', 'injection', 'e', 'c']","['what', 'is', 'an', 'actor', 'the', 'key', 'is', 'to', 'define', 'precisely', 'the', 'system', 'under', 'consideration', 'called', 'the', 'subject', 'in', 'uml', 'speak', 'since', 'this', 'determines', 'what', 'is', 'or', 'is', 'not', 'an', 'actor', 'each', 'usecase', 'specifies', 'some', 'behavior', 'that', 'a', 'subject', 'can', 'perform', 'in', 'collaboration', 'with', 'one', 'or', 'more', 'actor', 'an', 'actor', 'model', 'a', 'type', 'of', 'role', 'played', 'by', 'an', 'entity', 'that', 'interacts', 'with', 'the', 'subject', 'of', 'it', 'associated', 'usecases', 'e', 'g', 'by', 'exchanging', 'signal', 'and', 'data', 'actor', 'may', 'represent', 'role', 'played', 'by', 'human', 'user', 'external', 'hardware', 'or', 'other', 'system', 'a', 'more', 'general', 'requirement', 'analysis', 'concept', 'is', 'the', 'stakeholder', 'all', 'the', 'actor', 'are', 'stakeholder', 'but', 'there', 'may', 'be', 'stakeholder', 'that', 'are', 'not', 'be', 'actor', 'for', 'example', 'if', 'they', 'benefit', 'from', 'a', 'system', 'indirectly', 'is', 'the', 'dog', 'an', 'actor', 'it', 'depends', 'on', 'the', 'system', 'under', 'consideration', 'the', 'main', 'case', 'are', 'the', 'system', 'is', 'an', 'app', 'only', 'used', 'by', 'the', 'veterinary', 'the', 'dog', 'is', 'not', 'an', 'actor', 'the', 'system', 'support', 'the', 'veterinary', 'to', 'achieve', 'his', 'her', 'goal', 'there', 'is', 'no', 'direct', 'interaction', 'between', 'the', 'dog', 'and', 'the', 'system', 'except', 'by', 'accident', 'if', 'he', 'jump', 'on', 'the', 'keyboard', 'the', 'dog', 'nevertheless', 'benefit', 'indirectly', 'from', 'the', 'system', 'so', 'you', 'may', 'consider', 'it', 'a', 'a', 'stakeholder', 'should', 'not', 'be', 'represented', 'on', 'the', 'diagram', 'the', 'system', 'is', 'composed', 'of', 'a', 'veterinary', 'app', 'and', 'equipment', 'that', 'exchange', 'signal', 'with', 'the', 'dog', 'e', 'g', 'microphone', 'for', 'ai', 'barking', 'analysis', 'camera', 'cardiovascular', 'monitoring', 'electrode', 'echographic', 'scanner', 'the', 'dog', 'is', 'an', 'actor', 'even', 'if', 'the', 'dog', 'is', 'passive', 'in', 'the', 'interaction', 'and', 'doe', 'not', 'realise', 'that', 'there', 'is', 'a', 'computer', 'involved', 'the', 'dog', 'is', 'a', 'secondary', 'actor', 'because', 'the', 'use', 'case', 'support', 'primarily', 'the', 'goal', 'of', 'the', 'veterinary', 'the', 'system', 'is', 'the', 'veterinary', 'clinic', 'you', 'are', 'then', 'making', 'a', 'business', 'analysis', 'the', 'dog', 'owner', 'would', 'be', 'a', 'primary', 'actor', 'since', 'he', 'she', 'interacts', 'with', 'the', 'clinic', 'for', 'achieving', 'his', 'her', 'goal', 'i', 'e', 'keeping', 'his', 'her', 'best', 'companion', 'in', 'good', 'health', 'the', 'dog', 'would', 'be', 'a', 'secondary', 'actor', 'since', 'it', 'would', 'also', 'interact', 'with', 'the', 'clinic', 'for', 'the', 'use', 'case', 'of', 'the', 'owner', 'wilfully', 'or', 'not', 'but', 'in', 'such', 'an', 'analysis', 'the', 'veterinary', 'would', 'be', 'part', 'of', 'the', 'system', 'under', 'consideration', 'and', 'not', 'an', 'actor', 'in', 'view', 'of', 'the', 'wording', 'of', 'your', 'question', 'you', 're', 'most', 'probably', 'in', 'the', 'first', 'case']",Package Management and File Handling,4,"{'neg': 0.048, 'neu': 0.851, 'pos': 0.102, 'compound': 0.3818}",-0.2,4,Building and Compiling Python Projects,3query
73242470,Transform conda-generated requirements.txt file to a format that works with pip,"<p>My goal is to transform conda generated requirement.txt files to .txt files that can be used with pip. I know about the requirement.txt files that are conda generated but I am working on a cluster and can't use conda.</p>
<ol>
<li>Is there any procedure that can transform such files into files that are pip compatible?</li>
<li>Is there a set of rules that would allow me to decompose manually the conda generated requirement.txt files into pip compatible requirement.txt files? For example, if the following line is present in the (conda generated) requirements.txt file,</li>
</ol>
<p><em>python3-sklearn-lib=0.18-5~pn0</em></p>
<p>I know that</p>
<ol>
<li>&quot;=&quot; should become &quot;==&quot;,</li>
<li>&quot;python3-&quot; should disappear</li>
<li>&quot;sklearn&quot; should become &quot;scikit-learn&quot;</li>
</ol>
<p>But I don't know in this example what is the signification of &quot;~pn0&quot; and how I should &quot;translate&quot; that for the pip requirements.txt file.</p>
<p>I am aware of the question addressed <a href=""https://stackoverflow.com/questions/48787250/set-up-virtualenv-using-a-requirements-txt-generated-by-conda"">here</a> but my situation is different: I have the conda generated requirements.txt files and try to transform them into pip compatible files.</p>
",<pip><conda><requirements>,2022-08-04 21:41:22,94,0,1,73252349,"<p><strong>No and no.</strong> The relation between a Conda package name to the PyPI package name is effectively arbitrary since there are no formal rules for mapping them. Sometimes they are equal; sometimes they involve prefixes/suffixes like <code>py</code> or <code>python</code>, with and without hyphens. Further, many Conda packages are not Python packages. A trivial example is <code>python</code> itself. Since there is nothing in the metadata of the packages to indicate the PyPI equivalent (if any), it is impossible to determine this without an actual brute force iteration over all the packages to extract this mapping. Perhaps someone might generate such a database someday, but for now I am unaware of its existence.</p>
<p>If you must have a pip requirements file, then export that from the environment, as in <a href=""https://stackoverflow.com/q/50777849/570918"">this thread</a>. If you only have the file from Conda, but no environment, then the easiest path is probably to recreate the environment using Conda, then do the <code>pip list --format=freeze</code>.</p>
<p>I'd also note that I agree with the comments: it sounds like the question is solving the wrong problem. Conda is fully operational without elevated privileges and is almost ubiquitously used on HPC servers I use. Look into installing <a href=""https://github.com/conda-forge/miniforge#miniforge"" rel=""nofollow noreferrer"">Miniforge</a>.</p>
",2022-08,my goal is to transform conda generated requirement txt files to txt files that can be used with pip i know about the requirement txt files that are conda generated but i am working on a cluster and can t use conda is there any procedure that can transform such files into files that are pip compatible is there a set of rules that would allow me to decompose manually the conda generated requirement txt files into pip compatible requirement txt files for example if the following line is present in the conda generated requirements txt file python  sklearn lib       pn  i know that should become python  should disappear sklearn should become scikit learn but i don t know in this example what is the signification of pn  and how i should translate that for the pip requirements txt file i am aware of the question addressed here but my situation is different i have the conda generated requirements txt files and try to transform them into pip compatible files,no and no the relation between a conda package name to the pypi package name is effectively arbitrary since there are no formal rules for mapping them sometimes they are equal sometimes they involve prefixes suffixes like py or python with and without hyphens further many conda packages are not python packages a trivial example is python itself since there is nothing in the metadata of the packages to indicate the pypi equivalent if any it is impossible to determine this without an actual brute force iteration over all the packages to extract this mapping perhaps someone might generate such a database someday but for now i am unaware of its existence if you must have a pip requirements file then export that from the environment as in this thread if you only have the file from conda but no environment then the easiest path is probably to recreate the environment using conda then do the pip list format freeze i d also note that i agree with the comments it sounds like the question is solving the wrong problem conda is fully operational without elevated privileges and is almost ubiquitously used on hpc servers i use look into installing miniforge,"['pip', 'conda', 'requirements']","['my', 'goal', 'is', 'to', 'transform', 'conda', 'generated', 'requirement', 'txt', 'files', 'to', 'txt', 'files', 'that', 'can', 'be', 'used', 'with', 'pip', 'i', 'know', 'about', 'the', 'requirement', 'txt', 'files', 'that', 'are', 'conda', 'generated', 'but', 'i', 'am', 'working', 'on', 'a', 'cluster', 'and', 'can', 't', 'use', 'conda', 'is', 'there', 'any', 'procedure', 'that', 'can', 'transform', 'such', 'files', 'into', 'files', 'that', 'are', 'pip', 'compatible', 'is', 'there', 'a', 'set', 'of', 'rules', 'that', 'would', 'allow', 'me', 'to', 'decompose', 'manually', 'the', 'conda', 'generated', 'requirement', 'txt', 'files', 'into', 'pip', 'compatible', 'requirement', 'txt', 'files', 'for', 'example', 'if', 'the', 'following', 'line', 'is', 'present', 'in', 'the', 'conda', 'generated', 'requirements', 'txt', 'file', 'python', 'sklearn', 'lib', 'pn', 'i', 'know', 'that', 'should', 'become', 'python', 'should', 'disappear', 'sklearn', 'should', 'become', 'scikit', 'learn', 'but', 'i', 'don', 't', 'know', 'in', 'this', 'example', 'what', 'is', 'the', 'signification', 'of', 'pn', 'and', 'how', 'i', 'should', 'translate', 'that', 'for', 'the', 'pip', 'requirements', 'txt', 'file', 'i', 'am', 'aware', 'of', 'the', 'question', 'addressed', 'here', 'but', 'my', 'situation', 'is', 'different', 'i', 'have', 'the', 'conda', 'generated', 'requirements', 'txt', 'files', 'and', 'try', 'to', 'transform', 'them', 'into', 'pip', 'compatible', 'files']","['no', 'and', 'no', 'the', 'relation', 'between', 'a', 'conda', 'package', 'name', 'to', 'the', 'pypi', 'package', 'name', 'is', 'effectively', 'arbitrary', 'since', 'there', 'are', 'no', 'formal', 'rules', 'for', 'mapping', 'them', 'sometimes', 'they', 'are', 'equal', 'sometimes', 'they', 'involve', 'prefixes', 'suffixes', 'like', 'py', 'or', 'python', 'with', 'and', 'without', 'hyphens', 'further', 'many', 'conda', 'packages', 'are', 'not', 'python', 'packages', 'a', 'trivial', 'example', 'is', 'python', 'itself', 'since', 'there', 'is', 'nothing', 'in', 'the', 'metadata', 'of', 'the', 'packages', 'to', 'indicate', 'the', 'pypi', 'equivalent', 'if', 'any', 'it', 'is', 'impossible', 'to', 'determine', 'this', 'without', 'an', 'actual', 'brute', 'force', 'iteration', 'over', 'all', 'the', 'packages', 'to', 'extract', 'this', 'mapping', 'perhaps', 'someone', 'might', 'generate', 'such', 'a', 'database', 'someday', 'but', 'for', 'now', 'i', 'am', 'unaware', 'of', 'its', 'existence', 'if', 'you', 'must', 'have', 'a', 'pip', 'requirements', 'file', 'then', 'export', 'that', 'from', 'the', 'environment', 'as', 'in', 'this', 'thread', 'if', 'you', 'only', 'have', 'the', 'file', 'from', 'conda', 'but', 'no', 'environment', 'then', 'the', 'easiest', 'path', 'is', 'probably', 'to', 'recreate', 'the', 'environment', 'using', 'conda', 'then', 'do', 'the', 'pip', 'list', 'format', 'freeze', 'i', 'd', 'also', 'note', 'that', 'i', 'agree', 'with', 'the', 'comments', 'it', 'sounds', 'like', 'the', 'question', 'is', 'solving', 'the', 'wrong', 'problem', 'conda', 'is', 'fully', 'operational', 'without', 'elevated', 'privileges', 'and', 'is', 'almost', 'ubiquitously', 'used', 'on', 'hpc', 'servers', 'i', 'use', 'look', 'into', 'installing', 'miniforge']","['goal', 'transform', 'conda', 'generated', 'requirement', 'txt', 'file', 'txt', 'file', 'used', 'pip', 'know', 'requirement', 'txt', 'file', 'conda', 'generated', 'working', 'cluster', 'use', 'conda', 'procedure', 'transform', 'file', 'file', 'pip', 'compatible', 'set', 'rule', 'would', 'allow', 'decompose', 'manually', 'conda', 'generated', 'requirement', 'txt', 'file', 'pip', 'compatible', 'requirement', 'txt', 'file', 'example', 'following', 'line', 'present', 'conda', 'generated', 'requirement', 'txt', 'file', 'python', 'sklearn', 'lib', 'pn', 'know', 'become', 'python', 'disappear', 'sklearn', 'become', 'scikit', 'learn', 'know', 'example', 'signification', 'pn', 'translate', 'pip', 'requirement', 'txt', 'file', 'aware', 'question', 'addressed', 'situation', 'different', 'conda', 'generated', 'requirement', 'txt', 'file', 'try', 'transform', 'pip', 'compatible', 'file']","['no', 'and', 'no', 'the', 'relation', 'between', 'a', 'conda', 'package', 'name', 'to', 'the', 'pypi', 'package', 'name', 'is', 'effectively', 'arbitrary', 'since', 'there', 'are', 'no', 'formal', 'rule', 'for', 'mapping', 'them', 'sometimes', 'they', 'are', 'equal', 'sometimes', 'they', 'involve', 'prefix', 'suffix', 'like', 'py', 'or', 'python', 'with', 'and', 'without', 'hyphen', 'further', 'many', 'conda', 'package', 'are', 'not', 'python', 'package', 'a', 'trivial', 'example', 'is', 'python', 'itself', 'since', 'there', 'is', 'nothing', 'in', 'the', 'metadata', 'of', 'the', 'package', 'to', 'indicate', 'the', 'pypi', 'equivalent', 'if', 'any', 'it', 'is', 'impossible', 'to', 'determine', 'this', 'without', 'an', 'actual', 'brute', 'force', 'iteration', 'over', 'all', 'the', 'package', 'to', 'extract', 'this', 'mapping', 'perhaps', 'someone', 'might', 'generate', 'such', 'a', 'database', 'someday', 'but', 'for', 'now', 'i', 'am', 'unaware', 'of', 'it', 'existence', 'if', 'you', 'must', 'have', 'a', 'pip', 'requirement', 'file', 'then', 'export', 'that', 'from', 'the', 'environment', 'a', 'in', 'this', 'thread', 'if', 'you', 'only', 'have', 'the', 'file', 'from', 'conda', 'but', 'no', 'environment', 'then', 'the', 'easiest', 'path', 'is', 'probably', 'to', 'recreate', 'the', 'environment', 'using', 'conda', 'then', 'do', 'the', 'pip', 'list', 'format', 'freeze', 'i', 'd', 'also', 'note', 'that', 'i', 'agree', 'with', 'the', 'comment', 'it', 'sound', 'like', 'the', 'question', 'is', 'solving', 'the', 'wrong', 'problem', 'conda', 'is', 'fully', 'operational', 'without', 'elevated', 'privilege', 'and', 'is', 'almost', 'ubiquitously', 'used', 'on', 'hpc', 'server', 'i', 'use', 'look', 'into', 'installing', 'miniforge']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.983, 'pos': 0.017, 'compound': 0.4039}",0.05,3,Python Package Installation and Management,3query
73011599,How to Insert Work Item in a LiveDoc using web-service client api in Polarion?,"<p>I have a question about the Polarion SDK API. I am trying to insert WorkItems in a LiveDoc using webservices api. The webservics have apis for creating a workitem within the doc/module or move item but there is no api for just inserting the existing workItem into the Live/doc/module. Is there any work around? Again, the question is about doing this task using webService client(which every user has access to) and not using servlet side IWorkItem interface.</p>
",<api><web-services><requirements><siemens><polarion>,2022-07-17 12:03:07,278,0,1,73850908,"<p>In the API you find the method:</p>
<pre><code>moveWorkItemToDocument
</code></pre>
<p>The Documentation states:</p>
<blockquote>
<p>Moves a Work Item to a specific position in a Document. If the Work
Item is not yet inside the Document it will be moved into the
Document. Modules are also supported.</p>
<p>@param <strong>workItemURI</strong> The URI of
the Work Item to be moved.</p>
<p>@param <strong>documentURI</strong> The URI of the Document.</p>
<p>@param <strong>parentWorkItemURI</strong> The URI of the parent Work Item or {@code
null} to insert it as the root.</p>
<p>@param <strong>position</strong> The desired position in the list of children or a value &lt; 0 to insert the Work Item at the end. (If the old and new parent are the same, then the moved Work Item is not counted.)</p>
<p>@param <strong>retainDocumentFlow</strong> {@code true} to retain the
position of the moved Work Item in the document flow, even if it means
changing the parent. {@code false} to keep the desired parent, even if
it means moving the Work Item to a different position.</p>
<p>@since 3.7.0</p>
</blockquote>
",2022-07,i have a question about the polarion sdk api i am trying to insert workitems in a livedoc using webservices api the webservics have apis for creating a workitem within the doc module or move item but there is no api for just inserting the existing workitem into the live doc module is there any work around again the question is about doing this task using webservice client which every user has access to and not using servlet side iworkitem interface,in the api you find the method moveworkitemtodocument the documentation states moves a work item to a specific position in a document if the work item is not yet inside the document it will be moved into the document modules are also supported param workitemuri the uri of the work item to be moved param documenturi the uri of the document param parentworkitemuri the uri of the parent work item or code null to insert it as the root param position the desired position in the list of children or a value   to insert the work item at the end if the old and new parent are the same then the moved work item is not counted param retaindocumentflow code true to retain the position of the moved work item in the document flow even if it means changing the parent code false to keep the desired parent even if it means moving the work item to a different position since,"['api', 'web-services', 'requirements', 'siemens', 'polarion']","['i', 'have', 'a', 'question', 'about', 'the', 'polarion', 'sdk', 'api', 'i', 'am', 'trying', 'to', 'insert', 'workitems', 'in', 'a', 'livedoc', 'using', 'webservices', 'api', 'the', 'webservics', 'have', 'apis', 'for', 'creating', 'a', 'workitem', 'within', 'the', 'doc', 'module', 'or', 'move', 'item', 'but', 'there', 'is', 'no', 'api', 'for', 'just', 'inserting', 'the', 'existing', 'workitem', 'into', 'the', 'live', 'doc', 'module', 'is', 'there', 'any', 'work', 'around', 'again', 'the', 'question', 'is', 'about', 'doing', 'this', 'task', 'using', 'webservice', 'client', 'which', 'every', 'user', 'has', 'access', 'to', 'and', 'not', 'using', 'servlet', 'side', 'iworkitem', 'interface']","['in', 'the', 'api', 'you', 'find', 'the', 'method', 'moveworkitemtodocument', 'the', 'documentation', 'states', 'moves', 'a', 'work', 'item', 'to', 'a', 'specific', 'position', 'in', 'a', 'document', 'if', 'the', 'work', 'item', 'is', 'not', 'yet', 'inside', 'the', 'document', 'it', 'will', 'be', 'moved', 'into', 'the', 'document', 'modules', 'are', 'also', 'supported', 'param', 'workitemuri', 'the', 'uri', 'of', 'the', 'work', 'item', 'to', 'be', 'moved', 'param', 'documenturi', 'the', 'uri', 'of', 'the', 'document', 'param', 'parentworkitemuri', 'the', 'uri', 'of', 'the', 'parent', 'work', 'item', 'or', 'code', 'null', 'to', 'insert', 'it', 'as', 'the', 'root', 'param', 'position', 'the', 'desired', 'position', 'in', 'the', 'list', 'of', 'children', 'or', 'a', 'value', 'to', 'insert', 'the', 'work', 'item', 'at', 'the', 'end', 'if', 'the', 'old', 'and', 'new', 'parent', 'are', 'the', 'same', 'then', 'the', 'moved', 'work', 'item', 'is', 'not', 'counted', 'param', 'retaindocumentflow', 'code', 'true', 'to', 'retain', 'the', 'position', 'of', 'the', 'moved', 'work', 'item', 'in', 'the', 'document', 'flow', 'even', 'if', 'it', 'means', 'changing', 'the', 'parent', 'code', 'false', 'to', 'keep', 'the', 'desired', 'parent', 'even', 'if', 'it', 'means', 'moving', 'the', 'work', 'item', 'to', 'a', 'different', 'position', 'since']","['question', 'polarion', 'sdk', 'api', 'trying', 'insert', 'workitems', 'livedoc', 'using', 'webservices', 'api', 'webservics', 'apis', 'creating', 'workitem', 'within', 'doc', 'module', 'move', 'item', 'api', 'inserting', 'existing', 'workitem', 'live', 'doc', 'module', 'work', 'around', 'question', 'task', 'using', 'webservice', 'client', 'every', 'user', 'ha', 'access', 'using', 'servlet', 'side', 'iworkitem', 'interface']","['in', 'the', 'api', 'you', 'find', 'the', 'method', 'moveworkitemtodocument', 'the', 'documentation', 'state', 'move', 'a', 'work', 'item', 'to', 'a', 'specific', 'position', 'in', 'a', 'document', 'if', 'the', 'work', 'item', 'is', 'not', 'yet', 'inside', 'the', 'document', 'it', 'will', 'be', 'moved', 'into', 'the', 'document', 'module', 'are', 'also', 'supported', 'param', 'workitemuri', 'the', 'uri', 'of', 'the', 'work', 'item', 'to', 'be', 'moved', 'param', 'documenturi', 'the', 'uri', 'of', 'the', 'document', 'param', 'parentworkitemuri', 'the', 'uri', 'of', 'the', 'parent', 'work', 'item', 'or', 'code', 'null', 'to', 'insert', 'it', 'a', 'the', 'root', 'param', 'position', 'the', 'desired', 'position', 'in', 'the', 'list', 'of', 'child', 'or', 'a', 'value', 'to', 'insert', 'the', 'work', 'item', 'at', 'the', 'end', 'if', 'the', 'old', 'and', 'new', 'parent', 'are', 'the', 'same', 'then', 'the', 'moved', 'work', 'item', 'is', 'not', 'counted', 'param', 'retaindocumentflow', 'code', 'true', 'to', 'retain', 'the', 'position', 'of', 'the', 'moved', 'work', 'item', 'in', 'the', 'document', 'flow', 'even', 'if', 'it', 'mean', 'changing', 'the', 'parent', 'code', 'false', 'to', 'keep', 'the', 'desired', 'parent', 'even', 'if', 'it', 'mean', 'moving', 'the', 'work', 'item', 'to', 'a', 'different', 'position', 'since']",System Requirements and AWS,4,"{'neg': 0.037, 'neu': 0.942, 'pos': 0.021, 'compound': -0.296}",0.0,4,Building and Compiling Python Projects,3query
72975638,Update my app in Google Play with significant changes,"<p>Now my company wants to update app with significant changes.
In new app version will change absolutely whole design and internal logic (code).</p>
<p>Will the market allow such an application to be released? Wouldn't that be an intellectual property infringement?
I would like to see official links with information about it.</p>
",<android><google-play><requirements>,2022-07-14 05:31:41,37,0,1,72975830,"<p>Updating an app and completely replacing everything about it is fine.  Sometimes you rewrite apps, that's ok.  The only requirement is that the signing key remain the same, and the version code increase.</p>
<p>As for UP infringement-  if your company owned the original app, how would that even remotely be IP infringement?  You own the rights to the IP, that includes the right to no longer offer it for download, or for you to reuse the name for a new app.</p>
",2022-07,now my company wants to update app with significant changes in new app version will change absolutely whole design and internal logic code will the market allow such an application to be released wouldn t that be an intellectual property infringement i would like to see official links with information about it,updating an app and completely replacing everything about it is fine sometimes you rewrite apps that s ok the only requirement is that the signing key remain the same and the version code increase as for up infringement if your company owned the original app how would that even remotely be ip infringement you own the rights to the ip that includes the right to no longer offer it for download or for you to reuse the name for a new app,"['android', 'google-play', 'requirements']","['now', 'my', 'company', 'wants', 'to', 'update', 'app', 'with', 'significant', 'changes', 'in', 'new', 'app', 'version', 'will', 'change', 'absolutely', 'whole', 'design', 'and', 'internal', 'logic', 'code', 'will', 'the', 'market', 'allow', 'such', 'an', 'application', 'to', 'be', 'released', 'wouldn', 't', 'that', 'be', 'an', 'intellectual', 'property', 'infringement', 'i', 'would', 'like', 'to', 'see', 'official', 'links', 'with', 'information', 'about', 'it']","['updating', 'an', 'app', 'and', 'completely', 'replacing', 'everything', 'about', 'it', 'is', 'fine', 'sometimes', 'you', 'rewrite', 'apps', 'that', 's', 'ok', 'the', 'only', 'requirement', 'is', 'that', 'the', 'signing', 'key', 'remain', 'the', 'same', 'and', 'the', 'version', 'code', 'increase', 'as', 'for', 'up', 'infringement', 'if', 'your', 'company', 'owned', 'the', 'original', 'app', 'how', 'would', 'that', 'even', 'remotely', 'be', 'ip', 'infringement', 'you', 'own', 'the', 'rights', 'to', 'the', 'ip', 'that', 'includes', 'the', 'right', 'to', 'no', 'longer', 'offer', 'it', 'for', 'download', 'or', 'for', 'you', 'to', 'reuse', 'the', 'name', 'for', 'a', 'new', 'app']","['company', 'want', 'update', 'app', 'significant', 'change', 'new', 'app', 'version', 'change', 'absolutely', 'whole', 'design', 'internal', 'logic', 'code', 'market', 'allow', 'application', 'released', 'intellectual', 'property', 'infringement', 'would', 'like', 'see', 'official', 'link', 'information']","['updating', 'an', 'app', 'and', 'completely', 'replacing', 'everything', 'about', 'it', 'is', 'fine', 'sometimes', 'you', 'rewrite', 'apps', 'that', 's', 'ok', 'the', 'only', 'requirement', 'is', 'that', 'the', 'signing', 'key', 'remain', 'the', 'same', 'and', 'the', 'version', 'code', 'increase', 'a', 'for', 'up', 'infringement', 'if', 'your', 'company', 'owned', 'the', 'original', 'app', 'how', 'would', 'that', 'even', 'remotely', 'be', 'ip', 'infringement', 'you', 'own', 'the', 'right', 'to', 'the', 'ip', 'that', 'includes', 'the', 'right', 'to', 'no', 'longer', 'offer', 'it', 'for', 'download', 'or', 'for', 'you', 'to', 'reuse', 'the', 'name', 'for', 'a', 'new', 'app']",Package Management and File Handling,3,"{'neg': 0.053, 'neu': 0.776, 'pos': 0.17, 'compound': 0.6966}",0.17305194805194807,3,Python Package Installation and Management,3query
72897880,how can I include a python wheel file stored in Jfrog pypi repository in a requirement.txt,"<p>how can I include a python wheel file stored in our private Artifactory PyPI repository in a requirement.txt? Our Artifactory is self-hosted and not cloud</p>
<p>I have a python app packaged into a wheel file and pushed to self-hosted Jfrog server PyPI Artifactory. How can I include it in the requirement.txt file so that the wheel file can be downloaded from the Artifactory and installed it and other dependencies listed in the requirement.txt?</p>
<p>We want to build a docker image of the application but need the wheel file to be included in the requirement.txt</p>
",<python-3.x><dependencies><artifactory><pypi><requirements>,2022-07-07 12:32:12,310,2,1,72898229,"<p>Artifactory for python use a pypi repo so it work just like a regular pypi private server.</p>
<p>Official <a href=""https://www.jfrog.com/confluence/display/JFROG/PyPI+Repositories"" rel=""nofollow noreferrer"">Artifactory pypi guide</a></p>
<p>example from the doc:</p>
<pre><code>--index-url http://localhost:8081/artifactory/api/pypi/pypi-local/simple
PyYAML==3.11
argparse==1.2.1
frog-bar==0.2
frog-fu==0.2a
nltk==2.0.4
wsgiref==0.1.2
</code></pre>
<p>Be mindfull that for every different pypi repo you will need a new requirements file</p>
<p>The cleaner solution is to use pipenv with Pipfile and Pipfile.lock in this case, it allow you to have multiple pypi repo in the same file.</p>
",2022-07,how can i include a python wheel file stored in our private artifactory pypi repository in a requirement txt our artifactory is self hosted and not cloud i have a python app packaged into a wheel file and pushed to self hosted jfrog server pypi artifactory how can i include it in the requirement txt file so that the wheel file can be downloaded from the artifactory and installed it and other dependencies listed in the requirement txt we want to build a docker image of the application but need the wheel file to be included in the requirement txt,artifactory for python use a pypi repo so it work just like a regular pypi private server official artifactory pypi guide example from the doc index url http localhost   artifactory api pypi pypi local simple pyyaml     argparse       frog bar     frog fu    a nltk       wsgiref       be mindfull that for every different pypi repo you will need a new requirements file the cleaner solution is to use pipenv with pipfile and pipfile lock in this case it allow you to have multiple pypi repo in the same file,"['python-3.x', 'dependencies', 'artifactory', 'pypi', 'requirements']","['how', 'can', 'i', 'include', 'a', 'python', 'wheel', 'file', 'stored', 'in', 'our', 'private', 'artifactory', 'pypi', 'repository', 'in', 'a', 'requirement', 'txt', 'our', 'artifactory', 'is', 'self', 'hosted', 'and', 'not', 'cloud', 'i', 'have', 'a', 'python', 'app', 'packaged', 'into', 'a', 'wheel', 'file', 'and', 'pushed', 'to', 'self', 'hosted', 'jfrog', 'server', 'pypi', 'artifactory', 'how', 'can', 'i', 'include', 'it', 'in', 'the', 'requirement', 'txt', 'file', 'so', 'that', 'the', 'wheel', 'file', 'can', 'be', 'downloaded', 'from', 'the', 'artifactory', 'and', 'installed', 'it', 'and', 'other', 'dependencies', 'listed', 'in', 'the', 'requirement', 'txt', 'we', 'want', 'to', 'build', 'a', 'docker', 'image', 'of', 'the', 'application', 'but', 'need', 'the', 'wheel', 'file', 'to', 'be', 'included', 'in', 'the', 'requirement', 'txt']","['artifactory', 'for', 'python', 'use', 'a', 'pypi', 'repo', 'so', 'it', 'work', 'just', 'like', 'a', 'regular', 'pypi', 'private', 'server', 'official', 'artifactory', 'pypi', 'guide', 'example', 'from', 'the', 'doc', 'index', 'url', 'http', 'localhost', 'artifactory', 'api', 'pypi', 'pypi', 'local', 'simple', 'pyyaml', 'argparse', 'frog', 'bar', 'frog', 'fu', 'a', 'nltk', 'wsgiref', 'be', 'mindfull', 'that', 'for', 'every', 'different', 'pypi', 'repo', 'you', 'will', 'need', 'a', 'new', 'requirements', 'file', 'the', 'cleaner', 'solution', 'is', 'to', 'use', 'pipenv', 'with', 'pipfile', 'and', 'pipfile', 'lock', 'in', 'this', 'case', 'it', 'allow', 'you', 'to', 'have', 'multiple', 'pypi', 'repo', 'in', 'the', 'same', 'file']","['include', 'python', 'wheel', 'file', 'stored', 'private', 'artifactory', 'pypi', 'repository', 'requirement', 'txt', 'artifactory', 'self', 'hosted', 'cloud', 'python', 'app', 'packaged', 'wheel', 'file', 'pushed', 'self', 'hosted', 'jfrog', 'server', 'pypi', 'artifactory', 'include', 'requirement', 'txt', 'file', 'wheel', 'file', 'downloaded', 'artifactory', 'installed', 'dependency', 'listed', 'requirement', 'txt', 'want', 'build', 'docker', 'image', 'application', 'need', 'wheel', 'file', 'included', 'requirement', 'txt']","['artifactory', 'for', 'python', 'use', 'a', 'pypi', 'repo', 'so', 'it', 'work', 'just', 'like', 'a', 'regular', 'pypi', 'private', 'server', 'official', 'artifactory', 'pypi', 'guide', 'example', 'from', 'the', 'doc', 'index', 'url', 'http', 'localhost', 'artifactory', 'api', 'pypi', 'pypi', 'local', 'simple', 'pyyaml', 'argparse', 'frog', 'bar', 'frog', 'fu', 'a', 'nltk', 'wsgiref', 'be', 'mindfull', 'that', 'for', 'every', 'different', 'pypi', 'repo', 'you', 'will', 'need', 'a', 'new', 'requirement', 'file', 'the', 'cleaner', 'solution', 'is', 'to', 'use', 'pipenv', 'with', 'pipfile', 'and', 'pipfile', 'lock', 'in', 'this', 'case', 'it', 'allow', 'you', 'to', 'have', 'multiple', 'pypi', 'repo', 'in', 'the', 'same', 'file']",Package Management and File Handling,3,"{'neg': 0.0, 'neu': 0.983, 'pos': 0.017, 'compound': 0.1306}",-0.0625,3,Python Package Installation and Management,3query
72771388,Versions not found when installing from requirements-file with pip in venv,"<p>I want to make a 'copy' of my python virtual environment, which is a venv, in another directory (on a different machine) following <a href=""https://stackoverflow.com/questions/69113607/how-to-clone-a-venv-virtual-environment"">this post</a>. But I run into some problems for which I found no solution elsewhere and I don't know what happens:</p>
<p><strong>My steps:</strong>
I do <code>pip freeze &gt; venv_requirements.txt</code> and copy that file over to the other directory. There I make a new venv with <code>python3 -m venv ./venvLocal</code> and activate it. Next I run <code> python3 -m pip install -r venv_requirements.txt</code>.</p>
<p><strong>The problem:</strong> For multiple packages I get the error <code>Could not find a version that satisfies the requirement ... No matching distribution found for ...</code>.</p>
<p><strong>What I tried</strong>: 1. The version of pip in the original venv was older that the one in my new venv. I downgraded pip to the same version as the original, but the problem persisted, 2. I installed the packages for which the stated version could not be found by hand with <code>pip install ..</code>. The installation worked fine, but when running my code afterwards I got many error messages that modules are not found or that there are problems within the modules.</p>
<p><strong>Further:</strong> 1. <code>which pip</code> gives me (correctly) the one in my venv, 2. the original venv was created with exact the same command as the second one., 3. The original and new venv are on different (linux) machines, connected via ssh.</p>
",<python><pip><python-venv><requirements>,2022-06-27 11:32:02,77,0,1,72773418,"<p>I found the reason for the problems: It was an issue with the python version: While I updated python to the same version as on the machine with the original venv, I did not change the symlink (<a href=""https://phoenixnap.com/kb/upgrade-python"" rel=""nofollow noreferrer"">like eg. described here</a>) and thus the new environment had been made with the old python version.</p>
",2022-06,i want to make a copy of my python virtual environment which is a venv in another directory on a different machine following this post but i run into some problems for which i found no solution elsewhere and i don t know what happens my steps i do pip freeze venv_requirements txt and copy that file over to the other directory there i make a new venv with python  m venv venvlocal and activate it next i run python  m pip install r venv_requirements txt the problem for multiple packages i get the error could not find a version that satisfies the requirement no matching distribution found for what i tried   the version of pip in the original venv was older that the one in my new venv i downgraded pip to the same version as the original but the problem persisted   i installed the packages for which the stated version could not be found by hand with pip install the installation worked fine but when running my code afterwards i got many error messages that modules are not found or that there are problems within the modules further   which pip gives me correctly the one in my venv   the original venv was created with exact the same command as the second one   the original and new venv are on different linux machines connected via ssh,i found the reason for the problems it was an issue with the python version while i updated python to the same version as on the machine with the original venv i did not change the symlink like eg described here and thus the new environment had been made with the old python version,"['python', 'pip', 'python-venv', 'requirements']","['i', 'want', 'to', 'make', 'a', 'copy', 'of', 'my', 'python', 'virtual', 'environment', 'which', 'is', 'a', 'venv', 'in', 'another', 'directory', 'on', 'a', 'different', 'machine', 'following', 'this', 'post', 'but', 'i', 'run', 'into', 'some', 'problems', 'for', 'which', 'i', 'found', 'no', 'solution', 'elsewhere', 'and', 'i', 'don', 't', 'know', 'what', 'happens', 'my', 'steps', 'i', 'do', 'pip', 'freeze', 'venv_requirements', 'txt', 'and', 'copy', 'that', 'file', 'over', 'to', 'the', 'other', 'directory', 'there', 'i', 'make', 'a', 'new', 'venv', 'with', 'python', 'm', 'venv', 'venvlocal', 'and', 'activate', 'it', 'next', 'i', 'run', 'python', 'm', 'pip', 'install', 'r', 'venv_requirements', 'txt', 'the', 'problem', 'for', 'multiple', 'packages', 'i', 'get', 'the', 'error', 'could', 'not', 'find', 'a', 'version', 'that', 'satisfies', 'the', 'requirement', 'no', 'matching', 'distribution', 'found', 'for', 'what', 'i', 'tried', 'the', 'version', 'of', 'pip', 'in', 'the', 'original', 'venv', 'was', 'older', 'that', 'the', 'one', 'in', 'my', 'new', 'venv', 'i', 'downgraded', 'pip', 'to', 'the', 'same', 'version', 'as', 'the', 'original', 'but', 'the', 'problem', 'persisted', 'i', 'installed', 'the', 'packages', 'for', 'which', 'the', 'stated', 'version', 'could', 'not', 'be', 'found', 'by', 'hand', 'with', 'pip', 'install', 'the', 'installation', 'worked', 'fine', 'but', 'when', 'running', 'my', 'code', 'afterwards', 'i', 'got', 'many', 'error', 'messages', 'that', 'modules', 'are', 'not', 'found', 'or', 'that', 'there', 'are', 'problems', 'within', 'the', 'modules', 'further', 'which', 'pip', 'gives', 'me', 'correctly', 'the', 'one', 'in', 'my', 'venv', 'the', 'original', 'venv', 'was', 'created', 'with', 'exact', 'the', 'same', 'command', 'as', 'the', 'second', 'one', 'the', 'original', 'and', 'new', 'venv', 'are', 'on', 'different', 'linux', 'machines', 'connected', 'via', 'ssh']","['i', 'found', 'the', 'reason', 'for', 'the', 'problems', 'it', 'was', 'an', 'issue', 'with', 'the', 'python', 'version', 'while', 'i', 'updated', 'python', 'to', 'the', 'same', 'version', 'as', 'on', 'the', 'machine', 'with', 'the', 'original', 'venv', 'i', 'did', 'not', 'change', 'the', 'symlink', 'like', 'eg', 'described', 'here', 'and', 'thus', 'the', 'new', 'environment', 'had', 'been', 'made', 'with', 'the', 'old', 'python', 'version']","['want', 'make', 'copy', 'python', 'virtual', 'environment', 'venv', 'another', 'directory', 'different', 'machine', 'following', 'post', 'run', 'problem', 'found', 'solution', 'elsewhere', 'know', 'happens', 'step', 'pip', 'freeze', 'venv_requirements', 'txt', 'copy', 'file', 'directory', 'make', 'new', 'venv', 'python', 'venv', 'venvlocal', 'activate', 'next', 'run', 'python', 'pip', 'install', 'r', 'venv_requirements', 'txt', 'problem', 'multiple', 'package', 'get', 'error', 'could', 'find', 'version', 'satisfies', 'requirement', 'matching', 'distribution', 'found', 'tried', 'version', 'pip', 'original', 'venv', 'wa', 'older', 'one', 'new', 'venv', 'downgraded', 'pip', 'version', 'original', 'problem', 'persisted', 'installed', 'package', 'stated', 'version', 'could', 'found', 'hand', 'pip', 'install', 'installation', 'worked', 'fine', 'running', 'code', 'afterwards', 'got', 'many', 'error', 'message', 'module', 'found', 'problem', 'within', 'module', 'pip', 'give', 'correctly', 'one', 'venv', 'original', 'venv', 'wa', 'created', 'exact', 'command', 'second', 'one', 'original', 'new', 'venv', 'different', 'linux', 'machine', 'connected', 'via', 'ssh']","['i', 'found', 'the', 'reason', 'for', 'the', 'problem', 'it', 'wa', 'an', 'issue', 'with', 'the', 'python', 'version', 'while', 'i', 'updated', 'python', 'to', 'the', 'same', 'version', 'a', 'on', 'the', 'machine', 'with', 'the', 'original', 'venv', 'i', 'did', 'not', 'change', 'the', 'symlink', 'like', 'eg', 'described', 'here', 'and', 'thus', 'the', 'new', 'environment', 'had', 'been', 'made', 'with', 'the', 'old', 'python', 'version']",System Requirements and AWS,3,"{'neg': 0.092, 'neu': 0.791, 'pos': 0.118, 'compound': 0.5499}",0.15587121212121213,3,Python Package Installation and Management,3query
72468099,pip install from GitHub source fails to install dependencies defined in repository's requirements.txt,"<p>I'm trying to fully install a <a href=""https://github.com/dpriskorn/OpenAlexAPI"" rel=""nofollow noreferrer"">Github repository</a> in my package. The item is added properly to my <code>setup.cfg</code> file:</p>
<pre><code>install_requires =
    requests&gt;=2.27.0, &lt;3.0.0
    rich&gt;=12.3.0, &lt;13.0.0
    pydantic&gt;=1.9.0, &lt;2.0.0
    openalexapi @ git+https://github.com/dpriskorn/OpenAlexAPI.git@master#egg=openalexapi
</code></pre>
<p>A <code>pip install -e .</code> installs <code>openalexapi</code> but it does not pull the list of dependencies in their requirements.txt. As such, it fails to install <code>backoff</code> and returns the following error:</p>
<pre class=""lang-py prettyprint-override""><code>Python 3.10.0 (default, Oct  7 2021, 04:19:18) [Clang 10.0.0 ]
Type 'copyright', 'credits' or 'license' for more information
IPython 8.4.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from openalexapi import works
---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
Input In [1], in &lt;cell line: 1&gt;()
----&gt; 1 from openalexapi import works

File ~/codes/PPPL/promotion-analysis/venv/lib/python3.10/site-packages/openalexapi/__init__.py:7, in &lt;module&gt;
      4 import logging
      5 from typing import Optional, List
----&gt; 7 import backoff  # type: ignore
      8 import requests
      9 from pydantic import BaseModel, EmailStr
</code></pre>
<p>I know that one can do <code>pip install -r https://path/to/requirements.txt</code> but was wondering if there is a way to trigger pulling the dependencies automatically.</p>
",<python-3.x><pip><requirements>,2022-06-01 21:12:04,55,0,1,72468245,"<p>When not explicitly (<code>pip install -r requirements.txt</code>) asked <code>pip install</code> never implicitly uses <code>requirements.txt</code>.</p>
<p>Dependencies are listed in wheels' metadata or in source distributions in <code>setup.cfg</code>/<code>setup.py</code>. And BTW said metadata is generated from <code>setup.cfg</code>/<code>setup.py</code> which must explicitly read <code>requirements.txt</code>.</p>
<p>It's not the case with <code>openalexapi</code> code so the only way to use its <code>requirements.txt</code> is to do explicitly</p>
<pre><code>pip install -r https://raw.githubusercontent.com/dpriskorn/OpenAlexAPI/master/requirements.txt
</code></pre>
",2022-06,i m trying to fully install a github repository in my package the item is added properly to my setup cfg file install_requires requests             rich             pydantic             openalexapi git https github com dpriskorn openalexapi git master egg openalexapi a pip install e installs openalexapi but it does not pull the list of dependencies in their requirements txt as such it fails to install backoff and returns the following error python       default oct           clang       type copyright credits or license for more information ipython       an enhanced interactive python type for help in   from openalexapi import works modulenotfounderror traceback most recent call last input in   in cell line     from openalexapi import works file codes pppl promotion analysis venv lib python    site packages openalexapi __init__ py   in module   import logging   from typing import optional list   import backoff type ignore   import requests   from pydantic import basemodel emailstr i know that one can do pip install r https path to requirements txt but was wondering if there is a way to trigger pulling the dependencies automatically,when not explicitly pip install r requirements txt asked pip install never implicitly uses requirements txt dependencies are listed in wheels metadata or in source distributions in setup cfg setup py and btw said metadata is generated from setup cfg setup py which must explicitly read requirements txt it s not the case with openalexapi code so the only way to use its requirements txt is to do explicitly pip install r https raw githubusercontent com dpriskorn openalexapi master requirements txt,"['python-3.x', 'pip', 'requirements']","['i', 'm', 'trying', 'to', 'fully', 'install', 'a', 'github', 'repository', 'in', 'my', 'package', 'the', 'item', 'is', 'added', 'properly', 'to', 'my', 'setup', 'cfg', 'file', 'install_requires', 'requests', 'rich', 'pydantic', 'openalexapi', 'git', 'https', 'github', 'com', 'dpriskorn', 'openalexapi', 'git', 'master', 'egg', 'openalexapi', 'a', 'pip', 'install', 'e', 'installs', 'openalexapi', 'but', 'it', 'does', 'not', 'pull', 'the', 'list', 'of', 'dependencies', 'in', 'their', 'requirements', 'txt', 'as', 'such', 'it', 'fails', 'to', 'install', 'backoff', 'and', 'returns', 'the', 'following', 'error', 'python', 'default', 'oct', 'clang', 'type', 'copyright', 'credits', 'or', 'license', 'for', 'more', 'information', 'ipython', 'an', 'enhanced', 'interactive', 'python', 'type', 'for', 'help', 'in', 'from', 'openalexapi', 'import', 'works', 'modulenotfounderror', 'traceback', 'most', 'recent', 'call', 'last', 'input', 'in', 'in', 'cell', 'line', 'from', 'openalexapi', 'import', 'works', 'file', 'codes', 'pppl', 'promotion', 'analysis', 'venv', 'lib', 'python', 'site', 'packages', 'openalexapi', '__init__', 'py', 'in', 'module', 'import', 'logging', 'from', 'typing', 'import', 'optional', 'list', 'import', 'backoff', 'type', 'ignore', 'import', 'requests', 'from', 'pydantic', 'import', 'basemodel', 'emailstr', 'i', 'know', 'that', 'one', 'can', 'do', 'pip', 'install', 'r', 'https', 'path', 'to', 'requirements', 'txt', 'but', 'was', 'wondering', 'if', 'there', 'is', 'a', 'way', 'to', 'trigger', 'pulling', 'the', 'dependencies', 'automatically']","['when', 'not', 'explicitly', 'pip', 'install', 'r', 'requirements', 'txt', 'asked', 'pip', 'install', 'never', 'implicitly', 'uses', 'requirements', 'txt', 'dependencies', 'are', 'listed', 'in', 'wheels', 'metadata', 'or', 'in', 'source', 'distributions', 'in', 'setup', 'cfg', 'setup', 'py', 'and', 'btw', 'said', 'metadata', 'is', 'generated', 'from', 'setup', 'cfg', 'setup', 'py', 'which', 'must', 'explicitly', 'read', 'requirements', 'txt', 'it', 's', 'not', 'the', 'case', 'with', 'openalexapi', 'code', 'so', 'the', 'only', 'way', 'to', 'use', 'its', 'requirements', 'txt', 'is', 'to', 'do', 'explicitly', 'pip', 'install', 'r', 'https', 'raw', 'githubusercontent', 'com', 'dpriskorn', 'openalexapi', 'master', 'requirements', 'txt']","['trying', 'fully', 'install', 'github', 'repository', 'package', 'item', 'added', 'properly', 'setup', 'cfg', 'file', 'install_requires', 'request', 'rich', 'pydantic', 'openalexapi', 'git', 'http', 'github', 'com', 'dpriskorn', 'openalexapi', 'git', 'master', 'egg', 'openalexapi', 'pip', 'install', 'e', 'installs', 'openalexapi', 'doe', 'pull', 'list', 'dependency', 'requirement', 'txt', 'fails', 'install', 'backoff', 'return', 'following', 'error', 'python', 'default', 'oct', 'clang', 'type', 'copyright', 'credit', 'license', 'information', 'ipython', 'enhanced', 'interactive', 'python', 'type', 'help', 'openalexapi', 'import', 'work', 'modulenotfounderror', 'traceback', 'recent', 'call', 'last', 'input', 'cell', 'line', 'openalexapi', 'import', 'work', 'file', 'code', 'pppl', 'promotion', 'analysis', 'venv', 'lib', 'python', 'site', 'package', 'openalexapi', '__init__', 'py', 'module', 'import', 'logging', 'typing', 'import', 'optional', 'list', 'import', 'backoff', 'type', 'ignore', 'import', 'request', 'pydantic', 'import', 'basemodel', 'emailstr', 'know', 'one', 'pip', 'install', 'r', 'http', 'path', 'requirement', 'txt', 'wa', 'wondering', 'way', 'trigger', 'pulling', 'dependency', 'automatically']","['when', 'not', 'explicitly', 'pip', 'install', 'r', 'requirement', 'txt', 'asked', 'pip', 'install', 'never', 'implicitly', 'us', 'requirement', 'txt', 'dependency', 'are', 'listed', 'in', 'wheel', 'metadata', 'or', 'in', 'source', 'distribution', 'in', 'setup', 'cfg', 'setup', 'py', 'and', 'btw', 'said', 'metadata', 'is', 'generated', 'from', 'setup', 'cfg', 'setup', 'py', 'which', 'must', 'explicitly', 'read', 'requirement', 'txt', 'it', 's', 'not', 'the', 'case', 'with', 'openalexapi', 'code', 'so', 'the', 'only', 'way', 'to', 'use', 'it', 'requirement', 'txt', 'is', 'to', 'do', 'explicitly', 'pip', 'install', 'r', 'http', 'raw', 'githubusercontent', 'com', 'dpriskorn', 'openalexapi', 'master', 'requirement', 'txt']",Package Management and File Handling,3,"{'neg': 0.041, 'neu': 0.939, 'pos': 0.021, 'compound': -0.5267}",0.0625,3,Python Package Installation and Management,3query
72462732,meta.yaml: how to require one from a list of packages,"<p>Is there a way to code a requirements section in a meta.yaml file where any one package from a list of choices will satisfy the requirement? This is where different packages provide the same needed capability and there is no reason to specify a particular choice.</p>
<p>In my case the conda svn package and the conga-forge subversion package provide the same tool and either is fine, but an analogous case would be where either PIL or Pillow would be required so I want to have something like:</p>
<pre><code>requirements:
  run:
    - python&gt;=3.7
    - pil or pillow
</code></pre>
<p>Is this possible?</p>
",<python><conda><requirements><conda-build>,2022-06-01 13:31:48,74,1,1,72465317,"<p>The closest thing to this is <a href=""https://docs.conda.io/projects/conda-build/en/latest/resources/variants.html"" rel=""nofollow noreferrer""><em>build variants</em></a>. This would entail issuing a separate build for each variant. Setting aside that the example here is contrived (<code>pil</code> is outdated and only available for Python 2.7 on Conda), but it'd be something</p>
<p><strong>conda_build_config.yaml</strong></p>
<pre><code>pil_variant:
  - pil
  - pillow
</code></pre>
<p><strong>meta.yaml</strong></p>
<pre class=""lang-yaml prettyprint-override""><code>requirements:
  run:
    - python&gt;=3.7
    - {{ pil_variant }}
</code></pre>
",2022-06,is there a way to code a requirements section in a meta yaml file where any one package from a list of choices will satisfy the requirement this is where different packages provide the same needed capability and there is no reason to specify a particular choice in my case the conda svn package and the conga forge subversion package provide the same tool and either is fine but an analogous case would be where either pil or pillow would be required so i want to have something like requirements run python     pil or pillow is this possible,the closest thing to this is build variants this would entail issuing a separate build for each variant setting aside that the example here is contrived pil is outdated and only available for python     on conda but it d be something conda_build_config yaml pil_variant pil pillow meta yaml requirements run python     pil_variant,"['python', 'conda', 'requirements', 'conda-build']","['is', 'there', 'a', 'way', 'to', 'code', 'a', 'requirements', 'section', 'in', 'a', 'meta', 'yaml', 'file', 'where', 'any', 'one', 'package', 'from', 'a', 'list', 'of', 'choices', 'will', 'satisfy', 'the', 'requirement', 'this', 'is', 'where', 'different', 'packages', 'provide', 'the', 'same', 'needed', 'capability', 'and', 'there', 'is', 'no', 'reason', 'to', 'specify', 'a', 'particular', 'choice', 'in', 'my', 'case', 'the', 'conda', 'svn', 'package', 'and', 'the', 'conga', 'forge', 'subversion', 'package', 'provide', 'the', 'same', 'tool', 'and', 'either', 'is', 'fine', 'but', 'an', 'analogous', 'case', 'would', 'be', 'where', 'either', 'pil', 'or', 'pillow', 'would', 'be', 'required', 'so', 'i', 'want', 'to', 'have', 'something', 'like', 'requirements', 'run', 'python', 'pil', 'or', 'pillow', 'is', 'this', 'possible']","['the', 'closest', 'thing', 'to', 'this', 'is', 'build', 'variants', 'this', 'would', 'entail', 'issuing', 'a', 'separate', 'build', 'for', 'each', 'variant', 'setting', 'aside', 'that', 'the', 'example', 'here', 'is', 'contrived', 'pil', 'is', 'outdated', 'and', 'only', 'available', 'for', 'python', 'on', 'conda', 'but', 'it', 'd', 'be', 'something', 'conda_build_config', 'yaml', 'pil_variant', 'pil', 'pillow', 'meta', 'yaml', 'requirements', 'run', 'python', 'pil_variant']","['way', 'code', 'requirement', 'section', 'meta', 'yaml', 'file', 'one', 'package', 'list', 'choice', 'satisfy', 'requirement', 'different', 'package', 'provide', 'needed', 'capability', 'reason', 'specify', 'particular', 'choice', 'case', 'conda', 'svn', 'package', 'conga', 'forge', 'subversion', 'package', 'provide', 'tool', 'either', 'fine', 'analogous', 'case', 'would', 'either', 'pil', 'pillow', 'would', 'required', 'want', 'something', 'like', 'requirement', 'run', 'python', 'pil', 'pillow', 'possible']","['the', 'closest', 'thing', 'to', 'this', 'is', 'build', 'variant', 'this', 'would', 'entail', 'issuing', 'a', 'separate', 'build', 'for', 'each', 'variant', 'setting', 'aside', 'that', 'the', 'example', 'here', 'is', 'contrived', 'pil', 'is', 'outdated', 'and', 'only', 'available', 'for', 'python', 'on', 'conda', 'but', 'it', 'd', 'be', 'something', 'conda_build_config', 'yaml', 'pil_variant', 'pil', 'pillow', 'meta', 'yaml', 'requirement', 'run', 'python', 'pil_variant']",Package Management and File Handling,3,"{'neg': 0.017, 'neu': 0.921, 'pos': 0.062, 'compound': 0.506}",0.11666666666666667,3,Python Package Installation and Management,3query
72450552,How can I add python-dev package to requirements.txt?,"<p>I am trying add the <code>python-dev</code> package to my requirements.txt file, but I must be using the wrong package name. I have tried:</p>
<p>python3.7-dev</p>
<p>python-dev</p>
<p>py-dev</p>
",<python><requirements>,2022-05-31 15:33:25,286,-2,2,72450658,"<p>I guess there's great explanation about how to install it:</p>
<p><a href=""https://stackoverflow.com/questions/6230444/how-to-install-python-developer-package"">How to install python developer package?</a></p>
<p>For it's installing you should use your operation system package manager, such as:
yum, dnf, apt-get, brew or kinda</p>
",2022-05,i am trying add the python dev package to my requirements txt file but i must be using the wrong package name i have tried python    dev python dev py dev,i guess there s great explanation about how to install it how to install python developer package for it s installing you should use your operation system package manager such as yum dnf apt get brew or kinda,"['python', 'requirements']","['i', 'am', 'trying', 'add', 'the', 'python', 'dev', 'package', 'to', 'my', 'requirements', 'txt', 'file', 'but', 'i', 'must', 'be', 'using', 'the', 'wrong', 'package', 'name', 'i', 'have', 'tried', 'python', 'dev', 'python', 'dev', 'py', 'dev']","['i', 'guess', 'there', 's', 'great', 'explanation', 'about', 'how', 'to', 'install', 'it', 'how', 'to', 'install', 'python', 'developer', 'package', 'for', 'it', 's', 'installing', 'you', 'should', 'use', 'your', 'operation', 'system', 'package', 'manager', 'such', 'as', 'yum', 'dnf', 'apt', 'get', 'brew', 'or', 'kinda']","['trying', 'add', 'python', 'dev', 'package', 'requirement', 'txt', 'file', 'must', 'using', 'wrong', 'package', 'name', 'tried', 'python', 'dev', 'python', 'dev', 'py', 'dev']","['i', 'guess', 'there', 's', 'great', 'explanation', 'about', 'how', 'to', 'install', 'it', 'how', 'to', 'install', 'python', 'developer', 'package', 'for', 'it', 's', 'installing', 'you', 'should', 'use', 'your', 'operation', 'system', 'package', 'manager', 'such', 'a', 'yum', 'dnf', 'apt', 'get', 'brew', 'or', 'kinda']",System Requirements and AWS,3,"{'neg': 0.153, 'neu': 0.847, 'pos': 0.0, 'compound': -0.631}",-0.5,3,Python Package Installation and Management,3query
72450552,How can I add python-dev package to requirements.txt?,"<p>I am trying add the <code>python-dev</code> package to my requirements.txt file, but I must be using the wrong package name. I have tried:</p>
<p>python3.7-dev</p>
<p>python-dev</p>
<p>py-dev</p>
",<python><requirements>,2022-05-31 15:33:25,286,-2,2,72450704,"<p>If you want to install package at OS level you should seriously consider using a docker container to deploy/release your application.</p>
<p>Here is a snippet:</p>
<pre><code>FROM python

RUN apt-get install python-dev
RUN pip install -r requirements.txt

...
</code></pre>
",2022-05,i am trying add the python dev package to my requirements txt file but i must be using the wrong package name i have tried python    dev python dev py dev,if you want to install package at os level you should seriously consider using a docker container to deploy release your application here is a snippet from python run apt get install python dev run pip install r requirements txt,"['python', 'requirements']","['i', 'am', 'trying', 'add', 'the', 'python', 'dev', 'package', 'to', 'my', 'requirements', 'txt', 'file', 'but', 'i', 'must', 'be', 'using', 'the', 'wrong', 'package', 'name', 'i', 'have', 'tried', 'python', 'dev', 'python', 'dev', 'py', 'dev']","['if', 'you', 'want', 'to', 'install', 'package', 'at', 'os', 'level', 'you', 'should', 'seriously', 'consider', 'using', 'a', 'docker', 'container', 'to', 'deploy', 'release', 'your', 'application', 'here', 'is', 'a', 'snippet', 'from', 'python', 'run', 'apt', 'get', 'install', 'python', 'dev', 'run', 'pip', 'install', 'r', 'requirements', 'txt']","['trying', 'add', 'python', 'dev', 'package', 'requirement', 'txt', 'file', 'must', 'using', 'wrong', 'package', 'name', 'tried', 'python', 'dev', 'python', 'dev', 'py', 'dev']","['if', 'you', 'want', 'to', 'install', 'package', 'at', 'o', 'level', 'you', 'should', 'seriously', 'consider', 'using', 'a', 'docker', 'container', 'to', 'deploy', 'release', 'your', 'application', 'here', 'is', 'a', 'snippet', 'from', 'python', 'run', 'apt', 'get', 'install', 'python', 'dev', 'run', 'pip', 'install', 'r', 'requirement', 'txt']",System Requirements and AWS,3,"{'neg': 0.153, 'neu': 0.847, 'pos': 0.0, 'compound': -0.631}",-0.5,3,Python Package Installation and Management,3query
72440037,Could not find a version that matches protobuf?,"<p>I need to check my dependencies with this command:</p>
<pre><code>pipreqs ./myPorjectFolder --savepath requirements.in --force &amp;&amp; pip-compile

</code></pre>
<p>This command used to work just fine. However, I am now received this error:</p>
<pre><code>INFO: Successfully saved requirements file in requirements.in
Could not find a version that matches protobuf&lt;4.0.0dev,==4.21.1,&gt;=3.15.0 (from -r requirements.in (line 4))
Tried: 2.0.3, 2.3.0, 2.4.1, 2.5.0, 2.6.0, 2.6.1, 3.0.0, 3.0.0, 3.1.0, 3.1.0.post1, 3.1.0.post1, 3.2.0, 3.2.0, 3.3.0, 3.4.0, 3.4.0, 3.5.0.post1, 3.5.0.post1, 3.5.1, 3.5.1, 3.5.2, 3.5.2, 3.5.2.post1, 3.5.2.post1, 3.6.0, 3.6.0, 3.6.1, 3.6.1, 3.7.0, 3.7.0, 3.7.1, 3.7.1, 3.8.0, 3.8.0, 3.9.0, 3.9.0, 3.9.1, 3.9.1, 3.9.2, 3.9.2, 3.10.0, 3.10.0, 3.11.0, 3.11.0, 3.11.1, 3.11.1, 3.11.2, 3.11.2, 3.11.3, 3.11.3, 3.12.2, 3.12.2, 3.12.4, 3.12.4, 3.13.0, 3.13.0, 3.14.0, 3.14.0, 3.15.0, 3.15.0, 3.15.1, 3.15.1, 3.15.2, 3.15.2, 3.15.3, 3.15.3, 3.15.4, 3.15.4, 3.15.5, 3.15.5, 3.15.6, 3.15.6, 3.15.7, 3.15.7, 3.15.8, 3.15.8, 3.16.0, 3.16.0, 3.17.0, 3.17.0, 3.17.1, 3.17.1, 3.17.2, 3.17.2, 3.17.3, 3.17.3, 3.17.3, 3.18.0, 3.18.0, 3.18.0, 3.18.1, 3.18.1, 3.18.1, 3.19.0, 3.19.0, 3.19.0, 3.19.1, 3.19.1, 3.19.1, 3.19.2, 3.19.2, 3.19.2, 3.19.3, 3.19.3, 3.19.3, 3.19.4, 3.19.4, 3.19.4, 3.20.0, 3.20.0, 3.20.0, 3.20.1, 3.20.1, 3.20.1, 4.21.0, 4.21.0, 4.21.0, 4.21.0, 4.21.1, 4.21.1, 4.21.1, 4.21.1
Skipped pre-versions: 2.0.0b0, 3.0.0a2, 3.0.0a3, 3.0.0b1, 3.0.0b1.post1, 3.0.0b1.post2, 3.0.0b2, 3.0.0b2, 3.0.0b2.post1, 3.0.0b2.post1, 3.0.0b2.post2, 3.0.0b2.post2, 3.0.0b3, 3.0.0b4, 3.0.0b4, 3.2.0rc1, 3.2.0rc1, 3.2.0rc1.post1, 3.2.0rc1.post1, 3.2.0rc2, 3.2.0rc2, 3.7.0rc2, 3.7.0rc2, 3.7.0rc3, 3.7.0rc3, 3.8.0rc1, 3.8.0rc1, 3.9.0rc1, 3.9.0rc1, 3.10.0rc1, 3.10.0rc1, 3.11.0rc1, 3.11.0rc1, 3.11.0rc2, 3.11.0rc2, 3.13.0rc3, 3.13.0rc3, 3.14.0rc1, 3.14.0rc1, 3.14.0rc2, 3.14.0rc2, 3.14.0rc3, 3.14.0rc3, 3.15.0rc1, 3.15.0rc1, 3.15.0rc2, 3.15.0rc2, 3.16.0rc1, 3.16.0rc1, 3.16.0rc2, 3.16.0rc2, 3.17.0rc1, 3.17.0rc1, 3.17.0rc2, 3.17.0rc2, 3.18.0rc1, 3.18.0rc1, 3.18.0rc1, 3.18.0rc2, 3.18.0rc2, 3.18.0rc2, 3.19.0rc1, 3.19.0rc1, 3.19.0rc1, 3.19.0rc2, 3.19.0rc2, 3.19.0rc2, 3.20.0rc1, 3.20.0rc1, 3.20.0rc1, 3.20.0rc2, 3.20.0rc2, 3.20.0rc2, 3.20.1rc1, 3.20.1rc1, 3.20.1rc1, 4.0.0rc1, 4.0.0rc1, 4.0.0rc2, 4.0.0rc2, 4.21.0rc1, 4.21.0rc1, 4.21.0rc1, 4.21.0rc1, 4.21.0rc2, 4.21.0rc2, 4.21.0rc2, 4.21.0rc2
There are incompatible versions in the resolved dependencies:
  protobuf==4.21.1 (from -r requirements.in (line 4))
  protobuf&lt;4.0.0dev,&gt;=3.15.0 (from google-api-core==2.8.1-&gt;google_api_python_client==2.49.0-&gt;-r requirements.in (line 2)
</code></pre>
<p>The <code>requirements.in</code> file it is referencing contains the following:</p>
<pre><code>filelock==3.7.0
google_api_python_client==2.49.0
google_auth_oauthlib==0.5.1
protobuf==4.21.1
scipy==1.8.1
sentry_sdk==1.5.12
</code></pre>
<p>I <a href=""https://pypi.org/project/protobuf/4.21.1/#description"" rel=""nofollow noreferrer"">checked pypi</a> and clearly, <code>protobuf==4.21.1</code> is there.</p>
<p>Why is this problem happening?</p>
<p>Generally, I've had problems with protobuf.</p>
<p>If I am not mistaken, isn't the problem that <code>pipreqs</code> says I need <code>4.21.1</code> but the software requires it to be between <code>4.0.0</code> and <code>3.15.0</code>? Obviously, that is an invalid condition.</p>
<p>How can I get <code>pipreqs</code> to require the correction version such as <code>3.20.1</code>?</p>
",<python><python-3.x><protocol-buffers><requirements>,2022-05-30 21:07:21,4522,1,1,72452878,"<p>It appears the package version condition is not possible.</p>
<p>The conditions are:</p>
<ul>
<li>3.15.0 &lt; Version &lt; 4.0.0 (from <code>Gmail API</code>)</li>
<li>Version == 4.21.1 (from <code>pipreqs</code>?)</li>
</ul>
<p>I'm not certain why <code>pipreqs</code> is generating a <code>requirements.in</code> file that says <code>protobuf==4.21.1</code> when the <code>Gmail API</code> requires something between 3.15.0 and 4.0.0.</p>
<p>I ended up manually replacing the <code>protobuf==4.21.1</code> in the <code>requirements.in</code> file, and separated the <code>pipreqs</code> and <code>pip-compile</code> commands so that I could modify the intermediate <code>requirements.in</code> file before being passed into <code>pip-compile</code>, which is where the error was occurring.</p>
<pre><code>os.system(&quot;pipreqs ./myProject --savepath requirements.in --force&quot;)
lines = None
with open('requirements.in', 'r') as FID: 
    lines = FID.readlines()
    for index,line in enumerate(lines ): 
        if 'protobuf' in line: 
            lines[index] = 'protobuf==3.20.1\n'

with open('requirements.in', 'w') as FID: 
    FID.writelines(lines)
    
os.system(&quot;pip-compile&quot;)
</code></pre>
",2022-05,i need to check my dependencies with this command pipreqs myporjectfolder savepath requirements in force pip compile this command used to work just fine however i am now received this error info successfully saved requirements file in requirements in could not find a version that matches protobuf      dev             from r requirements in line   tried                                                             post        post                                      post        post                                post        postskipped pre versions      b       a       a       b       b  post       b  post       b       b       b  post       b  post       b  post       b  post       b       b       b       rc       rc       rc  post       rc  post       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc       rc  there are incompatible versions in the resolved dependencies protobuf       from r requirements in line   protobuf      dev       from google api core       google_api_python_client       r requirements in line   the requirements in file it is referencing contains the following filelock       google_api_python_client       google_auth_oauthlib       protobuf       scipy       sentry_sdk       i checked pypi and clearly protobuf       is there why is this problem happening generally i ve had problems with protobuf if i am not mistaken isn t the problem that pipreqs says i need       but the software requires it to be between       and       obviously that is an invalid condition how can i get pipreqs to require the correction version such as,it appears the package version condition is not possible the conditions are       version       from gmail api version       from pipreqs i m not certain why pipreqs is generating a requirements in file that says protobuf       when the gmail api requires something between       and       i ended up manually replacing the protobuf       in the requirements in file and separated the pipreqs and pip compile commands so that i could modify the intermediate requirements in file before being passed into pip compile which is where the error was occurring os system pipreqs myproject savepath requirements in force lines none with open requirements in r as fid lines fid readlines for index line in enumerate lines if protobuf in line lines index protobuf       n with open requirements in w as fid fid writelines lines os system pip compile,"['python', 'python-3.x', 'protocol-buffers', 'requirements']","['i', 'need', 'to', 'check', 'my', 'dependencies', 'with', 'this', 'command', 'pipreqs', 'myporjectfolder', 'savepath', 'requirements', 'in', 'force', 'pip', 'compile', 'this', 'command', 'used', 'to', 'work', 'just', 'fine', 'however', 'i', 'am', 'now', 'received', 'this', 'error', 'info', 'successfully', 'saved', 'requirements', 'file', 'in', 'requirements', 'in', 'could', 'not', 'find', 'a', 'version', 'that', 'matches', 'protobuf', 'dev', 'from', 'r', 'requirements', 'in', 'line', 'tried', 'post', 'post', 'post', 'post', 'post', 'post', 'skipped', 'pre', 'versions', 'b', 'a', 'a', 'b', 'b', 'post', 'b', 'post', 'b', 'b', 'b', 'post', 'b', 'post', 'b', 'post', 'b', 'post', 'b', 'b', 'b', 'rc', 'rc', 'rc', 'post', 'rc', 'post', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'there', 'are', 'incompatible', 'versions', 'in', 'the', 'resolved', 'dependencies', 'protobuf', 'from', 'r', 'requirements', 'in', 'line', 'protobuf', 'dev', 'from', 'google', 'api', 'core', 'google_api_python_client', 'r', 'requirements', 'in', 'line', 'the', 'requirements', 'in', 'file', 'it', 'is', 'referencing', 'contains', 'the', 'following', 'filelock', 'google_api_python_client', 'google_auth_oauthlib', 'protobuf', 'scipy', 'sentry_sdk', 'i', 'checked', 'pypi', 'and', 'clearly', 'protobuf', 'is', 'there', 'why', 'is', 'this', 'problem', 'happening', 'generally', 'i', 've', 'had', 'problems', 'with', 'protobuf', 'if', 'i', 'am', 'not', 'mistaken', 'isn', 't', 'the', 'problem', 'that', 'pipreqs', 'says', 'i', 'need', 'but', 'the', 'software', 'requires', 'it', 'to', 'be', 'between', 'and', 'obviously', 'that', 'is', 'an', 'invalid', 'condition', 'how', 'can', 'i', 'get', 'pipreqs', 'to', 'require', 'the', 'correction', 'version', 'such', 'as']","['it', 'appears', 'the', 'package', 'version', 'condition', 'is', 'not', 'possible', 'the', 'conditions', 'are', 'version', 'from', 'gmail', 'api', 'version', 'from', 'pipreqs', 'i', 'm', 'not', 'certain', 'why', 'pipreqs', 'is', 'generating', 'a', 'requirements', 'in', 'file', 'that', 'says', 'protobuf', 'when', 'the', 'gmail', 'api', 'requires', 'something', 'between', 'and', 'i', 'ended', 'up', 'manually', 'replacing', 'the', 'protobuf', 'in', 'the', 'requirements', 'in', 'file', 'and', 'separated', 'the', 'pipreqs', 'and', 'pip', 'compile', 'commands', 'so', 'that', 'i', 'could', 'modify', 'the', 'intermediate', 'requirements', 'in', 'file', 'before', 'being', 'passed', 'into', 'pip', 'compile', 'which', 'is', 'where', 'the', 'error', 'was', 'occurring', 'os', 'system', 'pipreqs', 'myproject', 'savepath', 'requirements', 'in', 'force', 'lines', 'none', 'with', 'open', 'requirements', 'in', 'r', 'as', 'fid', 'lines', 'fid', 'readlines', 'for', 'index', 'line', 'in', 'enumerate', 'lines', 'if', 'protobuf', 'in', 'line', 'lines', 'index', 'protobuf', 'n', 'with', 'open', 'requirements', 'in', 'w', 'as', 'fid', 'fid', 'writelines', 'lines', 'os', 'system', 'pip', 'compile']","['need', 'check', 'dependency', 'command', 'pipreqs', 'myporjectfolder', 'savepath', 'requirement', 'force', 'pip', 'compile', 'command', 'used', 'work', 'fine', 'however', 'received', 'error', 'info', 'successfully', 'saved', 'requirement', 'file', 'requirement', 'could', 'find', 'version', 'match', 'protobuf', 'dev', 'r', 'requirement', 'line', 'tried', 'post', 'post', 'post', 'post', 'post', 'post', 'skipped', 'pre', 'version', 'b', 'b', 'b', 'post', 'b', 'post', 'b', 'b', 'b', 'post', 'b', 'post', 'b', 'post', 'b', 'post', 'b', 'b', 'b', 'rc', 'rc', 'rc', 'post', 'rc', 'post', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'rc', 'incompatible', 'version', 'resolved', 'dependency', 'protobuf', 'r', 'requirement', 'line', 'protobuf', 'dev', 'google', 'api', 'core', 'google_api_python_client', 'r', 'requirement', 'line', 'requirement', 'file', 'referencing', 'contains', 'following', 'filelock', 'google_api_python_client', 'google_auth_oauthlib', 'protobuf', 'scipy', 'sentry_sdk', 'checked', 'pypi', 'clearly', 'protobuf', 'problem', 'happening', 'generally', 'problem', 'protobuf', 'mistaken', 'problem', 'pipreqs', 'say', 'need', 'software', 'requires', 'obviously', 'invalid', 'condition', 'get', 'pipreqs', 'require', 'correction', 'version']","['it', 'appears', 'the', 'package', 'version', 'condition', 'is', 'not', 'possible', 'the', 'condition', 'are', 'version', 'from', 'gmail', 'api', 'version', 'from', 'pipreqs', 'i', 'm', 'not', 'certain', 'why', 'pipreqs', 'is', 'generating', 'a', 'requirement', 'in', 'file', 'that', 'say', 'protobuf', 'when', 'the', 'gmail', 'api', 'requires', 'something', 'between', 'and', 'i', 'ended', 'up', 'manually', 'replacing', 'the', 'protobuf', 'in', 'the', 'requirement', 'in', 'file', 'and', 'separated', 'the', 'pipreqs', 'and', 'pip', 'compile', 'command', 'so', 'that', 'i', 'could', 'modify', 'the', 'intermediate', 'requirement', 'in', 'file', 'before', 'being', 'passed', 'into', 'pip', 'compile', 'which', 'is', 'where', 'the', 'error', 'wa', 'occurring', 'o', 'system', 'pipreqs', 'myproject', 'savepath', 'requirement', 'in', 'force', 'line', 'none', 'with', 'open', 'requirement', 'in', 'r', 'a', 'fid', 'line', 'fid', 'readlines', 'for', 'index', 'line', 'in', 'enumerate', 'line', 'if', 'protobuf', 'in', 'line', 'line', 'index', 'protobuf', 'n', 'with', 'open', 'requirement', 'in', 'w', 'a', 'fid', 'fid', 'writelines', 'line', 'o', 'system', 'pip', 'compile']",System Requirements and AWS,0,"{'neg': 0.016, 'neu': 0.955, 'pos': 0.029, 'compound': 0.4059}",0.25333333333333335,0,System Requirements and AWS,3query
72405577,"How to generate ""global documentation"" with doxygen","<p>I have a fair understanding of both how to document code and how to write &quot;generic documentation&quot; using <code>@mainpage</code>, <code>@page</code>, <code>@subpage</code> and related tags.</p>
<p>I would need to include requirements/specification documentation for the code.</p>
<p>My problem is to keep this kind of documentation (conceptually distinct from code documentation) close to code implementing functionality (i.e.: at least in the same file, sometimes even near specific classes/functions/methods) but still be able to collect it in an orderly fashion and present it in the <code>@mainpage</code>, outside file/class hierarchy.</p>
<p>What I would ideally need is to be able to place specific <code>@page</code>, <code>@section</code>, <code>@subsection</code> etc. randomly in the various source files and then be able to <code>@include</code> them in a specific order into <code>@mainpage</code> or some other <code>@subpage</code>.</p>
<p>Even better would be to be able to include the <em>same</em> snippet in both class/function full doc (not <code>@brief</code>, of course) and in the &quot;front matter&quot; linked in <code>@mainpage</code>.</p>
<p>Global effect I need to have is to have a &quot;specification document&quot; where I detail what the various parts of the code need to implement and then the &quot;normal class/function/whatever&quot; documentation doxygen id very good at providing.</p>
<p>The catch (i.e.: what I don't know how to do) is I would like to keep &quot;specification&quot; and implementation together in the source, but separate them in documentation, i.e.:</p>
<ol>
<li>General Description: easy, this goes into <code>@mainpage</code></li>
<li>Requirements: most likely at top of source file implementing them, how do I link/include in main page?</li>
<li>Specification: either right after Requirements at top of file or somewhere near class/function implementing it; also here I don't know how to link/include in &quot;front matter&quot; AKA: <code>@mainpage</code>.</li>
<li>Normal code documentation: here only thing I don't know is how include in class/function description the same &quot;doc snippet&quot; already used for (2) and (3).</li>
</ol>
<p>Is this possible?</p>
<p>If so, what's the best practice?</p>
<p><strong>Note</strong>: I could get the effect using a separate file for each &quot;doc snippet&quot; and then <code>@include</code>ing it in the right places, but that would defeat the whole purpose that's keep Requirements/Specification/code together while separating them in different sections in the resulting documentation.</p>
<p><strong>Update</strong>: following @albert comment I tried the following:</p>
<ul>
<li>in a standard Doxygen comment I added markers:</li>
</ul>
<pre><code>/**
 * Initialization function.
 *
 * [AM_init]
 * It needs to do a long series of tests to ensure AM can actually work.
 *
 * It should also allocate all dynamic memory needed to avoid runtime failures.
 *
...
 * It will be responsibility of system-level daemon to take appropriate action.
 * [AM_init]
 *
 *
 * @param ip_addr
 * @param port
 * @return
 */
static uint32_t AM_init(const char* ip_addr, uint16_t port) {
...
</code></pre>
<ul>
<li>in the &quot;front matter&quot; definition I have (among other things):</li>
</ul>
<pre><code>/**
@page __init Initialization
@snippet{doc} CommandHandler.c AM_init
*/
</code></pre>
<ul>
<li>The function documentation is rendered correctly (i.e.: the markers are removed)</li>
<li>OTOH the initialization page is &quot;somewhat incomplete&quot;:</li>
</ul>
<pre><code>
Initialization

    It needs to do a long series of tests to ensure AM can actually work.
</code></pre>
<p>that's it.</p>
<p>Apparently the tag <em>is</em> found, but only the first line is actually included.</p>
<p><strong>Further Update</strong>: Following @albert answer (accepted) I had success, but the following caveats:</p>
<ul>
<li>Included snippet (<code>[AM_init]</code>) <em>must</em> be in a standard comment, not a doxygen one, otherwise snippet ends up included twice.</li>
<li>Included snippet <em>must not</em> have leading <code>*</code> (very common in &quot;standard comments&quot;.</li>
<li>Included comments <em>should</em> have HTML controls (e.g.: <code>&lt;br/&gt;</code> for line termination) because Markdown constructs (&quot;double newline&quot;, in the above case) are <strong>not</strong>recognized.</li>
</ul>
<p>In retrospect I think &quot;Note&quot; in Doxygen <code>\snippet['{'option'}'] &lt;file-name&gt; ( block_id )</code> documentation addresses, more or less all the above, but I find it very cryptic and I would never have understood the implications without my nose being rubbed into them.</p>
<p>The last one is very annoying because I use a lot Lists and Tables and while HTML syntax is much more powerful, it is also much more difficult to write and to read in sources.</p>
<p>Finding a way to lift this limitation would be &quot;very nice&quot;.</p>
",<doxygen><specifications><requirements>,2022-05-27 12:38:55,187,3,1,72408368,"<p>With the following code and the current doxygen version (1.9.4 (5d15657a55555e6181a7830a5c723af75e7577e2)) but also with the 1.9.1 (ef9b20ac7f8a8621fcfc299f8bd0b80422390f4b) version, I get good result:</p>
<p><strong>bb.h</strong></p>
<pre><code>/// \file

/**
@page __init Initialization
@snippet{doc} CommandHandler.c AM_init
*/
</code></pre>
<p><strong>CommandHandler.c</strong></p>
<pre><code>/// \file

/**
 * Initialization function.
 */

/* [AM_init]
   It needs to do a long series of tests to ensure AM can actually work.&lt;br&gt;

   It should also allocate all dynamic memory needed to avoid runtime failures.&lt;br&gt;

   It will be responsibility of system-level daemon to take appropriate action.&lt;br&gt;
   [AM_init]
 */
/**
 * \snippet{doc} this AM_init
 *
 * @param ip_addr
 * @param port
 * @return
 */
static uint32_t AM_init(const char* ip_addr, uint16_t port){}
</code></pre>
<p><strong>Doxyfile</strong></p>
<pre><code>EXTRACT_STATIC = YES
EXAMPLE_PATH = .
QUIET = YES
</code></pre>
<p>Note: OP rightfully mentioned in <strong>further update</strong> that there are some things to take care of:</p>
<ul>
<li>Included snippet ([AM_init]) must be in a standard comment, not a doxygen one, otherwise snippet ends up included twice.</li>
<li>Included snippet must not have leading * (very common in &quot;standard comments&quot;.</li>
<li>Included comments should have HTML controls (e.g.: <br/> for line termination) because Markdown constructs (&quot;double newline&quot;, in the above case) are <strong>not</strong> recognized.</li>
</ul>
",2022-05,i have a fair understanding of both how to document code and how to write generic documentation using mainpage page subpage and related tags i would need to include requirements specification documentation for the code my problem is to keep this kind of documentation conceptually distinct from code documentation close to code implementing functionality i e at least in the same file sometimes even near specific classes functions methods but still be able to collect it in an orderly fashion and present it in the mainpage outside file class hierarchy what i would ideally need is to be able to place specific page section subsection etc randomly in the various source files and then be able to include them in a specific order into mainpage or some other subpage even better would be to be able to include the same snippet in both class function full doc not brief of course and in the front matter linked in mainpage global effect i need to have is to have a specification document where i detail what the various parts of the code need to implement and then the normal class function whatever documentation doxygen id very good at providing the catch i e what i don t know how to do is i would like to keep specification and implementation together in the source but separate them in documentation i e general description easy this goes into mainpage requirements most likely at top of source file implementing them how do i link include in main page specification either right after requirements at top of file or somewhere near class function implementing it also here i don t know how to link include in front matter aka mainpage normal code documentation here only thing i don t know is how include in class function description the same doc snippet already used for   and   is this possible if so what s the best practice note i could get the effect using a separate file for each doc snippet and then includeing it in the right places but that would defeat the whole purpose that s keep requirements specification code together while separating them in different sections in the resulting documentation update following albert comment i tried the following in a standard doxygen comment i added markers initialization function am_init it needs to do a long series of tests to ensure am can actually work it should also allocate all dynamic memory needed to avoid runtime failures it will be responsibility of system level daemon to take appropriate action am_init param ip_addr param port return static uint _t am_init const char ip_addr uint _t port in the front matter definition i have among other things page __init initialization snippet doc commandhandler c am_init the function documentation is rendered correctly i e the markers are removed otoh the initialization page is somewhat incomplete initialization it needs to do a long series of tests to ensure am can actually work that s it apparently the tag is found but only the first line is actually included further update following albert answer accepted i had success but the following caveats included snippet am_init must be in a standard comment not a doxygen one otherwise snippet ends up included twice included snippet must not have leading very common in standard comments included comments should have html controls e g br for line termination because markdown constructs double newline in the above case are notrecognized in retrospect i think note in doxygen snippet option file name block_id documentation addresses more or less all the above but i find it very cryptic and i would never have understood the implications without my nose being rubbed into them the last one is very annoying because i use a lot lists and tables and while html syntax is much more powerful it is also much more difficult to write and to read in sources finding a way to lift this limitation would be very nice,with the following code and the current doxygen version        d a e a a c af e e  but also with the       ef b ac f a fcfc f bd b f b version i get good result bb h file page __init initialization snippet doc commandhandler c am_init commandhandler c file initialization function am_init it needs to do a long series of tests to ensure am can actually work br it should also allocate all dynamic memory needed to avoid runtime failures br it will be responsibility of system level daemon to take appropriate action br am_init snippet doc this am_init param ip_addr param port return static uint _t am_init const char ip_addr uint _t port doxyfile extract_static yes example_path quiet yes note op rightfully mentioned in further update that there are some things to take care of included snippet am_init must be in a standard comment not a doxygen one otherwise snippet ends up included twice included snippet must not have leading very common in standard comments included comments should have html controls e g for line termination because markdown constructs double newline in the above case are not recognized,"['doxygen', 'specifications', 'requirements']","['i', 'have', 'a', 'fair', 'understanding', 'of', 'both', 'how', 'to', 'document', 'code', 'and', 'how', 'to', 'write', 'generic', 'documentation', 'using', 'mainpage', 'page', 'subpage', 'and', 'related', 'tags', 'i', 'would', 'need', 'to', 'include', 'requirements', 'specification', 'documentation', 'for', 'the', 'code', 'my', 'problem', 'is', 'to', 'keep', 'this', 'kind', 'of', 'documentation', 'conceptually', 'distinct', 'from', 'code', 'documentation', 'close', 'to', 'code', 'implementing', 'functionality', 'i', 'e', 'at', 'least', 'in', 'the', 'same', 'file', 'sometimes', 'even', 'near', 'specific', 'classes', 'functions', 'methods', 'but', 'still', 'be', 'able', 'to', 'collect', 'it', 'in', 'an', 'orderly', 'fashion', 'and', 'present', 'it', 'in', 'the', 'mainpage', 'outside', 'file', 'class', 'hierarchy', 'what', 'i', 'would', 'ideally', 'need', 'is', 'to', 'be', 'able', 'to', 'place', 'specific', 'page', 'section', 'subsection', 'etc', 'randomly', 'in', 'the', 'various', 'source', 'files', 'and', 'then', 'be', 'able', 'to', 'include', 'them', 'in', 'a', 'specific', 'order', 'into', 'mainpage', 'or', 'some', 'other', 'subpage', 'even', 'better', 'would', 'be', 'to', 'be', 'able', 'to', 'include', 'the', 'same', 'snippet', 'in', 'both', 'class', 'function', 'full', 'doc', 'not', 'brief', 'of', 'course', 'and', 'in', 'the', 'front', 'matter', 'linked', 'in', 'mainpage', 'global', 'effect', 'i', 'need', 'to', 'have', 'is', 'to', 'have', 'a', 'specification', 'document', 'where', 'i', 'detail', 'what', 'the', 'various', 'parts', 'of', 'the', 'code', 'need', 'to', 'implement', 'and', 'then', 'the', 'normal', 'class', 'function', 'whatever', 'documentation', 'doxygen', 'id', 'very', 'good', 'at', 'providing', 'the', 'catch', 'i', 'e', 'what', 'i', 'don', 't', 'know', 'how', 'to', 'do', 'is', 'i', 'would', 'like', 'to', 'keep', 'specification', 'and', 'implementation', 'together', 'in', 'the', 'source', 'but', 'separate', 'them', 'in', 'documentation', 'i', 'e', 'general', 'description', 'easy', 'this', 'goes', 'into', 'mainpage', 'requirements', 'most', 'likely', 'at', 'top', 'of', 'source', 'file', 'implementing', 'them', 'how', 'do', 'i', 'link', 'include', 'in', 'main', 'page', 'specification', 'either', 'right', 'after', 'requirements', 'at', 'top', 'of', 'file', 'or', 'somewhere', 'near', 'class', 'function', 'implementing', 'it', 'also', 'here', 'i', 'don', 't', 'know', 'how', 'to', 'link', 'include', 'in', 'front', 'matter', 'aka', 'mainpage', 'normal', 'code', 'documentation', 'here', 'only', 'thing', 'i', 'don', 't', 'know', 'is', 'how', 'include', 'in', 'class', 'function', 'description', 'the', 'same', 'doc', 'snippet', 'already', 'used', 'for', 'and', 'is', 'this', 'possible', 'if', 'so', 'what', 's', 'the', 'best', 'practice', 'note', 'i', 'could', 'get', 'the', 'effect', 'using', 'a', 'separate', 'file', 'for', 'each', 'doc', 'snippet', 'and', 'then', 'includeing', 'it', 'in', 'the', 'right', 'places', 'but', 'that', 'would', 'defeat', 'the', 'whole', 'purpose', 'that', 's', 'keep', 'requirements', 'specification', 'code', 'together', 'while', 'separating', 'them', 'in', 'different', 'sections', 'in', 'the', 'resulting', 'documentation', 'update', 'following', 'albert', 'comment', 'i', 'tried', 'the', 'following', 'in', 'a', 'standard', 'doxygen', 'comment', 'i', 'added', 'markers', 'initialization', 'function', 'am_init', 'it', 'needs', 'to', 'do', 'a', 'long', 'series', 'of', 'tests', 'to', 'ensure', 'am', 'can', 'actually', 'work', 'it', 'should', 'also', 'allocate', 'all', 'dynamic', 'memory', 'needed', 'to', 'avoid', 'runtime', 'failures', 'it', 'will', 'be', 'responsibility', 'of', 'system', 'level', 'daemon', 'to', 'take', 'appropriate', 'action', 'am_init', 'param', 'ip_addr', 'param', 'port', 'return', 'static', 'uint', '_t', 'am_init', 'const', 'char', 'ip_addr', 'uint', '_t', 'port', 'in', 'the', 'front', 'matter', 'definition', 'i', 'have', 'among', 'other', 'things', 'page', '__init', 'initialization', 'snippet', 'doc', 'commandhandler', 'c', 'am_init', 'the', 'function', 'documentation', 'is', 'rendered', 'correctly', 'i', 'e', 'the', 'markers', 'are', 'removed', 'otoh', 'the', 'initialization', 'page', 'is', 'somewhat', 'incomplete', 'initialization', 'it', 'needs', 'to', 'do', 'a', 'long', 'series', 'of', 'tests', 'to', 'ensure', 'am', 'can', 'actually', 'work', 'that', 's', 'it', 'apparently', 'the', 'tag', 'is', 'found', 'but', 'only', 'the', 'first', 'line', 'is', 'actually', 'included', 'further', 'update', 'following', 'albert', 'answer', 'accepted', 'i', 'had', 'success', 'but', 'the', 'following', 'caveats', 'included', 'snippet', 'am_init', 'must', 'be', 'in', 'a', 'standard', 'comment', 'not', 'a', 'doxygen', 'one', 'otherwise', 'snippet', 'ends', 'up', 'included', 'twice', 'included', 'snippet', 'must', 'not', 'have', 'leading', 'very', 'common', 'in', 'standard', 'comments', 'included', 'comments', 'should', 'have', 'html', 'controls', 'e', 'g', 'br', 'for', 'line', 'termination', 'because', 'markdown', 'constructs', 'double', 'newline', 'in', 'the', 'above', 'case', 'are', 'notrecognized', 'in', 'retrospect', 'i', 'think', 'note', 'in', 'doxygen', 'snippet', 'option', 'file', 'name', 'block_id', 'documentation', 'addresses', 'more', 'or', 'less', 'all', 'the', 'above', 'but', 'i', 'find', 'it', 'very', 'cryptic', 'and', 'i', 'would', 'never', 'have', 'understood', 'the', 'implications', 'without', 'my', 'nose', 'being', 'rubbed', 'into', 'them', 'the', 'last', 'one', 'is', 'very', 'annoying', 'because', 'i', 'use', 'a', 'lot', 'lists', 'and', 'tables', 'and', 'while', 'html', 'syntax', 'is', 'much', 'more', 'powerful', 'it', 'is', 'also', 'much', 'more', 'difficult', 'to', 'write', 'and', 'to', 'read', 'in', 'sources', 'finding', 'a', 'way', 'to', 'lift', 'this', 'limitation', 'would', 'be', 'very', 'nice']","['with', 'the', 'following', 'code', 'and', 'the', 'current', 'doxygen', 'version', 'd', 'a', 'e', 'a', 'a', 'c', 'af', 'e', 'e', 'but', 'also', 'with', 'the', 'ef', 'b', 'ac', 'f', 'a', 'fcfc', 'f', 'bd', 'b', 'f', 'b', 'version', 'i', 'get', 'good', 'result', 'bb', 'h', 'file', 'page', '__init', 'initialization', 'snippet', 'doc', 'commandhandler', 'c', 'am_init', 'commandhandler', 'c', 'file', 'initialization', 'function', 'am_init', 'it', 'needs', 'to', 'do', 'a', 'long', 'series', 'of', 'tests', 'to', 'ensure', 'am', 'can', 'actually', 'work', 'br', 'it', 'should', 'also', 'allocate', 'all', 'dynamic', 'memory', 'needed', 'to', 'avoid', 'runtime', 'failures', 'br', 'it', 'will', 'be', 'responsibility', 'of', 'system', 'level', 'daemon', 'to', 'take', 'appropriate', 'action', 'br', 'am_init', 'snippet', 'doc', 'this', 'am_init', 'param', 'ip_addr', 'param', 'port', 'return', 'static', 'uint', '_t', 'am_init', 'const', 'char', 'ip_addr', 'uint', '_t', 'port', 'doxyfile', 'extract_static', 'yes', 'example_path', 'quiet', 'yes', 'note', 'op', 'rightfully', 'mentioned', 'in', 'further', 'update', 'that', 'there', 'are', 'some', 'things', 'to', 'take', 'care', 'of', 'included', 'snippet', 'am_init', 'must', 'be', 'in', 'a', 'standard', 'comment', 'not', 'a', 'doxygen', 'one', 'otherwise', 'snippet', 'ends', 'up', 'included', 'twice', 'included', 'snippet', 'must', 'not', 'have', 'leading', 'very', 'common', 'in', 'standard', 'comments', 'included', 'comments', 'should', 'have', 'html', 'controls', 'e', 'g', 'for', 'line', 'termination', 'because', 'markdown', 'constructs', 'double', 'newline', 'in', 'the', 'above', 'case', 'are', 'not', 'recognized']","['fair', 'understanding', 'document', 'code', 'write', 'generic', 'documentation', 'using', 'mainpage', 'page', 'subpage', 'related', 'tag', 'would', 'need', 'include', 'requirement', 'specification', 'documentation', 'code', 'problem', 'keep', 'kind', 'documentation', 'conceptually', 'distinct', 'code', 'documentation', 'close', 'code', 'implementing', 'functionality', 'e', 'least', 'file', 'sometimes', 'even', 'near', 'specific', 'class', 'function', 'method', 'still', 'able', 'collect', 'orderly', 'fashion', 'present', 'mainpage', 'outside', 'file', 'class', 'hierarchy', 'would', 'ideally', 'need', 'able', 'place', 'specific', 'page', 'section', 'subsection', 'etc', 'randomly', 'various', 'source', 'file', 'able', 'include', 'specific', 'order', 'mainpage', 'subpage', 'even', 'better', 'would', 'able', 'include', 'snippet', 'class', 'function', 'full', 'doc', 'brief', 'course', 'front', 'matter', 'linked', 'mainpage', 'global', 'effect', 'need', 'specification', 'document', 'detail', 'various', 'part', 'code', 'need', 'implement', 'normal', 'class', 'function', 'whatever', 'documentation', 'doxygen', 'id', 'good', 'providing', 'catch', 'e', 'know', 'would', 'like', 'keep', 'specification', 'implementation', 'together', 'source', 'separate', 'documentation', 'e', 'general', 'description', 'easy', 'go', 'mainpage', 'requirement', 'likely', 'top', 'source', 'file', 'implementing', 'link', 'include', 'main', 'page', 'specification', 'either', 'right', 'requirement', 'top', 'file', 'somewhere', 'near', 'class', 'function', 'implementing', 'also', 'know', 'link', 'include', 'front', 'matter', 'aka', 'mainpage', 'normal', 'code', 'documentation', 'thing', 'know', 'include', 'class', 'function', 'description', 'doc', 'snippet', 'already', 'used', 'possible', 'best', 'practice', 'note', 'could', 'get', 'effect', 'using', 'separate', 'file', 'doc', 'snippet', 'includeing', 'right', 'place', 'would', 'defeat', 'whole', 'purpose', 'keep', 'requirement', 'specification', 'code', 'together', 'separating', 'different', 'section', 'resulting', 'documentation', 'update', 'following', 'albert', 'comment', 'tried', 'following', 'standard', 'doxygen', 'comment', 'added', 'marker', 'initialization', 'function', 'am_init', 'need', 'long', 'series', 'test', 'ensure', 'actually', 'work', 'also', 'allocate', 'dynamic', 'memory', 'needed', 'avoid', 'runtime', 'failure', 'responsibility', 'system', 'level', 'daemon', 'take', 'appropriate', 'action', 'am_init', 'param', 'ip_addr', 'param', 'port', 'return', 'static', 'uint', '_t', 'am_init', 'const', 'char', 'ip_addr', 'uint', '_t', 'port', 'front', 'matter', 'definition', 'among', 'thing', 'page', '__init', 'initialization', 'snippet', 'doc', 'commandhandler', 'c', 'am_init', 'function', 'documentation', 'rendered', 'correctly', 'e', 'marker', 'removed', 'otoh', 'initialization', 'page', 'somewhat', 'incomplete', 'initialization', 'need', 'long', 'series', 'test', 'ensure', 'actually', 'work', 'apparently', 'tag', 'found', 'first', 'line', 'actually', 'included', 'update', 'following', 'albert', 'answer', 'accepted', 'success', 'following', 'caveat', 'included', 'snippet', 'am_init', 'must', 'standard', 'comment', 'doxygen', 'one', 'otherwise', 'snippet', 'end', 'included', 'twice', 'included', 'snippet', 'must', 'leading', 'common', 'standard', 'comment', 'included', 'comment', 'html', 'control', 'e', 'g', 'br', 'line', 'termination', 'markdown', 'construct', 'double', 'newline', 'case', 'notrecognized', 'retrospect', 'think', 'note', 'doxygen', 'snippet', 'option', 'file', 'name', 'block_id', 'documentation', 'address', 'le', 'find', 'cryptic', 'would', 'never', 'understood', 'implication', 'without', 'nose', 'rubbed', 'last', 'one', 'annoying', 'use', 'lot', 'list', 'table', 'html', 'syntax', 'much', 'powerful', 'also', 'much', 'difficult', 'write', 'read', 'source', 'finding', 'way', 'lift', 'limitation', 'would', 'nice']","['with', 'the', 'following', 'code', 'and', 'the', 'current', 'doxygen', 'version', 'd', 'a', 'e', 'a', 'a', 'c', 'af', 'e', 'e', 'but', 'also', 'with', 'the', 'ef', 'b', 'ac', 'f', 'a', 'fcfc', 'f', 'bd', 'b', 'f', 'b', 'version', 'i', 'get', 'good', 'result', 'bb', 'h', 'file', 'page', '__init', 'initialization', 'snippet', 'doc', 'commandhandler', 'c', 'am_init', 'commandhandler', 'c', 'file', 'initialization', 'function', 'am_init', 'it', 'need', 'to', 'do', 'a', 'long', 'series', 'of', 'test', 'to', 'ensure', 'am', 'can', 'actually', 'work', 'br', 'it', 'should', 'also', 'allocate', 'all', 'dynamic', 'memory', 'needed', 'to', 'avoid', 'runtime', 'failure', 'br', 'it', 'will', 'be', 'responsibility', 'of', 'system', 'level', 'daemon', 'to', 'take', 'appropriate', 'action', 'br', 'am_init', 'snippet', 'doc', 'this', 'am_init', 'param', 'ip_addr', 'param', 'port', 'return', 'static', 'uint', '_t', 'am_init', 'const', 'char', 'ip_addr', 'uint', '_t', 'port', 'doxyfile', 'extract_static', 'yes', 'example_path', 'quiet', 'yes', 'note', 'op', 'rightfully', 'mentioned', 'in', 'further', 'update', 'that', 'there', 'are', 'some', 'thing', 'to', 'take', 'care', 'of', 'included', 'snippet', 'am_init', 'must', 'be', 'in', 'a', 'standard', 'comment', 'not', 'a', 'doxygen', 'one', 'otherwise', 'snippet', 'end', 'up', 'included', 'twice', 'included', 'snippet', 'must', 'not', 'have', 'leading', 'very', 'common', 'in', 'standard', 'comment', 'included', 'comment', 'should', 'have', 'html', 'control', 'e', 'g', 'for', 'line', 'termination', 'because', 'markdown', 'construct', 'double', 'newline', 'in', 'the', 'above', 'case', 'are', 'not', 'recognized']",System Requirements and AWS,0,"{'neg': 0.035, 'neu': 0.889, 'pos': 0.076, 'compound': 0.9839}",0.15845238095238096,0,System Requirements and AWS,3query
72361611,Anaconda3 - cp1251.py: 'charmap' codec can't decode byte 0x98 in position 1130: character maps to <undefined>,"<p>I'm trying to install packages from requirements.txt with PIP inside a PIP created environment for YOLOv5 and stumble upon this message.</p>
<pre><code>&gt; File &quot;C:\Users\username\anaconda3\lib\encodings\cp1251.py&quot;, line 23, in decode
&gt;     return codecs.charmap_decode(input,self.errors,decoding_table)[0] UnicodeDecodeError: 'charmap' codec can't decode byte 0x98 in position
&gt; 1130: character maps to &lt;undefined&gt;
</code></pre>
<p>Also this message erupts when trying to update PIP.</p>
",<python><pip><anaconda><conda><requirements>,2022-05-24 10:53:27,437,1,1,72361612,"<p>Desperately deleting cp1251.py file in the directory I solved the problem.</p>
<p>Can somebody clarify why this worked ?</p>
",2022-05,i m trying to install packages from requirements txt with pip inside a pip created environment for yolov  and stumble upon this message file c users username anaconda  lib encodings cp  py line   in decode return codecs charmap_decode input self errors decoding_table   unicodedecodeerror charmap codec can t decode byte  x  in position   character maps to undefined also this message erupts when trying to update pip,desperately deleting cp  py file in the directory i solved the problem can somebody clarify why this worked,"['python', 'pip', 'anaconda', 'conda', 'requirements']","['i', 'm', 'trying', 'to', 'install', 'packages', 'from', 'requirements', 'txt', 'with', 'pip', 'inside', 'a', 'pip', 'created', 'environment', 'for', 'yolov', 'and', 'stumble', 'upon', 'this', 'message', 'file', 'c', 'users', 'username', 'anaconda', 'lib', 'encodings', 'cp', 'py', 'line', 'in', 'decode', 'return', 'codecs', 'charmap_decode', 'input', 'self', 'errors', 'decoding_table', 'unicodedecodeerror', 'charmap', 'codec', 'can', 't', 'decode', 'byte', 'x', 'in', 'position', 'character', 'maps', 'to', 'undefined', 'also', 'this', 'message', 'erupts', 'when', 'trying', 'to', 'update', 'pip']","['desperately', 'deleting', 'cp', 'py', 'file', 'in', 'the', 'directory', 'i', 'solved', 'the', 'problem', 'can', 'somebody', 'clarify', 'why', 'this', 'worked']","['trying', 'install', 'package', 'requirement', 'txt', 'pip', 'inside', 'pip', 'created', 'environment', 'yolov', 'stumble', 'upon', 'message', 'file', 'c', 'user', 'username', 'anaconda', 'lib', 'encoding', 'cp', 'py', 'line', 'decode', 'return', 'codecs', 'charmap_decode', 'input', 'self', 'error', 'decoding_table', 'unicodedecodeerror', 'charmap', 'codec', 'decode', 'byte', 'x', 'position', 'character', 'map', 'undefined', 'also', 'message', 'erupts', 'trying', 'update', 'pip']","['desperately', 'deleting', 'cp', 'py', 'file', 'in', 'the', 'directory', 'i', 'solved', 'the', 'problem', 'can', 'somebody', 'clarify', 'why', 'this', 'worked']",Package Management and File Handling,3,"{'neg': 0.0, 'neu': 0.964, 'pos': 0.036, 'compound': 0.25}",-0.05,3,Python Package Installation and Management,3query
72258237,Why do we differentiate between functional and non functional requirements,"<p>I understand the <a href=""https://stackoverflow.com/questions/16475979/what-is-the-difference-between-functional-and-non-functional-requirements"">difference</a> between functional and non functional requirements.</p>
<ul>
<li><p>What I never understood is, why do we make this differentiation?</p>
</li>
<li><p>(Rephrased) When I design a solution, why is it useful to distinguish between these two?</p>
</li>
</ul>
",<architecture><requirements>,2022-05-16 11:08:23,128,1,1,72258825,"<p>They are usually raised by different stakeholders. The quality attributes (what you called non-functionals) are mostly raised by the technology people and are somehow assumed by business owners</p>
",2022-05,i understand the difference between functional and non functional requirements what i never understood is why do we make this differentiation rephrased when i design a solution why is it useful to distinguish between these two,they are usually raised by different stakeholders the quality attributes what you called non functionals are mostly raised by the technology people and are somehow assumed by business owners,"['architecture', 'requirements']","['i', 'understand', 'the', 'difference', 'between', 'functional', 'and', 'non', 'functional', 'requirements', 'what', 'i', 'never', 'understood', 'is', 'why', 'do', 'we', 'make', 'this', 'differentiation', 'rephrased', 'when', 'i', 'design', 'a', 'solution', 'why', 'is', 'it', 'useful', 'to', 'distinguish', 'between', 'these', 'two']","['they', 'are', 'usually', 'raised', 'by', 'different', 'stakeholders', 'the', 'quality', 'attributes', 'what', 'you', 'called', 'non', 'functionals', 'are', 'mostly', 'raised', 'by', 'the', 'technology', 'people', 'and', 'are', 'somehow', 'assumed', 'by', 'business', 'owners']","['understand', 'difference', 'functional', 'non', 'functional', 'requirement', 'never', 'understood', 'make', 'differentiation', 'rephrased', 'design', 'solution', 'useful', 'distinguish', 'two']","['they', 'are', 'usually', 'raised', 'by', 'different', 'stakeholder', 'the', 'quality', 'attribute', 'what', 'you', 'called', 'non', 'functionals', 'are', 'mostly', 'raised', 'by', 'the', 'technology', 'people', 'and', 'are', 'somehow', 'assumed', 'by', 'business', 'owner']",Python Libraries and Environment,2,"{'neg': 0.0, 'neu': 0.866, 'pos': 0.134, 'compound': 0.6767}",0.3,2,Python Libraries and Environment,3query
72226418,Regex to match code with fixed country code and variable wildcard usage,"<p>I need to implement a regex which cover several requirements. These are the following:</p>
<ul>
<li>A length restriction to <strong>max 8 chars</strong> should be done (with or
without wildcard). In any case the code is never longer than 8 chars.</li>
<li>When wildcard is given also lower then 8 digits is allowed. Without
wildcard exactly 8 digits are needed.</li>
<li>allowed characters are: <strong>0-9A-Za-z</strong>* (all digits, all chars, asterix as wildcard)</li>
<li>pure wildcard must be possible</li>
<li>else the first two digits <strong>must contain a 2 chars</strong> country code
(alpha-numeric) and then <strong>only</strong> number or wildcards are allowed.</li>
<li>after country code wildcard can be used at any place (in the middle, at the end, mutliple asterix/wildcards after each other also allowed)</li>
</ul>
<p>I tried many things so far and thought about Lookahead/Lookbehind because of the asterix and the max. length.
My latest state which covers the most of the requirements is the following:</p>
<pre><code>^([A-Za-z]{2}[0-9*]{0,6}|\*)$
</code></pre>
<p>check the <a href=""https://regex101.com/r/L6HaDG/1"" rel=""nofollow noreferrer"">live demo with right/wrong combo</a></p>
<p>But in this example a code without asterix/wildcard is possible with less than 8 chars -&gt; that's wrong.</p>
<p>Thanks a lot for any help in advance :)</p>
",<regex><expression><wildcard><maxlength><requirements>,2022-05-13 08:15:59,85,1,1,72226960,"<p>You can use</p>
<pre class=""lang-none prettyprint-override""><code>^(?!.*\*\*$)(?!.{9})(?:[A-Za-z]{2}(?:\d*(?:\*\d*)+|\d{6})|\*)$
</code></pre>
<p>See the <a href=""https://regex101.com/r/L6HaDG/2"" rel=""nofollow noreferrer"">regex demo</a>.</p>
<p><em>Details</em>:</p>
<ul>
<li><code>^</code> - start of string</li>
<li><code>(?!.*\*\*$)</code> - no two <code>**</code> at the end of string allowed</li>
<li><code>(?!.{9})</code> - the string must contain less than 9 chars other than line break chars</li>
<li><code>(?:[A-Za-z]{2}(?:\d*(?:\*\d*)+|\d{6})|\*)</code> - one of the two alternatives:
<ul>
<li><code>[A-Za-z]{2}(?:\d*(?:\*\d*)+|\d{6})</code> - two letters and then  either  six digits or zero or more digits followed with one or more sequences of an asterisk and zero or more digits</li>
<li><code>|</code>  - or</li>
<li><code>\*</code> - an asterisk</li>
</ul>
</li>
<li><code>$</code> - end of string.</li>
</ul>
",2022-05,i need to implement a regex which cover several requirements these are the following a length restriction to max   chars should be done with or without wildcard in any case the code is never longer than   chars when wildcard is given also lower then   digits is allowed without wildcard exactly   digits are needed allowed characters are    a za z all digits all chars asterix as wildcard pure wildcard must be possible else the first two digits must contain a   chars country code alpha numeric and then only number or wildcards are allowed after country code wildcard can be used at any place in the middle at the end mutliple asterix wildcards after each other also allowed i tried many things so far and thought about lookahead lookbehind because of the asterix and the max length my latest state which covers the most of the requirements is the following a za z           check the live demo with right wrong combo but in this example a code without asterix wildcard is possible with less than   chars that s wrong thanks a lot for any help in advance,you can use   a za z   d d d   see the regex demo details start of string no two at the end of string allowed   the string must contain less than   chars other than line break chars a za z   d d d   one of the two alternatives a za z   d d d   two letters and then either six digits or zero or more digits followed with one or more sequences of an asterisk and zero or more digits or an asterisk end of string,"['regex', 'expression', 'wildcard', 'maxlength', 'requirements']","['i', 'need', 'to', 'implement', 'a', 'regex', 'which', 'cover', 'several', 'requirements', 'these', 'are', 'the', 'following', 'a', 'length', 'restriction', 'to', 'max', 'chars', 'should', 'be', 'done', 'with', 'or', 'without', 'wildcard', 'in', 'any', 'case', 'the', 'code', 'is', 'never', 'longer', 'than', 'chars', 'when', 'wildcard', 'is', 'given', 'also', 'lower', 'then', 'digits', 'is', 'allowed', 'without', 'wildcard', 'exactly', 'digits', 'are', 'needed', 'allowed', 'characters', 'are', 'a', 'za', 'z', 'all', 'digits', 'all', 'chars', 'asterix', 'as', 'wildcard', 'pure', 'wildcard', 'must', 'be', 'possible', 'else', 'the', 'first', 'two', 'digits', 'must', 'contain', 'a', 'chars', 'country', 'code', 'alpha', 'numeric', 'and', 'then', 'only', 'number', 'or', 'wildcards', 'are', 'allowed', 'after', 'country', 'code', 'wildcard', 'can', 'be', 'used', 'at', 'any', 'place', 'in', 'the', 'middle', 'at', 'the', 'end', 'mutliple', 'asterix', 'wildcards', 'after', 'each', 'other', 'also', 'allowed', 'i', 'tried', 'many', 'things', 'so', 'far', 'and', 'thought', 'about', 'lookahead', 'lookbehind', 'because', 'of', 'the', 'asterix', 'and', 'the', 'max', 'length', 'my', 'latest', 'state', 'which', 'covers', 'the', 'most', 'of', 'the', 'requirements', 'is', 'the', 'following', 'a', 'za', 'z', 'check', 'the', 'live', 'demo', 'with', 'right', 'wrong', 'combo', 'but', 'in', 'this', 'example', 'a', 'code', 'without', 'asterix', 'wildcard', 'is', 'possible', 'with', 'less', 'than', 'chars', 'that', 's', 'wrong', 'thanks', 'a', 'lot', 'for', 'any', 'help', 'in', 'advance']","['you', 'can', 'use', 'a', 'za', 'z', 'd', 'd', 'd', 'see', 'the', 'regex', 'demo', 'details', 'start', 'of', 'string', 'no', 'two', 'at', 'the', 'end', 'of', 'string', 'allowed', 'the', 'string', 'must', 'contain', 'less', 'than', 'chars', 'other', 'than', 'line', 'break', 'chars', 'a', 'za', 'z', 'd', 'd', 'd', 'one', 'of', 'the', 'two', 'alternatives', 'a', 'za', 'z', 'd', 'd', 'd', 'two', 'letters', 'and', 'then', 'either', 'six', 'digits', 'or', 'zero', 'or', 'more', 'digits', 'followed', 'with', 'one', 'or', 'more', 'sequences', 'of', 'an', 'asterisk', 'and', 'zero', 'or', 'more', 'digits', 'or', 'an', 'asterisk', 'end', 'of', 'string']","['need', 'implement', 'regex', 'cover', 'several', 'requirement', 'following', 'length', 'restriction', 'max', 'char', 'done', 'without', 'wildcard', 'case', 'code', 'never', 'longer', 'char', 'wildcard', 'given', 'also', 'lower', 'digit', 'allowed', 'without', 'wildcard', 'exactly', 'digit', 'needed', 'allowed', 'character', 'za', 'z', 'digit', 'char', 'asterix', 'wildcard', 'pure', 'wildcard', 'must', 'possible', 'else', 'first', 'two', 'digit', 'must', 'contain', 'char', 'country', 'code', 'alpha', 'numeric', 'number', 'wildcards', 'allowed', 'country', 'code', 'wildcard', 'used', 'place', 'middle', 'end', 'mutliple', 'asterix', 'wildcards', 'also', 'allowed', 'tried', 'many', 'thing', 'far', 'thought', 'lookahead', 'lookbehind', 'asterix', 'max', 'length', 'latest', 'state', 'cover', 'requirement', 'following', 'za', 'z', 'check', 'live', 'demo', 'right', 'wrong', 'combo', 'example', 'code', 'without', 'asterix', 'wildcard', 'possible', 'le', 'char', 'wrong', 'thanks', 'lot', 'help', 'advance']","['you', 'can', 'use', 'a', 'za', 'z', 'd', 'd', 'd', 'see', 'the', 'regex', 'demo', 'detail', 'start', 'of', 'string', 'no', 'two', 'at', 'the', 'end', 'of', 'string', 'allowed', 'the', 'string', 'must', 'contain', 'le', 'than', 'char', 'other', 'than', 'line', 'break', 'char', 'a', 'za', 'z', 'd', 'd', 'd', 'one', 'of', 'the', 'two', 'alternative', 'a', 'za', 'z', 'd', 'd', 'd', 'two', 'letter', 'and', 'then', 'either', 'six', 'digit', 'or', 'zero', 'or', 'more', 'digit', 'followed', 'with', 'one', 'or', 'more', 'sequence', 'of', 'an', 'asterisk', 'and', 'zero', 'or', 'more', 'digit', 'or', 'an', 'asterisk', 'end', 'of', 'string']",System Requirements and AWS,1,"{'neg': 0.023, 'neu': 0.955, 'pos': 0.022, 'compound': -0.0772}",0.19679487179487182,1,Package Management and File Handling,3query
72218694,"pip-compile error using Anaconda - File ""/opt/anaconda3/bin/pip-compile"", line 8, in <module> sys.exit(cli())","<p>My pip version is 22.0.4. I had the most recent version but had to downgrad because I noticed the same error mentioned here: <a href=""https://github.com/jazzband/pip-tools/issues/1617"" rel=""nofollow noreferrer"">https://github.com/jazzband/pip-tools/issues/1617</a>)</p>
<p>When I try to run pip-compile to update the requirements.txt file but I keep seeing the below error:</p>
<pre><code>(base) krs@me-user ds-airflow % pip-compile
WARNING:pip._internal.metadata.base:Ignoring invalid distribution -rllib3 (/opt/anaconda3/lib/python3.8/site-packages)
WARNING:pip._internal.metadata.base:Ignoring invalid distribution -otocore (/opt/anaconda3/lib/python3.8/site-packages)
WARNING:pip._internal.metadata.base:Ignoring invalid distribution -ix (/opt/anaconda3/lib/python3.8/site-packages)
WARNING:pip._internal.metadata.base:Ignoring invalid distribution - (/opt/anaconda3/lib/python3.8/site-packages)
Traceback (most recent call last):
  File &quot;/opt/anaconda3/bin/pip-compile&quot;, line 8, in &lt;module&gt;
    sys.exit(cli())
  File &quot;/opt/anaconda3/lib/python3.8/site-packages/click/core.py&quot;, line 829, in __call__
    return self.main(*args, **kwargs)
  File &quot;/opt/anaconda3/lib/python3.8/site-packages/click/core.py&quot;, line 782, in main
    rv = self.invoke(ctx)
  File &quot;/opt/anaconda3/lib/python3.8/site-packages/click/core.py&quot;, line 1066, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File &quot;/opt/anaconda3/lib/python3.8/site-packages/click/core.py&quot;, line 610, in invoke
    return callback(*args, **kwargs)
  File &quot;/opt/anaconda3/lib/python3.8/site-packages/click/decorators.py&quot;, line 21, in new_func
    return f(get_current_context(), *args, **kwargs)
  File &quot;/opt/anaconda3/lib/python3.8/site-packages/piptools/scripts/compile.py&quot;, line 313, in cli
    repository = PyPIRepository(pip_args, cache_dir=cache_dir)
  File &quot;/opt/anaconda3/lib/python3.8/site-packages/piptools/repositories/pypi.py&quot;, line 93, in __init__
    self._setup_logging()
  File &quot;/opt/anaconda3/lib/python3.8/site-packages/piptools/repositories/pypi.py&quot;, line 451, in _setup_logging
    assert isinstance(handler, logging.StreamHandler)
AssertionError
</code></pre>
<p>EDIT: I just tried running: <code>pip-compile --upgrade</code></p>
<pre><code>  File &quot;/opt/anaconda3/bin/pip-compile&quot;, line 8, in &lt;module&gt;
    sys.exit(cli())
  File &quot;/opt/anaconda3/lib/python3.8/subprocess.py&quot;, line 512, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['/opt/anaconda3/bin/python3', '/opt/anaconda3/lib/python3.8/site-packages/pep517/in_process/_in_process.py', 'get_requires_for_build_wheel', '/var/folders/2b/d94v_0s54rxfx2ylxg20xh5c0000gn/T/tmp2o517hrt']' returned non-zero exit status 1.
</code></pre>
<p>EDIT EDIT:
I've run <code>conda list '(pip|click)'</code> and see the following, but my requirements.txt file has hundreds of packages:</p>
<pre><code># packages in environment at /opt/anaconda3:
#
# Name                    Version                   Build  Channel
click                     7.1.1                    pypi_0    pypi
click-default-group       1.2.2                    pypi_0    pypi
clickclick                20.10.2                  pypi_0    pypi
pip                       20.2.4                   pypi_0    pypi
pip-tools                 6.6.0                    pypi_0    pypi
</code></pre>
",<python><pip><anaconda><conda><requirements>,2022-05-12 15:54:16,267,0,1,72232819,"<p>The version combination of <code>pip=20.2.4</code> and <code>pip-tools=6.6.0</code> is <a href=""https://pypi.org/project/pip-tools/#versions-and-compatibility"" rel=""nofollow noreferrer"">not compatible</a>. Either upgrade <code>pip</code> to <code>&gt;=21.2</code>, or downgrade <code>pip-tools</code> to 5.5.</p>
",2022-05,my pip version is       i had the most recent version but had to downgrad because i noticed the same error mentioned here https github com jazzband pip tools issues   when i try to run pip compile to update the requirements txt file but i keep seeing the below error base krs me user ds airflow pip compile warning pip _internal metadata base ignoring invalid distribution rllib  opt anaconda  lib python    site packages warning pip _internal metadata base ignoring invalid distribution otocore opt anaconda  lib python    site packages warning pip _internal metadata base ignoring invalid distribution ix opt anaconda  lib python    site packages warning pip _internal metadata base ignoring invalid distribution opt anaconda  lib python    site packages traceback most recent call last file opt anaconda  bin pip compile line   in module sys exit cli file opt anaconda  lib python    site packages click core py line   in __call__ return self main args kwargs file opt anaconda  lib python    site packages click core py line   in main rv self invoke ctx file opt anaconda  lib python    site packages click core py line   in invoke return ctx invoke self callback ctx params file opt anaconda  lib python    site packages click core py line   in invoke return callback args kwargs file opt anaconda  lib python    site packages click decorators py line   in new_func return f get_current_context args kwargs file opt anaconda  lib python    site packages piptools scripts compile py line   in cli repository pypirepository pip_args cache_dir cache_dir file opt anaconda  lib python    site packages piptools repositories pypi py line   in __init__ self _setup_logging file opt anaconda  lib python    site packages piptools repositories pypi py line   in _setup_logging assert isinstance handler logging streamhandler assertionerror edit i just tried running pip compile upgrade file opt anaconda  bin pip compile line   in module sys exit cli file opt anaconda  lib python    subprocess py line   in run raise calledprocesserror retcode process args subprocess calledprocesserror command opt anaconda  bin python  opt anaconda  lib python    site packages pep  in_process _in_process py get_requires_for_build_wheel var folders  b d v_ s rxfx ylxg xh c gn t tmp o hrt returned non zero exit status   edit edit i ve run conda list pip click and see the following but my requirements txt file has hundreds of packages packages in environment at opt anaconda  name version build channel click       pypi_  pypi click default group       pypi_  pypi clickclick       pypi_  pypi pip       pypi_  pypi pip tools       pypi_  pypi,the version combination of pip       and pip tools       is not compatible either upgrade pip to     or downgrade pip tools to,"['python', 'pip', 'anaconda', 'conda', 'requirements']","['my', 'pip', 'version', 'is', 'i', 'had', 'the', 'most', 'recent', 'version', 'but', 'had', 'to', 'downgrad', 'because', 'i', 'noticed', 'the', 'same', 'error', 'mentioned', 'here', 'https', 'github', 'com', 'jazzband', 'pip', 'tools', 'issues', 'when', 'i', 'try', 'to', 'run', 'pip', 'compile', 'to', 'update', 'the', 'requirements', 'txt', 'file', 'but', 'i', 'keep', 'seeing', 'the', 'below', 'error', 'base', 'krs', 'me', 'user', 'ds', 'airflow', 'pip', 'compile', 'warning', 'pip', '_internal', 'metadata', 'base', 'ignoring', 'invalid', 'distribution', 'rllib', 'opt', 'anaconda', 'lib', 'python', 'site', 'packages', 'warning', 'pip', '_internal', 'metadata', 'base', 'ignoring', 'invalid', 'distribution', 'otocore', 'opt', 'anaconda', 'lib', 'python', 'site', 'packages', 'warning', 'pip', '_internal', 'metadata', 'base', 'ignoring', 'invalid', 'distribution', 'ix', 'opt', 'anaconda', 'lib', 'python', 'site', 'packages', 'warning', 'pip', '_internal', 'metadata', 'base', 'ignoring', 'invalid', 'distribution', 'opt', 'anaconda', 'lib', 'python', 'site', 'packages', 'traceback', 'most', 'recent', 'call', 'last', 'file', 'opt', 'anaconda', 'bin', 'pip', 'compile', 'line', 'in', 'module', 'sys', 'exit', 'cli', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'packages', 'click', 'core', 'py', 'line', 'in', '__call__', 'return', 'self', 'main', 'args', 'kwargs', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'packages', 'click', 'core', 'py', 'line', 'in', 'main', 'rv', 'self', 'invoke', 'ctx', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'packages', 'click', 'core', 'py', 'line', 'in', 'invoke', 'return', 'ctx', 'invoke', 'self', 'callback', 'ctx', 'params', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'packages', 'click', 'core', 'py', 'line', 'in', 'invoke', 'return', 'callback', 'args', 'kwargs', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'packages', 'click', 'decorators', 'py', 'line', 'in', 'new_func', 'return', 'f', 'get_current_context', 'args', 'kwargs', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'packages', 'piptools', 'scripts', 'compile', 'py', 'line', 'in', 'cli', 'repository', 'pypirepository', 'pip_args', 'cache_dir', 'cache_dir', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'packages', 'piptools', 'repositories', 'pypi', 'py', 'line', 'in', '__init__', 'self', '_setup_logging', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'packages', 'piptools', 'repositories', 'pypi', 'py', 'line', 'in', '_setup_logging', 'assert', 'isinstance', 'handler', 'logging', 'streamhandler', 'assertionerror', 'edit', 'i', 'just', 'tried', 'running', 'pip', 'compile', 'upgrade', 'file', 'opt', 'anaconda', 'bin', 'pip', 'compile', 'line', 'in', 'module', 'sys', 'exit', 'cli', 'file', 'opt', 'anaconda', 'lib', 'python', 'subprocess', 'py', 'line', 'in', 'run', 'raise', 'calledprocesserror', 'retcode', 'process', 'args', 'subprocess', 'calledprocesserror', 'command', 'opt', 'anaconda', 'bin', 'python', 'opt', 'anaconda', 'lib', 'python', 'site', 'packages', 'pep', 'in_process', '_in_process', 'py', 'get_requires_for_build_wheel', 'var', 'folders', 'b', 'd', 'v_', 's', 'rxfx', 'ylxg', 'xh', 'c', 'gn', 't', 'tmp', 'o', 'hrt', 'returned', 'non', 'zero', 'exit', 'status', 'edit', 'edit', 'i', 've', 'run', 'conda', 'list', 'pip', 'click', 'and', 'see', 'the', 'following', 'but', 'my', 'requirements', 'txt', 'file', 'has', 'hundreds', 'of', 'packages', 'packages', 'in', 'environment', 'at', 'opt', 'anaconda', 'name', 'version', 'build', 'channel', 'click', 'pypi_', 'pypi', 'click', 'default', 'group', 'pypi_', 'pypi', 'clickclick', 'pypi_', 'pypi', 'pip', 'pypi_', 'pypi', 'pip', 'tools', 'pypi_', 'pypi']","['the', 'version', 'combination', 'of', 'pip', 'and', 'pip', 'tools', 'is', 'not', 'compatible', 'either', 'upgrade', 'pip', 'to', 'or', 'downgrade', 'pip', 'tools', 'to']","['pip', 'version', 'recent', 'version', 'downgrad', 'noticed', 'error', 'mentioned', 'http', 'github', 'com', 'jazzband', 'pip', 'tool', 'issue', 'try', 'run', 'pip', 'compile', 'update', 'requirement', 'txt', 'file', 'keep', 'seeing', 'error', 'base', 'kr', 'user', 'airflow', 'pip', 'compile', 'warning', 'pip', '_internal', 'metadata', 'base', 'ignoring', 'invalid', 'distribution', 'rllib', 'opt', 'anaconda', 'lib', 'python', 'site', 'package', 'warning', 'pip', '_internal', 'metadata', 'base', 'ignoring', 'invalid', 'distribution', 'otocore', 'opt', 'anaconda', 'lib', 'python', 'site', 'package', 'warning', 'pip', '_internal', 'metadata', 'base', 'ignoring', 'invalid', 'distribution', 'ix', 'opt', 'anaconda', 'lib', 'python', 'site', 'package', 'warning', 'pip', '_internal', 'metadata', 'base', 'ignoring', 'invalid', 'distribution', 'opt', 'anaconda', 'lib', 'python', 'site', 'package', 'traceback', 'recent', 'call', 'last', 'file', 'opt', 'anaconda', 'bin', 'pip', 'compile', 'line', 'module', 'sys', 'exit', 'cli', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'package', 'click', 'core', 'py', 'line', '__call__', 'return', 'self', 'main', 'args', 'kwargs', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'package', 'click', 'core', 'py', 'line', 'main', 'rv', 'self', 'invoke', 'ctx', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'package', 'click', 'core', 'py', 'line', 'invoke', 'return', 'ctx', 'invoke', 'self', 'callback', 'ctx', 'params', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'package', 'click', 'core', 'py', 'line', 'invoke', 'return', 'callback', 'args', 'kwargs', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'package', 'click', 'decorator', 'py', 'line', 'new_func', 'return', 'f', 'get_current_context', 'args', 'kwargs', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'package', 'piptools', 'script', 'compile', 'py', 'line', 'cli', 'repository', 'pypirepository', 'pip_args', 'cache_dir', 'cache_dir', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'package', 'piptools', 'repository', 'pypi', 'py', 'line', '__init__', 'self', '_setup_logging', 'file', 'opt', 'anaconda', 'lib', 'python', 'site', 'package', 'piptools', 'repository', 'pypi', 'py', 'line', '_setup_logging', 'assert', 'isinstance', 'handler', 'logging', 'streamhandler', 'assertionerror', 'edit', 'tried', 'running', 'pip', 'compile', 'upgrade', 'file', 'opt', 'anaconda', 'bin', 'pip', 'compile', 'line', 'module', 'sys', 'exit', 'cli', 'file', 'opt', 'anaconda', 'lib', 'python', 'subprocess', 'py', 'line', 'run', 'raise', 'calledprocesserror', 'retcode', 'process', 'args', 'subprocess', 'calledprocesserror', 'command', 'opt', 'anaconda', 'bin', 'python', 'opt', 'anaconda', 'lib', 'python', 'site', 'package', 'pep', 'in_process', '_in_process', 'py', 'get_requires_for_build_wheel', 'var', 'folder', 'b', 'v_', 'rxfx', 'ylxg', 'xh', 'c', 'gn', 'tmp', 'hrt', 'returned', 'non', 'zero', 'exit', 'status', 'edit', 'edit', 'run', 'conda', 'list', 'pip', 'click', 'see', 'following', 'requirement', 'txt', 'file', 'ha', 'hundred', 'package', 'package', 'environment', 'opt', 'anaconda', 'name', 'version', 'build', 'channel', 'click', 'pypi_', 'pypi', 'click', 'default', 'group', 'pypi_', 'pypi', 'clickclick', 'pypi_', 'pypi', 'pip', 'pypi_', 'pypi', 'pip', 'tool', 'pypi_', 'pypi']","['the', 'version', 'combination', 'of', 'pip', 'and', 'pip', 'tool', 'is', 'not', 'compatible', 'either', 'upgrade', 'pip', 'to', 'or', 'downgrade', 'pip', 'tool', 'to']",Package Management and File Handling,1,"{'neg': 0.015, 'neu': 0.985, 'pos': 0.0, 'compound': -0.5499}",0.14583333333333334,1,Package Management and File Handling,3query
72117772,User story for drag and drop feature,"<p>Can anyone help me create a User Story for the dragging and dropping feature, where I can drag and drop projects from &quot;New Project&quot; to &quot;In progress&quot; etc Column</p>
",<user-interface><drag-and-drop><requirements><user-stories>,2022-05-04 18:24:43,95,2,1,73005985,"<p><a href=""https://en.wikipedia.org/wiki/User_story"" rel=""nofollow noreferrer"">User-stories</a> describes a feature from the user's point of view, making clear what the user wants to achieve.  We cannot invent stories for your users: normally, you should discuss this with your users.  But if you're learning and it could help, here an hypothetical example:</p>
<blockquote>
<p><strong>As a</strong> <em>project manager</em> <strong>I can</strong> <em>drag a project icon in the &quot;new project&quot; column across my kanban board and drop it on the &quot;in progress&quot; column</em>, <strong>so that</strong> <em>I can easily and intuitively communicate that a project was started and is still going on.</em></p>
</blockquote>
<p>Be aware that referring explicitly to a drag and drop seems very detailed and might not leave much room to propose better solutions. In this regard, you need to keep in mind that a story is not a detailed specification.  It's just <a href=""https://www.agilealliance.org/user-story-conversations/"" rel=""nofollow noreferrer"">a placeholder for a conversation</a>.  Personally, I'd rather go for something simpler like:</p>
<blockquote>
<p><strong>As a</strong> <em>project manager</em> <strong>I can</strong> <em>easily chose a project to launch and show that it is currently in-progress</em>, <strong>so that</strong> <em>the other users know on which project they may work.</em></p>
</blockquote>
<p>I would then discuss with the user about the details of the story.  Maybe drag and drop is the way to go. Maybe keyboard control (tab to select, space to chose target) is needed for <strong><a href=""https://www.w3.org/blog/wai-components-gallery/widget/accessible-drag-and-drop/"" rel=""nofollow noreferrer"">accessibility reasons</a></strong>.  But perhaps I'll discover that some users prefer to update the status in the project card if it's on the screen.</p>
<p>Anyhow, during this conversation <a href=""https://www.mountaingoatsoftware.com/agile/user-stories"" rel=""nofollow noreferrer"">you'd write down all the expectations, positive and negative, for the acceptance criteria</a>.  For example:</p>
<ul>
<li>Dragging from &quot;new&quot; and dropping on &quot;new&quot; cancels the drag&amp;drop operation</li>
<li>When dragging from &quot;new&quot; a visual feedback should be given to show the project moving</li>
<li>During the dragging,  the use of the escape button may cancel the operation.</li>
<li>When the project is dropped by accident,  the user may undo the operation.</li>
<li>When the project is successfully dropped on the &quot;in progress&quot; column,  any open view of the project card should be immediately opened to show the new status of the project.</li>
<li>Attempting to drag a project, of which the user is not responsible, should lead to an error message about missing authorisations, etc.. .</li>
</ul>
",2022-05,can anyone help me create a user story for the dragging and dropping feature where i can drag and drop projects from new project to in progress etc column,user stories describes a feature from the user s point of view making clear what the user wants to achieve we cannot invent stories for your users normally you should discuss this with your users but if you re learning and it could help here an hypothetical example as a project manager i can drag a project icon in the new project column across my kanban board and drop it on the in progress column so that i can easily and intuitively communicate that a project was started and is still going on be aware that referring explicitly to a drag and drop seems very detailed and might not leave much room to propose better solutions in this regard you need to keep in mind that a story is not a detailed specification it s just a placeholder for a conversation personally i d rather go for something simpler like as a project manager i can easily chose a project to launch and show that it is currently in progress so that the other users know on which project they may work i would then discuss with the user about the details of the story maybe drag and drop is the way to go maybe keyboard control tab to select space to chose target is needed for accessibility reasons but perhaps i ll discover that some users prefer to update the status in the project card if it s on the screen anyhow during this conversation you d write down all the expectations positive and negative for the acceptance criteria for example dragging from new and dropping on new cancels the drag drop operation when dragging from new a visual feedback should be given to show the project moving during the dragging the use of the escape button may cancel the operation when the project is dropped by accident the user may undo the operation when the project is successfully dropped on the in progress column any open view of the project card should be immediately opened to show the new status of the project attempting to drag a project of which the user is not responsible should lead to an error message about missing authorisations etc,"['user-interface', 'drag-and-drop', 'requirements', 'user-stories']","['can', 'anyone', 'help', 'me', 'create', 'a', 'user', 'story', 'for', 'the', 'dragging', 'and', 'dropping', 'feature', 'where', 'i', 'can', 'drag', 'and', 'drop', 'projects', 'from', 'new', 'project', 'to', 'in', 'progress', 'etc', 'column']","['user', 'stories', 'describes', 'a', 'feature', 'from', 'the', 'user', 's', 'point', 'of', 'view', 'making', 'clear', 'what', 'the', 'user', 'wants', 'to', 'achieve', 'we', 'can', 'not', 'invent', 'stories', 'for', 'your', 'users', 'normally', 'you', 'should', 'discuss', 'this', 'with', 'your', 'users', 'but', 'if', 'you', 're', 'learning', 'and', 'it', 'could', 'help', 'here', 'an', 'hypothetical', 'example', 'as', 'a', 'project', 'manager', 'i', 'can', 'drag', 'a', 'project', 'icon', 'in', 'the', 'new', 'project', 'column', 'across', 'my', 'kanban', 'board', 'and', 'drop', 'it', 'on', 'the', 'in', 'progress', 'column', 'so', 'that', 'i', 'can', 'easily', 'and', 'intuitively', 'communicate', 'that', 'a', 'project', 'was', 'started', 'and', 'is', 'still', 'going', 'on', 'be', 'aware', 'that', 'referring', 'explicitly', 'to', 'a', 'drag', 'and', 'drop', 'seems', 'very', 'detailed', 'and', 'might', 'not', 'leave', 'much', 'room', 'to', 'propose', 'better', 'solutions', 'in', 'this', 'regard', 'you', 'need', 'to', 'keep', 'in', 'mind', 'that', 'a', 'story', 'is', 'not', 'a', 'detailed', 'specification', 'it', 's', 'just', 'a', 'placeholder', 'for', 'a', 'conversation', 'personally', 'i', 'd', 'rather', 'go', 'for', 'something', 'simpler', 'like', 'as', 'a', 'project', 'manager', 'i', 'can', 'easily', 'chose', 'a', 'project', 'to', 'launch', 'and', 'show', 'that', 'it', 'is', 'currently', 'in', 'progress', 'so', 'that', 'the', 'other', 'users', 'know', 'on', 'which', 'project', 'they', 'may', 'work', 'i', 'would', 'then', 'discuss', 'with', 'the', 'user', 'about', 'the', 'details', 'of', 'the', 'story', 'maybe', 'drag', 'and', 'drop', 'is', 'the', 'way', 'to', 'go', 'maybe', 'keyboard', 'control', 'tab', 'to', 'select', 'space', 'to', 'chose', 'target', 'is', 'needed', 'for', 'accessibility', 'reasons', 'but', 'perhaps', 'i', 'll', 'discover', 'that', 'some', 'users', 'prefer', 'to', 'update', 'the', 'status', 'in', 'the', 'project', 'card', 'if', 'it', 's', 'on', 'the', 'screen', 'anyhow', 'during', 'this', 'conversation', 'you', 'd', 'write', 'down', 'all', 'the', 'expectations', 'positive', 'and', 'negative', 'for', 'the', 'acceptance', 'criteria', 'for', 'example', 'dragging', 'from', 'new', 'and', 'dropping', 'on', 'new', 'cancels', 'the', 'drag', 'drop', 'operation', 'when', 'dragging', 'from', 'new', 'a', 'visual', 'feedback', 'should', 'be', 'given', 'to', 'show', 'the', 'project', 'moving', 'during', 'the', 'dragging', 'the', 'use', 'of', 'the', 'escape', 'button', 'may', 'cancel', 'the', 'operation', 'when', 'the', 'project', 'is', 'dropped', 'by', 'accident', 'the', 'user', 'may', 'undo', 'the', 'operation', 'when', 'the', 'project', 'is', 'successfully', 'dropped', 'on', 'the', 'in', 'progress', 'column', 'any', 'open', 'view', 'of', 'the', 'project', 'card', 'should', 'be', 'immediately', 'opened', 'to', 'show', 'the', 'new', 'status', 'of', 'the', 'project', 'attempting', 'to', 'drag', 'a', 'project', 'of', 'which', 'the', 'user', 'is', 'not', 'responsible', 'should', 'lead', 'to', 'an', 'error', 'message', 'about', 'missing', 'authorisations', 'etc']","['anyone', 'help', 'create', 'user', 'story', 'dragging', 'dropping', 'feature', 'drag', 'drop', 'project', 'new', 'project', 'progress', 'etc', 'column']","['user', 'story', 'describes', 'a', 'feature', 'from', 'the', 'user', 's', 'point', 'of', 'view', 'making', 'clear', 'what', 'the', 'user', 'want', 'to', 'achieve', 'we', 'can', 'not', 'invent', 'story', 'for', 'your', 'user', 'normally', 'you', 'should', 'discus', 'this', 'with', 'your', 'user', 'but', 'if', 'you', 're', 'learning', 'and', 'it', 'could', 'help', 'here', 'an', 'hypothetical', 'example', 'a', 'a', 'project', 'manager', 'i', 'can', 'drag', 'a', 'project', 'icon', 'in', 'the', 'new', 'project', 'column', 'across', 'my', 'kanban', 'board', 'and', 'drop', 'it', 'on', 'the', 'in', 'progress', 'column', 'so', 'that', 'i', 'can', 'easily', 'and', 'intuitively', 'communicate', 'that', 'a', 'project', 'wa', 'started', 'and', 'is', 'still', 'going', 'on', 'be', 'aware', 'that', 'referring', 'explicitly', 'to', 'a', 'drag', 'and', 'drop', 'seems', 'very', 'detailed', 'and', 'might', 'not', 'leave', 'much', 'room', 'to', 'propose', 'better', 'solution', 'in', 'this', 'regard', 'you', 'need', 'to', 'keep', 'in', 'mind', 'that', 'a', 'story', 'is', 'not', 'a', 'detailed', 'specification', 'it', 's', 'just', 'a', 'placeholder', 'for', 'a', 'conversation', 'personally', 'i', 'd', 'rather', 'go', 'for', 'something', 'simpler', 'like', 'a', 'a', 'project', 'manager', 'i', 'can', 'easily', 'chose', 'a', 'project', 'to', 'launch', 'and', 'show', 'that', 'it', 'is', 'currently', 'in', 'progress', 'so', 'that', 'the', 'other', 'user', 'know', 'on', 'which', 'project', 'they', 'may', 'work', 'i', 'would', 'then', 'discus', 'with', 'the', 'user', 'about', 'the', 'detail', 'of', 'the', 'story', 'maybe', 'drag', 'and', 'drop', 'is', 'the', 'way', 'to', 'go', 'maybe', 'keyboard', 'control', 'tab', 'to', 'select', 'space', 'to', 'chose', 'target', 'is', 'needed', 'for', 'accessibility', 'reason', 'but', 'perhaps', 'i', 'll', 'discover', 'that', 'some', 'user', 'prefer', 'to', 'update', 'the', 'status', 'in', 'the', 'project', 'card', 'if', 'it', 's', 'on', 'the', 'screen', 'anyhow', 'during', 'this', 'conversation', 'you', 'd', 'write', 'down', 'all', 'the', 'expectation', 'positive', 'and', 'negative', 'for', 'the', 'acceptance', 'criterion', 'for', 'example', 'dragging', 'from', 'new', 'and', 'dropping', 'on', 'new', 'cancel', 'the', 'drag', 'drop', 'operation', 'when', 'dragging', 'from', 'new', 'a', 'visual', 'feedback', 'should', 'be', 'given', 'to', 'show', 'the', 'project', 'moving', 'during', 'the', 'dragging', 'the', 'use', 'of', 'the', 'escape', 'button', 'may', 'cancel', 'the', 'operation', 'when', 'the', 'project', 'is', 'dropped', 'by', 'accident', 'the', 'user', 'may', 'undo', 'the', 'operation', 'when', 'the', 'project', 'is', 'successfully', 'dropped', 'on', 'the', 'in', 'progress', 'column', 'any', 'open', 'view', 'of', 'the', 'project', 'card', 'should', 'be', 'immediately', 'opened', 'to', 'show', 'the', 'new', 'status', 'of', 'the', 'project', 'attempting', 'to', 'drag', 'a', 'project', 'of', 'which', 'the', 'user', 'is', 'not', 'responsible', 'should', 'lead', 'to', 'an', 'error', 'message', 'about', 'missing', 'authorisation', 'etc']",Python Package Installation and Management,3,"{'neg': 0.126, 'neu': 0.723, 'pos': 0.151, 'compound': 0.2023}",-0.1,3,Python Package Installation and Management,3query
72058400,Unable to deploy fbprophet in heroku,"<p>I am unable to deploy fbprophet time series model into heroku. Locally, it works well.</p>
<p>The requirements.txt file contains as follows.</p>
<pre><code>numpy
pandas
matplotlib
pystan==2.19.1.1
streamlit
plotly
fbprophet
</code></pre>
<p>Tried:
Kept default pystan without giving the version. Did not work. Error in CLI showing &quot;Pystan loading&quot;.</p>
<p>Error:</p>
<pre><code>Failed to build pystan fbprophet
Running setup.py install for pystan: started
</code></pre>
<p>No response after this.</p>
",<heroku><deployment><time-series><requirements><facebook-prophet>,2022-04-29 13:01:25,106,0,1,72256434,"<p>fbprophet is older version try using prophet, if it doesn't work you can install prophet through prebuilt wheels <a href=""https://pypi.org/project/prophet-prebuilt/1.0.2/#files"" rel=""nofollow noreferrer"">https://pypi.org/project/prophet-prebuilt/1.0.2/#files</a></p>
",2022-04,i am unable to deploy fbprophet time series model into heroku locally it works well the requirements txt file contains as follows numpy pandas matplotlib pystan         streamlit plotly fbprophet tried kept default pystan without giving the version did not work error in cli showing pystan loading error failed to build pystan fbprophet running setup py install for pystan started no response after this,fbprophet is older version try using prophet if it doesn t work you can install prophet through prebuilt wheels https pypi org project prophet prebuilt       files,"['heroku', 'deployment', 'time-series', 'requirements', 'facebook-prophet']","['i', 'am', 'unable', 'to', 'deploy', 'fbprophet', 'time', 'series', 'model', 'into', 'heroku', 'locally', 'it', 'works', 'well', 'the', 'requirements', 'txt', 'file', 'contains', 'as', 'follows', 'numpy', 'pandas', 'matplotlib', 'pystan', 'streamlit', 'plotly', 'fbprophet', 'tried', 'kept', 'default', 'pystan', 'without', 'giving', 'the', 'version', 'did', 'not', 'work', 'error', 'in', 'cli', 'showing', 'pystan', 'loading', 'error', 'failed', 'to', 'build', 'pystan', 'fbprophet', 'running', 'setup', 'py', 'install', 'for', 'pystan', 'started', 'no', 'response', 'after', 'this']","['fbprophet', 'is', 'older', 'version', 'try', 'using', 'prophet', 'if', 'it', 'doesn', 't', 'work', 'you', 'can', 'install', 'prophet', 'through', 'prebuilt', 'wheels', 'https', 'pypi', 'org', 'project', 'prophet', 'prebuilt', 'files']","['unable', 'deploy', 'fbprophet', 'time', 'series', 'model', 'heroku', 'locally', 'work', 'well', 'requirement', 'txt', 'file', 'contains', 'follows', 'numpy', 'panda', 'matplotlib', 'pystan', 'streamlit', 'plotly', 'fbprophet', 'tried', 'kept', 'default', 'pystan', 'without', 'giving', 'version', 'work', 'error', 'cli', 'showing', 'pystan', 'loading', 'error', 'failed', 'build', 'pystan', 'fbprophet', 'running', 'setup', 'py', 'install', 'pystan', 'started', 'response']","['fbprophet', 'is', 'older', 'version', 'try', 'using', 'prophet', 'if', 'it', 'doesn', 't', 'work', 'you', 'can', 'install', 'prophet', 'through', 'prebuilt', 'wheel', 'http', 'pypi', 'org', 'project', 'prophet', 'prebuilt', 'file']",System Requirements and AWS,3,"{'neg': 0.031, 'neu': 0.934, 'pos': 0.035, 'compound': 0.0572}",-0.25,3,Python Package Installation and Management,3query
71726676,Error comes while installation of random module of python,"<pre><code>ERROR: Could not find a version that satisfies the requirement python-random (from versions: none)
ERROR: No matching distribution found for python-random
</code></pre>
",<python><pip><requirements>,2022-04-03 14:10:03,481,-3,1,71726752,"<p>You don't have to install the <a href=""https://docs.python.org/3/library/random.html"" rel=""nofollow noreferrer""><code>random</code></a> module, since it's a <a href=""https://docs.python.org/3/py-modindex.html"" rel=""nofollow noreferrer""><code>built-in</code></a> module and it comes with the standard Python installation.</p>
<hr />
<p>If you want to use its functions and classes, you just have to <a href=""https://docs.python.org/3/reference/import.html"" rel=""nofollow noreferrer""><code>import</code></a> it:</p>
<pre><code># main.py
import random
print(random.randint(0, 100)) # 42
</code></pre>
",2022-04,error could not find a version that satisfies the requirement python random from versions none error no matching distribution found for python random,you don t have to install the random module since it s a built in module and it comes with the standard python installation if you want to use its functions and classes you just have to import it main py import random print random randint,"['python', 'pip', 'requirements']","['error', 'could', 'not', 'find', 'a', 'version', 'that', 'satisfies', 'the', 'requirement', 'python', 'random', 'from', 'versions', 'none', 'error', 'no', 'matching', 'distribution', 'found', 'for', 'python', 'random']","['you', 'don', 't', 'have', 'to', 'install', 'the', 'random', 'module', 'since', 'it', 's', 'a', 'built', 'in', 'module', 'and', 'it', 'comes', 'with', 'the', 'standard', 'python', 'installation', 'if', 'you', 'want', 'to', 'use', 'its', 'functions', 'and', 'classes', 'you', 'just', 'have', 'to', 'import', 'it', 'main', 'py', 'import', 'random', 'print', 'random', 'randint']","['error', 'could', 'find', 'version', 'satisfies', 'requirement', 'python', 'random', 'version', 'none', 'error', 'matching', 'distribution', 'found', 'python', 'random']","['you', 'don', 't', 'have', 'to', 'install', 'the', 'random', 'module', 'since', 'it', 's', 'a', 'built', 'in', 'module', 'and', 'it', 'come', 'with', 'the', 'standard', 'python', 'installation', 'if', 'you', 'want', 'to', 'use', 'it', 'function', 'and', 'class', 'you', 'just', 'have', 'to', 'import', 'it', 'main', 'py', 'import', 'random', 'print', 'random', 'randint']",Python Package Installation and Management,3,"{'neg': 0.213, 'neu': 0.681, 'pos': 0.106, 'compound': -0.4278}",0.0,3,Python Package Installation and Management,3query
71724961,RegExe Reqtify : capturing multilines Requirements,"<p>I'm new here and I'm also a beginner in <code>regex</code>.</p>
<p>I'm using <code>Reqtify</code> to match and capture Requirements from a PDF file.</p>
<p><strong>Here the example of the file content:</strong></p>
<pre><code>**Requirement1** 

Text of the first requirement bla bla 

Second line of the first requirement.

**Requirement2** 

Text of the second requirement, no second line

**Heading 2[Distributed]**

**Requirement3** 
Text of the third requirement

Second line of the third requirement 

Third line of the third requirement 

**Heading 1[Distributed]**

**Requirement4**
 
Text of the 4th requirement

Second line of the 4th requirement 

Third line of the 4th requirement 

**Heading3[Distributed]**
[...]
</code></pre>
<p><strong>Here what i want for the Requirement3 for example :</strong></p>
<pre><code>Text of the third requirement
Second line of the third requirement 
Third line of the third requirement 
</code></pre>
<p>As can you see the file mixes requirements and different heading (1,2,3 etc).</p>
<p>My first idea was to capture each requirement until the line which ends with *<strong>&quot;]&quot;</strong>.</p>
<p>So my regex pattern is:</p>
<pre><code>(^Requirement\d+).*$\n(\s\S]*?)^.*Distributed\]$ 
</code></pre>
<p>But it doesn't work well (see picture below).</p>
<p><a href=""https://i.stack.imgur.com/yrK0B.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yrK0B.png"" alt=""enter image description here"" /></a></p>
<p>My second idea is to have different <strong>end of the multiline</strong>, something like this:</p>
<pre><code>(^Requirement\d+).*$\n(\s\S]*?)**^.*Distributed\]$|^Heading\d+**
</code></pre>
<p>But it doesn't work at all, i know that the regex syntax isn't right.</p>
<p><strong>Can someone, please, help with the two ideas?</strong></p>
<p>Thank you for your time.</p>
<p>Also, if you have documentation about regex in Reqtify I would love to read it.</p>
<p>PS: I use regex101 to test my expression.</p>
<hr />
<p>Thank to @GreyMurav I can capture what I want. However I noticed that in the file, in each page there  are a header and a footer, so in some requirement they are captured.</p>
<p>The header its like this :</p>
<p>'#TABLE</p>
<p>'#TR|1 bla bla bla bla</p>
<p>'#TR[1...................... Distributed|5 page 5/102</p>
<p>SO you can have something like this :
Requirements 5</p>
<p>First line of the requirement</p>
<p>*#TABLE</p>
<p>#TR|1 bla bla bla bla</p>
<p>#TR[1...................... Distributed|5 page 5/102*</p>
<p>The rest of the requirement bla bla.</p>
<p>Here what I tried :</p>
<ol>
<li>add a non-capturing group '''
(?:^#TABLE\nTR.*\n#TR.<em>Distributed.</em>$)
''' I tried to place it everywhere but It doesnt work.</li>
<li>In Reqtify you can apply a sub-exopression to a group. But it doesn't work eather.</li>
</ol>
<p>How can I solve this problem?</p>
<p>Thank you for your time.</p>
",<regex><requirements>,2022-04-03 10:20:10,254,1,1,71725083,"<p>You can use a pattern that captures all lines after matching Requirement stops matching until a line start with <code>Requirement</code> or contains <code>[Distributed]</code></p>
<pre><code>^Requirement\d+\s*\n((?:(?!^Requirement\d|.*?\[Distributed]).*(?:\n|$))*)
</code></pre>
<p>The pattern matches:</p>
<ul>
<li><code>^</code> Start of string</li>
<li><code>Requirement\d+\s*\n</code></li>
<li><code>(</code> Capture <strong>group 1</strong>
<ul>
<li><code>(?:</code> Non capture group
<ul>
<li><code>(?!^Requirement\d|.*?\[Distributed])</code> Assert that the string does not start with Requirement and a digit and does not contain [Distributed]</li>
<li><code>.*</code> Match the whole line</li>
<li><code>(?:\n|$)</code> Match a newline or assert the end of the string</li>
</ul>
</li>
<li><code>)*</code> Close the non capture group an optionally repeat to match all lines</li>
</ul>
</li>
<li><code>)</code> Close group 1</li>
</ul>
<p>See a <a href=""https://regex101.com/r/DK2Dgg/1"" rel=""nofollow noreferrer"">regex101 demo</a></p>
",2022-04,i m new here and i m also a beginner in regex i m using reqtify to match and capture requirements from a pdf file here the example of the file content requirement  text of the first requirement bla bla second line of the first requirement requirement  text of the second requirement no second line heading   distributed requirement  text of the third requirement second line of the third requirement third line of the third requirement heading   distributed requirement  text of the  th requirement second line of the  th requirement third line of the  th requirement heading  distributed here what i want for the requirement  for example text of the third requirement second line of the third requirement third line of the third requirement as can you see the file mixes requirements and different heading       etc my first idea was to capture each requirement until the line which ends with so my regex pattern is requirement d n s s distributed but it doesn t work well see picture below my second idea is to have different end of the multiline something like this requirement d n s s distributed heading d but it doesn t work at all i know that the regex syntax isn t right can someone please help with the two ideas thank you for your time also if you have documentation about regex in reqtify i would love to read it ps i use regex  to test my expression thank to greymurav i can capture what i want however i noticed that in the file in each page there are a header and a footer so in some requirement they are captured the header its like this table tr   bla bla bla bla tr   distributed   page     so you can have something like this requirements   first line of the requirement table tr   bla bla bla bla tr   distributed   page     the rest of the requirement bla bla here what i tried add a non capturing group table ntr n tr distributed i tried to place it everywhere but it doesnt work in reqtify you can apply a sub exopression to a group but it doesn t work eather how can i solve this problem thank you for your time,you can use a pattern that captures all lines after matching requirement stops matching until a line start with requirement or contains distributed requirement d s n requirement d distributed n the pattern matches start of string requirement d s n capture group   non capture group requirement d distributed assert that the string does not start with requirement and a digit and does not contain distributed match the whole line n match a newline or assert the end of the string close the non capture group an optionally repeat to match all lines close group   see a regex  demo,"['regex', 'requirements']","['i', 'm', 'new', 'here', 'and', 'i', 'm', 'also', 'a', 'beginner', 'in', 'regex', 'i', 'm', 'using', 'reqtify', 'to', 'match', 'and', 'capture', 'requirements', 'from', 'a', 'pdf', 'file', 'here', 'the', 'example', 'of', 'the', 'file', 'content', 'requirement', 'text', 'of', 'the', 'first', 'requirement', 'bla', 'bla', 'second', 'line', 'of', 'the', 'first', 'requirement', 'requirement', 'text', 'of', 'the', 'second', 'requirement', 'no', 'second', 'line', 'heading', 'distributed', 'requirement', 'text', 'of', 'the', 'third', 'requirement', 'second', 'line', 'of', 'the', 'third', 'requirement', 'third', 'line', 'of', 'the', 'third', 'requirement', 'heading', 'distributed', 'requirement', 'text', 'of', 'the', 'th', 'requirement', 'second', 'line', 'of', 'the', 'th', 'requirement', 'third', 'line', 'of', 'the', 'th', 'requirement', 'heading', 'distributed', 'here', 'what', 'i', 'want', 'for', 'the', 'requirement', 'for', 'example', 'text', 'of', 'the', 'third', 'requirement', 'second', 'line', 'of', 'the', 'third', 'requirement', 'third', 'line', 'of', 'the', 'third', 'requirement', 'as', 'can', 'you', 'see', 'the', 'file', 'mixes', 'requirements', 'and', 'different', 'heading', 'etc', 'my', 'first', 'idea', 'was', 'to', 'capture', 'each', 'requirement', 'until', 'the', 'line', 'which', 'ends', 'with', 'so', 'my', 'regex', 'pattern', 'is', 'requirement', 'd', 'n', 's', 's', 'distributed', 'but', 'it', 'doesn', 't', 'work', 'well', 'see', 'picture', 'below', 'my', 'second', 'idea', 'is', 'to', 'have', 'different', 'end', 'of', 'the', 'multiline', 'something', 'like', 'this', 'requirement', 'd', 'n', 's', 's', 'distributed', 'heading', 'd', 'but', 'it', 'doesn', 't', 'work', 'at', 'all', 'i', 'know', 'that', 'the', 'regex', 'syntax', 'isn', 't', 'right', 'can', 'someone', 'please', 'help', 'with', 'the', 'two', 'ideas', 'thank', 'you', 'for', 'your', 'time', 'also', 'if', 'you', 'have', 'documentation', 'about', 'regex', 'in', 'reqtify', 'i', 'would', 'love', 'to', 'read', 'it', 'ps', 'i', 'use', 'regex', 'to', 'test', 'my', 'expression', 'thank', 'to', 'greymurav', 'i', 'can', 'capture', 'what', 'i', 'want', 'however', 'i', 'noticed', 'that', 'in', 'the', 'file', 'in', 'each', 'page', 'there', 'are', 'a', 'header', 'and', 'a', 'footer', 'so', 'in', 'some', 'requirement', 'they', 'are', 'captured', 'the', 'header', 'its', 'like', 'this', 'table', 'tr', 'bla', 'bla', 'bla', 'bla', 'tr', 'distributed', 'page', 'so', 'you', 'can', 'have', 'something', 'like', 'this', 'requirements', 'first', 'line', 'of', 'the', 'requirement', 'table', 'tr', 'bla', 'bla', 'bla', 'bla', 'tr', 'distributed', 'page', 'the', 'rest', 'of', 'the', 'requirement', 'bla', 'bla', 'here', 'what', 'i', 'tried', 'add', 'a', 'non', 'capturing', 'group', 'table', 'ntr', 'n', 'tr', 'distributed', 'i', 'tried', 'to', 'place', 'it', 'everywhere', 'but', 'it', 'doesnt', 'work', 'in', 'reqtify', 'you', 'can', 'apply', 'a', 'sub', 'exopression', 'to', 'a', 'group', 'but', 'it', 'doesn', 't', 'work', 'eather', 'how', 'can', 'i', 'solve', 'this', 'problem', 'thank', 'you', 'for', 'your', 'time']","['you', 'can', 'use', 'a', 'pattern', 'that', 'captures', 'all', 'lines', 'after', 'matching', 'requirement', 'stops', 'matching', 'until', 'a', 'line', 'start', 'with', 'requirement', 'or', 'contains', 'distributed', 'requirement', 'd', 's', 'n', 'requirement', 'd', 'distributed', 'n', 'the', 'pattern', 'matches', 'start', 'of', 'string', 'requirement', 'd', 's', 'n', 'capture', 'group', 'non', 'capture', 'group', 'requirement', 'd', 'distributed', 'assert', 'that', 'the', 'string', 'does', 'not', 'start', 'with', 'requirement', 'and', 'a', 'digit', 'and', 'does', 'not', 'contain', 'distributed', 'match', 'the', 'whole', 'line', 'n', 'match', 'a', 'newline', 'or', 'assert', 'the', 'end', 'of', 'the', 'string', 'close', 'the', 'non', 'capture', 'group', 'an', 'optionally', 'repeat', 'to', 'match', 'all', 'lines', 'close', 'group', 'see', 'a', 'regex', 'demo']","['new', 'also', 'beginner', 'regex', 'using', 'reqtify', 'match', 'capture', 'requirement', 'pdf', 'file', 'example', 'file', 'content', 'requirement', 'text', 'first', 'requirement', 'bla', 'bla', 'second', 'line', 'first', 'requirement', 'requirement', 'text', 'second', 'requirement', 'second', 'line', 'heading', 'distributed', 'requirement', 'text', 'third', 'requirement', 'second', 'line', 'third', 'requirement', 'third', 'line', 'third', 'requirement', 'heading', 'distributed', 'requirement', 'text', 'th', 'requirement', 'second', 'line', 'th', 'requirement', 'third', 'line', 'th', 'requirement', 'heading', 'distributed', 'want', 'requirement', 'example', 'text', 'third', 'requirement', 'second', 'line', 'third', 'requirement', 'third', 'line', 'third', 'requirement', 'see', 'file', 'mix', 'requirement', 'different', 'heading', 'etc', 'first', 'idea', 'wa', 'capture', 'requirement', 'line', 'end', 'regex', 'pattern', 'requirement', 'n', 'distributed', 'work', 'well', 'see', 'picture', 'second', 'idea', 'different', 'end', 'multiline', 'something', 'like', 'requirement', 'n', 'distributed', 'heading', 'work', 'know', 'regex', 'syntax', 'right', 'someone', 'please', 'help', 'two', 'idea', 'thank', 'time', 'also', 'documentation', 'regex', 'reqtify', 'would', 'love', 'read', 'p', 'use', 'regex', 'test', 'expression', 'thank', 'greymurav', 'capture', 'want', 'however', 'noticed', 'file', 'page', 'header', 'footer', 'requirement', 'captured', 'header', 'like', 'table', 'tr', 'bla', 'bla', 'bla', 'bla', 'tr', 'distributed', 'page', 'something', 'like', 'requirement', 'first', 'line', 'requirement', 'table', 'tr', 'bla', 'bla', 'bla', 'bla', 'tr', 'distributed', 'page', 'rest', 'requirement', 'bla', 'bla', 'tried', 'add', 'non', 'capturing', 'group', 'table', 'ntr', 'n', 'tr', 'distributed', 'tried', 'place', 'everywhere', 'doesnt', 'work', 'reqtify', 'apply', 'sub', 'exopression', 'group', 'work', 'eather', 'solve', 'problem', 'thank', 'time']","['you', 'can', 'use', 'a', 'pattern', 'that', 'capture', 'all', 'line', 'after', 'matching', 'requirement', 'stop', 'matching', 'until', 'a', 'line', 'start', 'with', 'requirement', 'or', 'contains', 'distributed', 'requirement', 'd', 's', 'n', 'requirement', 'd', 'distributed', 'n', 'the', 'pattern', 'match', 'start', 'of', 'string', 'requirement', 'd', 's', 'n', 'capture', 'group', 'non', 'capture', 'group', 'requirement', 'd', 'distributed', 'assert', 'that', 'the', 'string', 'doe', 'not', 'start', 'with', 'requirement', 'and', 'a', 'digit', 'and', 'doe', 'not', 'contain', 'distributed', 'match', 'the', 'whole', 'line', 'n', 'match', 'a', 'newline', 'or', 'assert', 'the', 'end', 'of', 'the', 'string', 'close', 'the', 'non', 'capture', 'group', 'an', 'optionally', 'repeat', 'to', 'match', 'all', 'line', 'close', 'group', 'see', 'a', 'regex', 'demo']",System Requirements and AWS,2,"{'neg': 0.008, 'neu': 0.946, 'pos': 0.046, 'compound': 0.869}",0.060276679841897225,2,Python Libraries and Environment,3query
71586500,Create a folder in DXL - DOORS,"<p>I am trying to make a script that will copy the contents of one project to another (ie folders and modules) in DXL. To do it, I have seen that there is the create function,</p>
<pre><code>create(string name, string description)
</code></pre>
<p>which creates a folder... But from what I see, it creates it in the current directory where I run the script.</p>
<p>Is there any way that running the script in the <strong>M</strong> module, from the <strong>C</strong> folder of the <strong>P</strong> project, generates a folder with the <strong>same name C</strong> but inside the <strong>new NP project</strong>?</p>
<p>Thanks:)</p>
",<scripting><ibm-cloud><requirements><ibm-doors>,2022-03-23 11:34:09,148,0,1,71586920,"<p>from the DXL manual: <code>The name argument can be an absolute or relative name, and may include the path.</code>. So, you might have a loop like</p>
<pre><code>Project P = project ('/P')
Item i
for i in P do {
   if (type i == 'Folder') {
      string nName = name i
      create (&quot;/NP/&quot; sName, &quot;&quot;)
   }
   // recursively copy the content of the folder
}
</code></pre>
<p>Also, depending on your needs, you might want to have a look at <code>clipCopy</code> and <code>clipPaste</code>, which duplicates an entire hierarchy.</p>
",2022-03,i am trying to make a script that will copy the contents of one project to another ie folders and modules in dxl to do it i have seen that there is the create function create string name string description which creates a folder but from what i see it creates it in the current directory where i run the script is there any way that running the script in the m module from the c folder of the p project generates a folder with the same name c but inside the new np project thanks,from the dxl manual the name argument can be an absolute or relative name and may include the path so you might have a loop like project p project p item i for i in p do if type i folder string nname name i create np sname recursively copy the content of the folder also depending on your needs you might want to have a look at clipcopy and clippaste which duplicates an entire hierarchy,"['scripting', 'ibm-cloud', 'requirements', 'ibm-doors']","['i', 'am', 'trying', 'to', 'make', 'a', 'script', 'that', 'will', 'copy', 'the', 'contents', 'of', 'one', 'project', 'to', 'another', 'ie', 'folders', 'and', 'modules', 'in', 'dxl', 'to', 'do', 'it', 'i', 'have', 'seen', 'that', 'there', 'is', 'the', 'create', 'function', 'create', 'string', 'name', 'string', 'description', 'which', 'creates', 'a', 'folder', 'but', 'from', 'what', 'i', 'see', 'it', 'creates', 'it', 'in', 'the', 'current', 'directory', 'where', 'i', 'run', 'the', 'script', 'is', 'there', 'any', 'way', 'that', 'running', 'the', 'script', 'in', 'the', 'm', 'module', 'from', 'the', 'c', 'folder', 'of', 'the', 'p', 'project', 'generates', 'a', 'folder', 'with', 'the', 'same', 'name', 'c', 'but', 'inside', 'the', 'new', 'np', 'project', 'thanks']","['from', 'the', 'dxl', 'manual', 'the', 'name', 'argument', 'can', 'be', 'an', 'absolute', 'or', 'relative', 'name', 'and', 'may', 'include', 'the', 'path', 'so', 'you', 'might', 'have', 'a', 'loop', 'like', 'project', 'p', 'project', 'p', 'item', 'i', 'for', 'i', 'in', 'p', 'do', 'if', 'type', 'i', 'folder', 'string', 'nname', 'name', 'i', 'create', 'np', 'sname', 'recursively', 'copy', 'the', 'content', 'of', 'the', 'folder', 'also', 'depending', 'on', 'your', 'needs', 'you', 'might', 'want', 'to', 'have', 'a', 'look', 'at', 'clipcopy', 'and', 'clippaste', 'which', 'duplicates', 'an', 'entire', 'hierarchy']","['trying', 'make', 'script', 'copy', 'content', 'one', 'project', 'another', 'ie', 'folder', 'module', 'dxl', 'seen', 'create', 'function', 'create', 'string', 'name', 'string', 'description', 'creates', 'folder', 'see', 'creates', 'current', 'directory', 'run', 'script', 'way', 'running', 'script', 'module', 'c', 'folder', 'p', 'project', 'generates', 'folder', 'name', 'c', 'inside', 'new', 'np', 'project', 'thanks']","['from', 'the', 'dxl', 'manual', 'the', 'name', 'argument', 'can', 'be', 'an', 'absolute', 'or', 'relative', 'name', 'and', 'may', 'include', 'the', 'path', 'so', 'you', 'might', 'have', 'a', 'loop', 'like', 'project', 'p', 'project', 'p', 'item', 'i', 'for', 'i', 'in', 'p', 'do', 'if', 'type', 'i', 'folder', 'string', 'nname', 'name', 'i', 'create', 'np', 'sname', 'recursively', 'copy', 'the', 'content', 'of', 'the', 'folder', 'also', 'depending', 'on', 'your', 'need', 'you', 'might', 'want', 'to', 'have', 'a', 'look', 'at', 'clipcopy', 'and', 'clippaste', 'which', 'duplicate', 'an', 'entire', 'hierarchy']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.896, 'pos': 0.104, 'compound': 0.8381}",0.0,3,Python Package Installation and Management,3query
70885058,can't install modified pafy version in heroku django,"<p>I made a django app with pafy (I used the modified version, because the official one gives errors check this <a href=""https://github.com/mps-youtube/pafy/pull/305"" rel=""nofollow noreferrer"">https://github.com/mps-youtube/pafy/pull/305</a>) and when I push it to heroku I get errors
here's the requirements.txt file</p>
<pre><code># asgiref @ file:///tmp/build/80754af9/asgiref_1625643473416/work
beautifulsoup4==4.10.0
certifi==2021.10.8
dj-database-url==0.5.0
# Django @ file:///tmp/build/80754af9/django_1625585912945/work
django-bootstrap-datepicker-plus==4.0.0
django-bootstrap4==21.2
django-heroku==0.3.1
Faker==11.3.0
gunicorn==20.1.0
# psycopg2 @ file:///tmp/build/80754af9/psycopg2_1612298595717/work
python-dateutil==2.8.2
pytz==2021.3
six==1.16.0
soupsieve==2.3.1
# sqlparse @ file:///tmp/build/80754af9/sqlparse_1602184451250/work
text-unidecode==1.3
# typing-extensions @ file:///tmp/build/80754af9/typing_extensions_1631814937681/work
whitenoise==5.3.0
# pafy==0.5.5
# youtube_dl==2021.12.17
youtube-dl==2021.6.6
pafy
-e git+git://github.com/Cupcakus/pafy.git@develop#egg=pafy
</code></pre>
<p>I tried removing pafy, tried other versions but it doesn't solve it
here's the log</p>
<pre><code>-----&gt; Building on the Heroku-20 stack
-----&gt; Using buildpack: heroku/python
-----&gt; Python app detected
-----&gt; Using Python version specified in runtime.txt
-----&gt; Requirements file has been changed, clearing cached dependencies
-----&gt; Installing python-3.9.10
-----&gt; Installing pip 21.3.1, setuptools 57.5.0 and wheel 0.37.0
-----&gt; Installing SQLite3
-----&gt; Installing requirements with pip
       Obtaining pafy from git+git://github.com/Cupcakus/pafy.git@develop#egg=pafy (from -r /tmp/build_9f9c42b0/requirements.txt (line 24))
         Cloning git://github.com/Cupcakus/pafy.git (to revision develop) to /app/.heroku/src/pafy
         Running command git clone --filter=blob:none -q git://github.com/Cupcakus/pafy.git /app/.heroku/src/pafy
         Resolved git://github.com/Cupcakus/pafy.git to commit 45f0deb067bf7c420cdf83a0529fd5274c12de18
         Preparing metadata (setup.py): started
         Preparing metadata (setup.py): finished with status 'error'
         ERROR: Command errored out with exit status 1:
          command: /app/.heroku/python/bin/python -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '&quot;'&quot;'/app/.heroku/src/pafy/setup.py'&quot;'&quot;'; __file__='&quot;'&quot;'/app/.heroku/src/pafy/setup.py'&quot;'&quot;';f = getattr(tokenize, '&quot;'&quot;'open'&quot;'&quot;', open)(__file__) if os.path.exists(__file__) else io.StringIO('&quot;'&quot;'from setuptools import setup; setup()'&quot;'&quot;');code = f.read().replace('&quot;'&quot;'\r\n'&quot;'&quot;', '&quot;'&quot;'\n'&quot;'&quot;');f.close();exec(compile(code, __file__, '&quot;'&quot;'exec'&quot;'&quot;'))' egg_info --egg-base /tmp/pip-pip-egg-info-eu9a5bj6
              cwd: /app/.heroku/src/pafy/
         Complete output (16 lines):
         Traceback (most recent call last):
           File &quot;/app/.heroku/src/pafy/pafy/pafy.py&quot;, line 48, in &lt;module&gt;
             import youtube_dl
         ModuleNotFoundError: No module named 'youtube_dl'
         
         During handling of the above exception, another exception occurred:
         
         Traceback (most recent call last):
           File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;
           File &quot;/app/.heroku/src/pafy/setup.py&quot;, line 13, in &lt;module&gt;
             from pafy import __version__
           File &quot;/app/.heroku/src/pafy/pafy/__init__.py&quot;, line 7, in &lt;module&gt;
             from .pafy import new
           File &quot;/app/.heroku/src/pafy/pafy/pafy.py&quot;, line 51, in &lt;module&gt;
             raise ImportError(
         ImportError: pafy: youtube-dl not found; you can use the internal backend by setting the environmental variable PAFY_BACKEND to &quot;internal&quot;. It is not enabled by default because it is not as well maintained as the youtube-dl backend.
         ----------------------------------------
       WARNING: Discarding git+git://github.com/Cupcakus/pafy.git@develop#egg=pafy. Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.
       Collecting beautifulsoup4==4.10.0
         Downloading beautifulsoup4-4.10.0-py3-none-any.whl (97 kB)
       Collecting certifi==2021.10.8
         Downloading certifi-2021.10.8-py2.py3-none-any.whl (149 kB)
       Collecting dj-database-url==0.5.0
         Downloading dj_database_url-0.5.0-py2.py3-none-any.whl (5.5 kB)
       Collecting django-bootstrap-datepicker-plus==4.0.0
         Downloading django_bootstrap_datepicker_plus-4.0.0-py3-none-any.whl (16 kB)
       Collecting django-bootstrap4==21.2
         Downloading django_bootstrap4-21.2-py3-none-any.whl (24 kB)
       Collecting django-heroku==0.3.1
         Downloading django_heroku-0.3.1-py2.py3-none-any.whl (6.2 kB)
       Collecting Faker==11.3.0
         Downloading Faker-11.3.0-py3-none-any.whl (1.2 MB)
       Collecting gunicorn==20.1.0
         Downloading gunicorn-20.1.0-py3-none-any.whl (79 kB)
       Collecting python-dateutil==2.8.2
         Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
       Collecting pytz==2021.3
         Downloading pytz-2021.3-py2.py3-none-any.whl (503 kB)
       Collecting six==1.16.0
         Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)
       Collecting soupsieve==2.3.1
         Downloading soupsieve-2.3.1-py3-none-any.whl (37 kB)
       Collecting text-unidecode==1.3
         Downloading text_unidecode-1.3-py2.py3-none-any.whl (78 kB)
       Collecting whitenoise==5.3.0
         Downloading whitenoise-5.3.0-py2.py3-none-any.whl (19 kB)
       Collecting youtube-dl==2021.6.6
         Downloading youtube_dl-2021.6.6-py2.py3-none-any.whl (1.9 MB)
       Collecting pafy
         Downloading pafy-0.5.5-py2.py3-none-any.whl (35 kB)
       Collecting django&lt;5,&gt;=2
         Downloading Django-4.0.1-py3-none-any.whl (8.0 MB)
       Collecting psycopg2
         Downloading psycopg2-2.9.3.tar.gz (380 kB)
         Preparing metadata (setup.py): started
         Preparing metadata (setup.py): finished with status 'done'
       ERROR: Exception:
       Traceback (most recent call last):
         File &quot;/app/.heroku/python/lib/python3.9/site-packages/pip/_internal/cli/base_command.py&quot;, line 164, in exc_logging_wrapper
           status = run_func(*args)
         File &quot;/app/.heroku/python/lib/python3.9/site-packages/pip/_internal/cli/req_command.py&quot;, line 205, in wrapper
           return func(self, options, args)
         File &quot;/app/.heroku/python/lib/python3.9/site-packages/pip/_internal/commands/install.py&quot;, line 338, in run
           requirement_set = resolver.resolve(
         File &quot;/app/.heroku/python/lib/python3.9/site-packages/pip/_internal/resolution/resolvelib/resolver.py&quot;, line 92, in resolve
           result = self._result = resolver.resolve(
         File &quot;/app/.heroku/python/lib/python3.9/site-packages/pip/_vendor/resolvelib/resolvers.py&quot;, line 482, in resolve
           state = resolution.resolve(requirements, max_rounds=max_rounds)
         File &quot;/app/.heroku/python/lib/python3.9/site-packages/pip/_vendor/resolvelib/resolvers.py&quot;, line 374, in resolve
           failure_causes = self._attempt_to_pin_criterion(name)
         File &quot;/app/.heroku/python/lib/python3.9/site-packages/pip/_vendor/resolvelib/resolvers.py&quot;, line 228, in _attempt_to_pin_criterion
           raise InconsistentCandidate(candidate, criterion)
       pip._vendor.resolvelib.resolvers.InconsistentCandidate: Provided candidate LinkCandidate('https://files.pythonhosted.org/packages/74/69/829919eeadff695338f98fa12bb99e45490761a2010c8d688d88b6df194a/pafy-0.5.5-py2.py3-none-any.whl#sha256=769e35aa6988686d47fa2ab235d15c9952c7873c470f6a6b05cf6bcd93e62515 (from https://pypi.org/simple/pafy/)') does not satisfy SpecifierRequirement('pafy'), UnsatisfiableRequirement('pafy')
 !     Push rejected, failed to compile Python app.
 !     Push failed
</code></pre>
<p>EDIT: The problem was that I couldn't install youtube-dl before installing pafy (I was installing a specific version because of the bug that occured in pafy after youtube disabled the dislike count so I had to install another version) so I moved to pythonanywhere.com where I could use the terminal to install it manually and it worked fine.</p>
",<python><django><heroku><pip><requirements>,2022-01-27 20:07:23,207,0,1,70906459,"<p>I moved to pythonanywhere.com and it works fine now</p>
",2022-01,i made a django app with pafy i used the modified version because the official one gives errors check this https github com mps youtube pafy pull   and when i push it to heroku i get errors here s the requirements txt file asgiref file tmp build  af  asgiref_  work beautifulsoup        certifi       dj database url       django file tmp build  af  django_  work django bootstrap datepicker plus       django bootstrap      django heroku       faker       gunicorn       psycopg  file tmp build  af  psycopg _  work python dateutil       pytz     six       soupsieve       sqlparse file tmp build  af  sqlparse_  work text unidecode     typing extensions file tmp build  af  typing_extensions_  work whitenoise       pafy       youtube_dl       youtube dl       pafy e git git github com cupcakus pafy git develop egg pafy i tried removing pafy tried other versions but it doesn t solve it here s the log building on the heroku   stack using buildpack heroku python python app detected using python version specified in runtime txt requirements file has been changed clearing cached dependencies installing python       installing pip       setuptools       and wheel       installing sqlite  installing requirements with pip obtaining pafy from git git github com cupcakus pafy git develop egg pafy from r tmp build_ f c b  requirements txt line   cloning git github com cupcakus pafy git to revision develop to app heroku src pafy running command git clone filter blob none q git github com cupcakus pafy git app heroku src pafy resolved git github com cupcakus pafy git to commit  f deb bf c cdf a fd c de  preparing metadata setup py started preparing metadata setup py finished with status error error command errored out with exit status   command app heroku python bin python c import io os sys setuptools tokenize sys argv   app heroku src pafy setup py __file__ app heroku src pafy setup py f getattr tokenize open open __file__ if os path exists __file__ else io stringio from setuptools import setup setup code f read replace r n n f close exec compile code __file__ exec egg_info egg base tmp pip pip egg info eu a bj  cwd app heroku src pafy complete output   lines traceback most recent call last file app heroku src pafy pafy pafy py line   in module import youtube_dl modulenotfounderror no module named youtube_dl during handling of the above exception another exception occurred traceback most recent call last file string line   in module file app heroku src pafy setup py line   in module from pafy import __version__ file app heroku src pafy pafy __init__ py line   in module from pafy import new file app heroku src pafy pafy pafy py line   in module raise importerror importerror pafy youtube dl not found you can use the internal backend by setting the environmental variable pafy_backend to internal it is not enabled by default because it is not as well maintained as the youtube dl backend warning discarding git git github com cupcakus pafy git develop egg pafy command errored out with exit status   python setup py egg_info check the logs for full command output collecting beautifulsoup        downloading beautifulsoup        py  none any whl   kb collecting certifi       downloading certifi       py  py  none any whl   kb collecting dj database url       downloading dj_database_url       py  py  none any whl     kb collecting django bootstrap datepicker plus       downloading django_bootstrap_datepicker_plus       py  none any whl   kb collecting django bootstrap      downloading django_bootstrap      py  none any whl   kb collecting django heroku       downloading django_heroku       py  py  none any whl     kb collecting faker       downloading faker       py  none any whl     mb collecting gunicorn       downloading gunicorn       py  none any whl   kb collecting python dateutil       downloading python_dateutil       py  py  none any whl   kb collecting pytz     downloading pytz     py  py  none any whl   kb collecting six       downloading six       py  py  none any whl   kb collecting soupsieve       downloading soupsieve       py  none any whl   kb collecting text unidecode     downloading text_unidecode     py  py  none any whl   kb collecting whitenoise       downloading whitenoise       py  py  none any whl   kb collecting youtube dl       downloading youtube_dl       py  py  none any whl     mb collecting pafy downloading pafy       py  py  none any whl   kb collecting django     downloading django       py  none any whl     mb collecting psycopg  downloading psycopg        tar gz   kb preparing metadata setup py started preparing metadata setup py finished with status done error exception traceback most recent call last file app heroku python lib python    site packages pip _internal cli base_command py line   in exc_logging_wrapper status run_func args file app heroku python lib python    site packages pip _internal cli req_command py line   in wrapper return func self options args file app heroku python lib python    site packages pip _internal commands install py line   in run requirement_set resolver resolve file app heroku python lib python    site packages pip _internal resolution resolvelib resolver py line   in resolve result self _result resolver resolve file app heroku python lib python    site packages pip _vendor resolvelib resolvers py line   in resolve state resolution resolve requirements max_rounds max_rounds file app heroku python lib python    site packages pip _vendor resolvelib resolvers py line   in resolve failure_causes self _attempt_to_pin_criterion name file app heroku python lib python    site packages pip _vendor resolvelib resolvers py line   in _attempt_to_pin_criterion raise inconsistentcandidate candidate criterion pip _vendor resolvelib resolvers inconsistentcandidate provided candidate linkcandidate https files pythonhosted org packages      eeadff f fa bb e a c d d b df a pafy       py  py  none any whl sha   e aa d fa ab d c c c f a b cf bcd e  from https pypi org simple pafy does not satisfy specifierrequirement pafy unsatisfiablerequirement pafy push rejected failed to compile python app push failed edit the problem was that i couldn t install youtube dl before installing pafy i was installing a specific version because of the bug that occured in pafy after youtube disabled the dislike count so i had to install another version so i moved to pythonanywhere com where i could use the terminal to install it manually and it worked fine,i moved to pythonanywhere com and it works fine now,"['python', 'django', 'heroku', 'pip', 'requirements']","['i', 'made', 'a', 'django', 'app', 'with', 'pafy', 'i', 'used', 'the', 'modified', 'version', 'because', 'the', 'official', 'one', 'gives', 'errors', 'check', 'this', 'https', 'github', 'com', 'mps', 'youtube', 'pafy', 'pull', 'and', 'when', 'i', 'push', 'it', 'to', 'heroku', 'i', 'get', 'errors', 'here', 's', 'the', 'requirements', 'txt', 'file', 'asgiref', 'file', 'tmp', 'build', 'af', 'asgiref_', 'work', 'beautifulsoup', 'certifi', 'dj', 'database', 'url', 'django', 'file', 'tmp', 'build', 'af', 'django_', 'work', 'django', 'bootstrap', 'datepicker', 'plus', 'django', 'bootstrap', 'django', 'heroku', 'faker', 'gunicorn', 'psycopg', 'file', 'tmp', 'build', 'af', 'psycopg', '_', 'work', 'python', 'dateutil', 'pytz', 'six', 'soupsieve', 'sqlparse', 'file', 'tmp', 'build', 'af', 'sqlparse_', 'work', 'text', 'unidecode', 'typing', 'extensions', 'file', 'tmp', 'build', 'af', 'typing_extensions_', 'work', 'whitenoise', 'pafy', 'youtube_dl', 'youtube', 'dl', 'pafy', 'e', 'git', 'git', 'github', 'com', 'cupcakus', 'pafy', 'git', 'develop', 'egg', 'pafy', 'i', 'tried', 'removing', 'pafy', 'tried', 'other', 'versions', 'but', 'it', 'doesn', 't', 'solve', 'it', 'here', 's', 'the', 'log', 'building', 'on', 'the', 'heroku', 'stack', 'using', 'buildpack', 'heroku', 'python', 'python', 'app', 'detected', 'using', 'python', 'version', 'specified', 'in', 'runtime', 'txt', 'requirements', 'file', 'has', 'been', 'changed', 'clearing', 'cached', 'dependencies', 'installing', 'python', 'installing', 'pip', 'setuptools', 'and', 'wheel', 'installing', 'sqlite', 'installing', 'requirements', 'with', 'pip', 'obtaining', 'pafy', 'from', 'git', 'git', 'github', 'com', 'cupcakus', 'pafy', 'git', 'develop', 'egg', 'pafy', 'from', 'r', 'tmp', 'build_', 'f', 'c', 'b', 'requirements', 'txt', 'line', 'cloning', 'git', 'github', 'com', 'cupcakus', 'pafy', 'git', 'to', 'revision', 'develop', 'to', 'app', 'heroku', 'src', 'pafy', 'running', 'command', 'git', 'clone', 'filter', 'blob', 'none', 'q', 'git', 'github', 'com', 'cupcakus', 'pafy', 'git', 'app', 'heroku', 'src', 'pafy', 'resolved', 'git', 'github', 'com', 'cupcakus', 'pafy', 'git', 'to', 'commit', 'f', 'deb', 'bf', 'c', 'cdf', 'a', 'fd', 'c', 'de', 'preparing', 'metadata', 'setup', 'py', 'started', 'preparing', 'metadata', 'setup', 'py', 'finished', 'with', 'status', 'error', 'error', 'command', 'errored', 'out', 'with', 'exit', 'status', 'command', 'app', 'heroku', 'python', 'bin', 'python', 'c', 'import', 'io', 'os', 'sys', 'setuptools', 'tokenize', 'sys', 'argv', 'app', 'heroku', 'src', 'pafy', 'setup', 'py', '__file__', 'app', 'heroku', 'src', 'pafy', 'setup', 'py', 'f', 'getattr', 'tokenize', 'open', 'open', '__file__', 'if', 'os', 'path', 'exists', '__file__', 'else', 'io', 'stringio', 'from', 'setuptools', 'import', 'setup', 'setup', 'code', 'f', 'read', 'replace', 'r', 'n', 'n', 'f', 'close', 'exec', 'compile', 'code', '__file__', 'exec', 'egg_info', 'egg', 'base', 'tmp', 'pip', 'pip', 'egg', 'info', 'eu', 'a', 'bj', 'cwd', 'app', 'heroku', 'src', 'pafy', 'complete', 'output', 'lines', 'traceback', 'most', 'recent', 'call', 'last', 'file', 'app', 'heroku', 'src', 'pafy', 'pafy', 'pafy', 'py', 'line', 'in', 'module', 'import', 'youtube_dl', 'modulenotfounderror', 'no', 'module', 'named', 'youtube_dl', 'during', 'handling', 'of', 'the', 'above', 'exception', 'another', 'exception', 'occurred', 'traceback', 'most', 'recent', 'call', 'last', 'file', 'string', 'line', 'in', 'module', 'file', 'app', 'heroku', 'src', 'pafy', 'setup', 'py', 'line', 'in', 'module', 'from', 'pafy', 'import', '__version__', 'file', 'app', 'heroku', 'src', 'pafy', 'pafy', '__init__', 'py', 'line', 'in', 'module', 'from', 'pafy', 'import', 'new', 'file', 'app', 'heroku', 'src', 'pafy', 'pafy', 'pafy', 'py', 'line', 'in', 'module', 'raise', 'importerror', 'importerror', 'pafy', 'youtube', 'dl', 'not', 'found', 'you', 'can', 'use', 'the', 'internal', 'backend', 'by', 'setting', 'the', 'environmental', 'variable', 'pafy_backend', 'to', 'internal', 'it', 'is', 'not', 'enabled', 'by', 'default', 'because', 'it', 'is', 'not', 'as', 'well', 'maintained', 'as', 'the', 'youtube', 'dl', 'backend', 'warning', 'discarding', 'git', 'git', 'github', 'com', 'cupcakus', 'pafy', 'git', 'develop', 'egg', 'pafy', 'command', 'errored', 'out', 'with', 'exit', 'status', 'python', 'setup', 'py', 'egg_info', 'check', 'the', 'logs', 'for', 'full', 'command', 'output', 'collecting', 'beautifulsoup', 'downloading', 'beautifulsoup', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'certifi', 'downloading', 'certifi', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'dj', 'database', 'url', 'downloading', 'dj_database_url', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'django', 'bootstrap', 'datepicker', 'plus', 'downloading', 'django_bootstrap_datepicker_plus', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'django', 'bootstrap', 'downloading', 'django_bootstrap', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'django', 'heroku', 'downloading', 'django_heroku', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'faker', 'downloading', 'faker', 'py', 'none', 'any', 'whl', 'mb', 'collecting', 'gunicorn', 'downloading', 'gunicorn', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'python', 'dateutil', 'downloading', 'python_dateutil', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'pytz', 'downloading', 'pytz', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'six', 'downloading', 'six', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'soupsieve', 'downloading', 'soupsieve', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'text', 'unidecode', 'downloading', 'text_unidecode', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'whitenoise', 'downloading', 'whitenoise', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'youtube', 'dl', 'downloading', 'youtube_dl', 'py', 'py', 'none', 'any', 'whl', 'mb', 'collecting', 'pafy', 'downloading', 'pafy', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'django', 'downloading', 'django', 'py', 'none', 'any', 'whl', 'mb', 'collecting', 'psycopg', 'downloading', 'psycopg', 'tar', 'gz', 'kb', 'preparing', 'metadata', 'setup', 'py', 'started', 'preparing', 'metadata', 'setup', 'py', 'finished', 'with', 'status', 'done', 'error', 'exception', 'traceback', 'most', 'recent', 'call', 'last', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'packages', 'pip', '_internal', 'cli', 'base_command', 'py', 'line', 'in', 'exc_logging_wrapper', 'status', 'run_func', 'args', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'packages', 'pip', '_internal', 'cli', 'req_command', 'py', 'line', 'in', 'wrapper', 'return', 'func', 'self', 'options', 'args', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'packages', 'pip', '_internal', 'commands', 'install', 'py', 'line', 'in', 'run', 'requirement_set', 'resolver', 'resolve', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'packages', 'pip', '_internal', 'resolution', 'resolvelib', 'resolver', 'py', 'line', 'in', 'resolve', 'result', 'self', '_result', 'resolver', 'resolve', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'packages', 'pip', '_vendor', 'resolvelib', 'resolvers', 'py', 'line', 'in', 'resolve', 'state', 'resolution', 'resolve', 'requirements', 'max_rounds', 'max_rounds', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'packages', 'pip', '_vendor', 'resolvelib', 'resolvers', 'py', 'line', 'in', 'resolve', 'failure_causes', 'self', '_attempt_to_pin_criterion', 'name', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'packages', 'pip', '_vendor', 'resolvelib', 'resolvers', 'py', 'line', 'in', '_attempt_to_pin_criterion', 'raise', 'inconsistentcandidate', 'candidate', 'criterion', 'pip', '_vendor', 'resolvelib', 'resolvers', 'inconsistentcandidate', 'provided', 'candidate', 'linkcandidate', 'https', 'files', 'pythonhosted', 'org', 'packages', 'eeadff', 'f', 'fa', 'bb', 'e', 'a', 'c', 'd', 'd', 'b', 'df', 'a', 'pafy', 'py', 'py', 'none', 'any', 'whl', 'sha', 'e', 'aa', 'd', 'fa', 'ab', 'd', 'c', 'c', 'c', 'f', 'a', 'b', 'cf', 'bcd', 'e', 'from', 'https', 'pypi', 'org', 'simple', 'pafy', 'does', 'not', 'satisfy', 'specifierrequirement', 'pafy', 'unsatisfiablerequirement', 'pafy', 'push', 'rejected', 'failed', 'to', 'compile', 'python', 'app', 'push', 'failed', 'edit', 'the', 'problem', 'was', 'that', 'i', 'couldn', 't', 'install', 'youtube', 'dl', 'before', 'installing', 'pafy', 'i', 'was', 'installing', 'a', 'specific', 'version', 'because', 'of', 'the', 'bug', 'that', 'occured', 'in', 'pafy', 'after', 'youtube', 'disabled', 'the', 'dislike', 'count', 'so', 'i', 'had', 'to', 'install', 'another', 'version', 'so', 'i', 'moved', 'to', 'pythonanywhere', 'com', 'where', 'i', 'could', 'use', 'the', 'terminal', 'to', 'install', 'it', 'manually', 'and', 'it', 'worked', 'fine']","['i', 'moved', 'to', 'pythonanywhere', 'com', 'and', 'it', 'works', 'fine', 'now']","['made', 'django', 'app', 'pafy', 'used', 'modified', 'version', 'official', 'one', 'give', 'error', 'check', 'http', 'github', 'com', 'mp', 'youtube', 'pafy', 'pull', 'push', 'heroku', 'get', 'error', 'requirement', 'txt', 'file', 'asgiref', 'file', 'tmp', 'build', 'af', 'asgiref_', 'work', 'beautifulsoup', 'certifi', 'dj', 'database', 'url', 'django', 'file', 'tmp', 'build', 'af', 'django_', 'work', 'django', 'bootstrap', 'datepicker', 'plus', 'django', 'bootstrap', 'django', 'heroku', 'faker', 'gunicorn', 'psycopg', 'file', 'tmp', 'build', 'af', 'psycopg', '_', 'work', 'python', 'dateutil', 'pytz', 'six', 'soupsieve', 'sqlparse', 'file', 'tmp', 'build', 'af', 'sqlparse_', 'work', 'text', 'unidecode', 'typing', 'extension', 'file', 'tmp', 'build', 'af', 'typing_extensions_', 'work', 'whitenoise', 'pafy', 'youtube_dl', 'youtube', 'dl', 'pafy', 'e', 'git', 'git', 'github', 'com', 'cupcakus', 'pafy', 'git', 'develop', 'egg', 'pafy', 'tried', 'removing', 'pafy', 'tried', 'version', 'solve', 'log', 'building', 'heroku', 'stack', 'using', 'buildpack', 'heroku', 'python', 'python', 'app', 'detected', 'using', 'python', 'version', 'specified', 'runtime', 'txt', 'requirement', 'file', 'ha', 'changed', 'clearing', 'cached', 'dependency', 'installing', 'python', 'installing', 'pip', 'setuptools', 'wheel', 'installing', 'sqlite', 'installing', 'requirement', 'pip', 'obtaining', 'pafy', 'git', 'git', 'github', 'com', 'cupcakus', 'pafy', 'git', 'develop', 'egg', 'pafy', 'r', 'tmp', 'build_', 'f', 'c', 'b', 'requirement', 'txt', 'line', 'cloning', 'git', 'github', 'com', 'cupcakus', 'pafy', 'git', 'revision', 'develop', 'app', 'heroku', 'src', 'pafy', 'running', 'command', 'git', 'clone', 'filter', 'blob', 'none', 'q', 'git', 'github', 'com', 'cupcakus', 'pafy', 'git', 'app', 'heroku', 'src', 'pafy', 'resolved', 'git', 'github', 'com', 'cupcakus', 'pafy', 'git', 'commit', 'f', 'deb', 'bf', 'c', 'cdf', 'fd', 'c', 'de', 'preparing', 'metadata', 'setup', 'py', 'started', 'preparing', 'metadata', 'setup', 'py', 'finished', 'status', 'error', 'error', 'command', 'errored', 'exit', 'status', 'command', 'app', 'heroku', 'python', 'bin', 'python', 'c', 'import', 'io', 'sys', 'setuptools', 'tokenize', 'sys', 'argv', 'app', 'heroku', 'src', 'pafy', 'setup', 'py', '__file__', 'app', 'heroku', 'src', 'pafy', 'setup', 'py', 'f', 'getattr', 'tokenize', 'open', 'open', '__file__', 'path', 'exists', '__file__', 'else', 'io', 'stringio', 'setuptools', 'import', 'setup', 'setup', 'code', 'f', 'read', 'replace', 'r', 'n', 'n', 'f', 'close', 'exec', 'compile', 'code', '__file__', 'exec', 'egg_info', 'egg', 'base', 'tmp', 'pip', 'pip', 'egg', 'info', 'eu', 'bj', 'cwd', 'app', 'heroku', 'src', 'pafy', 'complete', 'output', 'line', 'traceback', 'recent', 'call', 'last', 'file', 'app', 'heroku', 'src', 'pafy', 'pafy', 'pafy', 'py', 'line', 'module', 'import', 'youtube_dl', 'modulenotfounderror', 'module', 'named', 'youtube_dl', 'handling', 'exception', 'another', 'exception', 'occurred', 'traceback', 'recent', 'call', 'last', 'file', 'string', 'line', 'module', 'file', 'app', 'heroku', 'src', 'pafy', 'setup', 'py', 'line', 'module', 'pafy', 'import', '__version__', 'file', 'app', 'heroku', 'src', 'pafy', 'pafy', '__init__', 'py', 'line', 'module', 'pafy', 'import', 'new', 'file', 'app', 'heroku', 'src', 'pafy', 'pafy', 'pafy', 'py', 'line', 'module', 'raise', 'importerror', 'importerror', 'pafy', 'youtube', 'dl', 'found', 'use', 'internal', 'backend', 'setting', 'environmental', 'variable', 'pafy_backend', 'internal', 'enabled', 'default', 'well', 'maintained', 'youtube', 'dl', 'backend', 'warning', 'discarding', 'git', 'git', 'github', 'com', 'cupcakus', 'pafy', 'git', 'develop', 'egg', 'pafy', 'command', 'errored', 'exit', 'status', 'python', 'setup', 'py', 'egg_info', 'check', 'log', 'full', 'command', 'output', 'collecting', 'beautifulsoup', 'downloading', 'beautifulsoup', 'py', 'none', 'whl', 'kb', 'collecting', 'certifi', 'downloading', 'certifi', 'py', 'py', 'none', 'whl', 'kb', 'collecting', 'dj', 'database', 'url', 'downloading', 'dj_database_url', 'py', 'py', 'none', 'whl', 'kb', 'collecting', 'django', 'bootstrap', 'datepicker', 'plus', 'downloading', 'django_bootstrap_datepicker_plus', 'py', 'none', 'whl', 'kb', 'collecting', 'django', 'bootstrap', 'downloading', 'django_bootstrap', 'py', 'none', 'whl', 'kb', 'collecting', 'django', 'heroku', 'downloading', 'django_heroku', 'py', 'py', 'none', 'whl', 'kb', 'collecting', 'faker', 'downloading', 'faker', 'py', 'none', 'whl', 'mb', 'collecting', 'gunicorn', 'downloading', 'gunicorn', 'py', 'none', 'whl', 'kb', 'collecting', 'python', 'dateutil', 'downloading', 'python_dateutil', 'py', 'py', 'none', 'whl', 'kb', 'collecting', 'pytz', 'downloading', 'pytz', 'py', 'py', 'none', 'whl', 'kb', 'collecting', 'six', 'downloading', 'six', 'py', 'py', 'none', 'whl', 'kb', 'collecting', 'soupsieve', 'downloading', 'soupsieve', 'py', 'none', 'whl', 'kb', 'collecting', 'text', 'unidecode', 'downloading', 'text_unidecode', 'py', 'py', 'none', 'whl', 'kb', 'collecting', 'whitenoise', 'downloading', 'whitenoise', 'py', 'py', 'none', 'whl', 'kb', 'collecting', 'youtube', 'dl', 'downloading', 'youtube_dl', 'py', 'py', 'none', 'whl', 'mb', 'collecting', 'pafy', 'downloading', 'pafy', 'py', 'py', 'none', 'whl', 'kb', 'collecting', 'django', 'downloading', 'django', 'py', 'none', 'whl', 'mb', 'collecting', 'psycopg', 'downloading', 'psycopg', 'tar', 'gz', 'kb', 'preparing', 'metadata', 'setup', 'py', 'started', 'preparing', 'metadata', 'setup', 'py', 'finished', 'status', 'done', 'error', 'exception', 'traceback', 'recent', 'call', 'last', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'package', 'pip', '_internal', 'cli', 'base_command', 'py', 'line', 'exc_logging_wrapper', 'status', 'run_func', 'args', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'package', 'pip', '_internal', 'cli', 'req_command', 'py', 'line', 'wrapper', 'return', 'func', 'self', 'option', 'args', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'package', 'pip', '_internal', 'command', 'install', 'py', 'line', 'run', 'requirement_set', 'resolver', 'resolve', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'package', 'pip', '_internal', 'resolution', 'resolvelib', 'resolver', 'py', 'line', 'resolve', 'result', 'self', '_result', 'resolver', 'resolve', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'package', 'pip', '_vendor', 'resolvelib', 'resolvers', 'py', 'line', 'resolve', 'state', 'resolution', 'resolve', 'requirement', 'max_rounds', 'max_rounds', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'package', 'pip', '_vendor', 'resolvelib', 'resolvers', 'py', 'line', 'resolve', 'failure_causes', 'self', '_attempt_to_pin_criterion', 'name', 'file', 'app', 'heroku', 'python', 'lib', 'python', 'site', 'package', 'pip', '_vendor', 'resolvelib', 'resolvers', 'py', 'line', '_attempt_to_pin_criterion', 'raise', 'inconsistentcandidate', 'candidate', 'criterion', 'pip', '_vendor', 'resolvelib', 'resolvers', 'inconsistentcandidate', 'provided', 'candidate', 'linkcandidate', 'http', 'file', 'pythonhosted', 'org', 'package', 'eeadff', 'f', 'fa', 'bb', 'e', 'c', 'b', 'df', 'pafy', 'py', 'py', 'none', 'whl', 'sha', 'e', 'aa', 'fa', 'ab', 'c', 'c', 'c', 'f', 'b', 'cf', 'bcd', 'e', 'http', 'pypi', 'org', 'simple', 'pafy', 'doe', 'satisfy', 'specifierrequirement', 'pafy', 'unsatisfiablerequirement', 'pafy', 'push', 'rejected', 'failed', 'compile', 'python', 'app', 'push', 'failed', 'edit', 'problem', 'wa', 'install', 'youtube', 'dl', 'installing', 'pafy', 'wa', 'installing', 'specific', 'version', 'bug', 'occured', 'pafy', 'youtube', 'disabled', 'dislike', 'count', 'install', 'another', 'version', 'moved', 'pythonanywhere', 'com', 'could', 'use', 'terminal', 'install', 'manually', 'worked', 'fine']","['i', 'moved', 'to', 'pythonanywhere', 'com', 'and', 'it', 'work', 'fine', 'now']",Package Management and File Handling,4,"{'neg': 0.077, 'neu': 0.899, 'pos': 0.023, 'compound': -0.9881}",0.03181818181818182,4,Building and Compiling Python Projects,3query
70750487,What should look like to be my requirements.txt file?,"<p>I want to deploy a python script on Heroku cloud via GitHub and I am using these python libraries, Module, API</p>
<pre><code>from amazon_paapi import AmazonApi
import base64
import requests
import random
import time
</code></pre>
<p>What should look like to be my requirements.txt file?</p>
",<python-3.x><github><heroku><requirements>,2022-01-18 04:59:50,38,-2,1,70750552,"<p>As base64, random and time are default libraries, your requirements.txt should look like:</p>
<pre><code>python-amazon-paapi
requests
</code></pre>
<p>You can have a requirements.txt with or without version specifiers. For example:</p>
<pre><code>[package name] == 0.6.1             # Version Matching. Must be version 0.6.1
[package name] &gt;= 4.1.1             # Minimum version 4.1.1
[package name] != 3.5               # Version Exclusion. Anything except version 3.5
[package name]                      # no specified version
[package name]                      # no specified version
</code></pre>
",2022-01,i want to deploy a python script on heroku cloud via github and i am using these python libraries module api from amazon_paapi import amazonapi import base  import requests import random import time what should look like to be my requirements txt file,as base  random and time are default libraries your requirements txt should look like python amazon paapi requests you can have a requirements txt with or without version specifiers for example package name       version matching must be version       package name       minimum version       package name     version exclusion anything except version     package name no specified version package name no specified version,"['python-3.x', 'github', 'heroku', 'requirements']","['i', 'want', 'to', 'deploy', 'a', 'python', 'script', 'on', 'heroku', 'cloud', 'via', 'github', 'and', 'i', 'am', 'using', 'these', 'python', 'libraries', 'module', 'api', 'from', 'amazon_paapi', 'import', 'amazonapi', 'import', 'base', 'import', 'requests', 'import', 'random', 'import', 'time', 'what', 'should', 'look', 'like', 'to', 'be', 'my', 'requirements', 'txt', 'file']","['as', 'base', 'random', 'and', 'time', 'are', 'default', 'libraries', 'your', 'requirements', 'txt', 'should', 'look', 'like', 'python', 'amazon', 'paapi', 'requests', 'you', 'can', 'have', 'a', 'requirements', 'txt', 'with', 'or', 'without', 'version', 'specifiers', 'for', 'example', 'package', 'name', 'version', 'matching', 'must', 'be', 'version', 'package', 'name', 'minimum', 'version', 'package', 'name', 'version', 'exclusion', 'anything', 'except', 'version', 'package', 'name', 'no', 'specified', 'version', 'package', 'name', 'no', 'specified', 'version']","['want', 'deploy', 'python', 'script', 'heroku', 'cloud', 'via', 'github', 'using', 'python', 'library', 'module', 'api', 'amazon_paapi', 'import', 'amazonapi', 'import', 'base', 'import', 'request', 'import', 'random', 'import', 'time', 'look', 'like', 'requirement', 'txt', 'file']","['a', 'base', 'random', 'and', 'time', 'are', 'default', 'library', 'your', 'requirement', 'txt', 'should', 'look', 'like', 'python', 'amazon', 'paapi', 'request', 'you', 'can', 'have', 'a', 'requirement', 'txt', 'with', 'or', 'without', 'version', 'specifier', 'for', 'example', 'package', 'name', 'version', 'matching', 'must', 'be', 'version', 'package', 'name', 'minimum', 'version', 'package', 'name', 'version', 'exclusion', 'anything', 'except', 'version', 'package', 'name', 'no', 'specified', 'version', 'package', 'name', 'no', 'specified', 'version']",System Requirements and AWS,1,"{'neg': 0.0, 'neu': 0.911, 'pos': 0.089, 'compound': 0.4215}",-0.5,1,Package Management and File Handling,3query
70690092,Clients requirements on use case diagram,"<p>I want to create a use case diagram based on customer requirements (pnline food ordering system), which are for example</p>
<ol>
<li>ensure on-time delivery</li>
<li>process and package orders</li>
<li>promote the pizza shop</li>
</ol>
<p>How can I put these requirements on use case diagram? Could you please explain on specific example?</p>
<p>for 1) could it be like that:
display order details &lt; inlcude &gt; display time left to prepare order</p>
",<uml><diagram><use-case><requirements><use-case-diagram>,2022-01-13 00:32:58,113,3,3,70690240,"<p>Use cases describe operations, requirements are part of operations' restrictions.</p>
<p>First, model the operations or activities of the customer, then add the requirements as constraints of each use case.</p>
",2022-01,i want to create a use case diagram based on customer requirements pnline food ordering system which are for example ensure on time delivery process and package orders promote the pizza shop how can i put these requirements on use case diagram could you please explain on specific example for   could it be like that display order details inlcude display time left to prepare order,use cases describe operations requirements are part of operations restrictions first model the operations or activities of the customer then add the requirements as constraints of each use case,"['uml', 'diagram', 'use-case', 'requirements', 'use-case-diagram']","['i', 'want', 'to', 'create', 'a', 'use', 'case', 'diagram', 'based', 'on', 'customer', 'requirements', 'pnline', 'food', 'ordering', 'system', 'which', 'are', 'for', 'example', 'ensure', 'on', 'time', 'delivery', 'process', 'and', 'package', 'orders', 'promote', 'the', 'pizza', 'shop', 'how', 'can', 'i', 'put', 'these', 'requirements', 'on', 'use', 'case', 'diagram', 'could', 'you', 'please', 'explain', 'on', 'specific', 'example', 'for', 'could', 'it', 'be', 'like', 'that', 'display', 'order', 'details', 'inlcude', 'display', 'time', 'left', 'to', 'prepare', 'order']","['use', 'cases', 'describe', 'operations', 'requirements', 'are', 'part', 'of', 'operations', 'restrictions', 'first', 'model', 'the', 'operations', 'or', 'activities', 'of', 'the', 'customer', 'then', 'add', 'the', 'requirements', 'as', 'constraints', 'of', 'each', 'use', 'case']","['want', 'create', 'use', 'case', 'diagram', 'based', 'customer', 'requirement', 'pnline', 'food', 'ordering', 'system', 'example', 'ensure', 'time', 'delivery', 'process', 'package', 'order', 'promote', 'pizza', 'shop', 'put', 'requirement', 'use', 'case', 'diagram', 'could', 'please', 'explain', 'specific', 'example', 'could', 'like', 'display', 'order', 'detail', 'inlcude', 'display', 'time', 'left', 'prepare', 'order']","['use', 'case', 'describe', 'operation', 'requirement', 'are', 'part', 'of', 'operation', 'restriction', 'first', 'model', 'the', 'operation', 'or', 'activity', 'of', 'the', 'customer', 'then', 'add', 'the', 'requirement', 'a', 'constraint', 'of', 'each', 'use', 'case']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 0.88, 'pos': 0.12, 'compound': 0.7622}",0.0,0,System Requirements and AWS,3query
70690092,Clients requirements on use case diagram,"<p>I want to create a use case diagram based on customer requirements (pnline food ordering system), which are for example</p>
<ol>
<li>ensure on-time delivery</li>
<li>process and package orders</li>
<li>promote the pizza shop</li>
</ol>
<p>How can I put these requirements on use case diagram? Could you please explain on specific example?</p>
<p>for 1) could it be like that:
display order details &lt; inlcude &gt; display time left to prepare order</p>
",<uml><diagram><use-case><requirements><use-case-diagram>,2022-01-13 00:32:58,113,3,3,70694712,"<p>There are a couple of ways how to model that. The first step is always to read and understand the requirements. So putting them in some sort of order is vital. There are dedicated tools to deal with that and they may or may not be helpful (I'm talking of DOORS and the like). A more simple way is to create a profile for requirements management in UML that contains requirements elements where you can reference the customer documents and already put them in a certain structure.</p>
<p>Now in the next step you <em>synthesize</em> these requirements to use cases. That is you pinpoint the added values and make them visible. Actors and UCs shall be clearly visible.</p>
<p>Once you have done that you relate UC and requirement elements with realize relations (or some other stereotyped dependency depending on the profile you use). This way you have a nice traceability that connects requirements and UC for the upcoming design steps.</p>
<p>A more simple approach would be to just attach constraints to an elaborated UC model containing requirement text. That could be done for simple (school) projects. Though it's unlikely you find that in the industry. Either you go to war (see above) or you have just a little chit-chat with some insults.</p>
<hr />
<p>Regarding the synthesis of UCs I recommend to read Bittner/Spence about Use Case Modeling. The best read you can find.</p>
",2022-01,i want to create a use case diagram based on customer requirements pnline food ordering system which are for example ensure on time delivery process and package orders promote the pizza shop how can i put these requirements on use case diagram could you please explain on specific example for   could it be like that display order details inlcude display time left to prepare order,there are a couple of ways how to model that the first step is always to read and understand the requirements so putting them in some sort of order is vital there are dedicated tools to deal with that and they may or may not be helpful i m talking of doors and the like a more simple way is to create a profile for requirements management in uml that contains requirements elements where you can reference the customer documents and already put them in a certain structure now in the next step you synthesize these requirements to use cases that is you pinpoint the added values and make them visible actors and ucs shall be clearly visible once you have done that you relate uc and requirement elements with realize relations or some other stereotyped dependency depending on the profile you use this way you have a nice traceability that connects requirements and uc for the upcoming design steps a more simple approach would be to just attach constraints to an elaborated uc model containing requirement text that could be done for simple school projects though it s unlikely you find that in the industry either you go to war see above or you have just a little chit chat with some insults regarding the synthesis of ucs i recommend to read bittner spence about use case modeling the best read you can find,"['uml', 'diagram', 'use-case', 'requirements', 'use-case-diagram']","['i', 'want', 'to', 'create', 'a', 'use', 'case', 'diagram', 'based', 'on', 'customer', 'requirements', 'pnline', 'food', 'ordering', 'system', 'which', 'are', 'for', 'example', 'ensure', 'on', 'time', 'delivery', 'process', 'and', 'package', 'orders', 'promote', 'the', 'pizza', 'shop', 'how', 'can', 'i', 'put', 'these', 'requirements', 'on', 'use', 'case', 'diagram', 'could', 'you', 'please', 'explain', 'on', 'specific', 'example', 'for', 'could', 'it', 'be', 'like', 'that', 'display', 'order', 'details', 'inlcude', 'display', 'time', 'left', 'to', 'prepare', 'order']","['there', 'are', 'a', 'couple', 'of', 'ways', 'how', 'to', 'model', 'that', 'the', 'first', 'step', 'is', 'always', 'to', 'read', 'and', 'understand', 'the', 'requirements', 'so', 'putting', 'them', 'in', 'some', 'sort', 'of', 'order', 'is', 'vital', 'there', 'are', 'dedicated', 'tools', 'to', 'deal', 'with', 'that', 'and', 'they', 'may', 'or', 'may', 'not', 'be', 'helpful', 'i', 'm', 'talking', 'of', 'doors', 'and', 'the', 'like', 'a', 'more', 'simple', 'way', 'is', 'to', 'create', 'a', 'profile', 'for', 'requirements', 'management', 'in', 'uml', 'that', 'contains', 'requirements', 'elements', 'where', 'you', 'can', 'reference', 'the', 'customer', 'documents', 'and', 'already', 'put', 'them', 'in', 'a', 'certain', 'structure', 'now', 'in', 'the', 'next', 'step', 'you', 'synthesize', 'these', 'requirements', 'to', 'use', 'cases', 'that', 'is', 'you', 'pinpoint', 'the', 'added', 'values', 'and', 'make', 'them', 'visible', 'actors', 'and', 'ucs', 'shall', 'be', 'clearly', 'visible', 'once', 'you', 'have', 'done', 'that', 'you', 'relate', 'uc', 'and', 'requirement', 'elements', 'with', 'realize', 'relations', 'or', 'some', 'other', 'stereotyped', 'dependency', 'depending', 'on', 'the', 'profile', 'you', 'use', 'this', 'way', 'you', 'have', 'a', 'nice', 'traceability', 'that', 'connects', 'requirements', 'and', 'uc', 'for', 'the', 'upcoming', 'design', 'steps', 'a', 'more', 'simple', 'approach', 'would', 'be', 'to', 'just', 'attach', 'constraints', 'to', 'an', 'elaborated', 'uc', 'model', 'containing', 'requirement', 'text', 'that', 'could', 'be', 'done', 'for', 'simple', 'school', 'projects', 'though', 'it', 's', 'unlikely', 'you', 'find', 'that', 'in', 'the', 'industry', 'either', 'you', 'go', 'to', 'war', 'see', 'above', 'or', 'you', 'have', 'just', 'a', 'little', 'chit', 'chat', 'with', 'some', 'insults', 'regarding', 'the', 'synthesis', 'of', 'ucs', 'i', 'recommend', 'to', 'read', 'bittner', 'spence', 'about', 'use', 'case', 'modeling', 'the', 'best', 'read', 'you', 'can', 'find']","['want', 'create', 'use', 'case', 'diagram', 'based', 'customer', 'requirement', 'pnline', 'food', 'ordering', 'system', 'example', 'ensure', 'time', 'delivery', 'process', 'package', 'order', 'promote', 'pizza', 'shop', 'put', 'requirement', 'use', 'case', 'diagram', 'could', 'please', 'explain', 'specific', 'example', 'could', 'like', 'display', 'order', 'detail', 'inlcude', 'display', 'time', 'left', 'prepare', 'order']","['there', 'are', 'a', 'couple', 'of', 'way', 'how', 'to', 'model', 'that', 'the', 'first', 'step', 'is', 'always', 'to', 'read', 'and', 'understand', 'the', 'requirement', 'so', 'putting', 'them', 'in', 'some', 'sort', 'of', 'order', 'is', 'vital', 'there', 'are', 'dedicated', 'tool', 'to', 'deal', 'with', 'that', 'and', 'they', 'may', 'or', 'may', 'not', 'be', 'helpful', 'i', 'm', 'talking', 'of', 'door', 'and', 'the', 'like', 'a', 'more', 'simple', 'way', 'is', 'to', 'create', 'a', 'profile', 'for', 'requirement', 'management', 'in', 'uml', 'that', 'contains', 'requirement', 'element', 'where', 'you', 'can', 'reference', 'the', 'customer', 'document', 'and', 'already', 'put', 'them', 'in', 'a', 'certain', 'structure', 'now', 'in', 'the', 'next', 'step', 'you', 'synthesize', 'these', 'requirement', 'to', 'use', 'case', 'that', 'is', 'you', 'pinpoint', 'the', 'added', 'value', 'and', 'make', 'them', 'visible', 'actor', 'and', 'ucs', 'shall', 'be', 'clearly', 'visible', 'once', 'you', 'have', 'done', 'that', 'you', 'relate', 'uc', 'and', 'requirement', 'element', 'with', 'realize', 'relation', 'or', 'some', 'other', 'stereotyped', 'dependency', 'depending', 'on', 'the', 'profile', 'you', 'use', 'this', 'way', 'you', 'have', 'a', 'nice', 'traceability', 'that', 'connects', 'requirement', 'and', 'uc', 'for', 'the', 'upcoming', 'design', 'step', 'a', 'more', 'simple', 'approach', 'would', 'be', 'to', 'just', 'attach', 'constraint', 'to', 'an', 'elaborated', 'uc', 'model', 'containing', 'requirement', 'text', 'that', 'could', 'be', 'done', 'for', 'simple', 'school', 'project', 'though', 'it', 's', 'unlikely', 'you', 'find', 'that', 'in', 'the', 'industry', 'either', 'you', 'go', 'to', 'war', 'see', 'above', 'or', 'you', 'have', 'just', 'a', 'little', 'chit', 'chat', 'with', 'some', 'insult', 'regarding', 'the', 'synthesis', 'of', 'ucs', 'i', 'recommend', 'to', 'read', 'bittner', 'spence', 'about', 'use', 'case', 'modeling', 'the', 'best', 'read', 'you', 'can', 'find']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 0.88, 'pos': 0.12, 'compound': 0.7622}",0.0,0,System Requirements and AWS,3query
70690092,Clients requirements on use case diagram,"<p>I want to create a use case diagram based on customer requirements (pnline food ordering system), which are for example</p>
<ol>
<li>ensure on-time delivery</li>
<li>process and package orders</li>
<li>promote the pizza shop</li>
</ol>
<p>How can I put these requirements on use case diagram? Could you please explain on specific example?</p>
<p>for 1) could it be like that:
display order details &lt; inlcude &gt; display time left to prepare order</p>
",<uml><diagram><use-case><requirements><use-case-diagram>,2022-01-13 00:32:58,113,3,3,70699701,"<p>Your requirement examples seem to correspond to goals. This is a good start for thinking about use-cases, leaving full freedom about how to best achieve the goals:</p>
<ul>
<li>Your example: <em><strong>process and package order</strong></em> is a popular use-case for company staff to satisfy their clients. It raises however a question: will there be a use case for the customers to order?</li>
</ul>
<p>A use case represents a set of behaviors offered by a system,  with observable result, that is if value for actors or other stakeholders. You need to make sure that your chose requirements meet these criteria;  not all requirements are suitable for a use case diagram.</p>
<ul>
<li>Your example: <em><strong>promote the pizza shop</strong></em> is a popular business goal. It is however unclear if this is a side effect (or wishful thinking) or if the system actively promotes the shop, and who could be the primary actor.</li>
</ul>
<p>Last but not least, a use-case involves actors. You need to identify those. And you should consider rewording the use-case from the perspective of the primary actor.</p>
<ul>
<li>In your example, is it really the system that <em><strong>ensure a timely delivery</strong></em>? Or isnt't it more that the system helps some delivery agent to proceed with the right deliveries at the right moment? In this case, consider rewording into: <em><strong>deliver packages in time</strong></em>.</li>
</ul>
<p>The resulting use-case diagram should provide the big picture. Keep in mind that it makes no sense to graphically all the requirements: some narrative would describe each use case with more explanations about requirements, constraints and expectations.</p>
",2022-01,i want to create a use case diagram based on customer requirements pnline food ordering system which are for example ensure on time delivery process and package orders promote the pizza shop how can i put these requirements on use case diagram could you please explain on specific example for   could it be like that display order details inlcude display time left to prepare order,your requirement examples seem to correspond to goals this is a good start for thinking about use cases leaving full freedom about how to best achieve the goals your example process and package order is a popular use case for company staff to satisfy their clients it raises however a question will there be a use case for the customers to order a use case represents a set of behaviors offered by a system with observable result that is if value for actors or other stakeholders you need to make sure that your chose requirements meet these criteria not all requirements are suitable for a use case diagram your example promote the pizza shop is a popular business goal it is however unclear if this is a side effect or wishful thinking or if the system actively promotes the shop and who could be the primary actor last but not least a use case involves actors you need to identify those and you should consider rewording the use case from the perspective of the primary actor in your example is it really the system that ensure a timely delivery or isnt t it more that the system helps some delivery agent to proceed with the right deliveries at the right moment in this case consider rewording into deliver packages in time the resulting use case diagram should provide the big picture keep in mind that it makes no sense to graphically all the requirements some narrative would describe each use case with more explanations about requirements constraints and expectations,"['uml', 'diagram', 'use-case', 'requirements', 'use-case-diagram']","['i', 'want', 'to', 'create', 'a', 'use', 'case', 'diagram', 'based', 'on', 'customer', 'requirements', 'pnline', 'food', 'ordering', 'system', 'which', 'are', 'for', 'example', 'ensure', 'on', 'time', 'delivery', 'process', 'and', 'package', 'orders', 'promote', 'the', 'pizza', 'shop', 'how', 'can', 'i', 'put', 'these', 'requirements', 'on', 'use', 'case', 'diagram', 'could', 'you', 'please', 'explain', 'on', 'specific', 'example', 'for', 'could', 'it', 'be', 'like', 'that', 'display', 'order', 'details', 'inlcude', 'display', 'time', 'left', 'to', 'prepare', 'order']","['your', 'requirement', 'examples', 'seem', 'to', 'correspond', 'to', 'goals', 'this', 'is', 'a', 'good', 'start', 'for', 'thinking', 'about', 'use', 'cases', 'leaving', 'full', 'freedom', 'about', 'how', 'to', 'best', 'achieve', 'the', 'goals', 'your', 'example', 'process', 'and', 'package', 'order', 'is', 'a', 'popular', 'use', 'case', 'for', 'company', 'staff', 'to', 'satisfy', 'their', 'clients', 'it', 'raises', 'however', 'a', 'question', 'will', 'there', 'be', 'a', 'use', 'case', 'for', 'the', 'customers', 'to', 'order', 'a', 'use', 'case', 'represents', 'a', 'set', 'of', 'behaviors', 'offered', 'by', 'a', 'system', 'with', 'observable', 'result', 'that', 'is', 'if', 'value', 'for', 'actors', 'or', 'other', 'stakeholders', 'you', 'need', 'to', 'make', 'sure', 'that', 'your', 'chose', 'requirements', 'meet', 'these', 'criteria', 'not', 'all', 'requirements', 'are', 'suitable', 'for', 'a', 'use', 'case', 'diagram', 'your', 'example', 'promote', 'the', 'pizza', 'shop', 'is', 'a', 'popular', 'business', 'goal', 'it', 'is', 'however', 'unclear', 'if', 'this', 'is', 'a', 'side', 'effect', 'or', 'wishful', 'thinking', 'or', 'if', 'the', 'system', 'actively', 'promotes', 'the', 'shop', 'and', 'who', 'could', 'be', 'the', 'primary', 'actor', 'last', 'but', 'not', 'least', 'a', 'use', 'case', 'involves', 'actors', 'you', 'need', 'to', 'identify', 'those', 'and', 'you', 'should', 'consider', 'rewording', 'the', 'use', 'case', 'from', 'the', 'perspective', 'of', 'the', 'primary', 'actor', 'in', 'your', 'example', 'is', 'it', 'really', 'the', 'system', 'that', 'ensure', 'a', 'timely', 'delivery', 'or', 'isnt', 't', 'it', 'more', 'that', 'the', 'system', 'helps', 'some', 'delivery', 'agent', 'to', 'proceed', 'with', 'the', 'right', 'deliveries', 'at', 'the', 'right', 'moment', 'in', 'this', 'case', 'consider', 'rewording', 'into', 'deliver', 'packages', 'in', 'time', 'the', 'resulting', 'use', 'case', 'diagram', 'should', 'provide', 'the', 'big', 'picture', 'keep', 'in', 'mind', 'that', 'it', 'makes', 'no', 'sense', 'to', 'graphically', 'all', 'the', 'requirements', 'some', 'narrative', 'would', 'describe', 'each', 'use', 'case', 'with', 'more', 'explanations', 'about', 'requirements', 'constraints', 'and', 'expectations']","['want', 'create', 'use', 'case', 'diagram', 'based', 'customer', 'requirement', 'pnline', 'food', 'ordering', 'system', 'example', 'ensure', 'time', 'delivery', 'process', 'package', 'order', 'promote', 'pizza', 'shop', 'put', 'requirement', 'use', 'case', 'diagram', 'could', 'please', 'explain', 'specific', 'example', 'could', 'like', 'display', 'order', 'detail', 'inlcude', 'display', 'time', 'left', 'prepare', 'order']","['your', 'requirement', 'example', 'seem', 'to', 'correspond', 'to', 'goal', 'this', 'is', 'a', 'good', 'start', 'for', 'thinking', 'about', 'use', 'case', 'leaving', 'full', 'freedom', 'about', 'how', 'to', 'best', 'achieve', 'the', 'goal', 'your', 'example', 'process', 'and', 'package', 'order', 'is', 'a', 'popular', 'use', 'case', 'for', 'company', 'staff', 'to', 'satisfy', 'their', 'client', 'it', 'raise', 'however', 'a', 'question', 'will', 'there', 'be', 'a', 'use', 'case', 'for', 'the', 'customer', 'to', 'order', 'a', 'use', 'case', 'represents', 'a', 'set', 'of', 'behavior', 'offered', 'by', 'a', 'system', 'with', 'observable', 'result', 'that', 'is', 'if', 'value', 'for', 'actor', 'or', 'other', 'stakeholder', 'you', 'need', 'to', 'make', 'sure', 'that', 'your', 'chose', 'requirement', 'meet', 'these', 'criterion', 'not', 'all', 'requirement', 'are', 'suitable', 'for', 'a', 'use', 'case', 'diagram', 'your', 'example', 'promote', 'the', 'pizza', 'shop', 'is', 'a', 'popular', 'business', 'goal', 'it', 'is', 'however', 'unclear', 'if', 'this', 'is', 'a', 'side', 'effect', 'or', 'wishful', 'thinking', 'or', 'if', 'the', 'system', 'actively', 'promotes', 'the', 'shop', 'and', 'who', 'could', 'be', 'the', 'primary', 'actor', 'last', 'but', 'not', 'least', 'a', 'use', 'case', 'involves', 'actor', 'you', 'need', 'to', 'identify', 'those', 'and', 'you', 'should', 'consider', 'rewording', 'the', 'use', 'case', 'from', 'the', 'perspective', 'of', 'the', 'primary', 'actor', 'in', 'your', 'example', 'is', 'it', 'really', 'the', 'system', 'that', 'ensure', 'a', 'timely', 'delivery', 'or', 'isnt', 't', 'it', 'more', 'that', 'the', 'system', 'help', 'some', 'delivery', 'agent', 'to', 'proceed', 'with', 'the', 'right', 'delivery', 'at', 'the', 'right', 'moment', 'in', 'this', 'case', 'consider', 'rewording', 'into', 'deliver', 'package', 'in', 'time', 'the', 'resulting', 'use', 'case', 'diagram', 'should', 'provide', 'the', 'big', 'picture', 'keep', 'in', 'mind', 'that', 'it', 'make', 'no', 'sense', 'to', 'graphically', 'all', 'the', 'requirement', 'some', 'narrative', 'would', 'describe', 'each', 'use', 'case', 'with', 'more', 'explanation', 'about', 'requirement', 'constraint', 'and', 'expectation']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 0.88, 'pos': 0.12, 'compound': 0.7622}",0.0,0,System Requirements and AWS,3query
70414560,How can I create a requirements.txt in Google colab?,"<p>I have already tested the following:</p>
<p>!pip freeze &gt; requirements.txt --&gt; saves all packages in the environment</p>
<p>pipreqs --&gt; returns an empty file</p>
<p>I need a compilation of all <strong>imported packages</strong> with the corresponding version. How can I do this in Google Colab without getting all installed packages?</p>
",<python><package><google-colaboratory><python-import><requirements>,2021-12-19 19:13:56,4117,6,2,70414720,"<p>You can get a list of all imported modules by doing:</p>
<pre><code>import sys
print(sys.modules.keys())
</code></pre>
",2021-12,i have already tested the following pip freeze requirements txt saves all packages in the environment pipreqs returns an empty file i need a compilation of all imported packages with the corresponding version how can i do this in google colab without getting all installed packages,you can get a list of all imported modules by doing import sys print sys modules keys,"['python', 'package', 'google-colaboratory', 'python-import', 'requirements']","['i', 'have', 'already', 'tested', 'the', 'following', 'pip', 'freeze', 'requirements', 'txt', 'saves', 'all', 'packages', 'in', 'the', 'environment', 'pipreqs', 'returns', 'an', 'empty', 'file', 'i', 'need', 'a', 'compilation', 'of', 'all', 'imported', 'packages', 'with', 'the', 'corresponding', 'version', 'how', 'can', 'i', 'do', 'this', 'in', 'google', 'colab', 'without', 'getting', 'all', 'installed', 'packages']","['you', 'can', 'get', 'a', 'list', 'of', 'all', 'imported', 'modules', 'by', 'doing', 'import', 'sys', 'print', 'sys', 'modules', 'keys']","['already', 'tested', 'following', 'pip', 'freeze', 'requirement', 'txt', 'save', 'package', 'environment', 'pipreqs', 'return', 'empty', 'file', 'need', 'compilation', 'imported', 'package', 'corresponding', 'version', 'google', 'colab', 'without', 'getting', 'installed', 'package']","['you', 'can', 'get', 'a', 'list', 'of', 'all', 'imported', 'module', 'by', 'doing', 'import', 'sys', 'print', 'sys', 'module', 'key']",System Requirements and AWS,3,"{'neg': 0.044, 'neu': 0.93, 'pos': 0.025, 'compound': -0.2244}",-0.1,3,Python Package Installation and Management,3query
70414560,How can I create a requirements.txt in Google colab?,"<p>I have already tested the following:</p>
<p>!pip freeze &gt; requirements.txt --&gt; saves all packages in the environment</p>
<p>pipreqs --&gt; returns an empty file</p>
<p>I need a compilation of all <strong>imported packages</strong> with the corresponding version. How can I do this in Google Colab without getting all installed packages?</p>
",<python><package><google-colaboratory><python-import><requirements>,2021-12-19 19:13:56,4117,6,2,75304671,"<p>Yes, I had similar issue when using</p>
<pre><code>!pip freeze &gt; requirements.txt
</code></pre>
<p>you get all the packages initially installed in colab.</p>
<p>You can try to install session_info at the beginning:</p>
<pre><code>!pip install session-info
</code></pre>
<p>Then imports all you need and run this to see what was imported:</p>
<pre><code>import session_info
session_info.show()
</code></pre>
<p>Update:</p>
<p>This command might give you a glimpse but it doesn't seem very complete. I quickly went back to the old way, added the dependency in a local python project and used one of these 2:</p>
<pre><code>pip freeze &gt; requirements.txt
pip list --format=freeze &gt; requirements.txt
</code></pre>
",2021-12,i have already tested the following pip freeze requirements txt saves all packages in the environment pipreqs returns an empty file i need a compilation of all imported packages with the corresponding version how can i do this in google colab without getting all installed packages,yes i had similar issue when using pip freeze requirements txt you get all the packages initially installed in colab you can try to install session_info at the beginning pip install session info then imports all you need and run this to see what was imported import session_info session_info show update this command might give you a glimpse but it doesn t seem very complete i quickly went back to the old way added the dependency in a local python project and used one of these   pip freeze requirements txt pip list format freeze requirements txt,"['python', 'package', 'google-colaboratory', 'python-import', 'requirements']","['i', 'have', 'already', 'tested', 'the', 'following', 'pip', 'freeze', 'requirements', 'txt', 'saves', 'all', 'packages', 'in', 'the', 'environment', 'pipreqs', 'returns', 'an', 'empty', 'file', 'i', 'need', 'a', 'compilation', 'of', 'all', 'imported', 'packages', 'with', 'the', 'corresponding', 'version', 'how', 'can', 'i', 'do', 'this', 'in', 'google', 'colab', 'without', 'getting', 'all', 'installed', 'packages']","['yes', 'i', 'had', 'similar', 'issue', 'when', 'using', 'pip', 'freeze', 'requirements', 'txt', 'you', 'get', 'all', 'the', 'packages', 'initially', 'installed', 'in', 'colab', 'you', 'can', 'try', 'to', 'install', 'session_info', 'at', 'the', 'beginning', 'pip', 'install', 'session', 'info', 'then', 'imports', 'all', 'you', 'need', 'and', 'run', 'this', 'to', 'see', 'what', 'was', 'imported', 'import', 'session_info', 'session_info', 'show', 'update', 'this', 'command', 'might', 'give', 'you', 'a', 'glimpse', 'but', 'it', 'doesn', 't', 'seem', 'very', 'complete', 'i', 'quickly', 'went', 'back', 'to', 'the', 'old', 'way', 'added', 'the', 'dependency', 'in', 'a', 'local', 'python', 'project', 'and', 'used', 'one', 'of', 'these', 'pip', 'freeze', 'requirements', 'txt', 'pip', 'list', 'format', 'freeze', 'requirements', 'txt']","['already', 'tested', 'following', 'pip', 'freeze', 'requirement', 'txt', 'save', 'package', 'environment', 'pipreqs', 'return', 'empty', 'file', 'need', 'compilation', 'imported', 'package', 'corresponding', 'version', 'google', 'colab', 'without', 'getting', 'installed', 'package']","['yes', 'i', 'had', 'similar', 'issue', 'when', 'using', 'pip', 'freeze', 'requirement', 'txt', 'you', 'get', 'all', 'the', 'package', 'initially', 'installed', 'in', 'colab', 'you', 'can', 'try', 'to', 'install', 'session_info', 'at', 'the', 'beginning', 'pip', 'install', 'session', 'info', 'then', 'import', 'all', 'you', 'need', 'and', 'run', 'this', 'to', 'see', 'what', 'wa', 'imported', 'import', 'session_info', 'session_info', 'show', 'update', 'this', 'command', 'might', 'give', 'you', 'a', 'glimpse', 'but', 'it', 'doesn', 't', 'seem', 'very', 'complete', 'i', 'quickly', 'went', 'back', 'to', 'the', 'old', 'way', 'added', 'the', 'dependency', 'in', 'a', 'local', 'python', 'project', 'and', 'used', 'one', 'of', 'these', 'pip', 'freeze', 'requirement', 'txt', 'pip', 'list', 'format', 'freeze', 'requirement', 'txt']",System Requirements and AWS,3,"{'neg': 0.044, 'neu': 0.93, 'pos': 0.025, 'compound': -0.2244}",-0.1,3,Python Package Installation and Management,3query
70343657,How do I depict this situation in a use-case diagram?,"<p>Consider a scenario as such:<br/>
A university ABC allocates 2 lecturers to a course (a main lecturer and a substitute lecturer). The job of the substitute lecturer is to conduct lectures whenever the main lecturer cannot attend. Thus, both lecturers need not be present at the same time to conduct a lecture.
<br/>
<br/>
How do I show that either the main lecturer or the substitute lecturer offers lectures at a time?
<br/><br/>
What I drew :
<br/><a href=""https://i.stack.imgur.com/R5gea.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/R5gea.png"" alt=""Image"" /></a>
<br/><br/>
However, the idea depicted in the scenario isn't consistent here because, at the same time it is possible for both lecturers to offer the lecture.
<br/>
How do I correct this?</p>
",<uml><use-case><requirements><scenarios><use-case-diagram>,2021-12-14 04:04:30,86,1,2,70345542,"<p>Whether you associate two distinct lecturers to the use-case or one lecturer with a multiplicity of 2 does not make a difference here.  The UML specifications let the case with multiple actors completely unspecified:</p>
<blockquote>
<p><em><strong>UML 2.5.1, page 640</strong></em> (highlighting is mine): <br><br>When a UseCase has an association to an Actor with a multiplicity that is greater than one at the Actor end, it means that more than one Actor instance is involved in the UseCase. <strong>The manner in which multiple Actors participate in the UseCase depends on the specific situation on hand and is not defined in this specification</strong>. For instance, a particular UseCase might require simultaneous (concurrent) action by two separate Actors (e.g., in launching a nuclear missile) or it might require complementary and successive actions by the Actors (e.g., one Actor starting something and the other one stopping it).</p>
</blockquote>
<p>Here some possible solutions to refine your model:</p>
<ul>
<li>Show an <code>{xor}</code> constraint between the two lecturer associations.</li>
<li>Add a comment box anchored to the use case in which you explain it in plain-text.</li>
<li>Laeve the diagram as is and describe the requirement in the textual use-case description.</li>
</ul>
<p>Additional comments, not related to your issue:</p>
<ul>
<li>If the number of students has no upper bound, use <code>*</code> instead of <code>M</code>.  Use a number if its specified in the text.</li>
<li>Main lecturers and substitute lecturers are both full lecturers, and the choice only depends on the availability, isn't it?</li>
</ul>
",2021-12,consider a scenario as such a university abc allocates   lecturers to a course a main lecturer and a substitute lecturer the job of the substitute lecturer is to conduct lectures whenever the main lecturer cannot attend thus both lecturers need not be present at the same time to conduct a lecture how do i show that either the main lecturer or the substitute lecturer offers lectures at a time what i drew however the idea depicted in the scenario isn t consistent here because at the same time it is possible for both lecturers to offer the lecture how do i correct this,whether you associate two distinct lecturers to the use case or one lecturer with a multiplicity of   does not make a difference here the uml specifications let the case with multiple actors completely unspecified uml       page   highlighting is mine when a usecase has an association to an actor with a multiplicity that is greater than one at the actor end it means that more than one actor instance is involved in the usecase the manner in which multiple actors participate in the usecase depends on the specific situation on hand and is not defined in this specification for instance a particular usecase might require simultaneous concurrent action by two separate actors e g in launching a nuclear missile or it might require complementary and successive actions by the actors e g one actor starting something and the other one stopping it here some possible solutions to refine your model show an xor constraint between the two lecturer associations add a comment box anchored to the use case in which you explain it in plain text laeve the diagram as is and describe the requirement in the textual use case description additional comments not related to your issue if the number of students has no upper bound use instead of m use a number if its specified in the text main lecturers and substitute lecturers are both full lecturers and the choice only depends on the availability isn t it,"['uml', 'use-case', 'requirements', 'scenarios', 'use-case-diagram']","['consider', 'a', 'scenario', 'as', 'such', 'a', 'university', 'abc', 'allocates', 'lecturers', 'to', 'a', 'course', 'a', 'main', 'lecturer', 'and', 'a', 'substitute', 'lecturer', 'the', 'job', 'of', 'the', 'substitute', 'lecturer', 'is', 'to', 'conduct', 'lectures', 'whenever', 'the', 'main', 'lecturer', 'can', 'not', 'attend', 'thus', 'both', 'lecturers', 'need', 'not', 'be', 'present', 'at', 'the', 'same', 'time', 'to', 'conduct', 'a', 'lecture', 'how', 'do', 'i', 'show', 'that', 'either', 'the', 'main', 'lecturer', 'or', 'the', 'substitute', 'lecturer', 'offers', 'lectures', 'at', 'a', 'time', 'what', 'i', 'drew', 'however', 'the', 'idea', 'depicted', 'in', 'the', 'scenario', 'isn', 't', 'consistent', 'here', 'because', 'at', 'the', 'same', 'time', 'it', 'is', 'possible', 'for', 'both', 'lecturers', 'to', 'offer', 'the', 'lecture', 'how', 'do', 'i', 'correct', 'this']","['whether', 'you', 'associate', 'two', 'distinct', 'lecturers', 'to', 'the', 'use', 'case', 'or', 'one', 'lecturer', 'with', 'a', 'multiplicity', 'of', 'does', 'not', 'make', 'a', 'difference', 'here', 'the', 'uml', 'specifications', 'let', 'the', 'case', 'with', 'multiple', 'actors', 'completely', 'unspecified', 'uml', 'page', 'highlighting', 'is', 'mine', 'when', 'a', 'usecase', 'has', 'an', 'association', 'to', 'an', 'actor', 'with', 'a', 'multiplicity', 'that', 'is', 'greater', 'than', 'one', 'at', 'the', 'actor', 'end', 'it', 'means', 'that', 'more', 'than', 'one', 'actor', 'instance', 'is', 'involved', 'in', 'the', 'usecase', 'the', 'manner', 'in', 'which', 'multiple', 'actors', 'participate', 'in', 'the', 'usecase', 'depends', 'on', 'the', 'specific', 'situation', 'on', 'hand', 'and', 'is', 'not', 'defined', 'in', 'this', 'specification', 'for', 'instance', 'a', 'particular', 'usecase', 'might', 'require', 'simultaneous', 'concurrent', 'action', 'by', 'two', 'separate', 'actors', 'e', 'g', 'in', 'launching', 'a', 'nuclear', 'missile', 'or', 'it', 'might', 'require', 'complementary', 'and', 'successive', 'actions', 'by', 'the', 'actors', 'e', 'g', 'one', 'actor', 'starting', 'something', 'and', 'the', 'other', 'one', 'stopping', 'it', 'here', 'some', 'possible', 'solutions', 'to', 'refine', 'your', 'model', 'show', 'an', 'xor', 'constraint', 'between', 'the', 'two', 'lecturer', 'associations', 'add', 'a', 'comment', 'box', 'anchored', 'to', 'the', 'use', 'case', 'in', 'which', 'you', 'explain', 'it', 'in', 'plain', 'text', 'laeve', 'the', 'diagram', 'as', 'is', 'and', 'describe', 'the', 'requirement', 'in', 'the', 'textual', 'use', 'case', 'description', 'additional', 'comments', 'not', 'related', 'to', 'your', 'issue', 'if', 'the', 'number', 'of', 'students', 'has', 'no', 'upper', 'bound', 'use', 'instead', 'of', 'm', 'use', 'a', 'number', 'if', 'its', 'specified', 'in', 'the', 'text', 'main', 'lecturers', 'and', 'substitute', 'lecturers', 'are', 'both', 'full', 'lecturers', 'and', 'the', 'choice', 'only', 'depends', 'on', 'the', 'availability', 'isn', 't', 'it']","['consider', 'scenario', 'university', 'abc', 'allocates', 'lecturer', 'course', 'main', 'lecturer', 'substitute', 'lecturer', 'job', 'substitute', 'lecturer', 'conduct', 'lecture', 'whenever', 'main', 'lecturer', 'attend', 'thus', 'lecturer', 'need', 'present', 'time', 'conduct', 'lecture', 'show', 'either', 'main', 'lecturer', 'substitute', 'lecturer', 'offer', 'lecture', 'time', 'drew', 'however', 'idea', 'depicted', 'scenario', 'consistent', 'time', 'possible', 'lecturer', 'offer', 'lecture', 'correct']","['whether', 'you', 'associate', 'two', 'distinct', 'lecturer', 'to', 'the', 'use', 'case', 'or', 'one', 'lecturer', 'with', 'a', 'multiplicity', 'of', 'doe', 'not', 'make', 'a', 'difference', 'here', 'the', 'uml', 'specification', 'let', 'the', 'case', 'with', 'multiple', 'actor', 'completely', 'unspecified', 'uml', 'page', 'highlighting', 'is', 'mine', 'when', 'a', 'usecase', 'ha', 'an', 'association', 'to', 'an', 'actor', 'with', 'a', 'multiplicity', 'that', 'is', 'greater', 'than', 'one', 'at', 'the', 'actor', 'end', 'it', 'mean', 'that', 'more', 'than', 'one', 'actor', 'instance', 'is', 'involved', 'in', 'the', 'usecase', 'the', 'manner', 'in', 'which', 'multiple', 'actor', 'participate', 'in', 'the', 'usecase', 'depends', 'on', 'the', 'specific', 'situation', 'on', 'hand', 'and', 'is', 'not', 'defined', 'in', 'this', 'specification', 'for', 'instance', 'a', 'particular', 'usecase', 'might', 'require', 'simultaneous', 'concurrent', 'action', 'by', 'two', 'separate', 'actor', 'e', 'g', 'in', 'launching', 'a', 'nuclear', 'missile', 'or', 'it', 'might', 'require', 'complementary', 'and', 'successive', 'action', 'by', 'the', 'actor', 'e', 'g', 'one', 'actor', 'starting', 'something', 'and', 'the', 'other', 'one', 'stopping', 'it', 'here', 'some', 'possible', 'solution', 'to', 'refine', 'your', 'model', 'show', 'an', 'xor', 'constraint', 'between', 'the', 'two', 'lecturer', 'association', 'add', 'a', 'comment', 'box', 'anchored', 'to', 'the', 'use', 'case', 'in', 'which', 'you', 'explain', 'it', 'in', 'plain', 'text', 'laeve', 'the', 'diagram', 'a', 'is', 'and', 'describe', 'the', 'requirement', 'in', 'the', 'textual', 'use', 'case', 'description', 'additional', 'comment', 'not', 'related', 'to', 'your', 'issue', 'if', 'the', 'number', 'of', 'student', 'ha', 'no', 'upper', 'bound', 'use', 'instead', 'of', 'm', 'use', 'a', 'number', 'if', 'it', 'specified', 'in', 'the', 'text', 'main', 'lecturer', 'and', 'substitute', 'lecturer', 'are', 'both', 'full', 'lecturer', 'and', 'the', 'choice', 'only', 'depends', 'on', 'the', 'availability', 'isn', 't', 'it']",System Requirements and AWS,4,"{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}",0.09444444444444444,4,Building and Compiling Python Projects,3query
70343657,How do I depict this situation in a use-case diagram?,"<p>Consider a scenario as such:<br/>
A university ABC allocates 2 lecturers to a course (a main lecturer and a substitute lecturer). The job of the substitute lecturer is to conduct lectures whenever the main lecturer cannot attend. Thus, both lecturers need not be present at the same time to conduct a lecture.
<br/>
<br/>
How do I show that either the main lecturer or the substitute lecturer offers lectures at a time?
<br/><br/>
What I drew :
<br/><a href=""https://i.stack.imgur.com/R5gea.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/R5gea.png"" alt=""Image"" /></a>
<br/><br/>
However, the idea depicted in the scenario isn't consistent here because, at the same time it is possible for both lecturers to offer the lecture.
<br/>
How do I correct this?</p>
",<uml><use-case><requirements><scenarios><use-case-diagram>,2021-12-14 04:04:30,86,1,2,70346637,"<p>As commented I would always go down to the actual role. I don't have a good name at hand, but in your case it would be <code>Lecture offerer</code>. That's the one which is linked to the <code>Offer lecture</code> use case.</p>
<p>Now the other 3 actors you showed can simply inherit from that actor above via a generalization.</p>
<p>Any constraints about concurrent access are best kept in requirements, constraints and finally in the flow of events describing the many scenarios that come up. Requirements and constraints should not clutter the simple UC diagram. Instead you create different diagrams that take care of them. The main focus of UC diagrams is to show the added value.</p>
<p>And as always I recommend to read Bittner/Spence about Use Case Modeling.</p>
",2021-12,consider a scenario as such a university abc allocates   lecturers to a course a main lecturer and a substitute lecturer the job of the substitute lecturer is to conduct lectures whenever the main lecturer cannot attend thus both lecturers need not be present at the same time to conduct a lecture how do i show that either the main lecturer or the substitute lecturer offers lectures at a time what i drew however the idea depicted in the scenario isn t consistent here because at the same time it is possible for both lecturers to offer the lecture how do i correct this,as commented i would always go down to the actual role i don t have a good name at hand but in your case it would be lecture offerer that s the one which is linked to the offer lecture use case now the other   actors you showed can simply inherit from that actor above via a generalization any constraints about concurrent access are best kept in requirements constraints and finally in the flow of events describing the many scenarios that come up requirements and constraints should not clutter the simple uc diagram instead you create different diagrams that take care of them the main focus of uc diagrams is to show the added value and as always i recommend to read bittner spence about use case modeling,"['uml', 'use-case', 'requirements', 'scenarios', 'use-case-diagram']","['consider', 'a', 'scenario', 'as', 'such', 'a', 'university', 'abc', 'allocates', 'lecturers', 'to', 'a', 'course', 'a', 'main', 'lecturer', 'and', 'a', 'substitute', 'lecturer', 'the', 'job', 'of', 'the', 'substitute', 'lecturer', 'is', 'to', 'conduct', 'lectures', 'whenever', 'the', 'main', 'lecturer', 'can', 'not', 'attend', 'thus', 'both', 'lecturers', 'need', 'not', 'be', 'present', 'at', 'the', 'same', 'time', 'to', 'conduct', 'a', 'lecture', 'how', 'do', 'i', 'show', 'that', 'either', 'the', 'main', 'lecturer', 'or', 'the', 'substitute', 'lecturer', 'offers', 'lectures', 'at', 'a', 'time', 'what', 'i', 'drew', 'however', 'the', 'idea', 'depicted', 'in', 'the', 'scenario', 'isn', 't', 'consistent', 'here', 'because', 'at', 'the', 'same', 'time', 'it', 'is', 'possible', 'for', 'both', 'lecturers', 'to', 'offer', 'the', 'lecture', 'how', 'do', 'i', 'correct', 'this']","['as', 'commented', 'i', 'would', 'always', 'go', 'down', 'to', 'the', 'actual', 'role', 'i', 'don', 't', 'have', 'a', 'good', 'name', 'at', 'hand', 'but', 'in', 'your', 'case', 'it', 'would', 'be', 'lecture', 'offerer', 'that', 's', 'the', 'one', 'which', 'is', 'linked', 'to', 'the', 'offer', 'lecture', 'use', 'case', 'now', 'the', 'other', 'actors', 'you', 'showed', 'can', 'simply', 'inherit', 'from', 'that', 'actor', 'above', 'via', 'a', 'generalization', 'any', 'constraints', 'about', 'concurrent', 'access', 'are', 'best', 'kept', 'in', 'requirements', 'constraints', 'and', 'finally', 'in', 'the', 'flow', 'of', 'events', 'describing', 'the', 'many', 'scenarios', 'that', 'come', 'up', 'requirements', 'and', 'constraints', 'should', 'not', 'clutter', 'the', 'simple', 'uc', 'diagram', 'instead', 'you', 'create', 'different', 'diagrams', 'that', 'take', 'care', 'of', 'them', 'the', 'main', 'focus', 'of', 'uc', 'diagrams', 'is', 'to', 'show', 'the', 'added', 'value', 'and', 'as', 'always', 'i', 'recommend', 'to', 'read', 'bittner', 'spence', 'about', 'use', 'case', 'modeling']","['consider', 'scenario', 'university', 'abc', 'allocates', 'lecturer', 'course', 'main', 'lecturer', 'substitute', 'lecturer', 'job', 'substitute', 'lecturer', 'conduct', 'lecture', 'whenever', 'main', 'lecturer', 'attend', 'thus', 'lecturer', 'need', 'present', 'time', 'conduct', 'lecture', 'show', 'either', 'main', 'lecturer', 'substitute', 'lecturer', 'offer', 'lecture', 'time', 'drew', 'however', 'idea', 'depicted', 'scenario', 'consistent', 'time', 'possible', 'lecturer', 'offer', 'lecture', 'correct']","['a', 'commented', 'i', 'would', 'always', 'go', 'down', 'to', 'the', 'actual', 'role', 'i', 'don', 't', 'have', 'a', 'good', 'name', 'at', 'hand', 'but', 'in', 'your', 'case', 'it', 'would', 'be', 'lecture', 'offerer', 'that', 's', 'the', 'one', 'which', 'is', 'linked', 'to', 'the', 'offer', 'lecture', 'use', 'case', 'now', 'the', 'other', 'actor', 'you', 'showed', 'can', 'simply', 'inherit', 'from', 'that', 'actor', 'above', 'via', 'a', 'generalization', 'any', 'constraint', 'about', 'concurrent', 'access', 'are', 'best', 'kept', 'in', 'requirement', 'constraint', 'and', 'finally', 'in', 'the', 'flow', 'of', 'event', 'describing', 'the', 'many', 'scenario', 'that', 'come', 'up', 'requirement', 'and', 'constraint', 'should', 'not', 'clutter', 'the', 'simple', 'uc', 'diagram', 'instead', 'you', 'create', 'different', 'diagram', 'that', 'take', 'care', 'of', 'them', 'the', 'main', 'focus', 'of', 'uc', 'diagram', 'is', 'to', 'show', 'the', 'added', 'value', 'and', 'a', 'always', 'i', 'recommend', 'to', 'read', 'bittner', 'spence', 'about', 'use', 'case', 'modeling']",System Requirements and AWS,4,"{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}",0.09444444444444444,4,Building and Compiling Python Projects,3query
70334510,Creating requirements.txt in GitLab,"<p>Probably a silly question, but I am trying to set up a project in GitLab that is going to be used for deployment of an ML model, for which I will use FastAPI. I'm very new to this and will try to provide as much info as possible.</p>
<p>I created the project in GitLab, which right now only contains a README.md file. The actual Python code is stored in a folder on my computer (&quot;MyProject&quot;), which contains two folders, each of which containing some data, .py scripts and a notebook.</p>
<p>To set up <code>requirements.txt</code>, I tried to create a virtual environment in Windows. Now, when I open the &quot;MyProject&quot; folder, it contains those two folders with code and the virtual enviroment, which also contains <code>Lib, Scripts, pyvenv.cfg</code>. The latter contains:</p>
<pre><code>home = c:\users\me\anaconda3
implementation = CPython
version_info = 3.8.5.final.0
virtualenv = 20.10.0
include-system-site-packages = false
base-prefix = c:\users\me\anaconda3
base-exec-prefix = c:\users\me\anaconda3
base-executable = c:\users\me\anaconda3\python.exe
</code></pre>
<p>I also cloned the GitLab repo, but on my computer it is saved somewhere else (in <code>c:\users\me</code>). I know that I need to do:</p>
<pre><code>pip install -r
requirements.txt
</code></pre>
<p>But I don't understand how to actually add this requirements file. All of the packages and libraries that I needed for my ML model were installed a long time ago with anaconda, before I created this virtual environment. Have I done anything wrong?</p>
",<python><git><gitlab><virtualenv><requirements>,2021-12-13 12:14:39,2032,1,4,70334618,"<p>You can create <code>requirements.txt</code> using <code>pip freeze &gt; requirements.txt</code> and add it to your repo. This will generate list of your installed packages and exact versions you have.</p>
<p><a href=""https://pip.pypa.io/en/stable/cli/pip_freeze/"" rel=""nofollow noreferrer"">https://pip.pypa.io/en/stable/cli/pip_freeze/</a></p>
",2021-12,probably a silly question but i am trying to set up a project in gitlab that is going to be used for deployment of an ml model for which i will use fastapi i m very new to this and will try to provide as much info as possible i created the project in gitlab which right now only contains a readme md file the actual python code is stored in a folder on my computer myproject which contains two folders each of which containing some data py scripts and a notebook to set up requirements txt i tried to create a virtual environment in windows now when i open the myproject folder it contains those two folders with code and the virtual enviroment which also contains lib scripts pyvenv cfg the latter contains home c users me anaconda  implementation cpython version_info       final   virtualenv       include system site packages false base prefix c users me anaconda  base exec prefix c users me anaconda  base executable c users me anaconda  python exe i also cloned the gitlab repo but on my computer it is saved somewhere else in c users me i know that i need to do pip install r requirements txt but i don t understand how to actually add this requirements file all of the packages and libraries that i needed for my ml model were installed a long time ago with anaconda before i created this virtual environment have i done anything wrong,you can create requirements txt using pip freeze requirements txt and add it to your repo this will generate list of your installed packages and exact versions you have https pip pypa io en stable cli pip_freeze,"['python', 'git', 'gitlab', 'virtualenv', 'requirements']","['probably', 'a', 'silly', 'question', 'but', 'i', 'am', 'trying', 'to', 'set', 'up', 'a', 'project', 'in', 'gitlab', 'that', 'is', 'going', 'to', 'be', 'used', 'for', 'deployment', 'of', 'an', 'ml', 'model', 'for', 'which', 'i', 'will', 'use', 'fastapi', 'i', 'm', 'very', 'new', 'to', 'this', 'and', 'will', 'try', 'to', 'provide', 'as', 'much', 'info', 'as', 'possible', 'i', 'created', 'the', 'project', 'in', 'gitlab', 'which', 'right', 'now', 'only', 'contains', 'a', 'readme', 'md', 'file', 'the', 'actual', 'python', 'code', 'is', 'stored', 'in', 'a', 'folder', 'on', 'my', 'computer', 'myproject', 'which', 'contains', 'two', 'folders', 'each', 'of', 'which', 'containing', 'some', 'data', 'py', 'scripts', 'and', 'a', 'notebook', 'to', 'set', 'up', 'requirements', 'txt', 'i', 'tried', 'to', 'create', 'a', 'virtual', 'environment', 'in', 'windows', 'now', 'when', 'i', 'open', 'the', 'myproject', 'folder', 'it', 'contains', 'those', 'two', 'folders', 'with', 'code', 'and', 'the', 'virtual', 'enviroment', 'which', 'also', 'contains', 'lib', 'scripts', 'pyvenv', 'cfg', 'the', 'latter', 'contains', 'home', 'c', 'users', 'me', 'anaconda', 'implementation', 'cpython', 'version_info', 'final', 'virtualenv', 'include', 'system', 'site', 'packages', 'false', 'base', 'prefix', 'c', 'users', 'me', 'anaconda', 'base', 'exec', 'prefix', 'c', 'users', 'me', 'anaconda', 'base', 'executable', 'c', 'users', 'me', 'anaconda', 'python', 'exe', 'i', 'also', 'cloned', 'the', 'gitlab', 'repo', 'but', 'on', 'my', 'computer', 'it', 'is', 'saved', 'somewhere', 'else', 'in', 'c', 'users', 'me', 'i', 'know', 'that', 'i', 'need', 'to', 'do', 'pip', 'install', 'r', 'requirements', 'txt', 'but', 'i', 'don', 't', 'understand', 'how', 'to', 'actually', 'add', 'this', 'requirements', 'file', 'all', 'of', 'the', 'packages', 'and', 'libraries', 'that', 'i', 'needed', 'for', 'my', 'ml', 'model', 'were', 'installed', 'a', 'long', 'time', 'ago', 'with', 'anaconda', 'before', 'i', 'created', 'this', 'virtual', 'environment', 'have', 'i', 'done', 'anything', 'wrong']","['you', 'can', 'create', 'requirements', 'txt', 'using', 'pip', 'freeze', 'requirements', 'txt', 'and', 'add', 'it', 'to', 'your', 'repo', 'this', 'will', 'generate', 'list', 'of', 'your', 'installed', 'packages', 'and', 'exact', 'versions', 'you', 'have', 'https', 'pip', 'pypa', 'io', 'en', 'stable', 'cli', 'pip_freeze']","['probably', 'silly', 'question', 'trying', 'set', 'project', 'gitlab', 'going', 'used', 'deployment', 'ml', 'model', 'use', 'fastapi', 'new', 'try', 'provide', 'much', 'info', 'possible', 'created', 'project', 'gitlab', 'right', 'contains', 'readme', 'md', 'file', 'actual', 'python', 'code', 'stored', 'folder', 'computer', 'myproject', 'contains', 'two', 'folder', 'containing', 'data', 'py', 'script', 'notebook', 'set', 'requirement', 'txt', 'tried', 'create', 'virtual', 'environment', 'window', 'open', 'myproject', 'folder', 'contains', 'two', 'folder', 'code', 'virtual', 'enviroment', 'also', 'contains', 'lib', 'script', 'pyvenv', 'cfg', 'latter', 'contains', 'home', 'c', 'user', 'anaconda', 'implementation', 'cpython', 'version_info', 'final', 'virtualenv', 'include', 'system', 'site', 'package', 'false', 'base', 'prefix', 'c', 'user', 'anaconda', 'base', 'exec', 'prefix', 'c', 'user', 'anaconda', 'base', 'executable', 'c', 'user', 'anaconda', 'python', 'exe', 'also', 'cloned', 'gitlab', 'repo', 'computer', 'saved', 'somewhere', 'else', 'c', 'user', 'know', 'need', 'pip', 'install', 'r', 'requirement', 'txt', 'understand', 'actually', 'add', 'requirement', 'file', 'package', 'library', 'needed', 'ml', 'model', 'installed', 'long', 'time', 'ago', 'anaconda', 'created', 'virtual', 'environment', 'done', 'anything', 'wrong']","['you', 'can', 'create', 'requirement', 'txt', 'using', 'pip', 'freeze', 'requirement', 'txt', 'and', 'add', 'it', 'to', 'your', 'repo', 'this', 'will', 'generate', 'list', 'of', 'your', 'installed', 'package', 'and', 'exact', 'version', 'you', 'have', 'http', 'pip', 'pypa', 'io', 'en', 'stable', 'cli', 'pip_freeze']",System Requirements and AWS,1,"{'neg': 0.0, 'neu': 0.941, 'pos': 0.059, 'compound': 0.886}",-0.0030844155844155937,1,Package Management and File Handling,3query
70334510,Creating requirements.txt in GitLab,"<p>Probably a silly question, but I am trying to set up a project in GitLab that is going to be used for deployment of an ML model, for which I will use FastAPI. I'm very new to this and will try to provide as much info as possible.</p>
<p>I created the project in GitLab, which right now only contains a README.md file. The actual Python code is stored in a folder on my computer (&quot;MyProject&quot;), which contains two folders, each of which containing some data, .py scripts and a notebook.</p>
<p>To set up <code>requirements.txt</code>, I tried to create a virtual environment in Windows. Now, when I open the &quot;MyProject&quot; folder, it contains those two folders with code and the virtual enviroment, which also contains <code>Lib, Scripts, pyvenv.cfg</code>. The latter contains:</p>
<pre><code>home = c:\users\me\anaconda3
implementation = CPython
version_info = 3.8.5.final.0
virtualenv = 20.10.0
include-system-site-packages = false
base-prefix = c:\users\me\anaconda3
base-exec-prefix = c:\users\me\anaconda3
base-executable = c:\users\me\anaconda3\python.exe
</code></pre>
<p>I also cloned the GitLab repo, but on my computer it is saved somewhere else (in <code>c:\users\me</code>). I know that I need to do:</p>
<pre><code>pip install -r
requirements.txt
</code></pre>
<p>But I don't understand how to actually add this requirements file. All of the packages and libraries that I needed for my ML model were installed a long time ago with anaconda, before I created this virtual environment. Have I done anything wrong?</p>
",<python><git><gitlab><virtualenv><requirements>,2021-12-13 12:14:39,2032,1,4,70334663,"<p>Simple solution would be <code>pip freeze &gt; requirements.txt</code> but this command will add all the packages present in your enviroment which may not be used in your project. In my daily job, I use this <a href=""https://pypi.org/project/pipreqs/"" rel=""nofollow noreferrer"">https://pypi.org/project/pipreqs/</a>. you can install it and run <code>pipreqs --force</code> in your project folder. This will add packages to requirements.txt which are used in your project.</p>
",2021-12,probably a silly question but i am trying to set up a project in gitlab that is going to be used for deployment of an ml model for which i will use fastapi i m very new to this and will try to provide as much info as possible i created the project in gitlab which right now only contains a readme md file the actual python code is stored in a folder on my computer myproject which contains two folders each of which containing some data py scripts and a notebook to set up requirements txt i tried to create a virtual environment in windows now when i open the myproject folder it contains those two folders with code and the virtual enviroment which also contains lib scripts pyvenv cfg the latter contains home c users me anaconda  implementation cpython version_info       final   virtualenv       include system site packages false base prefix c users me anaconda  base exec prefix c users me anaconda  base executable c users me anaconda  python exe i also cloned the gitlab repo but on my computer it is saved somewhere else in c users me i know that i need to do pip install r requirements txt but i don t understand how to actually add this requirements file all of the packages and libraries that i needed for my ml model were installed a long time ago with anaconda before i created this virtual environment have i done anything wrong,simple solution would be pip freeze requirements txt but this command will add all the packages present in your enviroment which may not be used in your project in my daily job i use this https pypi org project pipreqs you can install it and run pipreqs force in your project folder this will add packages to requirements txt which are used in your project,"['python', 'git', 'gitlab', 'virtualenv', 'requirements']","['probably', 'a', 'silly', 'question', 'but', 'i', 'am', 'trying', 'to', 'set', 'up', 'a', 'project', 'in', 'gitlab', 'that', 'is', 'going', 'to', 'be', 'used', 'for', 'deployment', 'of', 'an', 'ml', 'model', 'for', 'which', 'i', 'will', 'use', 'fastapi', 'i', 'm', 'very', 'new', 'to', 'this', 'and', 'will', 'try', 'to', 'provide', 'as', 'much', 'info', 'as', 'possible', 'i', 'created', 'the', 'project', 'in', 'gitlab', 'which', 'right', 'now', 'only', 'contains', 'a', 'readme', 'md', 'file', 'the', 'actual', 'python', 'code', 'is', 'stored', 'in', 'a', 'folder', 'on', 'my', 'computer', 'myproject', 'which', 'contains', 'two', 'folders', 'each', 'of', 'which', 'containing', 'some', 'data', 'py', 'scripts', 'and', 'a', 'notebook', 'to', 'set', 'up', 'requirements', 'txt', 'i', 'tried', 'to', 'create', 'a', 'virtual', 'environment', 'in', 'windows', 'now', 'when', 'i', 'open', 'the', 'myproject', 'folder', 'it', 'contains', 'those', 'two', 'folders', 'with', 'code', 'and', 'the', 'virtual', 'enviroment', 'which', 'also', 'contains', 'lib', 'scripts', 'pyvenv', 'cfg', 'the', 'latter', 'contains', 'home', 'c', 'users', 'me', 'anaconda', 'implementation', 'cpython', 'version_info', 'final', 'virtualenv', 'include', 'system', 'site', 'packages', 'false', 'base', 'prefix', 'c', 'users', 'me', 'anaconda', 'base', 'exec', 'prefix', 'c', 'users', 'me', 'anaconda', 'base', 'executable', 'c', 'users', 'me', 'anaconda', 'python', 'exe', 'i', 'also', 'cloned', 'the', 'gitlab', 'repo', 'but', 'on', 'my', 'computer', 'it', 'is', 'saved', 'somewhere', 'else', 'in', 'c', 'users', 'me', 'i', 'know', 'that', 'i', 'need', 'to', 'do', 'pip', 'install', 'r', 'requirements', 'txt', 'but', 'i', 'don', 't', 'understand', 'how', 'to', 'actually', 'add', 'this', 'requirements', 'file', 'all', 'of', 'the', 'packages', 'and', 'libraries', 'that', 'i', 'needed', 'for', 'my', 'ml', 'model', 'were', 'installed', 'a', 'long', 'time', 'ago', 'with', 'anaconda', 'before', 'i', 'created', 'this', 'virtual', 'environment', 'have', 'i', 'done', 'anything', 'wrong']","['simple', 'solution', 'would', 'be', 'pip', 'freeze', 'requirements', 'txt', 'but', 'this', 'command', 'will', 'add', 'all', 'the', 'packages', 'present', 'in', 'your', 'enviroment', 'which', 'may', 'not', 'be', 'used', 'in', 'your', 'project', 'in', 'my', 'daily', 'job', 'i', 'use', 'this', 'https', 'pypi', 'org', 'project', 'pipreqs', 'you', 'can', 'install', 'it', 'and', 'run', 'pipreqs', 'force', 'in', 'your', 'project', 'folder', 'this', 'will', 'add', 'packages', 'to', 'requirements', 'txt', 'which', 'are', 'used', 'in', 'your', 'project']","['probably', 'silly', 'question', 'trying', 'set', 'project', 'gitlab', 'going', 'used', 'deployment', 'ml', 'model', 'use', 'fastapi', 'new', 'try', 'provide', 'much', 'info', 'possible', 'created', 'project', 'gitlab', 'right', 'contains', 'readme', 'md', 'file', 'actual', 'python', 'code', 'stored', 'folder', 'computer', 'myproject', 'contains', 'two', 'folder', 'containing', 'data', 'py', 'script', 'notebook', 'set', 'requirement', 'txt', 'tried', 'create', 'virtual', 'environment', 'window', 'open', 'myproject', 'folder', 'contains', 'two', 'folder', 'code', 'virtual', 'enviroment', 'also', 'contains', 'lib', 'script', 'pyvenv', 'cfg', 'latter', 'contains', 'home', 'c', 'user', 'anaconda', 'implementation', 'cpython', 'version_info', 'final', 'virtualenv', 'include', 'system', 'site', 'package', 'false', 'base', 'prefix', 'c', 'user', 'anaconda', 'base', 'exec', 'prefix', 'c', 'user', 'anaconda', 'base', 'executable', 'c', 'user', 'anaconda', 'python', 'exe', 'also', 'cloned', 'gitlab', 'repo', 'computer', 'saved', 'somewhere', 'else', 'c', 'user', 'know', 'need', 'pip', 'install', 'r', 'requirement', 'txt', 'understand', 'actually', 'add', 'requirement', 'file', 'package', 'library', 'needed', 'ml', 'model', 'installed', 'long', 'time', 'ago', 'anaconda', 'created', 'virtual', 'environment', 'done', 'anything', 'wrong']","['simple', 'solution', 'would', 'be', 'pip', 'freeze', 'requirement', 'txt', 'but', 'this', 'command', 'will', 'add', 'all', 'the', 'package', 'present', 'in', 'your', 'enviroment', 'which', 'may', 'not', 'be', 'used', 'in', 'your', 'project', 'in', 'my', 'daily', 'job', 'i', 'use', 'this', 'http', 'pypi', 'org', 'project', 'pipreqs', 'you', 'can', 'install', 'it', 'and', 'run', 'pipreqs', 'force', 'in', 'your', 'project', 'folder', 'this', 'will', 'add', 'package', 'to', 'requirement', 'txt', 'which', 'are', 'used', 'in', 'your', 'project']",System Requirements and AWS,1,"{'neg': 0.0, 'neu': 0.941, 'pos': 0.059, 'compound': 0.886}",-0.0030844155844155937,1,Package Management and File Handling,3query
70334510,Creating requirements.txt in GitLab,"<p>Probably a silly question, but I am trying to set up a project in GitLab that is going to be used for deployment of an ML model, for which I will use FastAPI. I'm very new to this and will try to provide as much info as possible.</p>
<p>I created the project in GitLab, which right now only contains a README.md file. The actual Python code is stored in a folder on my computer (&quot;MyProject&quot;), which contains two folders, each of which containing some data, .py scripts and a notebook.</p>
<p>To set up <code>requirements.txt</code>, I tried to create a virtual environment in Windows. Now, when I open the &quot;MyProject&quot; folder, it contains those two folders with code and the virtual enviroment, which also contains <code>Lib, Scripts, pyvenv.cfg</code>. The latter contains:</p>
<pre><code>home = c:\users\me\anaconda3
implementation = CPython
version_info = 3.8.5.final.0
virtualenv = 20.10.0
include-system-site-packages = false
base-prefix = c:\users\me\anaconda3
base-exec-prefix = c:\users\me\anaconda3
base-executable = c:\users\me\anaconda3\python.exe
</code></pre>
<p>I also cloned the GitLab repo, but on my computer it is saved somewhere else (in <code>c:\users\me</code>). I know that I need to do:</p>
<pre><code>pip install -r
requirements.txt
</code></pre>
<p>But I don't understand how to actually add this requirements file. All of the packages and libraries that I needed for my ML model were installed a long time ago with anaconda, before I created this virtual environment. Have I done anything wrong?</p>
",<python><git><gitlab><virtualenv><requirements>,2021-12-13 12:14:39,2032,1,4,70335088,"<blockquote>
<p>how to actually add this requirements file</p>
</blockquote>
<p>You create the file yourself. For every library that you use, add a line in <code>requirements.txt</code> with the name of the library.  Also see documentation <a href=""https://pip.pypa.io/en/stable/reference/requirements-file-format/"" rel=""nofollow noreferrer"">https://pip.pypa.io/en/stable/reference/requirements-file-format/</a></p>
<p>After creating the file, <code>commit</code> and <code>push</code> it to the git repository.</p>
<blockquote>
<p>All of the packages and libraries that I needed for my ML model were installed a long time ago with anaconda</p>
</blockquote>
<p>Gitlab-CI with docker executor starts with a fresh environment. You have to repeat <em>all</em> installation steps that you did on your workstation <em>inside</em> the docker environment. You can run docker instance of the container locally for testing. Consult gitalb-ci and docker documentations.</p>
",2021-12,probably a silly question but i am trying to set up a project in gitlab that is going to be used for deployment of an ml model for which i will use fastapi i m very new to this and will try to provide as much info as possible i created the project in gitlab which right now only contains a readme md file the actual python code is stored in a folder on my computer myproject which contains two folders each of which containing some data py scripts and a notebook to set up requirements txt i tried to create a virtual environment in windows now when i open the myproject folder it contains those two folders with code and the virtual enviroment which also contains lib scripts pyvenv cfg the latter contains home c users me anaconda  implementation cpython version_info       final   virtualenv       include system site packages false base prefix c users me anaconda  base exec prefix c users me anaconda  base executable c users me anaconda  python exe i also cloned the gitlab repo but on my computer it is saved somewhere else in c users me i know that i need to do pip install r requirements txt but i don t understand how to actually add this requirements file all of the packages and libraries that i needed for my ml model were installed a long time ago with anaconda before i created this virtual environment have i done anything wrong,how to actually add this requirements file you create the file yourself for every library that you use add a line in requirements txt with the name of the library also see documentation https pip pypa io en stable reference requirements file format after creating the file commit and push it to the git repository all of the packages and libraries that i needed for my ml model were installed a long time ago with anaconda gitlab ci with docker executor starts with a fresh environment you have to repeat all installation steps that you did on your workstation inside the docker environment you can run docker instance of the container locally for testing consult gitalb ci and docker documentations,"['python', 'git', 'gitlab', 'virtualenv', 'requirements']","['probably', 'a', 'silly', 'question', 'but', 'i', 'am', 'trying', 'to', 'set', 'up', 'a', 'project', 'in', 'gitlab', 'that', 'is', 'going', 'to', 'be', 'used', 'for', 'deployment', 'of', 'an', 'ml', 'model', 'for', 'which', 'i', 'will', 'use', 'fastapi', 'i', 'm', 'very', 'new', 'to', 'this', 'and', 'will', 'try', 'to', 'provide', 'as', 'much', 'info', 'as', 'possible', 'i', 'created', 'the', 'project', 'in', 'gitlab', 'which', 'right', 'now', 'only', 'contains', 'a', 'readme', 'md', 'file', 'the', 'actual', 'python', 'code', 'is', 'stored', 'in', 'a', 'folder', 'on', 'my', 'computer', 'myproject', 'which', 'contains', 'two', 'folders', 'each', 'of', 'which', 'containing', 'some', 'data', 'py', 'scripts', 'and', 'a', 'notebook', 'to', 'set', 'up', 'requirements', 'txt', 'i', 'tried', 'to', 'create', 'a', 'virtual', 'environment', 'in', 'windows', 'now', 'when', 'i', 'open', 'the', 'myproject', 'folder', 'it', 'contains', 'those', 'two', 'folders', 'with', 'code', 'and', 'the', 'virtual', 'enviroment', 'which', 'also', 'contains', 'lib', 'scripts', 'pyvenv', 'cfg', 'the', 'latter', 'contains', 'home', 'c', 'users', 'me', 'anaconda', 'implementation', 'cpython', 'version_info', 'final', 'virtualenv', 'include', 'system', 'site', 'packages', 'false', 'base', 'prefix', 'c', 'users', 'me', 'anaconda', 'base', 'exec', 'prefix', 'c', 'users', 'me', 'anaconda', 'base', 'executable', 'c', 'users', 'me', 'anaconda', 'python', 'exe', 'i', 'also', 'cloned', 'the', 'gitlab', 'repo', 'but', 'on', 'my', 'computer', 'it', 'is', 'saved', 'somewhere', 'else', 'in', 'c', 'users', 'me', 'i', 'know', 'that', 'i', 'need', 'to', 'do', 'pip', 'install', 'r', 'requirements', 'txt', 'but', 'i', 'don', 't', 'understand', 'how', 'to', 'actually', 'add', 'this', 'requirements', 'file', 'all', 'of', 'the', 'packages', 'and', 'libraries', 'that', 'i', 'needed', 'for', 'my', 'ml', 'model', 'were', 'installed', 'a', 'long', 'time', 'ago', 'with', 'anaconda', 'before', 'i', 'created', 'this', 'virtual', 'environment', 'have', 'i', 'done', 'anything', 'wrong']","['how', 'to', 'actually', 'add', 'this', 'requirements', 'file', 'you', 'create', 'the', 'file', 'yourself', 'for', 'every', 'library', 'that', 'you', 'use', 'add', 'a', 'line', 'in', 'requirements', 'txt', 'with', 'the', 'name', 'of', 'the', 'library', 'also', 'see', 'documentation', 'https', 'pip', 'pypa', 'io', 'en', 'stable', 'reference', 'requirements', 'file', 'format', 'after', 'creating', 'the', 'file', 'commit', 'and', 'push', 'it', 'to', 'the', 'git', 'repository', 'all', 'of', 'the', 'packages', 'and', 'libraries', 'that', 'i', 'needed', 'for', 'my', 'ml', 'model', 'were', 'installed', 'a', 'long', 'time', 'ago', 'with', 'anaconda', 'gitlab', 'ci', 'with', 'docker', 'executor', 'starts', 'with', 'a', 'fresh', 'environment', 'you', 'have', 'to', 'repeat', 'all', 'installation', 'steps', 'that', 'you', 'did', 'on', 'your', 'workstation', 'inside', 'the', 'docker', 'environment', 'you', 'can', 'run', 'docker', 'instance', 'of', 'the', 'container', 'locally', 'for', 'testing', 'consult', 'gitalb', 'ci', 'and', 'docker', 'documentations']","['probably', 'silly', 'question', 'trying', 'set', 'project', 'gitlab', 'going', 'used', 'deployment', 'ml', 'model', 'use', 'fastapi', 'new', 'try', 'provide', 'much', 'info', 'possible', 'created', 'project', 'gitlab', 'right', 'contains', 'readme', 'md', 'file', 'actual', 'python', 'code', 'stored', 'folder', 'computer', 'myproject', 'contains', 'two', 'folder', 'containing', 'data', 'py', 'script', 'notebook', 'set', 'requirement', 'txt', 'tried', 'create', 'virtual', 'environment', 'window', 'open', 'myproject', 'folder', 'contains', 'two', 'folder', 'code', 'virtual', 'enviroment', 'also', 'contains', 'lib', 'script', 'pyvenv', 'cfg', 'latter', 'contains', 'home', 'c', 'user', 'anaconda', 'implementation', 'cpython', 'version_info', 'final', 'virtualenv', 'include', 'system', 'site', 'package', 'false', 'base', 'prefix', 'c', 'user', 'anaconda', 'base', 'exec', 'prefix', 'c', 'user', 'anaconda', 'base', 'executable', 'c', 'user', 'anaconda', 'python', 'exe', 'also', 'cloned', 'gitlab', 'repo', 'computer', 'saved', 'somewhere', 'else', 'c', 'user', 'know', 'need', 'pip', 'install', 'r', 'requirement', 'txt', 'understand', 'actually', 'add', 'requirement', 'file', 'package', 'library', 'needed', 'ml', 'model', 'installed', 'long', 'time', 'ago', 'anaconda', 'created', 'virtual', 'environment', 'done', 'anything', 'wrong']","['how', 'to', 'actually', 'add', 'this', 'requirement', 'file', 'you', 'create', 'the', 'file', 'yourself', 'for', 'every', 'library', 'that', 'you', 'use', 'add', 'a', 'line', 'in', 'requirement', 'txt', 'with', 'the', 'name', 'of', 'the', 'library', 'also', 'see', 'documentation', 'http', 'pip', 'pypa', 'io', 'en', 'stable', 'reference', 'requirement', 'file', 'format', 'after', 'creating', 'the', 'file', 'commit', 'and', 'push', 'it', 'to', 'the', 'git', 'repository', 'all', 'of', 'the', 'package', 'and', 'library', 'that', 'i', 'needed', 'for', 'my', 'ml', 'model', 'were', 'installed', 'a', 'long', 'time', 'ago', 'with', 'anaconda', 'gitlab', 'ci', 'with', 'docker', 'executor', 'start', 'with', 'a', 'fresh', 'environment', 'you', 'have', 'to', 'repeat', 'all', 'installation', 'step', 'that', 'you', 'did', 'on', 'your', 'workstation', 'inside', 'the', 'docker', 'environment', 'you', 'can', 'run', 'docker', 'instance', 'of', 'the', 'container', 'locally', 'for', 'testing', 'consult', 'gitalb', 'ci', 'and', 'docker', 'documentation']",System Requirements and AWS,1,"{'neg': 0.0, 'neu': 0.941, 'pos': 0.059, 'compound': 0.886}",-0.0030844155844155937,1,Package Management and File Handling,3query
70334510,Creating requirements.txt in GitLab,"<p>Probably a silly question, but I am trying to set up a project in GitLab that is going to be used for deployment of an ML model, for which I will use FastAPI. I'm very new to this and will try to provide as much info as possible.</p>
<p>I created the project in GitLab, which right now only contains a README.md file. The actual Python code is stored in a folder on my computer (&quot;MyProject&quot;), which contains two folders, each of which containing some data, .py scripts and a notebook.</p>
<p>To set up <code>requirements.txt</code>, I tried to create a virtual environment in Windows. Now, when I open the &quot;MyProject&quot; folder, it contains those two folders with code and the virtual enviroment, which also contains <code>Lib, Scripts, pyvenv.cfg</code>. The latter contains:</p>
<pre><code>home = c:\users\me\anaconda3
implementation = CPython
version_info = 3.8.5.final.0
virtualenv = 20.10.0
include-system-site-packages = false
base-prefix = c:\users\me\anaconda3
base-exec-prefix = c:\users\me\anaconda3
base-executable = c:\users\me\anaconda3\python.exe
</code></pre>
<p>I also cloned the GitLab repo, but on my computer it is saved somewhere else (in <code>c:\users\me</code>). I know that I need to do:</p>
<pre><code>pip install -r
requirements.txt
</code></pre>
<p>But I don't understand how to actually add this requirements file. All of the packages and libraries that I needed for my ML model were installed a long time ago with anaconda, before I created this virtual environment. Have I done anything wrong?</p>
",<python><git><gitlab><virtualenv><requirements>,2021-12-13 12:14:39,2032,1,4,70335164,"<p>I think you mixed up some things. GitLab uses Git for version control of your files (your code). Therefore your repository should contain the files with your code. You can just put the files of your folder &quot;MyProject&quot; into the folder, where you cloned the repository to. Also add the requirements.txt the readme-file and so on.</p>
<p>The virtual environment is used to keep your system installation of Python clean and only have the necessary packages installed for each project. Among other things to avoid package requirement conflicts. The usage of an requirements.txt file is independet of the virtual environment, even if it is a sensible combination.</p>
<p>In general this means, your requirements.txt is always shared together with your code, because it lays within the same repository. When someone clones the repository, he can use the requirements.txt to install all the dependencies to his venv (or somewherer else) and then run your code without the nedd to install further python packages.</p>
<p>Your requirements.txt file has to contain columns, which look like this: <code>numpy==1.21.4</code>. Then you have to activate the environment with <code>&lt;your path to the venv folder&gt;\venv\Scripts\activate</code> and use <code>python -m pip install -r requirements.txt</code> to install the packages listed in your requirements.txt.</p>
",2021-12,probably a silly question but i am trying to set up a project in gitlab that is going to be used for deployment of an ml model for which i will use fastapi i m very new to this and will try to provide as much info as possible i created the project in gitlab which right now only contains a readme md file the actual python code is stored in a folder on my computer myproject which contains two folders each of which containing some data py scripts and a notebook to set up requirements txt i tried to create a virtual environment in windows now when i open the myproject folder it contains those two folders with code and the virtual enviroment which also contains lib scripts pyvenv cfg the latter contains home c users me anaconda  implementation cpython version_info       final   virtualenv       include system site packages false base prefix c users me anaconda  base exec prefix c users me anaconda  base executable c users me anaconda  python exe i also cloned the gitlab repo but on my computer it is saved somewhere else in c users me i know that i need to do pip install r requirements txt but i don t understand how to actually add this requirements file all of the packages and libraries that i needed for my ml model were installed a long time ago with anaconda before i created this virtual environment have i done anything wrong,i think you mixed up some things gitlab uses git for version control of your files your code therefore your repository should contain the files with your code you can just put the files of your folder myproject into the folder where you cloned the repository to also add the requirements txt the readme file and so on the virtual environment is used to keep your system installation of python clean and only have the necessary packages installed for each project among other things to avoid package requirement conflicts the usage of an requirements txt file is independet of the virtual environment even if it is a sensible combination in general this means your requirements txt is always shared together with your code because it lays within the same repository when someone clones the repository he can use the requirements txt to install all the dependencies to his venv or somewherer else and then run your code without the nedd to install further python packages your requirements txt file has to contain columns which look like this numpy       then you have to activate the environment with your path to the venv folder venv scripts activate and use python m pip install r requirements txt to install the packages listed in your requirements txt,"['python', 'git', 'gitlab', 'virtualenv', 'requirements']","['probably', 'a', 'silly', 'question', 'but', 'i', 'am', 'trying', 'to', 'set', 'up', 'a', 'project', 'in', 'gitlab', 'that', 'is', 'going', 'to', 'be', 'used', 'for', 'deployment', 'of', 'an', 'ml', 'model', 'for', 'which', 'i', 'will', 'use', 'fastapi', 'i', 'm', 'very', 'new', 'to', 'this', 'and', 'will', 'try', 'to', 'provide', 'as', 'much', 'info', 'as', 'possible', 'i', 'created', 'the', 'project', 'in', 'gitlab', 'which', 'right', 'now', 'only', 'contains', 'a', 'readme', 'md', 'file', 'the', 'actual', 'python', 'code', 'is', 'stored', 'in', 'a', 'folder', 'on', 'my', 'computer', 'myproject', 'which', 'contains', 'two', 'folders', 'each', 'of', 'which', 'containing', 'some', 'data', 'py', 'scripts', 'and', 'a', 'notebook', 'to', 'set', 'up', 'requirements', 'txt', 'i', 'tried', 'to', 'create', 'a', 'virtual', 'environment', 'in', 'windows', 'now', 'when', 'i', 'open', 'the', 'myproject', 'folder', 'it', 'contains', 'those', 'two', 'folders', 'with', 'code', 'and', 'the', 'virtual', 'enviroment', 'which', 'also', 'contains', 'lib', 'scripts', 'pyvenv', 'cfg', 'the', 'latter', 'contains', 'home', 'c', 'users', 'me', 'anaconda', 'implementation', 'cpython', 'version_info', 'final', 'virtualenv', 'include', 'system', 'site', 'packages', 'false', 'base', 'prefix', 'c', 'users', 'me', 'anaconda', 'base', 'exec', 'prefix', 'c', 'users', 'me', 'anaconda', 'base', 'executable', 'c', 'users', 'me', 'anaconda', 'python', 'exe', 'i', 'also', 'cloned', 'the', 'gitlab', 'repo', 'but', 'on', 'my', 'computer', 'it', 'is', 'saved', 'somewhere', 'else', 'in', 'c', 'users', 'me', 'i', 'know', 'that', 'i', 'need', 'to', 'do', 'pip', 'install', 'r', 'requirements', 'txt', 'but', 'i', 'don', 't', 'understand', 'how', 'to', 'actually', 'add', 'this', 'requirements', 'file', 'all', 'of', 'the', 'packages', 'and', 'libraries', 'that', 'i', 'needed', 'for', 'my', 'ml', 'model', 'were', 'installed', 'a', 'long', 'time', 'ago', 'with', 'anaconda', 'before', 'i', 'created', 'this', 'virtual', 'environment', 'have', 'i', 'done', 'anything', 'wrong']","['i', 'think', 'you', 'mixed', 'up', 'some', 'things', 'gitlab', 'uses', 'git', 'for', 'version', 'control', 'of', 'your', 'files', 'your', 'code', 'therefore', 'your', 'repository', 'should', 'contain', 'the', 'files', 'with', 'your', 'code', 'you', 'can', 'just', 'put', 'the', 'files', 'of', 'your', 'folder', 'myproject', 'into', 'the', 'folder', 'where', 'you', 'cloned', 'the', 'repository', 'to', 'also', 'add', 'the', 'requirements', 'txt', 'the', 'readme', 'file', 'and', 'so', 'on', 'the', 'virtual', 'environment', 'is', 'used', 'to', 'keep', 'your', 'system', 'installation', 'of', 'python', 'clean', 'and', 'only', 'have', 'the', 'necessary', 'packages', 'installed', 'for', 'each', 'project', 'among', 'other', 'things', 'to', 'avoid', 'package', 'requirement', 'conflicts', 'the', 'usage', 'of', 'an', 'requirements', 'txt', 'file', 'is', 'independet', 'of', 'the', 'virtual', 'environment', 'even', 'if', 'it', 'is', 'a', 'sensible', 'combination', 'in', 'general', 'this', 'means', 'your', 'requirements', 'txt', 'is', 'always', 'shared', 'together', 'with', 'your', 'code', 'because', 'it', 'lays', 'within', 'the', 'same', 'repository', 'when', 'someone', 'clones', 'the', 'repository', 'he', 'can', 'use', 'the', 'requirements', 'txt', 'to', 'install', 'all', 'the', 'dependencies', 'to', 'his', 'venv', 'or', 'somewherer', 'else', 'and', 'then', 'run', 'your', 'code', 'without', 'the', 'nedd', 'to', 'install', 'further', 'python', 'packages', 'your', 'requirements', 'txt', 'file', 'has', 'to', 'contain', 'columns', 'which', 'look', 'like', 'this', 'numpy', 'then', 'you', 'have', 'to', 'activate', 'the', 'environment', 'with', 'your', 'path', 'to', 'the', 'venv', 'folder', 'venv', 'scripts', 'activate', 'and', 'use', 'python', 'm', 'pip', 'install', 'r', 'requirements', 'txt', 'to', 'install', 'the', 'packages', 'listed', 'in', 'your', 'requirements', 'txt']","['probably', 'silly', 'question', 'trying', 'set', 'project', 'gitlab', 'going', 'used', 'deployment', 'ml', 'model', 'use', 'fastapi', 'new', 'try', 'provide', 'much', 'info', 'possible', 'created', 'project', 'gitlab', 'right', 'contains', 'readme', 'md', 'file', 'actual', 'python', 'code', 'stored', 'folder', 'computer', 'myproject', 'contains', 'two', 'folder', 'containing', 'data', 'py', 'script', 'notebook', 'set', 'requirement', 'txt', 'tried', 'create', 'virtual', 'environment', 'window', 'open', 'myproject', 'folder', 'contains', 'two', 'folder', 'code', 'virtual', 'enviroment', 'also', 'contains', 'lib', 'script', 'pyvenv', 'cfg', 'latter', 'contains', 'home', 'c', 'user', 'anaconda', 'implementation', 'cpython', 'version_info', 'final', 'virtualenv', 'include', 'system', 'site', 'package', 'false', 'base', 'prefix', 'c', 'user', 'anaconda', 'base', 'exec', 'prefix', 'c', 'user', 'anaconda', 'base', 'executable', 'c', 'user', 'anaconda', 'python', 'exe', 'also', 'cloned', 'gitlab', 'repo', 'computer', 'saved', 'somewhere', 'else', 'c', 'user', 'know', 'need', 'pip', 'install', 'r', 'requirement', 'txt', 'understand', 'actually', 'add', 'requirement', 'file', 'package', 'library', 'needed', 'ml', 'model', 'installed', 'long', 'time', 'ago', 'anaconda', 'created', 'virtual', 'environment', 'done', 'anything', 'wrong']","['i', 'think', 'you', 'mixed', 'up', 'some', 'thing', 'gitlab', 'us', 'git', 'for', 'version', 'control', 'of', 'your', 'file', 'your', 'code', 'therefore', 'your', 'repository', 'should', 'contain', 'the', 'file', 'with', 'your', 'code', 'you', 'can', 'just', 'put', 'the', 'file', 'of', 'your', 'folder', 'myproject', 'into', 'the', 'folder', 'where', 'you', 'cloned', 'the', 'repository', 'to', 'also', 'add', 'the', 'requirement', 'txt', 'the', 'readme', 'file', 'and', 'so', 'on', 'the', 'virtual', 'environment', 'is', 'used', 'to', 'keep', 'your', 'system', 'installation', 'of', 'python', 'clean', 'and', 'only', 'have', 'the', 'necessary', 'package', 'installed', 'for', 'each', 'project', 'among', 'other', 'thing', 'to', 'avoid', 'package', 'requirement', 'conflict', 'the', 'usage', 'of', 'an', 'requirement', 'txt', 'file', 'is', 'independet', 'of', 'the', 'virtual', 'environment', 'even', 'if', 'it', 'is', 'a', 'sensible', 'combination', 'in', 'general', 'this', 'mean', 'your', 'requirement', 'txt', 'is', 'always', 'shared', 'together', 'with', 'your', 'code', 'because', 'it', 'lay', 'within', 'the', 'same', 'repository', 'when', 'someone', 'clone', 'the', 'repository', 'he', 'can', 'use', 'the', 'requirement', 'txt', 'to', 'install', 'all', 'the', 'dependency', 'to', 'his', 'venv', 'or', 'somewherer', 'else', 'and', 'then', 'run', 'your', 'code', 'without', 'the', 'nedd', 'to', 'install', 'further', 'python', 'package', 'your', 'requirement', 'txt', 'file', 'ha', 'to', 'contain', 'column', 'which', 'look', 'like', 'this', 'numpy', 'then', 'you', 'have', 'to', 'activate', 'the', 'environment', 'with', 'your', 'path', 'to', 'the', 'venv', 'folder', 'venv', 'script', 'activate', 'and', 'use', 'python', 'm', 'pip', 'install', 'r', 'requirement', 'txt', 'to', 'install', 'the', 'package', 'listed', 'in', 'your', 'requirement', 'txt']",System Requirements and AWS,1,"{'neg': 0.0, 'neu': 0.941, 'pos': 0.059, 'compound': 0.886}",-0.0030844155844155937,1,Package Management and File Handling,3query
70084248,Exporting C# Applications to clients - Confusion about imports,"<p>I never really understood the technical requirements for C# applications.
I know Windows 10 has some .NET-versions installed by default. But whenever i write a console-application in c# and copy the compiled .exe-file to another computer, the .exe-file never runs (doesnt matter if compiled with net-core or net-framework). It is always missing a lot of dependencies. So I always either have to copy a huge amount of dll-files into the same folder as the .exe-file or publish it as a standalone-application, which is ridicilous huge (130 MB .exe-file for 100-line application which does nothing special at all).</p>
<p>On the other hand i can create a windows-service, compile it and use it. The compiled service-exe is very small (around 30 kb) and can be installed via cmd.exe (&quot;sc create  [...]&quot;). I tested this on a windows 10 VM. It runs without problems.</p>
<p>Am I getting everything right? Why can windows-services run without the .dll-files, but console-applications can not? Since Windows 10 has a lot of .net-applications installed, i would assume every c# application should run on windows 10 without having to add the .dll-files.</p>
",<c#><.net><requirements>,2021-11-23 16:16:26,75,-1,1,70084434,"<p>If the target computer doesn't have the .Net runtime you are targeting installed, you have two options:</p>
<ol>
<li>Install the runtime, then run the app.</li>
<li>Bundle the runtime with the app, either as separate files or all within the same exe.</li>
</ol>
<p>Option 2 is only available for .Net Core and .Net 5 and higher. For .Net Framework (4 and lower) you must choose option 1.</p>
<p>You can detect what versions of Framework are installed by looking at some registry values: <a href=""https://learn.microsoft.com/en-us/dotnet/framework/migration-guide/how-to-determine-which-versions-are-installed"" rel=""nofollow noreferrer"">https://learn.microsoft.com/en-us/dotnet/framework/migration-guide/how-to-determine-which-versions-are-installed</a></p>
<p>.Net Framework 4.6.1 is included in Windows 10 (I think base but also version 1511). <a href=""https://learn.microsoft.com/en-us/dotnet/framework/migration-guide/versions-and-dependencies#net-framework-461"" rel=""nofollow noreferrer"">Source</a>. This is why your Windows Service ran just fine without you needing to do anything.</p>
<p>You can install the .Net Core/5+ runtime from <a href=""https://dotnet.microsoft.com/"" rel=""nofollow noreferrer"">https://dotnet.microsoft.com/</a> so that you don't need to include the runtime with the binaries, if you wish.</p>
",2021-11,i never really understood the technical requirements for c applications i know windows   has some net versions installed by default but whenever i write a console application in c and copy the compiled exe file to another computer the exe file never runs doesnt matter if compiled with net core or net framework it is always missing a lot of dependencies so i always either have to copy a huge amount of dll files into the same folder as the exe file or publish it as a standalone application which is ridicilous huge   mb exe file for   line application which does nothing special at all on the other hand i can create a windows service compile it and use it the compiled service exe is very small around   kb and can be installed via cmd exe sc create i tested this on a windows   vm it runs without problems am i getting everything right why can windows services run without the dll files but console applications can not since windows   has a lot of net applications installed i would assume every c application should run on windows   without having to add the dll files,if the target computer doesn t have the net runtime you are targeting installed you have two options install the runtime then run the app bundle the runtime with the app either as separate files or all within the same exe option   is only available for net core and net   and higher for net framework   and lower you must choose option   you can detect what versions of framework are installed by looking at some registry values https learn microsoft com en us dotnet framework migration guide how to determine which versions are installed net framework       is included in windows   i think base but also version   source this is why your windows service ran just fine without you needing to do anything you can install the net core   runtime from https dotnet microsoft com so that you don t need to include the runtime with the binaries if you wish,"['c#', '.net', 'requirements']","['i', 'never', 'really', 'understood', 'the', 'technical', 'requirements', 'for', 'c', 'applications', 'i', 'know', 'windows', 'has', 'some', 'net', 'versions', 'installed', 'by', 'default', 'but', 'whenever', 'i', 'write', 'a', 'console', 'application', 'in', 'c', 'and', 'copy', 'the', 'compiled', 'exe', 'file', 'to', 'another', 'computer', 'the', 'exe', 'file', 'never', 'runs', 'doesnt', 'matter', 'if', 'compiled', 'with', 'net', 'core', 'or', 'net', 'framework', 'it', 'is', 'always', 'missing', 'a', 'lot', 'of', 'dependencies', 'so', 'i', 'always', 'either', 'have', 'to', 'copy', 'a', 'huge', 'amount', 'of', 'dll', 'files', 'into', 'the', 'same', 'folder', 'as', 'the', 'exe', 'file', 'or', 'publish', 'it', 'as', 'a', 'standalone', 'application', 'which', 'is', 'ridicilous', 'huge', 'mb', 'exe', 'file', 'for', 'line', 'application', 'which', 'does', 'nothing', 'special', 'at', 'all', 'on', 'the', 'other', 'hand', 'i', 'can', 'create', 'a', 'windows', 'service', 'compile', 'it', 'and', 'use', 'it', 'the', 'compiled', 'service', 'exe', 'is', 'very', 'small', 'around', 'kb', 'and', 'can', 'be', 'installed', 'via', 'cmd', 'exe', 'sc', 'create', 'i', 'tested', 'this', 'on', 'a', 'windows', 'vm', 'it', 'runs', 'without', 'problems', 'am', 'i', 'getting', 'everything', 'right', 'why', 'can', 'windows', 'services', 'run', 'without', 'the', 'dll', 'files', 'but', 'console', 'applications', 'can', 'not', 'since', 'windows', 'has', 'a', 'lot', 'of', 'net', 'applications', 'installed', 'i', 'would', 'assume', 'every', 'c', 'application', 'should', 'run', 'on', 'windows', 'without', 'having', 'to', 'add', 'the', 'dll', 'files']","['if', 'the', 'target', 'computer', 'doesn', 't', 'have', 'the', 'net', 'runtime', 'you', 'are', 'targeting', 'installed', 'you', 'have', 'two', 'options', 'install', 'the', 'runtime', 'then', 'run', 'the', 'app', 'bundle', 'the', 'runtime', 'with', 'the', 'app', 'either', 'as', 'separate', 'files', 'or', 'all', 'within', 'the', 'same', 'exe', 'option', 'is', 'only', 'available', 'for', 'net', 'core', 'and', 'net', 'and', 'higher', 'for', 'net', 'framework', 'and', 'lower', 'you', 'must', 'choose', 'option', 'you', 'can', 'detect', 'what', 'versions', 'of', 'framework', 'are', 'installed', 'by', 'looking', 'at', 'some', 'registry', 'values', 'https', 'learn', 'microsoft', 'com', 'en', 'us', 'dotnet', 'framework', 'migration', 'guide', 'how', 'to', 'determine', 'which', 'versions', 'are', 'installed', 'net', 'framework', 'is', 'included', 'in', 'windows', 'i', 'think', 'base', 'but', 'also', 'version', 'source', 'this', 'is', 'why', 'your', 'windows', 'service', 'ran', 'just', 'fine', 'without', 'you', 'needing', 'to', 'do', 'anything', 'you', 'can', 'install', 'the', 'net', 'core', 'runtime', 'from', 'https', 'dotnet', 'microsoft', 'com', 'so', 'that', 'you', 'don', 't', 'need', 'to', 'include', 'the', 'runtime', 'with', 'the', 'binaries', 'if', 'you', 'wish']","['never', 'really', 'understood', 'technical', 'requirement', 'c', 'application', 'know', 'window', 'ha', 'net', 'version', 'installed', 'default', 'whenever', 'write', 'console', 'application', 'c', 'copy', 'compiled', 'exe', 'file', 'another', 'computer', 'exe', 'file', 'never', 'run', 'doesnt', 'matter', 'compiled', 'net', 'core', 'net', 'framework', 'always', 'missing', 'lot', 'dependency', 'always', 'either', 'copy', 'huge', 'amount', 'dll', 'file', 'folder', 'exe', 'file', 'publish', 'standalone', 'application', 'ridicilous', 'huge', 'mb', 'exe', 'file', 'line', 'application', 'doe', 'nothing', 'special', 'hand', 'create', 'window', 'service', 'compile', 'use', 'compiled', 'service', 'exe', 'small', 'around', 'kb', 'installed', 'via', 'cmd', 'exe', 'sc', 'create', 'tested', 'window', 'vm', 'run', 'without', 'problem', 'getting', 'everything', 'right', 'window', 'service', 'run', 'without', 'dll', 'file', 'console', 'application', 'since', 'window', 'ha', 'lot', 'net', 'application', 'installed', 'would', 'assume', 'every', 'c', 'application', 'run', 'window', 'without', 'add', 'dll', 'file']","['if', 'the', 'target', 'computer', 'doesn', 't', 'have', 'the', 'net', 'runtime', 'you', 'are', 'targeting', 'installed', 'you', 'have', 'two', 'option', 'install', 'the', 'runtime', 'then', 'run', 'the', 'app', 'bundle', 'the', 'runtime', 'with', 'the', 'app', 'either', 'a', 'separate', 'file', 'or', 'all', 'within', 'the', 'same', 'exe', 'option', 'is', 'only', 'available', 'for', 'net', 'core', 'and', 'net', 'and', 'higher', 'for', 'net', 'framework', 'and', 'lower', 'you', 'must', 'choose', 'option', 'you', 'can', 'detect', 'what', 'version', 'of', 'framework', 'are', 'installed', 'by', 'looking', 'at', 'some', 'registry', 'value', 'http', 'learn', 'microsoft', 'com', 'en', 'u', 'dotnet', 'framework', 'migration', 'guide', 'how', 'to', 'determine', 'which', 'version', 'are', 'installed', 'net', 'framework', 'is', 'included', 'in', 'window', 'i', 'think', 'base', 'but', 'also', 'version', 'source', 'this', 'is', 'why', 'your', 'window', 'service', 'ran', 'just', 'fine', 'without', 'you', 'needing', 'to', 'do', 'anything', 'you', 'can', 'install', 'the', 'net', 'core', 'runtime', 'from', 'http', 'dotnet', 'microsoft', 'com', 'so', 'that', 'you', 'don', 't', 'need', 'to', 'include', 'the', 'runtime', 'with', 'the', 'binary', 'if', 'you', 'wish']",System Requirements and AWS,4,"{'neg': 0.037, 'neu': 0.877, 'pos': 0.086, 'compound': 0.8768}",0.08571428571428573,4,Building and Compiling Python Projects,3query
69953033,ERROR: Could not install packages due to an OSError?,"<p>I am getting errors please tell me what is wrong with this, I am not able to find a solution anywhere!</p>
<p>I am working on one project but when other members try with install -r rquirements.txt they get this error! please tell what should be the action to handle or remove this error?</p>
<pre><code>ERROR: Could not install packages due to an OSError: [Errno 2] 
No such file or directory: 'c:\\users\\ketan\\anaconda3\\lib\\site-packages\\numpy-1.21.2.dist-info\\ME
TADATA'
</code></pre>
<p>Output :</p>
<pre><code>Collecting Werkzeug==2.0.2
Using cached Werkzeug-2.0.2-py3-none-any.whl (288 kB)
Requirement already satisfied: wheel==0.37.0 in c:\users\ketan\anaconda3\lib\site-packages (from -r requirements.txt (line 93)) (0.37.0)
Collecting win32-setctime==1.0.3
  Using cached win32_setctime-1.0.3-py3-none-any.whl (3.5 kB)
Requirement already satisfied: wincertstore==0.2 in c:\users\ketan\anaconda3\lib\site-packages (from -r requirements.txt (line 95)) (0.2)
ERROR: Could not install packages due to an OSError: [Errno 2] No such file or directory: 'c:\\users\\ketan\\anaconda3\\lib\\site-packages\\numpy-1.21.2.dist-info\\ME
TADATA'
</code></pre>
<p>pip install -r requirements.txt --ignore-installed</p>
<p>Output2 :</p>
<pre><code>Collecting tbb==2021.*
  Using cached tbb-2021.4.0-py3-none-win_amd64.whl (268 kB)
Building wheels for collected packages: bottleneck
  Building wheel for bottleneck (PEP 517) ... error
  ERROR: Command errored out with exit status 1:
   command: 'C:\Users\ketan\anaconda3\python.exe' 'C:\Users\ketan\anaconda3\lib\site-packages\pip\_vendor\pep517\in_process\_in_process.py' build_wheel 'C:\Users\keta
n\AppData\Local\Temp\tmp4t2qkb8i'
       cwd: C:\Users\ketan\AppData\Local\Temp\pip-install-sqrcce6s\bottleneck_b15ec4cdd7084e748dc7a963008d04b3
  Complete output (51 lines):
  running bdist_wheel
  running build
  running build_py
  creating build
  creating build\lib.win-amd64-3.8
  creating build\lib.win-amd64-3.8\bottleneck
  copying bottleneck\_pytesttester.py -&gt; build\lib.win-amd64-3.8\bottleneck
  copying bottleneck\_version.py -&gt; build\lib.win-amd64-3.8\bottleneck
  copying bottleneck\__init__.py -&gt; build\lib.win-amd64-3.8\bottleneck
  creating build\lib.win-amd64-3.8\bottleneck\benchmark
  copying bottleneck\benchmark\autotimeit.py -&gt; build\lib.win-amd64-3.8\bottleneck\benchmark
  copying bottleneck\benchmark\bench.py -&gt; build\lib.win-amd64-3.8\bottleneck\benchmark
  copying bottleneck\benchmark\bench_detailed.py -&gt; build\lib.win-amd64-3.8\bottleneck\benchmark
  copying bottleneck\benchmark\__init__.py -&gt; build\lib.win-amd64-3.8\bottleneck\benchmark
  creating build\lib.win-amd64-3.8\bottleneck\slow
  copying bottleneck\slow\move.py -&gt; build\lib.win-amd64-3.8\bottleneck\slow
  copying bottleneck\slow\nonreduce.py -&gt; build\lib.win-amd64-3.8\bottleneck\slow
  copying bottleneck\slow\nonreduce_axis.py -&gt; build\lib.win-amd64-3.8\bottleneck\slow
  copying bottleneck\slow\reduce.py -&gt; build\lib.win-amd64-3.8\bottleneck\slow
  copying bottleneck\slow\__init__.py -&gt; build\lib.win-amd64-3.8\bottleneck\slow
  creating build\lib.win-amd64-3.8\bottleneck\src
  copying bottleneck\src\bn_config.py -&gt; build\lib.win-amd64-3.8\bottleneck\src
  copying bottleneck\src\bn_template.py -&gt; build\lib.win-amd64-3.8\bottleneck\src
  copying bottleneck\src\__init__.py -&gt; build\lib.win-amd64-3.8\bottleneck\src
  creating build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\input_modification_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\list_input_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\memory_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\move_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\nonreduce_axis_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\nonreduce_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\reduce_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\scalar_input_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\util.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\__init__.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  UPDATING build\lib.win-amd64-3.8\bottleneck/_version.py
  set build\lib.win-amd64-3.8\bottleneck/_version.py to '1.3.2'
  running build_ext
  running config
  compiling '_configtest.c':
  
  
  
  int __attribute__((optimize(&quot;O3&quot;))) have_attribute_optimize_opt_3(void*);
  
  int main(void)
  {
      return 0;
  }
  
  error: Microsoft Visual C++ 14.0 or greater is required. Get it with &quot;Microsoft C++ Build Tools&quot;: https://visualstudio.microsoft.com/visual-cpp-build-tools/
  ----------------------------------------
  ERROR: Failed building wheel for bottleneck
Failed to build bottleneck
ERROR: Could not build wheels for bottleneck which use PEP 517 and cannot be installed directly
</code></pre>
<p>pip install numpy==1.19.3
Output3:</p>
<pre><code>$ pip install numpy==1.19.3
Collecting numpy==1.19.3
  Using cached numpy-1.19.3-cp38-cp38-win_amd64.whl (13.3 MB)
WARNING: Error parsing requirements for numpy: [Errno 2] No such file or directory: 'c:\\users\\ketan\\anaconda3\\lib\\site-packages\\numpy-1.21.2.dist-info\\METADATA
'
Installing collected packages: numpy
  Attempting uninstall: numpy
    Found existing installation: numpy 1.21.2
ERROR: Cannot uninstall numpy 1.21.2, RECORD file not found. You might be able to recover from this via: 'pip install --force-reinstall --no-deps numpy==1.21.2'.
</code></pre>
",<python><python-3.x><requirements>,2021-11-13 09:30:01,6573,2,2,69953141,"<p>Try using an older version of NumPy, it should work.</p>
<pre><code>pip uninstall numpy

pip install numpy==1.19.3
</code></pre>
",2021-11,i am getting errors please tell me what is wrong with this i am not able to find a solution anywhere i am working on one project but when other members try with install r rquirements txt they get this error please tell what should be the action to handle or remove this error error could not install packages due to an oserror errno   no such file or directory c users ketan anaconda  lib site packages numpy       dist info me tadata output collecting werkzeug       using cached werkzeug       py  none any whl   kb requirement already satisfied wheel       in c users ketan anaconda  lib site packages from r requirements txt line         collecting win  setctime       using cached win _setctime       py  none any whl     kb requirement already satisfied wincertstore     in c users ketan anaconda  lib site packages from r requirements txt line       error could not install packages due to an oserror errno   no such file or directory c users ketan anaconda  lib site packages numpy       dist info me tadata pip install r requirements txt ignore installed output  collecting tbb   using cached tbb       py  none win_amd  whl   kb building wheels for collected packages bottleneck building wheel for bottleneck pep   error error command errored out with exit status   command c users ketan anaconda  python exe c users ketan anaconda  lib site packages pip _vendor pep  in_process _in_process py build_wheel c users keta n appdata local temp tmp t qkb i cwd c users ketan appdata local temp pip install sqrcce s bottleneck_b ec cdd e dc a d b  complete output   lines running bdist_wheel running build running build_py creating build creating build lib win amd      creating build lib win amd      bottleneck copying bottleneck _pytesttester py build lib win amd      bottleneck copying bottleneck _version py build lib win amd      bottleneck copying bottleneck __init__ py build lib win amd      bottleneck creating build lib win amd      bottleneck benchmark copying bottleneck benchmark autotimeit py build lib win amd      bottleneck benchmark copying bottleneck benchmark bench py build lib win amd      bottleneck benchmark copying bottleneck benchmark bench_detailed py build lib win amd      bottleneck benchmark copying bottleneck benchmark __init__ py build lib win amd      bottleneck benchmark creating build lib win amd      bottleneck slow copying bottleneck slow move py build lib win amd      bottleneck slow copying bottleneck slow nonreduce py build lib win amd      bottleneck slow copying bottleneck slow nonreduce_axis py build lib win amd      bottleneck slow copying bottleneck slow reduce py build lib win amd      bottleneck slow copying bottleneck slow __init__ py build lib win amd      bottleneck slow creating build lib win amd      bottleneck src copying bottleneck src bn_config py build lib win amd      bottleneck src copying bottleneck src bn_template py build lib win amd      bottleneck src copying bottleneck src __init__ py build lib win amd      bottleneck src creating build lib win amd      bottleneck tests copying bottleneck tests input_modification_test py build lib win amd      bottleneck tests copying bottleneck tests list_input_test py build lib win amd      bottleneck tests copying bottleneck tests memory_test py build lib win amd      bottleneck tests copying bottleneck tests move_test py build lib win amd      bottleneck tests copying bottleneck tests nonreduce_axis_test py build lib win amd      bottleneck tests copying bottleneck tests nonreduce_test py build lib win amd      bottleneck tests copying bottleneck tests reduce_test py build lib win amd      bottleneck tests copying bottleneck tests scalar_input_test py build lib win amd      bottleneck tests copying bottleneck tests util py build lib win amd      bottleneck tests copying bottleneck tests __init__ py build lib win amd      bottleneck tests updating build lib win amd      bottleneck _version py set build lib win amd      bottleneck _version py to       running build_ext running config compiling _configtest c int __attribute__ optimize o  have_attribute_optimize_opt_  void int main void return   error microsoft visual c     or greater is required get it with microsoft c build tools https visualstudio microsoft com visual cpp build tools error failed building wheel for bottleneck failed to build bottleneck error could not build wheels for bottleneck which use pep   and cannot be installed directly pip install numpy       output  pip install numpy       collecting numpy       using cached numpy       cp  cp  win_amd  whl     mb warning error parsing requirements for numpy errno   no such file or directory c users ketan anaconda  lib site packages numpy       dist info metadata installing collected packages numpy attempting uninstall numpy found existing installation numpy       error cannot uninstall numpy       record file not found you might be able to recover from this via pip install force reinstall no deps numpy,try using an older version of numpy it should work pip uninstall numpy pip install numpy,"['python', 'python-3.x', 'requirements']","['i', 'am', 'getting', 'errors', 'please', 'tell', 'me', 'what', 'is', 'wrong', 'with', 'this', 'i', 'am', 'not', 'able', 'to', 'find', 'a', 'solution', 'anywhere', 'i', 'am', 'working', 'on', 'one', 'project', 'but', 'when', 'other', 'members', 'try', 'with', 'install', 'r', 'rquirements', 'txt', 'they', 'get', 'this', 'error', 'please', 'tell', 'what', 'should', 'be', 'the', 'action', 'to', 'handle', 'or', 'remove', 'this', 'error', 'error', 'could', 'not', 'install', 'packages', 'due', 'to', 'an', 'oserror', 'errno', 'no', 'such', 'file', 'or', 'directory', 'c', 'users', 'ketan', 'anaconda', 'lib', 'site', 'packages', 'numpy', 'dist', 'info', 'me', 'tadata', 'output', 'collecting', 'werkzeug', 'using', 'cached', 'werkzeug', 'py', 'none', 'any', 'whl', 'kb', 'requirement', 'already', 'satisfied', 'wheel', 'in', 'c', 'users', 'ketan', 'anaconda', 'lib', 'site', 'packages', 'from', 'r', 'requirements', 'txt', 'line', 'collecting', 'win', 'setctime', 'using', 'cached', 'win', '_setctime', 'py', 'none', 'any', 'whl', 'kb', 'requirement', 'already', 'satisfied', 'wincertstore', 'in', 'c', 'users', 'ketan', 'anaconda', 'lib', 'site', 'packages', 'from', 'r', 'requirements', 'txt', 'line', 'error', 'could', 'not', 'install', 'packages', 'due', 'to', 'an', 'oserror', 'errno', 'no', 'such', 'file', 'or', 'directory', 'c', 'users', 'ketan', 'anaconda', 'lib', 'site', 'packages', 'numpy', 'dist', 'info', 'me', 'tadata', 'pip', 'install', 'r', 'requirements', 'txt', 'ignore', 'installed', 'output', 'collecting', 'tbb', 'using', 'cached', 'tbb', 'py', 'none', 'win_amd', 'whl', 'kb', 'building', 'wheels', 'for', 'collected', 'packages', 'bottleneck', 'building', 'wheel', 'for', 'bottleneck', 'pep', 'error', 'error', 'command', 'errored', 'out', 'with', 'exit', 'status', 'command', 'c', 'users', 'ketan', 'anaconda', 'python', 'exe', 'c', 'users', 'ketan', 'anaconda', 'lib', 'site', 'packages', 'pip', '_vendor', 'pep', 'in_process', '_in_process', 'py', 'build_wheel', 'c', 'users', 'keta', 'n', 'appdata', 'local', 'temp', 'tmp', 't', 'qkb', 'i', 'cwd', 'c', 'users', 'ketan', 'appdata', 'local', 'temp', 'pip', 'install', 'sqrcce', 's', 'bottleneck_b', 'ec', 'cdd', 'e', 'dc', 'a', 'd', 'b', 'complete', 'output', 'lines', 'running', 'bdist_wheel', 'running', 'build', 'running', 'build_py', 'creating', 'build', 'creating', 'build', 'lib', 'win', 'amd', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'copying', 'bottleneck', '_pytesttester', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'copying', 'bottleneck', '_version', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'copying', 'bottleneck', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', 'autotimeit', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', 'bench', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', 'bench_detailed', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'move', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'nonreduce', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'nonreduce_axis', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'reduce', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'copying', 'bottleneck', 'src', 'bn_config', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'copying', 'bottleneck', 'src', 'bn_template', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'copying', 'bottleneck', 'src', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'input_modification_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'list_input_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'memory_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'move_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'nonreduce_axis_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'nonreduce_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'reduce_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'scalar_input_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'util', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'updating', 'build', 'lib', 'win', 'amd', 'bottleneck', '_version', 'py', 'set', 'build', 'lib', 'win', 'amd', 'bottleneck', '_version', 'py', 'to', 'running', 'build_ext', 'running', 'config', 'compiling', '_configtest', 'c', 'int', '__attribute__', 'optimize', 'o', 'have_attribute_optimize_opt_', 'void', 'int', 'main', 'void', 'return', 'error', 'microsoft', 'visual', 'c', 'or', 'greater', 'is', 'required', 'get', 'it', 'with', 'microsoft', 'c', 'build', 'tools', 'https', 'visualstudio', 'microsoft', 'com', 'visual', 'cpp', 'build', 'tools', 'error', 'failed', 'building', 'wheel', 'for', 'bottleneck', 'failed', 'to', 'build', 'bottleneck', 'error', 'could', 'not', 'build', 'wheels', 'for', 'bottleneck', 'which', 'use', 'pep', 'and', 'can', 'not', 'be', 'installed', 'directly', 'pip', 'install', 'numpy', 'output', 'pip', 'install', 'numpy', 'collecting', 'numpy', 'using', 'cached', 'numpy', 'cp', 'cp', 'win_amd', 'whl', 'mb', 'warning', 'error', 'parsing', 'requirements', 'for', 'numpy', 'errno', 'no', 'such', 'file', 'or', 'directory', 'c', 'users', 'ketan', 'anaconda', 'lib', 'site', 'packages', 'numpy', 'dist', 'info', 'metadata', 'installing', 'collected', 'packages', 'numpy', 'attempting', 'uninstall', 'numpy', 'found', 'existing', 'installation', 'numpy', 'error', 'can', 'not', 'uninstall', 'numpy', 'record', 'file', 'not', 'found', 'you', 'might', 'be', 'able', 'to', 'recover', 'from', 'this', 'via', 'pip', 'install', 'force', 'reinstall', 'no', 'deps', 'numpy']","['try', 'using', 'an', 'older', 'version', 'of', 'numpy', 'it', 'should', 'work', 'pip', 'uninstall', 'numpy', 'pip', 'install', 'numpy']","['getting', 'error', 'please', 'tell', 'wrong', 'able', 'find', 'solution', 'anywhere', 'working', 'one', 'project', 'member', 'try', 'install', 'r', 'rquirements', 'txt', 'get', 'error', 'please', 'tell', 'action', 'handle', 'remove', 'error', 'error', 'could', 'install', 'package', 'due', 'oserror', 'errno', 'file', 'directory', 'c', 'user', 'ketan', 'anaconda', 'lib', 'site', 'package', 'numpy', 'dist', 'info', 'tadata', 'output', 'collecting', 'werkzeug', 'using', 'cached', 'werkzeug', 'py', 'none', 'whl', 'kb', 'requirement', 'already', 'satisfied', 'wheel', 'c', 'user', 'ketan', 'anaconda', 'lib', 'site', 'package', 'r', 'requirement', 'txt', 'line', 'collecting', 'win', 'setctime', 'using', 'cached', 'win', '_setctime', 'py', 'none', 'whl', 'kb', 'requirement', 'already', 'satisfied', 'wincertstore', 'c', 'user', 'ketan', 'anaconda', 'lib', 'site', 'package', 'r', 'requirement', 'txt', 'line', 'error', 'could', 'install', 'package', 'due', 'oserror', 'errno', 'file', 'directory', 'c', 'user', 'ketan', 'anaconda', 'lib', 'site', 'package', 'numpy', 'dist', 'info', 'tadata', 'pip', 'install', 'r', 'requirement', 'txt', 'ignore', 'installed', 'output', 'collecting', 'tbb', 'using', 'cached', 'tbb', 'py', 'none', 'win_amd', 'whl', 'kb', 'building', 'wheel', 'collected', 'package', 'bottleneck', 'building', 'wheel', 'bottleneck', 'pep', 'error', 'error', 'command', 'errored', 'exit', 'status', 'command', 'c', 'user', 'ketan', 'anaconda', 'python', 'exe', 'c', 'user', 'ketan', 'anaconda', 'lib', 'site', 'package', 'pip', '_vendor', 'pep', 'in_process', '_in_process', 'py', 'build_wheel', 'c', 'user', 'keta', 'n', 'appdata', 'local', 'temp', 'tmp', 'qkb', 'cwd', 'c', 'user', 'ketan', 'appdata', 'local', 'temp', 'pip', 'install', 'sqrcce', 'bottleneck_b', 'ec', 'cdd', 'e', 'dc', 'b', 'complete', 'output', 'line', 'running', 'bdist_wheel', 'running', 'build', 'running', 'build_py', 'creating', 'build', 'creating', 'build', 'lib', 'win', 'amd', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'copying', 'bottleneck', '_pytesttester', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'copying', 'bottleneck', '_version', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'copying', 'bottleneck', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', 'autotimeit', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', 'bench', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', 'bench_detailed', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'move', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'nonreduce', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'nonreduce_axis', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'reduce', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'copying', 'bottleneck', 'src', 'bn_config', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'copying', 'bottleneck', 'src', 'bn_template', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'copying', 'bottleneck', 'src', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'input_modification_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'list_input_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'memory_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'move_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'nonreduce_axis_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'nonreduce_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'reduce_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'scalar_input_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'util', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'updating', 'build', 'lib', 'win', 'amd', 'bottleneck', '_version', 'py', 'set', 'build', 'lib', 'win', 'amd', 'bottleneck', '_version', 'py', 'running', 'build_ext', 'running', 'config', 'compiling', '_configtest', 'c', 'int', '__attribute__', 'optimize', 'have_attribute_optimize_opt_', 'void', 'int', 'main', 'void', 'return', 'error', 'microsoft', 'visual', 'c', 'greater', 'required', 'get', 'microsoft', 'c', 'build', 'tool', 'http', 'visualstudio', 'microsoft', 'com', 'visual', 'cpp', 'build', 'tool', 'error', 'failed', 'building', 'wheel', 'bottleneck', 'failed', 'build', 'bottleneck', 'error', 'could', 'build', 'wheel', 'bottleneck', 'use', 'pep', 'installed', 'directly', 'pip', 'install', 'numpy', 'output', 'pip', 'install', 'numpy', 'collecting', 'numpy', 'using', 'cached', 'numpy', 'cp', 'cp', 'win_amd', 'whl', 'mb', 'warning', 'error', 'parsing', 'requirement', 'numpy', 'errno', 'file', 'directory', 'c', 'user', 'ketan', 'anaconda', 'lib', 'site', 'package', 'numpy', 'dist', 'info', 'metadata', 'installing', 'collected', 'package', 'numpy', 'attempting', 'uninstall', 'numpy', 'found', 'existing', 'installation', 'numpy', 'error', 'uninstall', 'numpy', 'record', 'file', 'found', 'might', 'able', 'recover', 'via', 'pip', 'install', 'force', 'reinstall', 'deps', 'numpy']","['try', 'using', 'an', 'older', 'version', 'of', 'numpy', 'it', 'should', 'work', 'pip', 'uninstall', 'numpy', 'pip', 'install', 'numpy']",System Requirements and AWS,1,"{'neg': 0.131, 'neu': 0.796, 'pos': 0.073, 'compound': -0.9879}",-0.06983695652173912,1,Package Management and File Handling,3query
69953033,ERROR: Could not install packages due to an OSError?,"<p>I am getting errors please tell me what is wrong with this, I am not able to find a solution anywhere!</p>
<p>I am working on one project but when other members try with install -r rquirements.txt they get this error! please tell what should be the action to handle or remove this error?</p>
<pre><code>ERROR: Could not install packages due to an OSError: [Errno 2] 
No such file or directory: 'c:\\users\\ketan\\anaconda3\\lib\\site-packages\\numpy-1.21.2.dist-info\\ME
TADATA'
</code></pre>
<p>Output :</p>
<pre><code>Collecting Werkzeug==2.0.2
Using cached Werkzeug-2.0.2-py3-none-any.whl (288 kB)
Requirement already satisfied: wheel==0.37.0 in c:\users\ketan\anaconda3\lib\site-packages (from -r requirements.txt (line 93)) (0.37.0)
Collecting win32-setctime==1.0.3
  Using cached win32_setctime-1.0.3-py3-none-any.whl (3.5 kB)
Requirement already satisfied: wincertstore==0.2 in c:\users\ketan\anaconda3\lib\site-packages (from -r requirements.txt (line 95)) (0.2)
ERROR: Could not install packages due to an OSError: [Errno 2] No such file or directory: 'c:\\users\\ketan\\anaconda3\\lib\\site-packages\\numpy-1.21.2.dist-info\\ME
TADATA'
</code></pre>
<p>pip install -r requirements.txt --ignore-installed</p>
<p>Output2 :</p>
<pre><code>Collecting tbb==2021.*
  Using cached tbb-2021.4.0-py3-none-win_amd64.whl (268 kB)
Building wheels for collected packages: bottleneck
  Building wheel for bottleneck (PEP 517) ... error
  ERROR: Command errored out with exit status 1:
   command: 'C:\Users\ketan\anaconda3\python.exe' 'C:\Users\ketan\anaconda3\lib\site-packages\pip\_vendor\pep517\in_process\_in_process.py' build_wheel 'C:\Users\keta
n\AppData\Local\Temp\tmp4t2qkb8i'
       cwd: C:\Users\ketan\AppData\Local\Temp\pip-install-sqrcce6s\bottleneck_b15ec4cdd7084e748dc7a963008d04b3
  Complete output (51 lines):
  running bdist_wheel
  running build
  running build_py
  creating build
  creating build\lib.win-amd64-3.8
  creating build\lib.win-amd64-3.8\bottleneck
  copying bottleneck\_pytesttester.py -&gt; build\lib.win-amd64-3.8\bottleneck
  copying bottleneck\_version.py -&gt; build\lib.win-amd64-3.8\bottleneck
  copying bottleneck\__init__.py -&gt; build\lib.win-amd64-3.8\bottleneck
  creating build\lib.win-amd64-3.8\bottleneck\benchmark
  copying bottleneck\benchmark\autotimeit.py -&gt; build\lib.win-amd64-3.8\bottleneck\benchmark
  copying bottleneck\benchmark\bench.py -&gt; build\lib.win-amd64-3.8\bottleneck\benchmark
  copying bottleneck\benchmark\bench_detailed.py -&gt; build\lib.win-amd64-3.8\bottleneck\benchmark
  copying bottleneck\benchmark\__init__.py -&gt; build\lib.win-amd64-3.8\bottleneck\benchmark
  creating build\lib.win-amd64-3.8\bottleneck\slow
  copying bottleneck\slow\move.py -&gt; build\lib.win-amd64-3.8\bottleneck\slow
  copying bottleneck\slow\nonreduce.py -&gt; build\lib.win-amd64-3.8\bottleneck\slow
  copying bottleneck\slow\nonreduce_axis.py -&gt; build\lib.win-amd64-3.8\bottleneck\slow
  copying bottleneck\slow\reduce.py -&gt; build\lib.win-amd64-3.8\bottleneck\slow
  copying bottleneck\slow\__init__.py -&gt; build\lib.win-amd64-3.8\bottleneck\slow
  creating build\lib.win-amd64-3.8\bottleneck\src
  copying bottleneck\src\bn_config.py -&gt; build\lib.win-amd64-3.8\bottleneck\src
  copying bottleneck\src\bn_template.py -&gt; build\lib.win-amd64-3.8\bottleneck\src
  copying bottleneck\src\__init__.py -&gt; build\lib.win-amd64-3.8\bottleneck\src
  creating build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\input_modification_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\list_input_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\memory_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\move_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\nonreduce_axis_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\nonreduce_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\reduce_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\scalar_input_test.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\util.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  copying bottleneck\tests\__init__.py -&gt; build\lib.win-amd64-3.8\bottleneck\tests
  UPDATING build\lib.win-amd64-3.8\bottleneck/_version.py
  set build\lib.win-amd64-3.8\bottleneck/_version.py to '1.3.2'
  running build_ext
  running config
  compiling '_configtest.c':
  
  
  
  int __attribute__((optimize(&quot;O3&quot;))) have_attribute_optimize_opt_3(void*);
  
  int main(void)
  {
      return 0;
  }
  
  error: Microsoft Visual C++ 14.0 or greater is required. Get it with &quot;Microsoft C++ Build Tools&quot;: https://visualstudio.microsoft.com/visual-cpp-build-tools/
  ----------------------------------------
  ERROR: Failed building wheel for bottleneck
Failed to build bottleneck
ERROR: Could not build wheels for bottleneck which use PEP 517 and cannot be installed directly
</code></pre>
<p>pip install numpy==1.19.3
Output3:</p>
<pre><code>$ pip install numpy==1.19.3
Collecting numpy==1.19.3
  Using cached numpy-1.19.3-cp38-cp38-win_amd64.whl (13.3 MB)
WARNING: Error parsing requirements for numpy: [Errno 2] No such file or directory: 'c:\\users\\ketan\\anaconda3\\lib\\site-packages\\numpy-1.21.2.dist-info\\METADATA
'
Installing collected packages: numpy
  Attempting uninstall: numpy
    Found existing installation: numpy 1.21.2
ERROR: Cannot uninstall numpy 1.21.2, RECORD file not found. You might be able to recover from this via: 'pip install --force-reinstall --no-deps numpy==1.21.2'.
</code></pre>
",<python><python-3.x><requirements>,2021-11-13 09:30:01,6573,2,2,69953223,"<p>When using Windows OS with python, many python packages and libraries required Microsoft Build Tools for compiling and installing the package. You have to download <a href=""https://visualstudio.microsoft.com/"" rel=""nofollow noreferrer"">Visual Studio</a> for installing Microsoft Build Tools. In addition also install C++ dependencies in Visual Studio.</p>
",2021-11,i am getting errors please tell me what is wrong with this i am not able to find a solution anywhere i am working on one project but when other members try with install r rquirements txt they get this error please tell what should be the action to handle or remove this error error could not install packages due to an oserror errno   no such file or directory c users ketan anaconda  lib site packages numpy       dist info me tadata output collecting werkzeug       using cached werkzeug       py  none any whl   kb requirement already satisfied wheel       in c users ketan anaconda  lib site packages from r requirements txt line         collecting win  setctime       using cached win _setctime       py  none any whl     kb requirement already satisfied wincertstore     in c users ketan anaconda  lib site packages from r requirements txt line       error could not install packages due to an oserror errno   no such file or directory c users ketan anaconda  lib site packages numpy       dist info me tadata pip install r requirements txt ignore installed output  collecting tbb   using cached tbb       py  none win_amd  whl   kb building wheels for collected packages bottleneck building wheel for bottleneck pep   error error command errored out with exit status   command c users ketan anaconda  python exe c users ketan anaconda  lib site packages pip _vendor pep  in_process _in_process py build_wheel c users keta n appdata local temp tmp t qkb i cwd c users ketan appdata local temp pip install sqrcce s bottleneck_b ec cdd e dc a d b  complete output   lines running bdist_wheel running build running build_py creating build creating build lib win amd      creating build lib win amd      bottleneck copying bottleneck _pytesttester py build lib win amd      bottleneck copying bottleneck _version py build lib win amd      bottleneck copying bottleneck __init__ py build lib win amd      bottleneck creating build lib win amd      bottleneck benchmark copying bottleneck benchmark autotimeit py build lib win amd      bottleneck benchmark copying bottleneck benchmark bench py build lib win amd      bottleneck benchmark copying bottleneck benchmark bench_detailed py build lib win amd      bottleneck benchmark copying bottleneck benchmark __init__ py build lib win amd      bottleneck benchmark creating build lib win amd      bottleneck slow copying bottleneck slow move py build lib win amd      bottleneck slow copying bottleneck slow nonreduce py build lib win amd      bottleneck slow copying bottleneck slow nonreduce_axis py build lib win amd      bottleneck slow copying bottleneck slow reduce py build lib win amd      bottleneck slow copying bottleneck slow __init__ py build lib win amd      bottleneck slow creating build lib win amd      bottleneck src copying bottleneck src bn_config py build lib win amd      bottleneck src copying bottleneck src bn_template py build lib win amd      bottleneck src copying bottleneck src __init__ py build lib win amd      bottleneck src creating build lib win amd      bottleneck tests copying bottleneck tests input_modification_test py build lib win amd      bottleneck tests copying bottleneck tests list_input_test py build lib win amd      bottleneck tests copying bottleneck tests memory_test py build lib win amd      bottleneck tests copying bottleneck tests move_test py build lib win amd      bottleneck tests copying bottleneck tests nonreduce_axis_test py build lib win amd      bottleneck tests copying bottleneck tests nonreduce_test py build lib win amd      bottleneck tests copying bottleneck tests reduce_test py build lib win amd      bottleneck tests copying bottleneck tests scalar_input_test py build lib win amd      bottleneck tests copying bottleneck tests util py build lib win amd      bottleneck tests copying bottleneck tests __init__ py build lib win amd      bottleneck tests updating build lib win amd      bottleneck _version py set build lib win amd      bottleneck _version py to       running build_ext running config compiling _configtest c int __attribute__ optimize o  have_attribute_optimize_opt_  void int main void return   error microsoft visual c     or greater is required get it with microsoft c build tools https visualstudio microsoft com visual cpp build tools error failed building wheel for bottleneck failed to build bottleneck error could not build wheels for bottleneck which use pep   and cannot be installed directly pip install numpy       output  pip install numpy       collecting numpy       using cached numpy       cp  cp  win_amd  whl     mb warning error parsing requirements for numpy errno   no such file or directory c users ketan anaconda  lib site packages numpy       dist info metadata installing collected packages numpy attempting uninstall numpy found existing installation numpy       error cannot uninstall numpy       record file not found you might be able to recover from this via pip install force reinstall no deps numpy,when using windows os with python many python packages and libraries required microsoft build tools for compiling and installing the package you have to download visual studio for installing microsoft build tools in addition also install c dependencies in visual studio,"['python', 'python-3.x', 'requirements']","['i', 'am', 'getting', 'errors', 'please', 'tell', 'me', 'what', 'is', 'wrong', 'with', 'this', 'i', 'am', 'not', 'able', 'to', 'find', 'a', 'solution', 'anywhere', 'i', 'am', 'working', 'on', 'one', 'project', 'but', 'when', 'other', 'members', 'try', 'with', 'install', 'r', 'rquirements', 'txt', 'they', 'get', 'this', 'error', 'please', 'tell', 'what', 'should', 'be', 'the', 'action', 'to', 'handle', 'or', 'remove', 'this', 'error', 'error', 'could', 'not', 'install', 'packages', 'due', 'to', 'an', 'oserror', 'errno', 'no', 'such', 'file', 'or', 'directory', 'c', 'users', 'ketan', 'anaconda', 'lib', 'site', 'packages', 'numpy', 'dist', 'info', 'me', 'tadata', 'output', 'collecting', 'werkzeug', 'using', 'cached', 'werkzeug', 'py', 'none', 'any', 'whl', 'kb', 'requirement', 'already', 'satisfied', 'wheel', 'in', 'c', 'users', 'ketan', 'anaconda', 'lib', 'site', 'packages', 'from', 'r', 'requirements', 'txt', 'line', 'collecting', 'win', 'setctime', 'using', 'cached', 'win', '_setctime', 'py', 'none', 'any', 'whl', 'kb', 'requirement', 'already', 'satisfied', 'wincertstore', 'in', 'c', 'users', 'ketan', 'anaconda', 'lib', 'site', 'packages', 'from', 'r', 'requirements', 'txt', 'line', 'error', 'could', 'not', 'install', 'packages', 'due', 'to', 'an', 'oserror', 'errno', 'no', 'such', 'file', 'or', 'directory', 'c', 'users', 'ketan', 'anaconda', 'lib', 'site', 'packages', 'numpy', 'dist', 'info', 'me', 'tadata', 'pip', 'install', 'r', 'requirements', 'txt', 'ignore', 'installed', 'output', 'collecting', 'tbb', 'using', 'cached', 'tbb', 'py', 'none', 'win_amd', 'whl', 'kb', 'building', 'wheels', 'for', 'collected', 'packages', 'bottleneck', 'building', 'wheel', 'for', 'bottleneck', 'pep', 'error', 'error', 'command', 'errored', 'out', 'with', 'exit', 'status', 'command', 'c', 'users', 'ketan', 'anaconda', 'python', 'exe', 'c', 'users', 'ketan', 'anaconda', 'lib', 'site', 'packages', 'pip', '_vendor', 'pep', 'in_process', '_in_process', 'py', 'build_wheel', 'c', 'users', 'keta', 'n', 'appdata', 'local', 'temp', 'tmp', 't', 'qkb', 'i', 'cwd', 'c', 'users', 'ketan', 'appdata', 'local', 'temp', 'pip', 'install', 'sqrcce', 's', 'bottleneck_b', 'ec', 'cdd', 'e', 'dc', 'a', 'd', 'b', 'complete', 'output', 'lines', 'running', 'bdist_wheel', 'running', 'build', 'running', 'build_py', 'creating', 'build', 'creating', 'build', 'lib', 'win', 'amd', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'copying', 'bottleneck', '_pytesttester', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'copying', 'bottleneck', '_version', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'copying', 'bottleneck', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', 'autotimeit', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', 'bench', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', 'bench_detailed', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'move', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'nonreduce', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'nonreduce_axis', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'reduce', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'copying', 'bottleneck', 'src', 'bn_config', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'copying', 'bottleneck', 'src', 'bn_template', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'copying', 'bottleneck', 'src', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'input_modification_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'list_input_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'memory_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'move_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'nonreduce_axis_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'nonreduce_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'reduce_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'scalar_input_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', 'util', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'copying', 'bottleneck', 'tests', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'tests', 'updating', 'build', 'lib', 'win', 'amd', 'bottleneck', '_version', 'py', 'set', 'build', 'lib', 'win', 'amd', 'bottleneck', '_version', 'py', 'to', 'running', 'build_ext', 'running', 'config', 'compiling', '_configtest', 'c', 'int', '__attribute__', 'optimize', 'o', 'have_attribute_optimize_opt_', 'void', 'int', 'main', 'void', 'return', 'error', 'microsoft', 'visual', 'c', 'or', 'greater', 'is', 'required', 'get', 'it', 'with', 'microsoft', 'c', 'build', 'tools', 'https', 'visualstudio', 'microsoft', 'com', 'visual', 'cpp', 'build', 'tools', 'error', 'failed', 'building', 'wheel', 'for', 'bottleneck', 'failed', 'to', 'build', 'bottleneck', 'error', 'could', 'not', 'build', 'wheels', 'for', 'bottleneck', 'which', 'use', 'pep', 'and', 'can', 'not', 'be', 'installed', 'directly', 'pip', 'install', 'numpy', 'output', 'pip', 'install', 'numpy', 'collecting', 'numpy', 'using', 'cached', 'numpy', 'cp', 'cp', 'win_amd', 'whl', 'mb', 'warning', 'error', 'parsing', 'requirements', 'for', 'numpy', 'errno', 'no', 'such', 'file', 'or', 'directory', 'c', 'users', 'ketan', 'anaconda', 'lib', 'site', 'packages', 'numpy', 'dist', 'info', 'metadata', 'installing', 'collected', 'packages', 'numpy', 'attempting', 'uninstall', 'numpy', 'found', 'existing', 'installation', 'numpy', 'error', 'can', 'not', 'uninstall', 'numpy', 'record', 'file', 'not', 'found', 'you', 'might', 'be', 'able', 'to', 'recover', 'from', 'this', 'via', 'pip', 'install', 'force', 'reinstall', 'no', 'deps', 'numpy']","['when', 'using', 'windows', 'os', 'with', 'python', 'many', 'python', 'packages', 'and', 'libraries', 'required', 'microsoft', 'build', 'tools', 'for', 'compiling', 'and', 'installing', 'the', 'package', 'you', 'have', 'to', 'download', 'visual', 'studio', 'for', 'installing', 'microsoft', 'build', 'tools', 'in', 'addition', 'also', 'install', 'c', 'dependencies', 'in', 'visual', 'studio']","['getting', 'error', 'please', 'tell', 'wrong', 'able', 'find', 'solution', 'anywhere', 'working', 'one', 'project', 'member', 'try', 'install', 'r', 'rquirements', 'txt', 'get', 'error', 'please', 'tell', 'action', 'handle', 'remove', 'error', 'error', 'could', 'install', 'package', 'due', 'oserror', 'errno', 'file', 'directory', 'c', 'user', 'ketan', 'anaconda', 'lib', 'site', 'package', 'numpy', 'dist', 'info', 'tadata', 'output', 'collecting', 'werkzeug', 'using', 'cached', 'werkzeug', 'py', 'none', 'whl', 'kb', 'requirement', 'already', 'satisfied', 'wheel', 'c', 'user', 'ketan', 'anaconda', 'lib', 'site', 'package', 'r', 'requirement', 'txt', 'line', 'collecting', 'win', 'setctime', 'using', 'cached', 'win', '_setctime', 'py', 'none', 'whl', 'kb', 'requirement', 'already', 'satisfied', 'wincertstore', 'c', 'user', 'ketan', 'anaconda', 'lib', 'site', 'package', 'r', 'requirement', 'txt', 'line', 'error', 'could', 'install', 'package', 'due', 'oserror', 'errno', 'file', 'directory', 'c', 'user', 'ketan', 'anaconda', 'lib', 'site', 'package', 'numpy', 'dist', 'info', 'tadata', 'pip', 'install', 'r', 'requirement', 'txt', 'ignore', 'installed', 'output', 'collecting', 'tbb', 'using', 'cached', 'tbb', 'py', 'none', 'win_amd', 'whl', 'kb', 'building', 'wheel', 'collected', 'package', 'bottleneck', 'building', 'wheel', 'bottleneck', 'pep', 'error', 'error', 'command', 'errored', 'exit', 'status', 'command', 'c', 'user', 'ketan', 'anaconda', 'python', 'exe', 'c', 'user', 'ketan', 'anaconda', 'lib', 'site', 'package', 'pip', '_vendor', 'pep', 'in_process', '_in_process', 'py', 'build_wheel', 'c', 'user', 'keta', 'n', 'appdata', 'local', 'temp', 'tmp', 'qkb', 'cwd', 'c', 'user', 'ketan', 'appdata', 'local', 'temp', 'pip', 'install', 'sqrcce', 'bottleneck_b', 'ec', 'cdd', 'e', 'dc', 'b', 'complete', 'output', 'line', 'running', 'bdist_wheel', 'running', 'build', 'running', 'build_py', 'creating', 'build', 'creating', 'build', 'lib', 'win', 'amd', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'copying', 'bottleneck', '_pytesttester', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'copying', 'bottleneck', '_version', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'copying', 'bottleneck', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', 'autotimeit', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', 'bench', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', 'bench_detailed', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'copying', 'bottleneck', 'benchmark', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'benchmark', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'move', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'nonreduce', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'nonreduce_axis', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', 'reduce', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'copying', 'bottleneck', 'slow', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'slow', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'copying', 'bottleneck', 'src', 'bn_config', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'copying', 'bottleneck', 'src', 'bn_template', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'copying', 'bottleneck', 'src', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'src', 'creating', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'input_modification_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'list_input_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'memory_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'move_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'nonreduce_axis_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'nonreduce_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'reduce_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'scalar_input_test', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', 'util', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'copying', 'bottleneck', 'test', '__init__', 'py', 'build', 'lib', 'win', 'amd', 'bottleneck', 'test', 'updating', 'build', 'lib', 'win', 'amd', 'bottleneck', '_version', 'py', 'set', 'build', 'lib', 'win', 'amd', 'bottleneck', '_version', 'py', 'running', 'build_ext', 'running', 'config', 'compiling', '_configtest', 'c', 'int', '__attribute__', 'optimize', 'have_attribute_optimize_opt_', 'void', 'int', 'main', 'void', 'return', 'error', 'microsoft', 'visual', 'c', 'greater', 'required', 'get', 'microsoft', 'c', 'build', 'tool', 'http', 'visualstudio', 'microsoft', 'com', 'visual', 'cpp', 'build', 'tool', 'error', 'failed', 'building', 'wheel', 'bottleneck', 'failed', 'build', 'bottleneck', 'error', 'could', 'build', 'wheel', 'bottleneck', 'use', 'pep', 'installed', 'directly', 'pip', 'install', 'numpy', 'output', 'pip', 'install', 'numpy', 'collecting', 'numpy', 'using', 'cached', 'numpy', 'cp', 'cp', 'win_amd', 'whl', 'mb', 'warning', 'error', 'parsing', 'requirement', 'numpy', 'errno', 'file', 'directory', 'c', 'user', 'ketan', 'anaconda', 'lib', 'site', 'package', 'numpy', 'dist', 'info', 'metadata', 'installing', 'collected', 'package', 'numpy', 'attempting', 'uninstall', 'numpy', 'found', 'existing', 'installation', 'numpy', 'error', 'uninstall', 'numpy', 'record', 'file', 'found', 'might', 'able', 'recover', 'via', 'pip', 'install', 'force', 'reinstall', 'deps', 'numpy']","['when', 'using', 'window', 'o', 'with', 'python', 'many', 'python', 'package', 'and', 'library', 'required', 'microsoft', 'build', 'tool', 'for', 'compiling', 'and', 'installing', 'the', 'package', 'you', 'have', 'to', 'download', 'visual', 'studio', 'for', 'installing', 'microsoft', 'build', 'tool', 'in', 'addition', 'also', 'install', 'c', 'dependency', 'in', 'visual', 'studio']",System Requirements and AWS,1,"{'neg': 0.131, 'neu': 0.796, 'pos': 0.073, 'compound': -0.9879}",-0.06983695652173912,1,Package Management and File Handling,3query
69889964,Symfony 4 Conditional Routing,"<p>im building a website using symfony 4. The website's pages are dynamically created in an admin section.</p>
<p>How can i create an exception or requirements that the rout rendering the custom pages should only be used for custom page and will not affect routs for login and register? here is my rout</p>
<pre><code> /**
 * @Route(&quot;/{page}&quot;, name=&quot;subpages&quot;, requirements={&quot;page&quot;=&quot;\d+&quot;})
 */
public function subpages(Request $request): Response
{

    $page = $request-&gt;get('page');

    $content = $this-&gt;getDoctrine()-&gt;getRepository(Pages::class)-&gt;find($page);
    
    return $this-&gt;render('public_pages/subpage.html.twig', [
        'controller_name' =&gt; 'home',
        'content' =&gt; $content
    ]);
}
</code></pre>
<p>this case, i want to only use that rout if the {page} is not /login or /register</p>
<p>Thank you in advance</p>
",<php><routes><conditional-statements><symfony4><requirements>,2021-11-08 21:08:50,238,0,1,69890600,"<p>The order of your controller functions matter, you should put <code>/login</code> and <code>/register</code> before your <code>subpage</code> function.</p>
<p>However, sometimes it might not be possible due to other functions being in different controllers files with different names etc making ordering difficult..</p>
<p>You can use <a href=""https://regex101.com/r/ePR75X/1"" rel=""nofollow noreferrer""><em>Regex</em></a> in the requirements. So in your case you could do this:</p>
<pre><code>@Route(&quot;/{page}&quot;, name=&quot;subpages&quot;, requirements={&quot;page&quot;=&quot;^(?!\blogin\b|\bregister\b).+&quot;})
</code></pre>
<p>This will match any route except <code>login</code> or <code>register</code>. You can add more into the regex with a word boundary, eg <code>\bcontact\b</code>.</p>
<p>This might not be the best approach if you have lots of routes however as it can be hard to keep track. Instead you could also consider having the route like <code>&quot;/pages/{page}&quot;</code></p>
<p><strong>Symfony 5.1</strong> supports <a href=""https://symfony.com/blog/new-in-symfony-5-1-route-annotations-priority"" rel=""nofollow noreferrer"">priority</a> which makes this situation easier to deal with using the <code>priority</code> parameter in the annotation.</p>
",2021-11,im building a website using symfony   the website s pages are dynamically created in an admin section how can i create an exception or requirements that the rout rendering the custom pages should only be used for custom page and will not affect routs for login and register here is my rout route page name subpages requirements page d public function subpages request request response page request get page content this getdoctrine getrepository pages class find page return this render public_pages subpage html twig controller_name home content content this case i want to only use that rout if the page is not login or register thank you in advance,the order of your controller functions matter you should put login and register before your subpage function however sometimes it might not be possible due to other functions being in different controllers files with different names etc making ordering difficult you can use regex in the requirements so in your case you could do this route page name subpages requirements page blogin b bregister b this will match any route except login or register you can add more into the regex with a word boundary eg bcontact b this might not be the best approach if you have lots of routes however as it can be hard to keep track instead you could also consider having the route like pages page symfony     supports priority which makes this situation easier to deal with using the priority parameter in the annotation,"['php', 'routes', 'conditional-statements', 'symfony4', 'requirements']","['im', 'building', 'a', 'website', 'using', 'symfony', 'the', 'website', 's', 'pages', 'are', 'dynamically', 'created', 'in', 'an', 'admin', 'section', 'how', 'can', 'i', 'create', 'an', 'exception', 'or', 'requirements', 'that', 'the', 'rout', 'rendering', 'the', 'custom', 'pages', 'should', 'only', 'be', 'used', 'for', 'custom', 'page', 'and', 'will', 'not', 'affect', 'routs', 'for', 'login', 'and', 'register', 'here', 'is', 'my', 'rout', 'route', 'page', 'name', 'subpages', 'requirements', 'page', 'd', 'public', 'function', 'subpages', 'request', 'request', 'response', 'page', 'request', 'get', 'page', 'content', 'this', 'getdoctrine', 'getrepository', 'pages', 'class', 'find', 'page', 'return', 'this', 'render', 'public_pages', 'subpage', 'html', 'twig', 'controller_name', 'home', 'content', 'content', 'this', 'case', 'i', 'want', 'to', 'only', 'use', 'that', 'rout', 'if', 'the', 'page', 'is', 'not', 'login', 'or', 'register', 'thank', 'you', 'in', 'advance']","['the', 'order', 'of', 'your', 'controller', 'functions', 'matter', 'you', 'should', 'put', 'login', 'and', 'register', 'before', 'your', 'subpage', 'function', 'however', 'sometimes', 'it', 'might', 'not', 'be', 'possible', 'due', 'to', 'other', 'functions', 'being', 'in', 'different', 'controllers', 'files', 'with', 'different', 'names', 'etc', 'making', 'ordering', 'difficult', 'you', 'can', 'use', 'regex', 'in', 'the', 'requirements', 'so', 'in', 'your', 'case', 'you', 'could', 'do', 'this', 'route', 'page', 'name', 'subpages', 'requirements', 'page', 'blogin', 'b', 'bregister', 'b', 'this', 'will', 'match', 'any', 'route', 'except', 'login', 'or', 'register', 'you', 'can', 'add', 'more', 'into', 'the', 'regex', 'with', 'a', 'word', 'boundary', 'eg', 'bcontact', 'b', 'this', 'might', 'not', 'be', 'the', 'best', 'approach', 'if', 'you', 'have', 'lots', 'of', 'routes', 'however', 'as', 'it', 'can', 'be', 'hard', 'to', 'keep', 'track', 'instead', 'you', 'could', 'also', 'consider', 'having', 'the', 'route', 'like', 'pages', 'page', 'symfony', 'supports', 'priority', 'which', 'makes', 'this', 'situation', 'easier', 'to', 'deal', 'with', 'using', 'the', 'priority', 'parameter', 'in', 'the', 'annotation']","['im', 'building', 'website', 'using', 'symfony', 'website', 'page', 'dynamically', 'created', 'admin', 'section', 'create', 'exception', 'requirement', 'rout', 'rendering', 'custom', 'page', 'used', 'custom', 'page', 'affect', 'rout', 'login', 'register', 'rout', 'route', 'page', 'name', 'subpages', 'requirement', 'page', 'public', 'function', 'subpages', 'request', 'request', 'response', 'page', 'request', 'get', 'page', 'content', 'getdoctrine', 'getrepository', 'page', 'class', 'find', 'page', 'return', 'render', 'public_pages', 'subpage', 'html', 'twig', 'controller_name', 'home', 'content', 'content', 'case', 'want', 'use', 'rout', 'page', 'login', 'register', 'thank', 'advance']","['the', 'order', 'of', 'your', 'controller', 'function', 'matter', 'you', 'should', 'put', 'login', 'and', 'register', 'before', 'your', 'subpage', 'function', 'however', 'sometimes', 'it', 'might', 'not', 'be', 'possible', 'due', 'to', 'other', 'function', 'being', 'in', 'different', 'controller', 'file', 'with', 'different', 'name', 'etc', 'making', 'ordering', 'difficult', 'you', 'can', 'use', 'regex', 'in', 'the', 'requirement', 'so', 'in', 'your', 'case', 'you', 'could', 'do', 'this', 'route', 'page', 'name', 'subpages', 'requirement', 'page', 'blogin', 'b', 'bregister', 'b', 'this', 'will', 'match', 'any', 'route', 'except', 'login', 'or', 'register', 'you', 'can', 'add', 'more', 'into', 'the', 'regex', 'with', 'a', 'word', 'boundary', 'eg', 'bcontact', 'b', 'this', 'might', 'not', 'be', 'the', 'best', 'approach', 'if', 'you', 'have', 'lot', 'of', 'route', 'however', 'a', 'it', 'can', 'be', 'hard', 'to', 'keep', 'track', 'instead', 'you', 'could', 'also', 'consider', 'having', 'the', 'route', 'like', 'page', 'page', 'symfony', 'support', 'priority', 'which', 'make', 'this', 'situation', 'easier', 'to', 'deal', 'with', 'using', 'the', 'priority', 'parameter', 'in', 'the', 'annotation']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 0.92, 'pos': 0.08, 'compound': 0.7096}",0.0,0,System Requirements and AWS,3query
69871330,Should functions that depend upon specific values be made unsafe?,"<p>I have a function that takes a <code>usize</code> equivalent to a pointer, and aligns it up to the next alignment point.</p>
<p>It doesn't require any unsafe as it's side effect free, but the alignment must be a power of two with this implementation. This means that if you use the function with bad parameters, you might get undefined behaviour later down the line. I can't check for this inside the function itself with <code>assert!</code> as it's supposed to be very fast.</p>
<pre class=""lang-rust prettyprint-override""><code>/// Align the given address `addr` upwards to alignment `align`.
///
/// Unsafe as `align` must be a power of two.
unsafe fn align_next_unsafe(addr: usize, align: usize) -&gt; usize {
    (addr + align - 1) &amp; !(align - 1)
}
</code></pre>
<p>Currently, I've made this unsafe for the above reasons, but I'm not sure if that's best practice. Should I only define a function as unsafe if it has side effects? Or is this a valid time to require an unsafe block?</p>
",<rust><parameters><unsafe><requirements>,2021-11-07 09:47:36,76,1,1,69873276,"<p>I'll preface this by saying this is a fairly opinion-heavy answer, and represents a point of view, rather than &quot;the truth&quot;.</p>
<p>Consider this code taken from the <code>Vec</code> docs:</p>
<pre class=""lang-rust prettyprint-override""><code>let x = vec![1, 2, 4];
let x_ptr = x.as_ptr();

unsafe {
    for i in 0..x.len() {
        assert_eq!(*x_ptr.add(i), 1 &lt;&lt; i);
    }
}
</code></pre>
<p>The function you're describing seems to have a similar safety profile to <code>Vec::as_ptr</code>. <code>Vec::as_ptr</code> is not <code>unsafe</code>, and does nothing particularly bad on its own; having an invalid <code>*const T</code> isn't bad until you dereference it. That's why dereferencing the raw pointer requires <code>unsafe</code>.</p>
<p>Similarly, I'd argue that <code>align_next</code> doesn't do anything particularly bad unless that value is then passed into some <code>unsafe</code> context. As with any question of <code>unsafe</code>, it's a tradeoff between safety/risk and ergonomics.</p>
<p>In <code>Vec::as_ptr</code>'s case, the risk is relatively low; the stdlib has lots of eyes on it, and is well &quot;battle-tested&quot;. Moreover, it is a single function with a single implementation.</p>
<p>If your <code>align_next</code> was a function on a trait, I'd be much more tempted to make it unsafe, since someone in the future could implement it badly, and you might have other code whose safety relies on a correct implementation of <code>align_next</code>.</p>
<p>However, in your case, I'd say the pattern is similar to <code>Vec::as_ptr</code>, and you should make sure that any functions that consume this value are marked <code>unsafe</code> if they can cause UB.</p>
<p>I'd also second Martin Gallagher's point about creating a <code>Result</code> returning variant and benchmarking (you could also try an <code>Option&lt;usize&gt;</code>-returning API to make use of null-pointer optimizations).</p>
",2021-11,i have a function that takes a usize equivalent to a pointer and aligns it up to the next alignment point it doesn t require any unsafe as it s side effect free but the alignment must be a power of two with this implementation this means that if you use the function with bad parameters you might get undefined behaviour later down the line i can t check for this inside the function itself with assert as it s supposed to be very fast align the given address addr upwards to alignment align unsafe as align must be a power of two unsafe fn align_next_unsafe addr usize align usize usize addr align   align   currently i ve made this unsafe for the above reasons but i m not sure if that s best practice should i only define a function as unsafe if it has side effects or is this a valid time to require an unsafe block,i ll preface this by saying this is a fairly opinion heavy answer and represents a point of view rather than the truth consider this code taken from the vec docs let x vec       let x_ptr x as_ptr unsafe for i in   x len assert_eq x_ptr add i   i the function you re describing seems to have a similar safety profile to vec as_ptr vec as_ptr is not unsafe and does nothing particularly bad on its own having an invalid const t isn t bad until you dereference it that s why dereferencing the raw pointer requires unsafe similarly i d argue that align_next doesn t do anything particularly bad unless that value is then passed into some unsafe context as with any question of unsafe it s a tradeoff between safety risk and ergonomics in vec as_ptr s case the risk is relatively low the stdlib has lots of eyes on it and is well battle tested moreover it is a single function with a single implementation if your align_next was a function on a trait i d be much more tempted to make it unsafe since someone in the future could implement it badly and you might have other code whose safety relies on a correct implementation of align_next however in your case i d say the pattern is similar to vec as_ptr and you should make sure that any functions that consume this value are marked unsafe if they can cause ub i d also second martin gallagher s point about creating a result returning variant and benchmarking you could also try an option usize returning api to make use of null pointer optimizations,"['rust', 'parameters', 'unsafe', 'requirements']","['i', 'have', 'a', 'function', 'that', 'takes', 'a', 'usize', 'equivalent', 'to', 'a', 'pointer', 'and', 'aligns', 'it', 'up', 'to', 'the', 'next', 'alignment', 'point', 'it', 'doesn', 't', 'require', 'any', 'unsafe', 'as', 'it', 's', 'side', 'effect', 'free', 'but', 'the', 'alignment', 'must', 'be', 'a', 'power', 'of', 'two', 'with', 'this', 'implementation', 'this', 'means', 'that', 'if', 'you', 'use', 'the', 'function', 'with', 'bad', 'parameters', 'you', 'might', 'get', 'undefined', 'behaviour', 'later', 'down', 'the', 'line', 'i', 'can', 't', 'check', 'for', 'this', 'inside', 'the', 'function', 'itself', 'with', 'assert', 'as', 'it', 's', 'supposed', 'to', 'be', 'very', 'fast', 'align', 'the', 'given', 'address', 'addr', 'upwards', 'to', 'alignment', 'align', 'unsafe', 'as', 'align', 'must', 'be', 'a', 'power', 'of', 'two', 'unsafe', 'fn', 'align_next_unsafe', 'addr', 'usize', 'align', 'usize', 'usize', 'addr', 'align', 'align', 'currently', 'i', 've', 'made', 'this', 'unsafe', 'for', 'the', 'above', 'reasons', 'but', 'i', 'm', 'not', 'sure', 'if', 'that', 's', 'best', 'practice', 'should', 'i', 'only', 'define', 'a', 'function', 'as', 'unsafe', 'if', 'it', 'has', 'side', 'effects', 'or', 'is', 'this', 'a', 'valid', 'time', 'to', 'require', 'an', 'unsafe', 'block']","['i', 'll', 'preface', 'this', 'by', 'saying', 'this', 'is', 'a', 'fairly', 'opinion', 'heavy', 'answer', 'and', 'represents', 'a', 'point', 'of', 'view', 'rather', 'than', 'the', 'truth', 'consider', 'this', 'code', 'taken', 'from', 'the', 'vec', 'docs', 'let', 'x', 'vec', 'let', 'x_ptr', 'x', 'as_ptr', 'unsafe', 'for', 'i', 'in', 'x', 'len', 'assert_eq', 'x_ptr', 'add', 'i', 'i', 'the', 'function', 'you', 're', 'describing', 'seems', 'to', 'have', 'a', 'similar', 'safety', 'profile', 'to', 'vec', 'as_ptr', 'vec', 'as_ptr', 'is', 'not', 'unsafe', 'and', 'does', 'nothing', 'particularly', 'bad', 'on', 'its', 'own', 'having', 'an', 'invalid', 'const', 't', 'isn', 't', 'bad', 'until', 'you', 'dereference', 'it', 'that', 's', 'why', 'dereferencing', 'the', 'raw', 'pointer', 'requires', 'unsafe', 'similarly', 'i', 'd', 'argue', 'that', 'align_next', 'doesn', 't', 'do', 'anything', 'particularly', 'bad', 'unless', 'that', 'value', 'is', 'then', 'passed', 'into', 'some', 'unsafe', 'context', 'as', 'with', 'any', 'question', 'of', 'unsafe', 'it', 's', 'a', 'tradeoff', 'between', 'safety', 'risk', 'and', 'ergonomics', 'in', 'vec', 'as_ptr', 's', 'case', 'the', 'risk', 'is', 'relatively', 'low', 'the', 'stdlib', 'has', 'lots', 'of', 'eyes', 'on', 'it', 'and', 'is', 'well', 'battle', 'tested', 'moreover', 'it', 'is', 'a', 'single', 'function', 'with', 'a', 'single', 'implementation', 'if', 'your', 'align_next', 'was', 'a', 'function', 'on', 'a', 'trait', 'i', 'd', 'be', 'much', 'more', 'tempted', 'to', 'make', 'it', 'unsafe', 'since', 'someone', 'in', 'the', 'future', 'could', 'implement', 'it', 'badly', 'and', 'you', 'might', 'have', 'other', 'code', 'whose', 'safety', 'relies', 'on', 'a', 'correct', 'implementation', 'of', 'align_next', 'however', 'in', 'your', 'case', 'i', 'd', 'say', 'the', 'pattern', 'is', 'similar', 'to', 'vec', 'as_ptr', 'and', 'you', 'should', 'make', 'sure', 'that', 'any', 'functions', 'that', 'consume', 'this', 'value', 'are', 'marked', 'unsafe', 'if', 'they', 'can', 'cause', 'ub', 'i', 'd', 'also', 'second', 'martin', 'gallagher', 's', 'point', 'about', 'creating', 'a', 'result', 'returning', 'variant', 'and', 'benchmarking', 'you', 'could', 'also', 'try', 'an', 'option', 'usize', 'returning', 'api', 'to', 'make', 'use', 'of', 'null', 'pointer', 'optimizations']","['function', 'take', 'usize', 'equivalent', 'pointer', 'aligns', 'next', 'alignment', 'point', 'require', 'unsafe', 'side', 'effect', 'free', 'alignment', 'must', 'power', 'two', 'implementation', 'mean', 'use', 'function', 'bad', 'parameter', 'might', 'get', 'undefined', 'behaviour', 'later', 'line', 'check', 'inside', 'function', 'assert', 'supposed', 'fast', 'align', 'given', 'address', 'addr', 'upwards', 'alignment', 'align', 'unsafe', 'align', 'must', 'power', 'two', 'unsafe', 'fn', 'align_next_unsafe', 'addr', 'usize', 'align', 'usize', 'usize', 'addr', 'align', 'align', 'currently', 'made', 'unsafe', 'reason', 'sure', 'best', 'practice', 'define', 'function', 'unsafe', 'ha', 'side', 'effect', 'valid', 'time', 'require', 'unsafe', 'block']","['i', 'll', 'preface', 'this', 'by', 'saying', 'this', 'is', 'a', 'fairly', 'opinion', 'heavy', 'answer', 'and', 'represents', 'a', 'point', 'of', 'view', 'rather', 'than', 'the', 'truth', 'consider', 'this', 'code', 'taken', 'from', 'the', 'vec', 'doc', 'let', 'x', 'vec', 'let', 'x_ptr', 'x', 'as_ptr', 'unsafe', 'for', 'i', 'in', 'x', 'len', 'assert_eq', 'x_ptr', 'add', 'i', 'i', 'the', 'function', 'you', 're', 'describing', 'seems', 'to', 'have', 'a', 'similar', 'safety', 'profile', 'to', 'vec', 'as_ptr', 'vec', 'as_ptr', 'is', 'not', 'unsafe', 'and', 'doe', 'nothing', 'particularly', 'bad', 'on', 'it', 'own', 'having', 'an', 'invalid', 'const', 't', 'isn', 't', 'bad', 'until', 'you', 'dereference', 'it', 'that', 's', 'why', 'dereferencing', 'the', 'raw', 'pointer', 'requires', 'unsafe', 'similarly', 'i', 'd', 'argue', 'that', 'align_next', 'doesn', 't', 'do', 'anything', 'particularly', 'bad', 'unless', 'that', 'value', 'is', 'then', 'passed', 'into', 'some', 'unsafe', 'context', 'a', 'with', 'any', 'question', 'of', 'unsafe', 'it', 's', 'a', 'tradeoff', 'between', 'safety', 'risk', 'and', 'ergonomics', 'in', 'vec', 'as_ptr', 's', 'case', 'the', 'risk', 'is', 'relatively', 'low', 'the', 'stdlib', 'ha', 'lot', 'of', 'eye', 'on', 'it', 'and', 'is', 'well', 'battle', 'tested', 'moreover', 'it', 'is', 'a', 'single', 'function', 'with', 'a', 'single', 'implementation', 'if', 'your', 'align_next', 'wa', 'a', 'function', 'on', 'a', 'trait', 'i', 'd', 'be', 'much', 'more', 'tempted', 'to', 'make', 'it', 'unsafe', 'since', 'someone', 'in', 'the', 'future', 'could', 'implement', 'it', 'badly', 'and', 'you', 'might', 'have', 'other', 'code', 'whose', 'safety', 'relies', 'on', 'a', 'correct', 'implementation', 'of', 'align_next', 'however', 'in', 'your', 'case', 'i', 'd', 'say', 'the', 'pattern', 'is', 'similar', 'to', 'vec', 'as_ptr', 'and', 'you', 'should', 'make', 'sure', 'that', 'any', 'function', 'that', 'consume', 'this', 'value', 'are', 'marked', 'unsafe', 'if', 'they', 'can', 'cause', 'ub', 'i', 'd', 'also', 'second', 'martin', 'gallagher', 's', 'point', 'about', 'creating', 'a', 'result', 'returning', 'variant', 'and', 'benchmarking', 'you', 'could', 'also', 'try', 'an', 'option', 'usize', 'returning', 'api', 'to', 'make', 'use', 'of', 'null', 'pointer', 'optimization']",System Requirements and AWS,3,"{'neg': 0.044, 'neu': 0.901, 'pos': 0.055, 'compound': 0.4021}",0.05444444444444446,3,Python Package Installation and Management,3query
69763090,Package built by Poetry is missing runtime dependencies,"<p>I've been working on a project which so far has just involved building some cloud infrastructure, and now I'm trying to <a href=""https://github.com/linz/geostore/pull/1142"" rel=""nofollow noreferrer"">add a CLI</a> to simplify running some AWS Lambdas. Unfortunately both the sdist and wheel packages built using <code>poetry build</code> don't seem to include the dependencies, so I have to manually <code>pip install</code> all of them to run the command. Basically I</p>
<ol>
<li>run <code>poetry build</code> in the project,</li>
<li><code>cd &quot;$(mktemp --directory)&quot;</code>,</li>
<li><code>python -m venv .venv</code>,</li>
<li><code>. .venv/bin/activate</code>,</li>
<li><code>pip install /path/to/result/of/poetry/build/above</code>, and then</li>
<li>run the new .venv/bin/ executable.</li>
</ol>
<p>At this point the executable fails, because <code>pip</code> did not install any of the package dependencies. <em>If I <code>pip show PACKAGE</code> the <code>Requires</code> line is empty.</em></p>
<p>The Poetry manual doesn't seem to specify how to link dependencies to the built package, so what do I have to do instead?</p>
<p>I am using some optional dependencies, could that be interfering with the build process? To be clear, even non-optional dependencies do not show up in the <a href=""https://github.com/linz/geostore/suites/4248835463/artifacts/110229472"" rel=""nofollow noreferrer"">package</a> dependencies.</p>
<p>pyproject.toml:</p>
<pre><code>[build-system]
requires = [&quot;poetry-core&gt;=1.0.0&quot;]
build-backend = &quot;poetry.core.masonry.api&quot;

[tool.black]
line-length = 100

[tool.coverage.report]
exclude_lines = [
    'if TYPE_CHECKING:',
    'if __name__ == &quot;__main__&quot;:',
    'pragma: no cover',
]
fail_under = 100

[tool.coverage.run]
branch = true
omit = [
    &quot;.venv/*&quot;,
]

[tool.isort]
case_sensitive = true
line_length = 100
profile = &quot;black&quot;

[tool.mypy]
show_error_codes = true
strict = true

[[tool.mypy.overrides]]
module = [
    &quot;jsonschema&quot;,
    &quot;jsonschema._utils&quot;,
    &quot;jsonschema.validators&quot;,
    &quot;multihash&quot;,
    &quot;pystac&quot;,
    &quot;pystac.layout&quot;,
    &quot;pytest_subtests&quot;,
    &quot;smart_open&quot;,
    &quot;linz_logger&quot;
]
ignore_missing_imports = true

[tool.poetry]
name = &quot;geostore&quot;
version = &quot;0.1.0&quot;
description = &quot;Central storage, management and access for important geospatial datasets developed by LINZ&quot;
authors = [
    &quot;Bill M. Nelson &lt;bmnelson@linz.govt.nz&gt;&quot;,
    &quot;Daniel Silk &lt;dsilk@linz.govt.nz&gt;&quot;,
    &quot;Ivan Mincik &lt;ivan.mincik@gmail.com&gt;&quot;,
    &quot;Mitchell Paff &lt;mpaff@linz.govt.nz&gt;&quot;,
    &quot;Sandro Santilli &lt;strk@kbt.io&gt;&quot;,
    &quot;Simon Planzer &lt;splanzer@linz.govt.nz&gt;&quot;,
    &quot;Victor Engmark &lt;vengmark@linz.govt.nz&gt;&quot;,
]
license = &quot;MIT&quot;
readme = &quot;README.md&quot;
homepage = &quot;https://github.com/linz/geostore&quot;
repository = &quot;https://github.com/linz/geostore&quot;
keywords = [
    &quot;SpatioTemporal Asset Catalog (STAC)&quot;,
    &quot;Toitū Te Whenua Land Information New Zealand&quot;,
]
classifiers = [
    &quot;Development Status :: 4 - Beta&quot;,
    &quot;Environment :: Console&quot;,
    &quot;Framework :: AWS CDK&quot;,
    &quot;Framework :: Pytest&quot;,
    &quot;Intended Audience :: End Users/Desktop&quot;,
    &quot;Intended Audience :: Information Technology&quot;,
    &quot;License :: OSI Approved :: MIT License&quot;,
    &quot;Natural Language :: English&quot;,
    &quot;Operating System :: POSIX&quot;,
    &quot;Programming Language :: Python :: 3.8&quot;,
    &quot;Topic :: Communications :: File Sharing&quot;,
    &quot;Topic :: Scientific/Engineering :: GIS&quot;,
    &quot;Topic :: Utilities&quot;,
    &quot;Typing :: Typed&quot;,
]

[tool.poetry.dependencies]
python = &quot;^3.8&quot;
&quot;aws-cdk.aws-dynamodb&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-ec2&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-ecr&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-ecr_assets&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-ecs&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-events&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-events-targets&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-iam&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-lambda&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-lambda-event-sources&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-lambda-python&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-s3&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-sns&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-stepfunctions&quot; = {version = &quot;*&quot;, optional = true}
&quot;aws-cdk.aws-stepfunctions_tasks&quot; = {version = &quot;*&quot;, optional = true}
awscli = {version = &quot;*&quot;, optional = true}
boto3 = &quot;*&quot;
cattrs = {version = &quot;*&quot;, optional = true}
jsonschema = {version = &quot;*&quot;, extras = [&quot;format&quot;], optional = true}
multihash = {version = &quot;*&quot;, optional = true}
pynamodb = {version = &quot;*&quot;, optional = true}
pystac = {version = &quot;*&quot;, optional = true}
slack-sdk = {version = &quot;*&quot;, extras = [&quot;models&quot;, &quot;webhook&quot;], optional = true}
smart-open = {version = &quot;*&quot;, extras = [&quot;s3&quot;], optional = true}
strict-rfc3339 = {optional = true, version = &quot;*&quot;}
typer = &quot;*&quot;
ulid-py = {version = &quot;*&quot;, optional = true}
linz-logger = {version = &quot;*&quot;, optional = true}

[tool.poetry.dev-dependencies]
black = &quot;*&quot;
boto3-stubs = {version = &quot;*&quot;, extras = [&quot;batch&quot;, &quot;dynamodb&quot;, &quot;events&quot;, &quot;lambda&quot;, &quot;lambda-python&quot;, &quot;s3&quot;, &quot;s3control&quot;, &quot;sns&quot;, &quot;sqs&quot;, &quot;ssm&quot;, &quot;stepfunctions&quot;, &quot;sts&quot;]}
gitlint = &quot;*&quot;
ipdb = &quot;*&quot;
isort = &quot;*&quot;
language-formatters-pre-commit-hooks = &quot;*&quot;
mutmut = &quot;*&quot;
mypy = &quot;*&quot;
pre-commit = &quot;*&quot;
pylint = &quot;*&quot;
pytest = &quot;*&quot;
pytest-randomly = &quot;*&quot;
pytest-socket = &quot;*&quot;
pytest-subtests = &quot;*&quot;
pytest-timeout = &quot;*&quot;
types-pkg-resources = &quot;*&quot;
types-python-dateutil = &quot;*&quot;
types-requests = &quot;*&quot;
types-six = &quot;*&quot;
types-toml = &quot;*&quot;

[tool.poetry.dev-dependencies.coverage]
version = &quot;*&quot;
extras = [&quot;toml&quot;]

[tool.poetry.extras]
cdk = [
    &quot;aws-cdk.aws-dynamodb&quot;,
    &quot;aws-cdk.aws-ec2&quot;,
    &quot;aws-cdk.aws-ecr&quot;,
    &quot;aws-cdk.aws-ecr_assets&quot;,
    &quot;aws-cdk.aws-ecs&quot;,
    &quot;aws-cdk.aws-events&quot;,
    &quot;aws-cdk.aws-events-targets&quot;,
    &quot;aws-cdk.aws-iam&quot;,
    &quot;aws-cdk.aws-lambda&quot;,
    &quot;aws-cdk.aws-lambda-event-sources&quot;,
    &quot;aws-cdk.aws-lambda-python&quot;,
    &quot;aws-cdk.aws-s3&quot;,
    &quot;aws-cdk.aws-sns&quot;,
    &quot;aws-cdk.aws-stepfunctions&quot;,
    &quot;aws-cdk.aws-stepfunctions_tasks&quot;,
    &quot;awscli&quot;,
    &quot;cattrs&quot;,
]
check_files_checksums = [
    &quot;boto3&quot;,
    &quot;linz-logger&quot;,
    &quot;multihash&quot;,
    &quot;pynamodb&quot;,
]
check_stac_metadata = [
    &quot;boto3&quot;,
    &quot;jsonschema&quot;,
    &quot;linz-logger&quot;,
    &quot;pynamodb&quot;,
    &quot;strict-rfc3339&quot;,
]
cli = [
    &quot;boto3&quot;,
    &quot;typer&quot;,
]
content_iterator = [
    &quot;jsonschema&quot;,
    &quot;linz-logger&quot;,
    &quot;pynamodb&quot;,
]
datasets = [
    &quot;boto3&quot;,
    &quot;jsonschema&quot;,
    &quot;linz-logger&quot;,
    &quot;pynamodb&quot;,
    &quot;pystac&quot;,
    &quot;ulid-py&quot;,
]
dataset_versions = [
    &quot;jsonschema&quot;,
    &quot;linz-logger&quot;,
    &quot;pynamodb&quot;,
    &quot;ulid-py&quot;,
]
import_asset_file = [
    &quot;boto3&quot;,
    &quot;linz-logger&quot;,
    &quot;smart-open&quot;,
]
import_dataset = [
    &quot;boto3&quot;,
    &quot;jsonschema&quot;,
    &quot;linz-logger&quot;,
    &quot;pynamodb&quot;,
    &quot;smart-open&quot;,
    &quot;ulid-py&quot;,
]
import_metadata_file = [
    &quot;boto3&quot;,
    &quot;linz-logger&quot;,
]
import_status = [
    &quot;boto3&quot;,
    &quot;jsonschema&quot;,
    &quot;linz-logger&quot;,
    &quot;pynamodb&quot;,
]
notify_status_update = [
    &quot;boto3&quot;,
    &quot;jsonschema&quot;,
    &quot;linz-logger&quot;,
    &quot;pynamodb&quot;,
    &quot;slack-sdk&quot;
]
populate_catalog = [
    &quot;boto3&quot;,
    &quot;jsonschema&quot;,
    &quot;linz-logger&quot;,
    &quot;pystac&quot;,
]
update_dataset_catalog = [
    &quot;boto3&quot;,
    &quot;jsonschema&quot;,
    &quot;linz-logger&quot;,
    &quot;pynamodb&quot;,
    &quot;ulid-py&quot;
]
upload_status = [
    &quot;boto3&quot;,
    &quot;jsonschema&quot;,
    &quot;linz-logger&quot;,
    &quot;pynamodb&quot;,
]
validation_summary = [
    &quot;jsonschema&quot;,
    &quot;linz-logger&quot;,
    &quot;pynamodb&quot;,
]

[tool.poetry.scripts]
geostore = &quot;geostore.cli:app&quot;

[tool.pylint.MASTER]
disable = [
    &quot;duplicate-code&quot;,
    &quot;missing-class-docstring&quot;,
    &quot;missing-function-docstring&quot;,
    &quot;missing-module-docstring&quot;,
]
load-plugins = [
    &quot;pylint.extensions.mccabe&quot;,
]
max-complexity = 6

[tool.pytest.ini_options]
addopts = &quot;--randomly-dont-reset-seed&quot;
markers = [
    &quot;infrastructure: requires a deployed infrastructure&quot;,
]
python_functions = &quot;should_*&quot;
testpaths = [
    &quot;tests&quot;
]
</code></pre>
<p>As you can see the boto3 and typer runtime dependencies are not optional, so I'd expect to see them in <code>poetry show geostore</code>.</p>
",<python-packaging><requirements><python-poetry>,2021-10-29 02:54:44,2887,4,1,69833825,"<p>This appears to be a bug in Poetry. Or at least it's not clear from the documentation what the expected behavior would be in a case such as yours.</p>
<p>In your <code>pyproject.toml</code>, you specify two dependencies as required in this section:</p>
<pre><code>[tool.poetry.dependencies]
…
awscli = {version = &quot;*&quot;, optional = true}
boto3 = &quot;*&quot;
…
typer = &quot;*&quot;
…
</code></pre>
<p>So, as opposed to <code>awscli</code> among many others, <code>boto3</code> and <code>typer</code> should be required because the <code>optional</code> attribute is not set and defaults to <code>false</code>. But you also list the two required dependencies as &quot;extras&quot; in this section:</p>
<pre><code>[tool.poetry.extras]
…
cli = [
    &quot;boto3&quot;,
    &quot;typer&quot;,
]
…
</code></pre>
<p>Poetry takes that to mean that they are in fact optional, not required. Which makes sense, in a way, because extras are effectively optional. If you inspect the <code>.whl</code> wheel file built by Poetry (it's just a zip archive), specifically the <code>METADATA</code> file in it (which is what Pip refers to when installing the package), then it contains this line:</p>
<pre class=""lang-none prettyprint-override""><code>Requires-Dist: typer; extra == &quot;cli&quot;
</code></pre>
<p>So that dependency is in fact optional: It will only get installed if users ask for it explicitly with <code>pip install geostore[cli]</code>.</p>
<p>The solution then is simple: Remove all references to the required dependencies from the <code>extras</code> section. They are not needed there anyway.</p>
<p>The Poetry documentation is in fact not very clear on what <code>optional</code> really signifies. That attribute is (currently) only briefly mentioned in the <a href=""https://python-poetry.org/docs/pyproject/#extras"" rel=""noreferrer"">section on the <code>pyproject.toml</code> file</a>. One could also argue that if <code>optional</code> is <code>false</code>, then the <code>extras</code> section should not override that value.</p>
",2021-10,i ve been working on a project which so far has just involved building some cloud infrastructure and now i m trying to add a cli to simplify running some aws lambdas unfortunately both the sdist and wheel packages built using poetry build don t seem to include the dependencies so i have to manually pip install all of them to run the command basically i run poetry build in the project cd mktemp directory python m venv venv venv bin activate pip install path to result of poetry build above and then run the new venv bin executable at this point the executable fails because pip did not install any of the package dependencies if i pip show package the requires line is empty the poetry manual doesn t seem to specify how to link dependencies to the built package so what do i have to do instead i am using some optional dependencies could that be interfering with the build process to be clear even non optional dependencies do not show up in the package dependencies pyproject toml build system requires poetry core       build backend poetry core masonry api tool black line length   tool coverage report exclude_lines if type_checking if __name__ __main__ pragma no cover fail_under   tool coverage run branch true omit venv tool isort case_sensitive true line_length   profile black tool mypy show_error_codes true strict true tool mypy overrides module jsonschema jsonschema _utils jsonschema validators multihash pystac pystac layout pytest_subtests smart_open linz_logger ignore_missing_imports true tool poetry name geostore version       description central storage management and access for important geospatial datasets developed by linz authors bill m nelson bmnelson linz govt nz daniel silk dsilk linz govt nz ivan mincik ivan mincik gmail com mitchell paff mpaff linz govt nz sandro santilli strk kbt io simon planzer splanzer linz govt nz victor engmark vengmark linz govt nz license mit readme readme md homepage https github com linz geostore repository https github com linz geostore keywords spatiotemporal asset catalog stac toitū te whenua land information new zealand classifiers development status   beta environment console framework aws cdk framework pytest intended audience end users desktop intended audience information technology license osi approved mit license natural language english operating system posix programming language python     topic communications file sharing topic scientific engineering gis topic utilities typing typed tool poetry dependencies python     aws cdk aws dynamodb version optional true aws cdk aws ec  version optional true aws cdk aws ecr version optional true aws cdk aws ecr_assets version optional true aws cdk aws ecs version optional true aws cdk aws events version optional true aws cdk aws events targets version optional true aws cdk aws iam version optional true aws cdk aws lambda version optional true aws cdk aws lambda event sources version optional true aws cdk aws lambda python version optional true aws cdk aws s  version optional true aws cdk aws sns version optional true aws cdk aws stepfunctions version optional true aws cdk aws stepfunctions_tasks version optional true awscli version optional true boto  cattrs version optional true jsonschema version extras format optional true multihash version optional true pynamodb version optional true pystac version optional true slack sdk version extras models webhook optional true smart open version extras s  optional true strict rfc  optional true version typer ulid py version optional true linz logger version optional true tool poetry dev dependencies black boto  stubs version extras batch dynamodb events lambda lambda python s  s control sns sqs ssm stepfunctions sts gitlint ipdb isort language formatters pre commit hooks mutmut mypy pre commit pylint pytest pytest randomly pytest socket pytest subtests pytest timeout types pkg resources types python dateutil types requests types six types toml tool poetry dev dependencies coverage version extras toml tool poetry extras cdk aws cdk aws dynamodb aws cdk aws ec  aws cdk aws ecr aws cdk aws ecr_assets aws cdk aws ecs aws cdk aws events aws cdk aws events targets aws cdk aws iam aws cdk aws lambda aws cdk aws lambda event sources aws cdk aws lambda python aws cdk aws s  aws cdk aws sns aws cdk aws stepfunctions aws cdk aws stepfunctions_tasks awscli cattrs check_files_checksums boto  linz logger multihash pynamodb check_stac_metadata boto  jsonschema linz logger pynamodb strict rfc  cli boto  typer content_iterator jsonschema linz logger pynamodb datasets boto  jsonschema linz logger pynamodb pystac ulid py dataset_versions jsonschema linz logger pynamodb ulid py import_asset_file boto  linz logger smart open import_dataset boto  jsonschema linz logger pynamodb smart open ulid py import_metadata_file boto  linz logger import_status boto  jsonschema linz logger pynamodb notify_status_update boto  jsonschema linz logger pynamodb slack sdk populate_catalog boto  jsonschema linz logger pystac update_dataset_catalog boto  jsonschema linz logger pynamodb ulid py upload_status boto  jsonschema linz logger pynamodb validation_summary jsonschema linz logger pynamodb tool poetry scripts geostore geostore cli app tool pylint master disable duplicate code missing class docstring missing function docstring missing module docstring load plugins pylint extensions mccabe max complexity   tool pytest ini_options addopts randomly dont reset seed markers infrastructure requires a deployed infrastructure python_functions should_ testpaths tests as you can see the boto  and typer runtime dependencies are not optional so i d expect to see them in poetry show geostore,this appears to be a bug in poetry or at least it s not clear from the documentation what the expected behavior would be in a case such as yours in your pyproject toml you specify two dependencies as required in this section tool poetry dependencies awscli version optional true boto  typer so as opposed to awscli among many others boto  and typer should be required because the optional attribute is not set and defaults to false but you also list the two required dependencies as extras in this section tool poetry extras cli boto  typer poetry takes that to mean that they are in fact optional not required which makes sense in a way because extras are effectively optional if you inspect the whl wheel file built by poetry it s just a zip archive specifically the metadata file in it which is what pip refers to when installing the package then it contains this line requires dist typer extra cli so that dependency is in fact optional it will only get installed if users ask for it explicitly with pip install geostore cli the solution then is simple remove all references to the required dependencies from the extras section they are not needed there anyway the poetry documentation is in fact not very clear on what optional really signifies that attribute is currently only briefly mentioned in the section on the pyproject toml file one could also argue that if optional is false then the extras section should not override that value,"['python-packaging', 'requirements', 'python-poetry']","['i', 've', 'been', 'working', 'on', 'a', 'project', 'which', 'so', 'far', 'has', 'just', 'involved', 'building', 'some', 'cloud', 'infrastructure', 'and', 'now', 'i', 'm', 'trying', 'to', 'add', 'a', 'cli', 'to', 'simplify', 'running', 'some', 'aws', 'lambdas', 'unfortunately', 'both', 'the', 'sdist', 'and', 'wheel', 'packages', 'built', 'using', 'poetry', 'build', 'don', 't', 'seem', 'to', 'include', 'the', 'dependencies', 'so', 'i', 'have', 'to', 'manually', 'pip', 'install', 'all', 'of', 'them', 'to', 'run', 'the', 'command', 'basically', 'i', 'run', 'poetry', 'build', 'in', 'the', 'project', 'cd', 'mktemp', 'directory', 'python', 'm', 'venv', 'venv', 'venv', 'bin', 'activate', 'pip', 'install', 'path', 'to', 'result', 'of', 'poetry', 'build', 'above', 'and', 'then', 'run', 'the', 'new', 'venv', 'bin', 'executable', 'at', 'this', 'point', 'the', 'executable', 'fails', 'because', 'pip', 'did', 'not', 'install', 'any', 'of', 'the', 'package', 'dependencies', 'if', 'i', 'pip', 'show', 'package', 'the', 'requires', 'line', 'is', 'empty', 'the', 'poetry', 'manual', 'doesn', 't', 'seem', 'to', 'specify', 'how', 'to', 'link', 'dependencies', 'to', 'the', 'built', 'package', 'so', 'what', 'do', 'i', 'have', 'to', 'do', 'instead', 'i', 'am', 'using', 'some', 'optional', 'dependencies', 'could', 'that', 'be', 'interfering', 'with', 'the', 'build', 'process', 'to', 'be', 'clear', 'even', 'non', 'optional', 'dependencies', 'do', 'not', 'show', 'up', 'in', 'the', 'package', 'dependencies', 'pyproject', 'toml', 'build', 'system', 'requires', 'poetry', 'core', 'build', 'backend', 'poetry', 'core', 'masonry', 'api', 'tool', 'black', 'line', 'length', 'tool', 'coverage', 'report', 'exclude_lines', 'if', 'type_checking', 'if', '__name__', '__main__', 'pragma', 'no', 'cover', 'fail_under', 'tool', 'coverage', 'run', 'branch', 'true', 'omit', 'venv', 'tool', 'isort', 'case_sensitive', 'true', 'line_length', 'profile', 'black', 'tool', 'mypy', 'show_error_codes', 'true', 'strict', 'true', 'tool', 'mypy', 'overrides', 'module', 'jsonschema', 'jsonschema', '_utils', 'jsonschema', 'validators', 'multihash', 'pystac', 'pystac', 'layout', 'pytest_subtests', 'smart_open', 'linz_logger', 'ignore_missing_imports', 'true', 'tool', 'poetry', 'name', 'geostore', 'version', 'description', 'central', 'storage', 'management', 'and', 'access', 'for', 'important', 'geospatial', 'datasets', 'developed', 'by', 'linz', 'authors', 'bill', 'm', 'nelson', 'bmnelson', 'linz', 'govt', 'nz', 'daniel', 'silk', 'dsilk', 'linz', 'govt', 'nz', 'ivan', 'mincik', 'ivan', 'mincik', 'gmail', 'com', 'mitchell', 'paff', 'mpaff', 'linz', 'govt', 'nz', 'sandro', 'santilli', 'strk', 'kbt', 'io', 'simon', 'planzer', 'splanzer', 'linz', 'govt', 'nz', 'victor', 'engmark', 'vengmark', 'linz', 'govt', 'nz', 'license', 'mit', 'readme', 'readme', 'md', 'homepage', 'https', 'github', 'com', 'linz', 'geostore', 'repository', 'https', 'github', 'com', 'linz', 'geostore', 'keywords', 'spatiotemporal', 'asset', 'catalog', 'stac', 'toitū', 'te', 'whenua', 'land', 'information', 'new', 'zealand', 'classifiers', 'development', 'status', 'beta', 'environment', 'console', 'framework', 'aws', 'cdk', 'framework', 'pytest', 'intended', 'audience', 'end', 'users', 'desktop', 'intended', 'audience', 'information', 'technology', 'license', 'osi', 'approved', 'mit', 'license', 'natural', 'language', 'english', 'operating', 'system', 'posix', 'programming', 'language', 'python', 'topic', 'communications', 'file', 'sharing', 'topic', 'scientific', 'engineering', 'gis', 'topic', 'utilities', 'typing', 'typed', 'tool', 'poetry', 'dependencies', 'python', 'aws', 'cdk', 'aws', 'dynamodb', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'ec', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'ecr', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'ecr_assets', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'ecs', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'events', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'events', 'targets', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'iam', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'lambda', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'lambda', 'event', 'sources', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'lambda', 'python', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 's', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'sns', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'stepfunctions', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'stepfunctions_tasks', 'version', 'optional', 'true', 'awscli', 'version', 'optional', 'true', 'boto', 'cattrs', 'version', 'optional', 'true', 'jsonschema', 'version', 'extras', 'format', 'optional', 'true', 'multihash', 'version', 'optional', 'true', 'pynamodb', 'version', 'optional', 'true', 'pystac', 'version', 'optional', 'true', 'slack', 'sdk', 'version', 'extras', 'models', 'webhook', 'optional', 'true', 'smart', 'open', 'version', 'extras', 's', 'optional', 'true', 'strict', 'rfc', 'optional', 'true', 'version', 'typer', 'ulid', 'py', 'version', 'optional', 'true', 'linz', 'logger', 'version', 'optional', 'true', 'tool', 'poetry', 'dev', 'dependencies', 'black', 'boto', 'stubs', 'version', 'extras', 'batch', 'dynamodb', 'events', 'lambda', 'lambda', 'python', 's', 's', 'control', 'sns', 'sqs', 'ssm', 'stepfunctions', 'sts', 'gitlint', 'ipdb', 'isort', 'language', 'formatters', 'pre', 'commit', 'hooks', 'mutmut', 'mypy', 'pre', 'commit', 'pylint', 'pytest', 'pytest', 'randomly', 'pytest', 'socket', 'pytest', 'subtests', 'pytest', 'timeout', 'types', 'pkg', 'resources', 'types', 'python', 'dateutil', 'types', 'requests', 'types', 'six', 'types', 'toml', 'tool', 'poetry', 'dev', 'dependencies', 'coverage', 'version', 'extras', 'toml', 'tool', 'poetry', 'extras', 'cdk', 'aws', 'cdk', 'aws', 'dynamodb', 'aws', 'cdk', 'aws', 'ec', 'aws', 'cdk', 'aws', 'ecr', 'aws', 'cdk', 'aws', 'ecr_assets', 'aws', 'cdk', 'aws', 'ecs', 'aws', 'cdk', 'aws', 'events', 'aws', 'cdk', 'aws', 'events', 'targets', 'aws', 'cdk', 'aws', 'iam', 'aws', 'cdk', 'aws', 'lambda', 'aws', 'cdk', 'aws', 'lambda', 'event', 'sources', 'aws', 'cdk', 'aws', 'lambda', 'python', 'aws', 'cdk', 'aws', 's', 'aws', 'cdk', 'aws', 'sns', 'aws', 'cdk', 'aws', 'stepfunctions', 'aws', 'cdk', 'aws', 'stepfunctions_tasks', 'awscli', 'cattrs', 'check_files_checksums', 'boto', 'linz', 'logger', 'multihash', 'pynamodb', 'check_stac_metadata', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'strict', 'rfc', 'cli', 'boto', 'typer', 'content_iterator', 'jsonschema', 'linz', 'logger', 'pynamodb', 'datasets', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'pystac', 'ulid', 'py', 'dataset_versions', 'jsonschema', 'linz', 'logger', 'pynamodb', 'ulid', 'py', 'import_asset_file', 'boto', 'linz', 'logger', 'smart', 'open', 'import_dataset', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'smart', 'open', 'ulid', 'py', 'import_metadata_file', 'boto', 'linz', 'logger', 'import_status', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'notify_status_update', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'slack', 'sdk', 'populate_catalog', 'boto', 'jsonschema', 'linz', 'logger', 'pystac', 'update_dataset_catalog', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'ulid', 'py', 'upload_status', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'validation_summary', 'jsonschema', 'linz', 'logger', 'pynamodb', 'tool', 'poetry', 'scripts', 'geostore', 'geostore', 'cli', 'app', 'tool', 'pylint', 'master', 'disable', 'duplicate', 'code', 'missing', 'class', 'docstring', 'missing', 'function', 'docstring', 'missing', 'module', 'docstring', 'load', 'plugins', 'pylint', 'extensions', 'mccabe', 'max', 'complexity', 'tool', 'pytest', 'ini_options', 'addopts', 'randomly', 'dont', 'reset', 'seed', 'markers', 'infrastructure', 'requires', 'a', 'deployed', 'infrastructure', 'python_functions', 'should_', 'testpaths', 'tests', 'as', 'you', 'can', 'see', 'the', 'boto', 'and', 'typer', 'runtime', 'dependencies', 'are', 'not', 'optional', 'so', 'i', 'd', 'expect', 'to', 'see', 'them', 'in', 'poetry', 'show', 'geostore']","['this', 'appears', 'to', 'be', 'a', 'bug', 'in', 'poetry', 'or', 'at', 'least', 'it', 's', 'not', 'clear', 'from', 'the', 'documentation', 'what', 'the', 'expected', 'behavior', 'would', 'be', 'in', 'a', 'case', 'such', 'as', 'yours', 'in', 'your', 'pyproject', 'toml', 'you', 'specify', 'two', 'dependencies', 'as', 'required', 'in', 'this', 'section', 'tool', 'poetry', 'dependencies', 'awscli', 'version', 'optional', 'true', 'boto', 'typer', 'so', 'as', 'opposed', 'to', 'awscli', 'among', 'many', 'others', 'boto', 'and', 'typer', 'should', 'be', 'required', 'because', 'the', 'optional', 'attribute', 'is', 'not', 'set', 'and', 'defaults', 'to', 'false', 'but', 'you', 'also', 'list', 'the', 'two', 'required', 'dependencies', 'as', 'extras', 'in', 'this', 'section', 'tool', 'poetry', 'extras', 'cli', 'boto', 'typer', 'poetry', 'takes', 'that', 'to', 'mean', 'that', 'they', 'are', 'in', 'fact', 'optional', 'not', 'required', 'which', 'makes', 'sense', 'in', 'a', 'way', 'because', 'extras', 'are', 'effectively', 'optional', 'if', 'you', 'inspect', 'the', 'whl', 'wheel', 'file', 'built', 'by', 'poetry', 'it', 's', 'just', 'a', 'zip', 'archive', 'specifically', 'the', 'metadata', 'file', 'in', 'it', 'which', 'is', 'what', 'pip', 'refers', 'to', 'when', 'installing', 'the', 'package', 'then', 'it', 'contains', 'this', 'line', 'requires', 'dist', 'typer', 'extra', 'cli', 'so', 'that', 'dependency', 'is', 'in', 'fact', 'optional', 'it', 'will', 'only', 'get', 'installed', 'if', 'users', 'ask', 'for', 'it', 'explicitly', 'with', 'pip', 'install', 'geostore', 'cli', 'the', 'solution', 'then', 'is', 'simple', 'remove', 'all', 'references', 'to', 'the', 'required', 'dependencies', 'from', 'the', 'extras', 'section', 'they', 'are', 'not', 'needed', 'there', 'anyway', 'the', 'poetry', 'documentation', 'is', 'in', 'fact', 'not', 'very', 'clear', 'on', 'what', 'optional', 'really', 'signifies', 'that', 'attribute', 'is', 'currently', 'only', 'briefly', 'mentioned', 'in', 'the', 'section', 'on', 'the', 'pyproject', 'toml', 'file', 'one', 'could', 'also', 'argue', 'that', 'if', 'optional', 'is', 'false', 'then', 'the', 'extras', 'section', 'should', 'not', 'override', 'that', 'value']","['working', 'project', 'far', 'ha', 'involved', 'building', 'cloud', 'infrastructure', 'trying', 'add', 'cli', 'simplify', 'running', 'aws', 'lambda', 'unfortunately', 'sdist', 'wheel', 'package', 'built', 'using', 'poetry', 'build', 'seem', 'include', 'dependency', 'manually', 'pip', 'install', 'run', 'command', 'basically', 'run', 'poetry', 'build', 'project', 'cd', 'mktemp', 'directory', 'python', 'venv', 'venv', 'venv', 'bin', 'activate', 'pip', 'install', 'path', 'result', 'poetry', 'build', 'run', 'new', 'venv', 'bin', 'executable', 'point', 'executable', 'fails', 'pip', 'install', 'package', 'dependency', 'pip', 'show', 'package', 'requires', 'line', 'empty', 'poetry', 'manual', 'seem', 'specify', 'link', 'dependency', 'built', 'package', 'instead', 'using', 'optional', 'dependency', 'could', 'interfering', 'build', 'process', 'clear', 'even', 'non', 'optional', 'dependency', 'show', 'package', 'dependency', 'pyproject', 'toml', 'build', 'system', 'requires', 'poetry', 'core', 'build', 'backend', 'poetry', 'core', 'masonry', 'api', 'tool', 'black', 'line', 'length', 'tool', 'coverage', 'report', 'exclude_lines', 'type_checking', '__name__', '__main__', 'pragma', 'cover', 'fail_under', 'tool', 'coverage', 'run', 'branch', 'true', 'omit', 'venv', 'tool', 'isort', 'case_sensitive', 'true', 'line_length', 'profile', 'black', 'tool', 'mypy', 'show_error_codes', 'true', 'strict', 'true', 'tool', 'mypy', 'override', 'module', 'jsonschema', 'jsonschema', '_utils', 'jsonschema', 'validators', 'multihash', 'pystac', 'pystac', 'layout', 'pytest_subtests', 'smart_open', 'linz_logger', 'ignore_missing_imports', 'true', 'tool', 'poetry', 'name', 'geostore', 'version', 'description', 'central', 'storage', 'management', 'access', 'important', 'geospatial', 'datasets', 'developed', 'linz', 'author', 'bill', 'nelson', 'bmnelson', 'linz', 'govt', 'nz', 'daniel', 'silk', 'dsilk', 'linz', 'govt', 'nz', 'ivan', 'mincik', 'ivan', 'mincik', 'gmail', 'com', 'mitchell', 'paff', 'mpaff', 'linz', 'govt', 'nz', 'sandro', 'santilli', 'strk', 'kbt', 'io', 'simon', 'planzer', 'splanzer', 'linz', 'govt', 'nz', 'victor', 'engmark', 'vengmark', 'linz', 'govt', 'nz', 'license', 'mit', 'readme', 'readme', 'md', 'homepage', 'http', 'github', 'com', 'linz', 'geostore', 'repository', 'http', 'github', 'com', 'linz', 'geostore', 'keywords', 'spatiotemporal', 'asset', 'catalog', 'stac', 'toitū', 'te', 'whenua', 'land', 'information', 'new', 'zealand', 'classifier', 'development', 'status', 'beta', 'environment', 'console', 'framework', 'aws', 'cdk', 'framework', 'pytest', 'intended', 'audience', 'end', 'user', 'desktop', 'intended', 'audience', 'information', 'technology', 'license', 'osi', 'approved', 'mit', 'license', 'natural', 'language', 'english', 'operating', 'system', 'posix', 'programming', 'language', 'python', 'topic', 'communication', 'file', 'sharing', 'topic', 'scientific', 'engineering', 'gi', 'topic', 'utility', 'typing', 'typed', 'tool', 'poetry', 'dependency', 'python', 'aws', 'cdk', 'aws', 'dynamodb', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'ec', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'ecr', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'ecr_assets', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'ec', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'event', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'event', 'target', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'iam', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'lambda', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'lambda', 'event', 'source', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'lambda', 'python', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'sn', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'stepfunctions', 'version', 'optional', 'true', 'aws', 'cdk', 'aws', 'stepfunctions_tasks', 'version', 'optional', 'true', 'awscli', 'version', 'optional', 'true', 'boto', 'cattrs', 'version', 'optional', 'true', 'jsonschema', 'version', 'extra', 'format', 'optional', 'true', 'multihash', 'version', 'optional', 'true', 'pynamodb', 'version', 'optional', 'true', 'pystac', 'version', 'optional', 'true', 'slack', 'sdk', 'version', 'extra', 'model', 'webhook', 'optional', 'true', 'smart', 'open', 'version', 'extra', 'optional', 'true', 'strict', 'rfc', 'optional', 'true', 'version', 'typer', 'ulid', 'py', 'version', 'optional', 'true', 'linz', 'logger', 'version', 'optional', 'true', 'tool', 'poetry', 'dev', 'dependency', 'black', 'boto', 'stub', 'version', 'extra', 'batch', 'dynamodb', 'event', 'lambda', 'lambda', 'python', 'control', 'sn', 'sqs', 'ssm', 'stepfunctions', 'sts', 'gitlint', 'ipdb', 'isort', 'language', 'formatters', 'pre', 'commit', 'hook', 'mutmut', 'mypy', 'pre', 'commit', 'pylint', 'pytest', 'pytest', 'randomly', 'pytest', 'socket', 'pytest', 'subtests', 'pytest', 'timeout', 'type', 'pkg', 'resource', 'type', 'python', 'dateutil', 'type', 'request', 'type', 'six', 'type', 'toml', 'tool', 'poetry', 'dev', 'dependency', 'coverage', 'version', 'extra', 'toml', 'tool', 'poetry', 'extra', 'cdk', 'aws', 'cdk', 'aws', 'dynamodb', 'aws', 'cdk', 'aws', 'ec', 'aws', 'cdk', 'aws', 'ecr', 'aws', 'cdk', 'aws', 'ecr_assets', 'aws', 'cdk', 'aws', 'ec', 'aws', 'cdk', 'aws', 'event', 'aws', 'cdk', 'aws', 'event', 'target', 'aws', 'cdk', 'aws', 'iam', 'aws', 'cdk', 'aws', 'lambda', 'aws', 'cdk', 'aws', 'lambda', 'event', 'source', 'aws', 'cdk', 'aws', 'lambda', 'python', 'aws', 'cdk', 'aws', 'aws', 'cdk', 'aws', 'sn', 'aws', 'cdk', 'aws', 'stepfunctions', 'aws', 'cdk', 'aws', 'stepfunctions_tasks', 'awscli', 'cattrs', 'check_files_checksums', 'boto', 'linz', 'logger', 'multihash', 'pynamodb', 'check_stac_metadata', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'strict', 'rfc', 'cli', 'boto', 'typer', 'content_iterator', 'jsonschema', 'linz', 'logger', 'pynamodb', 'datasets', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'pystac', 'ulid', 'py', 'dataset_versions', 'jsonschema', 'linz', 'logger', 'pynamodb', 'ulid', 'py', 'import_asset_file', 'boto', 'linz', 'logger', 'smart', 'open', 'import_dataset', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'smart', 'open', 'ulid', 'py', 'import_metadata_file', 'boto', 'linz', 'logger', 'import_status', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'notify_status_update', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'slack', 'sdk', 'populate_catalog', 'boto', 'jsonschema', 'linz', 'logger', 'pystac', 'update_dataset_catalog', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'ulid', 'py', 'upload_status', 'boto', 'jsonschema', 'linz', 'logger', 'pynamodb', 'validation_summary', 'jsonschema', 'linz', 'logger', 'pynamodb', 'tool', 'poetry', 'script', 'geostore', 'geostore', 'cli', 'app', 'tool', 'pylint', 'master', 'disable', 'duplicate', 'code', 'missing', 'class', 'docstring', 'missing', 'function', 'docstring', 'missing', 'module', 'docstring', 'load', 'plugins', 'pylint', 'extension', 'mccabe', 'max', 'complexity', 'tool', 'pytest', 'ini_options', 'addopts', 'randomly', 'dont', 'reset', 'seed', 'marker', 'infrastructure', 'requires', 'deployed', 'infrastructure', 'python_functions', 'should_', 'testpaths', 'test', 'see', 'boto', 'typer', 'runtime', 'dependency', 'optional', 'expect', 'see', 'poetry', 'show', 'geostore']","['this', 'appears', 'to', 'be', 'a', 'bug', 'in', 'poetry', 'or', 'at', 'least', 'it', 's', 'not', 'clear', 'from', 'the', 'documentation', 'what', 'the', 'expected', 'behavior', 'would', 'be', 'in', 'a', 'case', 'such', 'a', 'yours', 'in', 'your', 'pyproject', 'toml', 'you', 'specify', 'two', 'dependency', 'a', 'required', 'in', 'this', 'section', 'tool', 'poetry', 'dependency', 'awscli', 'version', 'optional', 'true', 'boto', 'typer', 'so', 'a', 'opposed', 'to', 'awscli', 'among', 'many', 'others', 'boto', 'and', 'typer', 'should', 'be', 'required', 'because', 'the', 'optional', 'attribute', 'is', 'not', 'set', 'and', 'default', 'to', 'false', 'but', 'you', 'also', 'list', 'the', 'two', 'required', 'dependency', 'a', 'extra', 'in', 'this', 'section', 'tool', 'poetry', 'extra', 'cli', 'boto', 'typer', 'poetry', 'take', 'that', 'to', 'mean', 'that', 'they', 'are', 'in', 'fact', 'optional', 'not', 'required', 'which', 'make', 'sense', 'in', 'a', 'way', 'because', 'extra', 'are', 'effectively', 'optional', 'if', 'you', 'inspect', 'the', 'whl', 'wheel', 'file', 'built', 'by', 'poetry', 'it', 's', 'just', 'a', 'zip', 'archive', 'specifically', 'the', 'metadata', 'file', 'in', 'it', 'which', 'is', 'what', 'pip', 'refers', 'to', 'when', 'installing', 'the', 'package', 'then', 'it', 'contains', 'this', 'line', 'requires', 'dist', 'typer', 'extra', 'cli', 'so', 'that', 'dependency', 'is', 'in', 'fact', 'optional', 'it', 'will', 'only', 'get', 'installed', 'if', 'user', 'ask', 'for', 'it', 'explicitly', 'with', 'pip', 'install', 'geostore', 'cli', 'the', 'solution', 'then', 'is', 'simple', 'remove', 'all', 'reference', 'to', 'the', 'required', 'dependency', 'from', 'the', 'extra', 'section', 'they', 'are', 'not', 'needed', 'there', 'anyway', 'the', 'poetry', 'documentation', 'is', 'in', 'fact', 'not', 'very', 'clear', 'on', 'what', 'optional', 'really', 'signifies', 'that', 'attribute', 'is', 'currently', 'only', 'briefly', 'mentioned', 'in', 'the', 'section', 'on', 'the', 'pyproject', 'toml', 'file', 'one', 'could', 'also', 'argue', 'that', 'if', 'optional', 'is', 'false', 'then', 'the', 'extra', 'section', 'should', 'not', 'override', 'that', 'value']",System Requirements and AWS,2,"{'neg': 0.01, 'neu': 0.952, 'pos': 0.038, 'compound': 0.9549}",0.26312121212121203,2,Python Libraries and Environment,3query
69627616,Make explicit in UML state diagram that order of activities does not matter,"<p>Have a UML state diagram describing behaviour of a system by showing the interaction of the user and the system to carry out a use case. This diagram is used as agreement (requirement) with the developers of the system.</p>
<p>When the user request to carry out a use case, the system request information to the user and show error messages if the information is not valid. The system also authenticate the user and show him an error if he is not authenticated.</p>
<p>But it does not matter which activity is done first. It is, which error, information or authentication error, is shown first. We want to make explicit to the developers that the order of activities does not matter though all activities should be done. How we achieve that? I think the &quot;fork&quot; item in state diagram is for this?</p>
",<uml><requirements><state-diagram>,2021-10-19 08:39:24,189,0,1,69628966,"<p>It seems that you are confusing state machine diagram with activity diagram (and possibly also sequence diagram). The latter has fork (and in sequence diagram there is a way of showing that events are happening in parallel).</p>
<p>The state machine diagram does show the changes of the state and its triggers but is not the main diagram to show related actions nor their flow.
Moreover the entire state machine of an entity typically is influenced by more than one user story. In other words, triggers of state changes can be caused by different use cases. So state machine is across multiple user stories rather than describing just one.</p>
<p>If you try to document flow of use case using state machine diagram, you are most probably doing it wrong.</p>
",2021-10,have a uml state diagram describing behaviour of a system by showing the interaction of the user and the system to carry out a use case this diagram is used as agreement requirement with the developers of the system when the user request to carry out a use case the system request information to the user and show error messages if the information is not valid the system also authenticate the user and show him an error if he is not authenticated but it does not matter which activity is done first it is which error information or authentication error is shown first we want to make explicit to the developers that the order of activities does not matter though all activities should be done how we achieve that i think the fork item in state diagram is for this,it seems that you are confusing state machine diagram with activity diagram and possibly also sequence diagram the latter has fork and in sequence diagram there is a way of showing that events are happening in parallel the state machine diagram does show the changes of the state and its triggers but is not the main diagram to show related actions nor their flow moreover the entire state machine of an entity typically is influenced by more than one user story in other words triggers of state changes can be caused by different use cases so state machine is across multiple user stories rather than describing just one if you try to document flow of use case using state machine diagram you are most probably doing it wrong,"['uml', 'requirements', 'state-diagram']","['have', 'a', 'uml', 'state', 'diagram', 'describing', 'behaviour', 'of', 'a', 'system', 'by', 'showing', 'the', 'interaction', 'of', 'the', 'user', 'and', 'the', 'system', 'to', 'carry', 'out', 'a', 'use', 'case', 'this', 'diagram', 'is', 'used', 'as', 'agreement', 'requirement', 'with', 'the', 'developers', 'of', 'the', 'system', 'when', 'the', 'user', 'request', 'to', 'carry', 'out', 'a', 'use', 'case', 'the', 'system', 'request', 'information', 'to', 'the', 'user', 'and', 'show', 'error', 'messages', 'if', 'the', 'information', 'is', 'not', 'valid', 'the', 'system', 'also', 'authenticate', 'the', 'user', 'and', 'show', 'him', 'an', 'error', 'if', 'he', 'is', 'not', 'authenticated', 'but', 'it', 'does', 'not', 'matter', 'which', 'activity', 'is', 'done', 'first', 'it', 'is', 'which', 'error', 'information', 'or', 'authentication', 'error', 'is', 'shown', 'first', 'we', 'want', 'to', 'make', 'explicit', 'to', 'the', 'developers', 'that', 'the', 'order', 'of', 'activities', 'does', 'not', 'matter', 'though', 'all', 'activities', 'should', 'be', 'done', 'how', 'we', 'achieve', 'that', 'i', 'think', 'the', 'fork', 'item', 'in', 'state', 'diagram', 'is', 'for', 'this']","['it', 'seems', 'that', 'you', 'are', 'confusing', 'state', 'machine', 'diagram', 'with', 'activity', 'diagram', 'and', 'possibly', 'also', 'sequence', 'diagram', 'the', 'latter', 'has', 'fork', 'and', 'in', 'sequence', 'diagram', 'there', 'is', 'a', 'way', 'of', 'showing', 'that', 'events', 'are', 'happening', 'in', 'parallel', 'the', 'state', 'machine', 'diagram', 'does', 'show', 'the', 'changes', 'of', 'the', 'state', 'and', 'its', 'triggers', 'but', 'is', 'not', 'the', 'main', 'diagram', 'to', 'show', 'related', 'actions', 'nor', 'their', 'flow', 'moreover', 'the', 'entire', 'state', 'machine', 'of', 'an', 'entity', 'typically', 'is', 'influenced', 'by', 'more', 'than', 'one', 'user', 'story', 'in', 'other', 'words', 'triggers', 'of', 'state', 'changes', 'can', 'be', 'caused', 'by', 'different', 'use', 'cases', 'so', 'state', 'machine', 'is', 'across', 'multiple', 'user', 'stories', 'rather', 'than', 'describing', 'just', 'one', 'if', 'you', 'try', 'to', 'document', 'flow', 'of', 'use', 'case', 'using', 'state', 'machine', 'diagram', 'you', 'are', 'most', 'probably', 'doing', 'it', 'wrong']","['uml', 'state', 'diagram', 'describing', 'behaviour', 'system', 'showing', 'interaction', 'user', 'system', 'carry', 'use', 'case', 'diagram', 'used', 'agreement', 'requirement', 'developer', 'system', 'user', 'request', 'carry', 'use', 'case', 'system', 'request', 'information', 'user', 'show', 'error', 'message', 'information', 'valid', 'system', 'also', 'authenticate', 'user', 'show', 'error', 'authenticated', 'doe', 'matter', 'activity', 'done', 'first', 'error', 'information', 'authentication', 'error', 'shown', 'first', 'want', 'make', 'explicit', 'developer', 'order', 'activity', 'doe', 'matter', 'though', 'activity', 'done', 'achieve', 'think', 'fork', 'item', 'state', 'diagram']","['it', 'seems', 'that', 'you', 'are', 'confusing', 'state', 'machine', 'diagram', 'with', 'activity', 'diagram', 'and', 'possibly', 'also', 'sequence', 'diagram', 'the', 'latter', 'ha', 'fork', 'and', 'in', 'sequence', 'diagram', 'there', 'is', 'a', 'way', 'of', 'showing', 'that', 'event', 'are', 'happening', 'in', 'parallel', 'the', 'state', 'machine', 'diagram', 'doe', 'show', 'the', 'change', 'of', 'the', 'state', 'and', 'it', 'trigger', 'but', 'is', 'not', 'the', 'main', 'diagram', 'to', 'show', 'related', 'action', 'nor', 'their', 'flow', 'moreover', 'the', 'entire', 'state', 'machine', 'of', 'an', 'entity', 'typically', 'is', 'influenced', 'by', 'more', 'than', 'one', 'user', 'story', 'in', 'other', 'word', 'trigger', 'of', 'state', 'change', 'can', 'be', 'caused', 'by', 'different', 'use', 'case', 'so', 'state', 'machine', 'is', 'across', 'multiple', 'user', 'story', 'rather', 'than', 'describing', 'just', 'one', 'if', 'you', 'try', 'to', 'document', 'flow', 'of', 'use', 'case', 'using', 'state', 'machine', 'diagram', 'you', 'are', 'most', 'probably', 'doing', 'it', 'wrong']",System Requirements and AWS,3,"{'neg': 0.092, 'neu': 0.877, 'pos': 0.031, 'compound': -0.7788}",0.25,3,Python Package Installation and Management,3query
69626224,Which Dependencies File Should I Use for my Dockerfile?,"<p>I'm currently learning about <strong>Docker</strong>. I'm trying to use it in my python project (I'm using Django)</p>
<p>In my <code>Dockerfile</code>, I want my image to install the dependencies of my project into each new container.
I just created a requirements.txt file using the command tool 'pipreqs'</p>
<p>After looking at the content of this file, I realize that I have 2 others files related to the dependencies:</p>
<ul>
<li><code>Pipfile</code></li>
<li><code>Pipfile.lock</code></li>
</ul>
<p>I think they have been created and updated when I was using pipenv command.</p>
<p>My question is : Which one of these file should I use in my <code>Dockerfile</code>? <code>Pipfile</code>, <code>Pipfile.lock</code> or <code>requirements.txt</code>?</p>
",<python><docker><dependencies><requirements><pipfile>,2021-10-19 06:50:56,250,0,1,69628031,"<p>Default choice is <strong>requirements.txt with pinned versions</strong>.</p>
<p>Versions can be pinned by <code>pip freeze &gt; requirements.txt</code> or <code>pipenv lock -r &gt; requirements.txt</code>.
You need Pipfile and Pipfile.lock if you going to use pipenv inside container. Then <code>pipenv install</code> will use your Pipfile.lock.</p>
",2021-10,i m currently learning about docker i m trying to use it in my python project i m using django in my dockerfile i want my image to install the dependencies of my project into each new container i just created a requirements txt file using the command tool pipreqs after looking at the content of this file i realize that i have   others files related to the dependencies pipfile pipfile lock i think they have been created and updated when i was using pipenv command my question is which one of these file should i use in my dockerfile pipfile pipfile lock or requirements txt,default choice is requirements txt with pinned versions versions can be pinned by pip freeze requirements txt or pipenv lock r requirements txt you need pipfile and pipfile lock if you going to use pipenv inside container then pipenv install will use your pipfile lock,"['python', 'docker', 'dependencies', 'requirements', 'pipfile']","['i', 'm', 'currently', 'learning', 'about', 'docker', 'i', 'm', 'trying', 'to', 'use', 'it', 'in', 'my', 'python', 'project', 'i', 'm', 'using', 'django', 'in', 'my', 'dockerfile', 'i', 'want', 'my', 'image', 'to', 'install', 'the', 'dependencies', 'of', 'my', 'project', 'into', 'each', 'new', 'container', 'i', 'just', 'created', 'a', 'requirements', 'txt', 'file', 'using', 'the', 'command', 'tool', 'pipreqs', 'after', 'looking', 'at', 'the', 'content', 'of', 'this', 'file', 'i', 'realize', 'that', 'i', 'have', 'others', 'files', 'related', 'to', 'the', 'dependencies', 'pipfile', 'pipfile', 'lock', 'i', 'think', 'they', 'have', 'been', 'created', 'and', 'updated', 'when', 'i', 'was', 'using', 'pipenv', 'command', 'my', 'question', 'is', 'which', 'one', 'of', 'these', 'file', 'should', 'i', 'use', 'in', 'my', 'dockerfile', 'pipfile', 'pipfile', 'lock', 'or', 'requirements', 'txt']","['default', 'choice', 'is', 'requirements', 'txt', 'with', 'pinned', 'versions', 'versions', 'can', 'be', 'pinned', 'by', 'pip', 'freeze', 'requirements', 'txt', 'or', 'pipenv', 'lock', 'r', 'requirements', 'txt', 'you', 'need', 'pipfile', 'and', 'pipfile', 'lock', 'if', 'you', 'going', 'to', 'use', 'pipenv', 'inside', 'container', 'then', 'pipenv', 'install', 'will', 'use', 'your', 'pipfile', 'lock']","['currently', 'learning', 'docker', 'trying', 'use', 'python', 'project', 'using', 'django', 'dockerfile', 'want', 'image', 'install', 'dependency', 'project', 'new', 'container', 'created', 'requirement', 'txt', 'file', 'using', 'command', 'tool', 'pipreqs', 'looking', 'content', 'file', 'realize', 'others', 'file', 'related', 'dependency', 'pipfile', 'pipfile', 'lock', 'think', 'created', 'updated', 'wa', 'using', 'pipenv', 'command', 'question', 'one', 'file', 'use', 'dockerfile', 'pipfile', 'pipfile', 'lock', 'requirement', 'txt']","['default', 'choice', 'is', 'requirement', 'txt', 'with', 'pinned', 'version', 'version', 'can', 'be', 'pinned', 'by', 'pip', 'freeze', 'requirement', 'txt', 'or', 'pipenv', 'lock', 'r', 'requirement', 'txt', 'you', 'need', 'pipfile', 'and', 'pipfile', 'lock', 'if', 'you', 'going', 'to', 'use', 'pipenv', 'inside', 'container', 'then', 'pipenv', 'install', 'will', 'use', 'your', 'pipfile', 'lock']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.941, 'pos': 0.059, 'compound': 0.5661}",0.04545454545454545,3,Python Package Installation and Management,3query
69462872,Use case instance and Scenario,"<p>In the literature, a scenario has sometimes been defined as an instance of a use case.<br />
Do you see any problem with defining a <strong>scenario</strong> as an “<strong>instance of the use case</strong>”?<br />
Please, help me!</p>
",<uml><terminology><use-case><requirements><scenarios>,2021-10-06 09:11:23,253,0,1,69734356,"<p>The scenarios are not use-case instances and you do not need to reinvent terms:</p>
<ul>
<li><p>The UML specification define <strong>use-cases</strong> and <strong>use-case instances</strong>:</p>
<blockquote>
<p>A UseCase is a specification of behavior. An instance of a UseCase refers to an <strong>occurrence</strong> of the emergent behavior that conforms to the corresponding UseCase.</p>
</blockquote>
</li>
<li><p>The UML standard does not define the scenario. But <strong>scenario</strong> is a common term in use-case literature, and refer to a general sequence of events.  Mainstream use-case document templates rely heavily on scenarios (e.g. &quot;Main scenario&quot; and &quot;alternative scenario&quot; for variants, error processing or exceptions).</p>
</li>
</ul>
<p><strong>Usual ATM example</strong>:</p>
<ul>
<li><p><code>Withdraw cash</code> would be a use-case</p>
</li>
<li><p><code>Ms. Smith withdraws cash on October 27 2021 at 9:23AM at the ATM #23782 of Bank Y for an amount of 50€</code> would be an instance of the use-case, i.e. a specific occurence at a given moment in time with a specific user.</p>
</li>
<li><p>Following general scenarios could be envisaged for the use-case: use of a bank card to be inserted in the ATM, use of a contactless card,  or ATM swallows the card because of wrong codes.</p>
</li>
<li><p>The instance may correspond to one of those scenarios.  But a same scenario could happen in many instances.</p>
</li>
</ul>
",2021-10,in the literature a scenario has sometimes been defined as an instance of a use case do you see any problem with defining a scenario as an instance of the use case please help me,the scenarios are not use case instances and you do not need to reinvent terms the uml specification define use cases and use case instances a usecase is a specification of behavior an instance of a usecase refers to an occurrence of the emergent behavior that conforms to the corresponding usecase the uml standard does not define the scenario but scenario is a common term in use case literature and refer to a general sequence of events mainstream use case document templates rely heavily on scenarios e g main scenario and alternative scenario for variants error processing or exceptions usual atm example withdraw cash would be a use case ms smith withdraws cash on october     at    am at the atm   of bank y for an amount of   would be an instance of the use case i e a specific occurence at a given moment in time with a specific user following general scenarios could be envisaged for the use case use of a bank card to be inserted in the atm use of a contactless card or atm swallows the card because of wrong codes the instance may correspond to one of those scenarios but a same scenario could happen in many instances,"['uml', 'terminology', 'use-case', 'requirements', 'scenarios']","['in', 'the', 'literature', 'a', 'scenario', 'has', 'sometimes', 'been', 'defined', 'as', 'an', 'instance', 'of', 'a', 'use', 'case', 'do', 'you', 'see', 'any', 'problem', 'with', 'defining', 'a', 'scenario', 'as', 'an', 'instance', 'of', 'the', 'use', 'case', 'please', 'help', 'me']","['the', 'scenarios', 'are', 'not', 'use', 'case', 'instances', 'and', 'you', 'do', 'not', 'need', 'to', 'reinvent', 'terms', 'the', 'uml', 'specification', 'define', 'use', 'cases', 'and', 'use', 'case', 'instances', 'a', 'usecase', 'is', 'a', 'specification', 'of', 'behavior', 'an', 'instance', 'of', 'a', 'usecase', 'refers', 'to', 'an', 'occurrence', 'of', 'the', 'emergent', 'behavior', 'that', 'conforms', 'to', 'the', 'corresponding', 'usecase', 'the', 'uml', 'standard', 'does', 'not', 'define', 'the', 'scenario', 'but', 'scenario', 'is', 'a', 'common', 'term', 'in', 'use', 'case', 'literature', 'and', 'refer', 'to', 'a', 'general', 'sequence', 'of', 'events', 'mainstream', 'use', 'case', 'document', 'templates', 'rely', 'heavily', 'on', 'scenarios', 'e', 'g', 'main', 'scenario', 'and', 'alternative', 'scenario', 'for', 'variants', 'error', 'processing', 'or', 'exceptions', 'usual', 'atm', 'example', 'withdraw', 'cash', 'would', 'be', 'a', 'use', 'case', 'ms', 'smith', 'withdraws', 'cash', 'on', 'october', 'at', 'am', 'at', 'the', 'atm', 'of', 'bank', 'y', 'for', 'an', 'amount', 'of', 'would', 'be', 'an', 'instance', 'of', 'the', 'use', 'case', 'i', 'e', 'a', 'specific', 'occurence', 'at', 'a', 'given', 'moment', 'in', 'time', 'with', 'a', 'specific', 'user', 'following', 'general', 'scenarios', 'could', 'be', 'envisaged', 'for', 'the', 'use', 'case', 'use', 'of', 'a', 'bank', 'card', 'to', 'be', 'inserted', 'in', 'the', 'atm', 'use', 'of', 'a', 'contactless', 'card', 'or', 'atm', 'swallows', 'the', 'card', 'because', 'of', 'wrong', 'codes', 'the', 'instance', 'may', 'correspond', 'to', 'one', 'of', 'those', 'scenarios', 'but', 'a', 'same', 'scenario', 'could', 'happen', 'in', 'many', 'instances']","['literature', 'scenario', 'ha', 'sometimes', 'defined', 'instance', 'use', 'case', 'see', 'problem', 'defining', 'scenario', 'instance', 'use', 'case', 'please', 'help']","['the', 'scenario', 'are', 'not', 'use', 'case', 'instance', 'and', 'you', 'do', 'not', 'need', 'to', 'reinvent', 'term', 'the', 'uml', 'specification', 'define', 'use', 'case', 'and', 'use', 'case', 'instance', 'a', 'usecase', 'is', 'a', 'specification', 'of', 'behavior', 'an', 'instance', 'of', 'a', 'usecase', 'refers', 'to', 'an', 'occurrence', 'of', 'the', 'emergent', 'behavior', 'that', 'conforms', 'to', 'the', 'corresponding', 'usecase', 'the', 'uml', 'standard', 'doe', 'not', 'define', 'the', 'scenario', 'but', 'scenario', 'is', 'a', 'common', 'term', 'in', 'use', 'case', 'literature', 'and', 'refer', 'to', 'a', 'general', 'sequence', 'of', 'event', 'mainstream', 'use', 'case', 'document', 'template', 'rely', 'heavily', 'on', 'scenario', 'e', 'g', 'main', 'scenario', 'and', 'alternative', 'scenario', 'for', 'variant', 'error', 'processing', 'or', 'exception', 'usual', 'atm', 'example', 'withdraw', 'cash', 'would', 'be', 'a', 'use', 'case', 'm', 'smith', 'withdraws', 'cash', 'on', 'october', 'at', 'am', 'at', 'the', 'atm', 'of', 'bank', 'y', 'for', 'an', 'amount', 'of', 'would', 'be', 'an', 'instance', 'of', 'the', 'use', 'case', 'i', 'e', 'a', 'specific', 'occurence', 'at', 'a', 'given', 'moment', 'in', 'time', 'with', 'a', 'specific', 'user', 'following', 'general', 'scenario', 'could', 'be', 'envisaged', 'for', 'the', 'use', 'case', 'use', 'of', 'a', 'bank', 'card', 'to', 'be', 'inserted', 'in', 'the', 'atm', 'use', 'of', 'a', 'contactless', 'card', 'or', 'atm', 'swallow', 'the', 'card', 'because', 'of', 'wrong', 'code', 'the', 'instance', 'may', 'correspond', 'to', 'one', 'of', 'those', 'scenario', 'but', 'a', 'same', 'scenario', 'could', 'happen', 'in', 'many', 'instance']",Building and Compiling Python Projects,4,"{'neg': 0.069, 'neu': 0.795, 'pos': 0.136, 'compound': 0.3802}",0.0,4,Building and Compiling Python Projects,3query
68789467,What are the TestCafe requirements for the HTML and Javascript used in a WebApp (i.e a Tomcat web app),"<p>The TestCafe docs lack any but the simplest requirements.</p>
<p>The web app i wrote in 2008-9 is XHMTL 1.0 syntax generated by
Freemarker templates under SpringFramework 2.5.x, that have lots
of forms and pages with excel like tables full of buttons,links,form+input, etc
in each row of the tables.</p>
<p>It uses a <code>onclick=&quot;...&quot;</code> javascript for conditional button behaviors
that do input validation on the form inputs, and other such, alert()s, etc.
I used css / class attribute only for formatting, but lots of <code>id=&quot;xxx&quot;</code>
and <code>getElementById(&quot;xxx&quot;)</code> in the javascript and update the DOM from .js
functions.  I did not user any javascript frameworks like Node.js or jquery.
I did use iFrames for printout frames.</p>
<p>I also have a few cases of Select menu B options map is dependent on a
Select Menu A choice, which causes dynamic replacement of the menu B options map.
The app has more than 150 unique pages, 5 user roles. The app works in Firefox,
Safari and IE11/Edge, Chrome.</p>
<p>Q: Can TestCafe test a WebApp implemented in this outdated manner?</p>
<p>Q: Can it handle the dynamic DOM modification made via javascript functions
invoked by <code>onclick=&quot; func()&quot; and onselect=&quot; func()&quot;</code> of button and select tags?</p>
<p>Q Can TestCafe <code>Selector()</code> use element ids to <code>find()</code> elements?
as the web app generates unique ids for link, button, input, etc, tags
in rows of the tables via freemarker template variables.</p>
",<javascript><testing><dynamic><testcafe><requirements>,2021-08-15 07:14:37,55,0,2,68799784,"<p>At present, TestCafe may have issues during testing of XHMTL pages (see <a href=""https://github.com/DevExpress/testcafe-hammerhead/issues/350"" rel=""nofollow noreferrer"">this page</a> for more information). I am not familiar with the Tomcat Web application. However, if this web application can be opened in a browser, TestCafe can operate with it.</p>
",2021-08,the testcafe docs lack any but the simplest requirements the web app i wrote in     is xhmtl     syntax generated by freemarker templates under springframework     x that have lots of forms and pages with excel like tables full of buttons links form input etc in each row of the tables it uses a onclick javascript for conditional button behaviors that do input validation on the form inputs and other such alert s etc i used css class attribute only for formatting but lots of id xxx and getelementbyid xxx in the javascript and update the dom from js functions i did not user any javascript frameworks like node js or jquery i did use iframes for printout frames i also have a few cases of select menu b options map is dependent on a select menu a choice which causes dynamic replacement of the menu b options map the app has more than   unique pages   user roles the app works in firefox safari and ie  edge chrome q can testcafe test a webapp implemented in this outdated manner q can it handle the dynamic dom modification made via javascript functions invoked by onclick func and onselect func of button and select tags q can testcafe selector use element ids to find elements as the web app generates unique ids for link button input etc tags in rows of the tables via freemarker template variables,at present testcafe may have issues during testing of xhmtl pages see this page for more information i am not familiar with the tomcat web application however if this web application can be opened in a browser testcafe can operate with it,"['javascript', 'testing', 'dynamic', 'testcafe', 'requirements']","['the', 'testcafe', 'docs', 'lack', 'any', 'but', 'the', 'simplest', 'requirements', 'the', 'web', 'app', 'i', 'wrote', 'in', 'is', 'xhmtl', 'syntax', 'generated', 'by', 'freemarker', 'templates', 'under', 'springframework', 'x', 'that', 'have', 'lots', 'of', 'forms', 'and', 'pages', 'with', 'excel', 'like', 'tables', 'full', 'of', 'buttons', 'links', 'form', 'input', 'etc', 'in', 'each', 'row', 'of', 'the', 'tables', 'it', 'uses', 'a', 'onclick', 'javascript', 'for', 'conditional', 'button', 'behaviors', 'that', 'do', 'input', 'validation', 'on', 'the', 'form', 'inputs', 'and', 'other', 'such', 'alert', 's', 'etc', 'i', 'used', 'css', 'class', 'attribute', 'only', 'for', 'formatting', 'but', 'lots', 'of', 'id', 'xxx', 'and', 'getelementbyid', 'xxx', 'in', 'the', 'javascript', 'and', 'update', 'the', 'dom', 'from', 'js', 'functions', 'i', 'did', 'not', 'user', 'any', 'javascript', 'frameworks', 'like', 'node', 'js', 'or', 'jquery', 'i', 'did', 'use', 'iframes', 'for', 'printout', 'frames', 'i', 'also', 'have', 'a', 'few', 'cases', 'of', 'select', 'menu', 'b', 'options', 'map', 'is', 'dependent', 'on', 'a', 'select', 'menu', 'a', 'choice', 'which', 'causes', 'dynamic', 'replacement', 'of', 'the', 'menu', 'b', 'options', 'map', 'the', 'app', 'has', 'more', 'than', 'unique', 'pages', 'user', 'roles', 'the', 'app', 'works', 'in', 'firefox', 'safari', 'and', 'ie', 'edge', 'chrome', 'q', 'can', 'testcafe', 'test', 'a', 'webapp', 'implemented', 'in', 'this', 'outdated', 'manner', 'q', 'can', 'it', 'handle', 'the', 'dynamic', 'dom', 'modification', 'made', 'via', 'javascript', 'functions', 'invoked', 'by', 'onclick', 'func', 'and', 'onselect', 'func', 'of', 'button', 'and', 'select', 'tags', 'q', 'can', 'testcafe', 'selector', 'use', 'element', 'ids', 'to', 'find', 'elements', 'as', 'the', 'web', 'app', 'generates', 'unique', 'ids', 'for', 'link', 'button', 'input', 'etc', 'tags', 'in', 'rows', 'of', 'the', 'tables', 'via', 'freemarker', 'template', 'variables']","['at', 'present', 'testcafe', 'may', 'have', 'issues', 'during', 'testing', 'of', 'xhmtl', 'pages', 'see', 'this', 'page', 'for', 'more', 'information', 'i', 'am', 'not', 'familiar', 'with', 'the', 'tomcat', 'web', 'application', 'however', 'if', 'this', 'web', 'application', 'can', 'be', 'opened', 'in', 'a', 'browser', 'testcafe', 'can', 'operate', 'with', 'it']","['testcafe', 'doc', 'lack', 'simplest', 'requirement', 'web', 'app', 'wrote', 'xhmtl', 'syntax', 'generated', 'freemarker', 'template', 'springframework', 'x', 'lot', 'form', 'page', 'excel', 'like', 'table', 'full', 'button', 'link', 'form', 'input', 'etc', 'row', 'table', 'us', 'onclick', 'javascript', 'conditional', 'button', 'behavior', 'input', 'validation', 'form', 'input', 'alert', 'etc', 'used', 'cs', 'class', 'attribute', 'formatting', 'lot', 'id', 'xxx', 'getelementbyid', 'xxx', 'javascript', 'update', 'dom', 'j', 'function', 'user', 'javascript', 'framework', 'like', 'node', 'j', 'jquery', 'use', 'iframes', 'printout', 'frame', 'also', 'case', 'select', 'menu', 'b', 'option', 'map', 'dependent', 'select', 'menu', 'choice', 'cause', 'dynamic', 'replacement', 'menu', 'b', 'option', 'map', 'app', 'ha', 'unique', 'page', 'user', 'role', 'app', 'work', 'firefox', 'safari', 'ie', 'edge', 'chrome', 'q', 'testcafe', 'test', 'webapp', 'implemented', 'outdated', 'manner', 'q', 'handle', 'dynamic', 'dom', 'modification', 'made', 'via', 'javascript', 'function', 'invoked', 'onclick', 'func', 'onselect', 'func', 'button', 'select', 'tag', 'q', 'testcafe', 'selector', 'use', 'element', 'id', 'find', 'element', 'web', 'app', 'generates', 'unique', 'id', 'link', 'button', 'input', 'etc', 'tag', 'row', 'table', 'via', 'freemarker', 'template', 'variable']","['at', 'present', 'testcafe', 'may', 'have', 'issue', 'during', 'testing', 'of', 'xhmtl', 'page', 'see', 'this', 'page', 'for', 'more', 'information', 'i', 'am', 'not', 'familiar', 'with', 'the', 'tomcat', 'web', 'application', 'however', 'if', 'this', 'web', 'application', 'can', 'be', 'opened', 'in', 'a', 'browser', 'testcafe', 'can', 'operate', 'with', 'it']",System Requirements and AWS,3,"{'neg': 0.007, 'neu': 0.915, 'pos': 0.077, 'compound': 0.9531}",0.07954545454545453,3,Python Package Installation and Management,3query
68789467,What are the TestCafe requirements for the HTML and Javascript used in a WebApp (i.e a Tomcat web app),"<p>The TestCafe docs lack any but the simplest requirements.</p>
<p>The web app i wrote in 2008-9 is XHMTL 1.0 syntax generated by
Freemarker templates under SpringFramework 2.5.x, that have lots
of forms and pages with excel like tables full of buttons,links,form+input, etc
in each row of the tables.</p>
<p>It uses a <code>onclick=&quot;...&quot;</code> javascript for conditional button behaviors
that do input validation on the form inputs, and other such, alert()s, etc.
I used css / class attribute only for formatting, but lots of <code>id=&quot;xxx&quot;</code>
and <code>getElementById(&quot;xxx&quot;)</code> in the javascript and update the DOM from .js
functions.  I did not user any javascript frameworks like Node.js or jquery.
I did use iFrames for printout frames.</p>
<p>I also have a few cases of Select menu B options map is dependent on a
Select Menu A choice, which causes dynamic replacement of the menu B options map.
The app has more than 150 unique pages, 5 user roles. The app works in Firefox,
Safari and IE11/Edge, Chrome.</p>
<p>Q: Can TestCafe test a WebApp implemented in this outdated manner?</p>
<p>Q: Can it handle the dynamic DOM modification made via javascript functions
invoked by <code>onclick=&quot; func()&quot; and onselect=&quot; func()&quot;</code> of button and select tags?</p>
<p>Q Can TestCafe <code>Selector()</code> use element ids to <code>find()</code> elements?
as the web app generates unique ids for link, button, input, etc, tags
in rows of the tables via freemarker template variables.</p>
",<javascript><testing><dynamic><testcafe><requirements>,2021-08-15 07:14:37,55,0,2,69199932,"<p>Q1) I don't have any insight on this question.</p>
<p>Q2) Yes. Look into async, await, and promises.</p>
<p>Q3) Yes. Any kind of attribute. You mentioned find() specifically, so look into: <a href=""https://testcafe.io/documentation/402750/reference/test-api/selector/find"" rel=""nofollow noreferrer"">https://testcafe.io/documentation/402750/reference/test-api/selector/find</a></p>
",2021-08,the testcafe docs lack any but the simplest requirements the web app i wrote in     is xhmtl     syntax generated by freemarker templates under springframework     x that have lots of forms and pages with excel like tables full of buttons links form input etc in each row of the tables it uses a onclick javascript for conditional button behaviors that do input validation on the form inputs and other such alert s etc i used css class attribute only for formatting but lots of id xxx and getelementbyid xxx in the javascript and update the dom from js functions i did not user any javascript frameworks like node js or jquery i did use iframes for printout frames i also have a few cases of select menu b options map is dependent on a select menu a choice which causes dynamic replacement of the menu b options map the app has more than   unique pages   user roles the app works in firefox safari and ie  edge chrome q can testcafe test a webapp implemented in this outdated manner q can it handle the dynamic dom modification made via javascript functions invoked by onclick func and onselect func of button and select tags q can testcafe selector use element ids to find elements as the web app generates unique ids for link button input etc tags in rows of the tables via freemarker template variables,q  i don t have any insight on this question q  yes look into async await and promises q  yes any kind of attribute you mentioned find specifically so look into https testcafe io documentation   reference test api selector find,"['javascript', 'testing', 'dynamic', 'testcafe', 'requirements']","['the', 'testcafe', 'docs', 'lack', 'any', 'but', 'the', 'simplest', 'requirements', 'the', 'web', 'app', 'i', 'wrote', 'in', 'is', 'xhmtl', 'syntax', 'generated', 'by', 'freemarker', 'templates', 'under', 'springframework', 'x', 'that', 'have', 'lots', 'of', 'forms', 'and', 'pages', 'with', 'excel', 'like', 'tables', 'full', 'of', 'buttons', 'links', 'form', 'input', 'etc', 'in', 'each', 'row', 'of', 'the', 'tables', 'it', 'uses', 'a', 'onclick', 'javascript', 'for', 'conditional', 'button', 'behaviors', 'that', 'do', 'input', 'validation', 'on', 'the', 'form', 'inputs', 'and', 'other', 'such', 'alert', 's', 'etc', 'i', 'used', 'css', 'class', 'attribute', 'only', 'for', 'formatting', 'but', 'lots', 'of', 'id', 'xxx', 'and', 'getelementbyid', 'xxx', 'in', 'the', 'javascript', 'and', 'update', 'the', 'dom', 'from', 'js', 'functions', 'i', 'did', 'not', 'user', 'any', 'javascript', 'frameworks', 'like', 'node', 'js', 'or', 'jquery', 'i', 'did', 'use', 'iframes', 'for', 'printout', 'frames', 'i', 'also', 'have', 'a', 'few', 'cases', 'of', 'select', 'menu', 'b', 'options', 'map', 'is', 'dependent', 'on', 'a', 'select', 'menu', 'a', 'choice', 'which', 'causes', 'dynamic', 'replacement', 'of', 'the', 'menu', 'b', 'options', 'map', 'the', 'app', 'has', 'more', 'than', 'unique', 'pages', 'user', 'roles', 'the', 'app', 'works', 'in', 'firefox', 'safari', 'and', 'ie', 'edge', 'chrome', 'q', 'can', 'testcafe', 'test', 'a', 'webapp', 'implemented', 'in', 'this', 'outdated', 'manner', 'q', 'can', 'it', 'handle', 'the', 'dynamic', 'dom', 'modification', 'made', 'via', 'javascript', 'functions', 'invoked', 'by', 'onclick', 'func', 'and', 'onselect', 'func', 'of', 'button', 'and', 'select', 'tags', 'q', 'can', 'testcafe', 'selector', 'use', 'element', 'ids', 'to', 'find', 'elements', 'as', 'the', 'web', 'app', 'generates', 'unique', 'ids', 'for', 'link', 'button', 'input', 'etc', 'tags', 'in', 'rows', 'of', 'the', 'tables', 'via', 'freemarker', 'template', 'variables']","['q', 'i', 'don', 't', 'have', 'any', 'insight', 'on', 'this', 'question', 'q', 'yes', 'look', 'into', 'async', 'await', 'and', 'promises', 'q', 'yes', 'any', 'kind', 'of', 'attribute', 'you', 'mentioned', 'find', 'specifically', 'so', 'look', 'into', 'https', 'testcafe', 'io', 'documentation', 'reference', 'test', 'api', 'selector', 'find']","['testcafe', 'doc', 'lack', 'simplest', 'requirement', 'web', 'app', 'wrote', 'xhmtl', 'syntax', 'generated', 'freemarker', 'template', 'springframework', 'x', 'lot', 'form', 'page', 'excel', 'like', 'table', 'full', 'button', 'link', 'form', 'input', 'etc', 'row', 'table', 'us', 'onclick', 'javascript', 'conditional', 'button', 'behavior', 'input', 'validation', 'form', 'input', 'alert', 'etc', 'used', 'cs', 'class', 'attribute', 'formatting', 'lot', 'id', 'xxx', 'getelementbyid', 'xxx', 'javascript', 'update', 'dom', 'j', 'function', 'user', 'javascript', 'framework', 'like', 'node', 'j', 'jquery', 'use', 'iframes', 'printout', 'frame', 'also', 'case', 'select', 'menu', 'b', 'option', 'map', 'dependent', 'select', 'menu', 'choice', 'cause', 'dynamic', 'replacement', 'menu', 'b', 'option', 'map', 'app', 'ha', 'unique', 'page', 'user', 'role', 'app', 'work', 'firefox', 'safari', 'ie', 'edge', 'chrome', 'q', 'testcafe', 'test', 'webapp', 'implemented', 'outdated', 'manner', 'q', 'handle', 'dynamic', 'dom', 'modification', 'made', 'via', 'javascript', 'function', 'invoked', 'onclick', 'func', 'onselect', 'func', 'button', 'select', 'tag', 'q', 'testcafe', 'selector', 'use', 'element', 'id', 'find', 'element', 'web', 'app', 'generates', 'unique', 'id', 'link', 'button', 'input', 'etc', 'tag', 'row', 'table', 'via', 'freemarker', 'template', 'variable']","['q', 'i', 'don', 't', 'have', 'any', 'insight', 'on', 'this', 'question', 'q', 'yes', 'look', 'into', 'async', 'await', 'and', 'promise', 'q', 'yes', 'any', 'kind', 'of', 'attribute', 'you', 'mentioned', 'find', 'specifically', 'so', 'look', 'into', 'http', 'testcafe', 'io', 'documentation', 'reference', 'test', 'api', 'selector', 'find']",System Requirements and AWS,3,"{'neg': 0.007, 'neu': 0.915, 'pos': 0.077, 'compound': 0.9531}",0.07954545454545453,3,Python Package Installation and Management,3query
68781332,Microservice design: change on data requirements or schema,"<p>Suppose we have 2 services, service A and service B. They are interact with each other with event sourcing. Service A publish event ( entity1 created with fields f1, f2, f3). Service B make own copy of entity1 with fields f1 and f2. Now how we can address this two scenario.</p>
<ol>
<li>New requirement in service 2 and needs for f3. How service2 must update its local data?</li>
<li>Schema change on service 1. how service 2 must update its local data and schema?</li>
</ol>
<p>In scenario 2, services are tightly coupled by schema and can causes errors and this has contradict with event sourcing goal. How can we address this problem?</p>
",<design-patterns><microservices><event-sourcing>,2021-08-14 07:42:34,133,0,1,68783220,"<p>For scenario 1, where the view of the entity changes to incorporate fields which were published to the event stream, the easiest thing is likely to be replaying the events (e.g. if the event stream is on Kafka, using a new consumer group with <code>auto.offset.reset=earliest</code>) with an event handler which uses the new field.  This can often be surprisingly quick, allowing you to run this rebuild in a time window where the previous version of the service is running; otherwise, you should be able to run the old instance of service B alongside the new instance (if they're writing to different DBs): when the new instance catches up, you shift whatever traffic is hitting service B to use the new instance and tear down the old (basically a blue-green deploy).</p>
<p>For the second scenario, there are some choices to make:</p>
<ul>
<li>You can define an <code>Entity1CreatedV2</code> event which fits the new schema (this is likely to require updating consumers to know about the new event first)</li>
<li>If the fields in the old schema are unchanged (i.e. the schema change is strictly additive), you can keep the old <code>Entity1Created</code> message and then have an event for the new fields.  Note that accomodating the schema change for existing entities in service A may drive you to this solution anyway, especially if there's no command-sourcing for service A going on (command-sourcing might allow you to pretend that the new schema was around forever).</li>
</ul>
",2021-08,suppose we have   services service a and service b they are interact with each other with event sourcing service a publish event entity  created with fields f  f  f  service b make own copy of entity  with fields f  and f  now how we can address this two scenario new requirement in service   and needs for f  how service  must update its local data schema change on service   how service   must update its local data and schema in scenario   services are tightly coupled by schema and can causes errors and this has contradict with event sourcing goal how can we address this problem,for scenario   where the view of the entity changes to incorporate fields which were published to the event stream the easiest thing is likely to be replaying the events e g if the event stream is on kafka using a new consumer group with auto offset reset earliest with an event handler which uses the new field this can often be surprisingly quick allowing you to run this rebuild in a time window where the previous version of the service is running otherwise you should be able to run the old instance of service b alongside the new instance if they re writing to different dbs when the new instance catches up you shift whatever traffic is hitting service b to use the new instance and tear down the old basically a blue green deploy for the second scenario there are some choices to make you can define an entity createdv  event which fits the new schema this is likely to require updating consumers to know about the new event first if the fields in the old schema are unchanged i e the schema change is strictly additive you can keep the old entity created message and then have an event for the new fields note that accomodating the schema change for existing entities in service a may drive you to this solution anyway especially if there s no command sourcing for service a going on command sourcing might allow you to pretend that the new schema was around forever,"['design-patterns', 'microservices', 'event-sourcing']","['suppose', 'we', 'have', 'services', 'service', 'a', 'and', 'service', 'b', 'they', 'are', 'interact', 'with', 'each', 'other', 'with', 'event', 'sourcing', 'service', 'a', 'publish', 'event', 'entity', 'created', 'with', 'fields', 'f', 'f', 'f', 'service', 'b', 'make', 'own', 'copy', 'of', 'entity', 'with', 'fields', 'f', 'and', 'f', 'now', 'how', 'we', 'can', 'address', 'this', 'two', 'scenario', 'new', 'requirement', 'in', 'service', 'and', 'needs', 'for', 'f', 'how', 'service', 'must', 'update', 'its', 'local', 'data', 'schema', 'change', 'on', 'service', 'how', 'service', 'must', 'update', 'its', 'local', 'data', 'and', 'schema', 'in', 'scenario', 'services', 'are', 'tightly', 'coupled', 'by', 'schema', 'and', 'can', 'causes', 'errors', 'and', 'this', 'has', 'contradict', 'with', 'event', 'sourcing', 'goal', 'how', 'can', 'we', 'address', 'this', 'problem']","['for', 'scenario', 'where', 'the', 'view', 'of', 'the', 'entity', 'changes', 'to', 'incorporate', 'fields', 'which', 'were', 'published', 'to', 'the', 'event', 'stream', 'the', 'easiest', 'thing', 'is', 'likely', 'to', 'be', 'replaying', 'the', 'events', 'e', 'g', 'if', 'the', 'event', 'stream', 'is', 'on', 'kafka', 'using', 'a', 'new', 'consumer', 'group', 'with', 'auto', 'offset', 'reset', 'earliest', 'with', 'an', 'event', 'handler', 'which', 'uses', 'the', 'new', 'field', 'this', 'can', 'often', 'be', 'surprisingly', 'quick', 'allowing', 'you', 'to', 'run', 'this', 'rebuild', 'in', 'a', 'time', 'window', 'where', 'the', 'previous', 'version', 'of', 'the', 'service', 'is', 'running', 'otherwise', 'you', 'should', 'be', 'able', 'to', 'run', 'the', 'old', 'instance', 'of', 'service', 'b', 'alongside', 'the', 'new', 'instance', 'if', 'they', 're', 'writing', 'to', 'different', 'dbs', 'when', 'the', 'new', 'instance', 'catches', 'up', 'you', 'shift', 'whatever', 'traffic', 'is', 'hitting', 'service', 'b', 'to', 'use', 'the', 'new', 'instance', 'and', 'tear', 'down', 'the', 'old', 'basically', 'a', 'blue', 'green', 'deploy', 'for', 'the', 'second', 'scenario', 'there', 'are', 'some', 'choices', 'to', 'make', 'you', 'can', 'define', 'an', 'entity', 'createdv', 'event', 'which', 'fits', 'the', 'new', 'schema', 'this', 'is', 'likely', 'to', 'require', 'updating', 'consumers', 'to', 'know', 'about', 'the', 'new', 'event', 'first', 'if', 'the', 'fields', 'in', 'the', 'old', 'schema', 'are', 'unchanged', 'i', 'e', 'the', 'schema', 'change', 'is', 'strictly', 'additive', 'you', 'can', 'keep', 'the', 'old', 'entity', 'created', 'message', 'and', 'then', 'have', 'an', 'event', 'for', 'the', 'new', 'fields', 'note', 'that', 'accomodating', 'the', 'schema', 'change', 'for', 'existing', 'entities', 'in', 'service', 'a', 'may', 'drive', 'you', 'to', 'this', 'solution', 'anyway', 'especially', 'if', 'there', 's', 'no', 'command', 'sourcing', 'for', 'service', 'a', 'going', 'on', 'command', 'sourcing', 'might', 'allow', 'you', 'to', 'pretend', 'that', 'the', 'new', 'schema', 'was', 'around', 'forever']","['suppose', 'service', 'service', 'service', 'b', 'interact', 'event', 'sourcing', 'service', 'publish', 'event', 'entity', 'created', 'field', 'f', 'f', 'f', 'service', 'b', 'make', 'copy', 'entity', 'field', 'f', 'f', 'address', 'two', 'scenario', 'new', 'requirement', 'service', 'need', 'f', 'service', 'must', 'update', 'local', 'data', 'schema', 'change', 'service', 'service', 'must', 'update', 'local', 'data', 'schema', 'scenario', 'service', 'tightly', 'coupled', 'schema', 'cause', 'error', 'ha', 'contradict', 'event', 'sourcing', 'goal', 'address', 'problem']","['for', 'scenario', 'where', 'the', 'view', 'of', 'the', 'entity', 'change', 'to', 'incorporate', 'field', 'which', 'were', 'published', 'to', 'the', 'event', 'stream', 'the', 'easiest', 'thing', 'is', 'likely', 'to', 'be', 'replaying', 'the', 'event', 'e', 'g', 'if', 'the', 'event', 'stream', 'is', 'on', 'kafka', 'using', 'a', 'new', 'consumer', 'group', 'with', 'auto', 'offset', 'reset', 'earliest', 'with', 'an', 'event', 'handler', 'which', 'us', 'the', 'new', 'field', 'this', 'can', 'often', 'be', 'surprisingly', 'quick', 'allowing', 'you', 'to', 'run', 'this', 'rebuild', 'in', 'a', 'time', 'window', 'where', 'the', 'previous', 'version', 'of', 'the', 'service', 'is', 'running', 'otherwise', 'you', 'should', 'be', 'able', 'to', 'run', 'the', 'old', 'instance', 'of', 'service', 'b', 'alongside', 'the', 'new', 'instance', 'if', 'they', 're', 'writing', 'to', 'different', 'db', 'when', 'the', 'new', 'instance', 'catch', 'up', 'you', 'shift', 'whatever', 'traffic', 'is', 'hitting', 'service', 'b', 'to', 'use', 'the', 'new', 'instance', 'and', 'tear', 'down', 'the', 'old', 'basically', 'a', 'blue', 'green', 'deploy', 'for', 'the', 'second', 'scenario', 'there', 'are', 'some', 'choice', 'to', 'make', 'you', 'can', 'define', 'an', 'entity', 'createdv', 'event', 'which', 'fit', 'the', 'new', 'schema', 'this', 'is', 'likely', 'to', 'require', 'updating', 'consumer', 'to', 'know', 'about', 'the', 'new', 'event', 'first', 'if', 'the', 'field', 'in', 'the', 'old', 'schema', 'are', 'unchanged', 'i', 'e', 'the', 'schema', 'change', 'is', 'strictly', 'additive', 'you', 'can', 'keep', 'the', 'old', 'entity', 'created', 'message', 'and', 'then', 'have', 'an', 'event', 'for', 'the', 'new', 'field', 'note', 'that', 'accomodating', 'the', 'schema', 'change', 'for', 'existing', 'entity', 'in', 'service', 'a', 'may', 'drive', 'you', 'to', 'this', 'solution', 'anyway', 'especially', 'if', 'there', 's', 'no', 'command', 'sourcing', 'for', 'service', 'a', 'going', 'on', 'command', 'sourcing', 'might', 'allow', 'you', 'to', 'pretend', 'that', 'the', 'new', 'schema', 'wa', 'around', 'forever']",System Requirements and AWS,3,"{'neg': 0.048, 'neu': 0.933, 'pos': 0.018, 'compound': -0.5007}",0.059285714285714275,3,Python Package Installation and Management,3query
65947614,How can I find the requirements for older TensorFlow versions?,"<p>Because right now, I am using the <a href=""https://web.archive.org/web/20201030140623if_/https://www.tensorflow.org/install/gpu"" rel=""nofollow noreferrer"">Wayback Machine</a>, which is absurd.
There <em>must</em> be a better way.</p>
<p><strong>For a given TensorFlow version, e.g. 2.1, how / where can I find the related software requirements?</strong></p>
<p>More specifically, which NVIDIA GPU Drivers, Cuda Toolkit and cuDNN are required.</p>
",<python><tensorflow><requirements>,2021-01-29 01:33:36,419,1,1,65947789,"<p>One way is, you can setup a virtual environment and install tensorflow 2.1</p>
<pre><code>$ pip install tensorflow==2.1.3
</code></pre>
<p>Then just calling the library in command line will show its dependencies</p>
<pre><code>$ tensorflow
</code></pre>
<p>Check <a href=""https://stackoverflow.com/questions/29751572/how-to-find-a-python-packages-dependencies"">this answer</a> for details.</p>
<hr />
<p>If you don't want to install the library,</p>
<ol>
<li>You can go to the <a href=""https://github.com/tensorflow/tensorflow/releases"" rel=""nofollow noreferrer"">TensorFlow releases</a>.</li>
<li>Select the specific package</li>
<li>And in the source code for the older version (will have to download its zip) in setup.py under REQUIRED_PACKAGES you can find the list.</li>
</ol>
<p>Example here (check the path shown below to find the file)- <a href=""https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/pip_package/setup.py"" rel=""nofollow noreferrer"">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/pip_package/setup.py</a></p>
<pre><code>REQUIRED_PACKAGES = [
    'absl-py ~= 0.10',
    'astunparse ~= 1.6.3',
    'flatbuffers ~= 1.12.0',
    'google_pasta ~= 0.2',
    'h5py ~= 3.1.0',
    'keras_preprocessing ~= 1.1.2',
    'numpy ~= 1.19.2',
    'opt_einsum ~= 3.3.0',
    'protobuf &gt;= 3.9.2',
    'six ~= 1.15.0',
    'termcolor ~= 1.1.0',
    'typing_extensions ~= 3.7.4',
    'wheel ~= 0.35',
    'wrapt ~= 1.12.1',
    # These packages need to be pinned exactly as newer versions are
    # incompatible with the rest of the ecosystem
    'gast == 0.4.0',
    # TensorFlow ecosystem packages that TF exposes API for
    # These need to be in sync with the existing TF version
    # They are updated during the release process
    # When updating these, please also update the nightly versions below
    'tensorboard ~= 2.4',
    'tensorflow_estimator ~= 2.3.0',
]
</code></pre>
",2021-01,because right now i am using the wayback machine which is absurd there must be a better way for a given tensorflow version e g     how where can i find the related software requirements more specifically which nvidia gpu drivers cuda toolkit and cudnn are required,one way is you can setup a virtual environment and install tensorflow     pip install tensorflow       then just calling the library in command line will show its dependencies tensorflow check this answer for details if you don t want to install the library you can go to the tensorflow releases select the specific package and in the source code for the older version will have to download its zip in setup py under required_packages you can find the list example here check the path shown below to find the file https github com tensorflow tensorflow blob master tensorflow tools pip_package setup py required_packages absl py     astunparse       flatbuffers       google_pasta     h py       keras_preprocessing       numpy       opt_einsum       protobuf       six       termcolor       typing_extensions       wheel     wrapt       these packages need to be pinned exactly as newer versions are incompatible with the rest of the ecosystem gast       tensorflow ecosystem packages that tf exposes api for these need to be in sync with the existing tf version they are updated during the release process when updating these please also update the nightly versions below tensorboard     tensorflow_estimator,"['python', 'tensorflow', 'requirements']","['because', 'right', 'now', 'i', 'am', 'using', 'the', 'wayback', 'machine', 'which', 'is', 'absurd', 'there', 'must', 'be', 'a', 'better', 'way', 'for', 'a', 'given', 'tensorflow', 'version', 'e', 'g', 'how', 'where', 'can', 'i', 'find', 'the', 'related', 'software', 'requirements', 'more', 'specifically', 'which', 'nvidia', 'gpu', 'drivers', 'cuda', 'toolkit', 'and', 'cudnn', 'are', 'required']","['one', 'way', 'is', 'you', 'can', 'setup', 'a', 'virtual', 'environment', 'and', 'install', 'tensorflow', 'pip', 'install', 'tensorflow', 'then', 'just', 'calling', 'the', 'library', 'in', 'command', 'line', 'will', 'show', 'its', 'dependencies', 'tensorflow', 'check', 'this', 'answer', 'for', 'details', 'if', 'you', 'don', 't', 'want', 'to', 'install', 'the', 'library', 'you', 'can', 'go', 'to', 'the', 'tensorflow', 'releases', 'select', 'the', 'specific', 'package', 'and', 'in', 'the', 'source', 'code', 'for', 'the', 'older', 'version', 'will', 'have', 'to', 'download', 'its', 'zip', 'in', 'setup', 'py', 'under', 'required_packages', 'you', 'can', 'find', 'the', 'list', 'example', 'here', 'check', 'the', 'path', 'shown', 'below', 'to', 'find', 'the', 'file', 'https', 'github', 'com', 'tensorflow', 'tensorflow', 'blob', 'master', 'tensorflow', 'tools', 'pip_package', 'setup', 'py', 'required_packages', 'absl', 'py', 'astunparse', 'flatbuffers', 'google_pasta', 'h', 'py', 'keras_preprocessing', 'numpy', 'opt_einsum', 'protobuf', 'six', 'termcolor', 'typing_extensions', 'wheel', 'wrapt', 'these', 'packages', 'need', 'to', 'be', 'pinned', 'exactly', 'as', 'newer', 'versions', 'are', 'incompatible', 'with', 'the', 'rest', 'of', 'the', 'ecosystem', 'gast', 'tensorflow', 'ecosystem', 'packages', 'that', 'tf', 'exposes', 'api', 'for', 'these', 'need', 'to', 'be', 'in', 'sync', 'with', 'the', 'existing', 'tf', 'version', 'they', 'are', 'updated', 'during', 'the', 'release', 'process', 'when', 'updating', 'these', 'please', 'also', 'update', 'the', 'nightly', 'versions', 'below', 'tensorboard', 'tensorflow_estimator']","['right', 'using', 'wayback', 'machine', 'absurd', 'must', 'better', 'way', 'given', 'tensorflow', 'version', 'e', 'g', 'find', 'related', 'software', 'requirement', 'specifically', 'nvidia', 'gpu', 'driver', 'cuda', 'toolkit', 'cudnn', 'required']","['one', 'way', 'is', 'you', 'can', 'setup', 'a', 'virtual', 'environment', 'and', 'install', 'tensorflow', 'pip', 'install', 'tensorflow', 'then', 'just', 'calling', 'the', 'library', 'in', 'command', 'line', 'will', 'show', 'it', 'dependency', 'tensorflow', 'check', 'this', 'answer', 'for', 'detail', 'if', 'you', 'don', 't', 'want', 'to', 'install', 'the', 'library', 'you', 'can', 'go', 'to', 'the', 'tensorflow', 'release', 'select', 'the', 'specific', 'package', 'and', 'in', 'the', 'source', 'code', 'for', 'the', 'older', 'version', 'will', 'have', 'to', 'download', 'it', 'zip', 'in', 'setup', 'py', 'under', 'required_packages', 'you', 'can', 'find', 'the', 'list', 'example', 'here', 'check', 'the', 'path', 'shown', 'below', 'to', 'find', 'the', 'file', 'http', 'github', 'com', 'tensorflow', 'tensorflow', 'blob', 'master', 'tensorflow', 'tool', 'pip_package', 'setup', 'py', 'required_packages', 'absl', 'py', 'astunparse', 'flatbuffers', 'google_pasta', 'h', 'py', 'keras_preprocessing', 'numpy', 'opt_einsum', 'protobuf', 'six', 'termcolor', 'typing_extensions', 'wheel', 'wrapt', 'these', 'package', 'need', 'to', 'be', 'pinned', 'exactly', 'a', 'newer', 'version', 'are', 'incompatible', 'with', 'the', 'rest', 'of', 'the', 'ecosystem', 'gast', 'tensorflow', 'ecosystem', 'package', 'that', 'tf', 'expose', 'api', 'for', 'these', 'need', 'to', 'be', 'in', 'sync', 'with', 'the', 'existing', 'tf', 'version', 'they', 'are', 'updated', 'during', 'the', 'release', 'process', 'when', 'updating', 'these', 'please', 'also', 'update', 'the', 'nightly', 'version', 'below', 'tensorboard', 'tensorflow_estimator']",Python Libraries and Environment,4,"{'neg': 0.0, 'neu': 0.938, 'pos': 0.062, 'compound': 0.4404}",0.07142857142857142,4,Building and Compiling Python Projects,3query
65833151,Adding version requirements in OSGI capability,"<p>Does OSGI capabilities support versioning and how does it work? Say I have a module with the following declared:</p>
<pre><code>Bundle-SymbolicName: my-module
Implementation-Version: 1.8.1-qualifier
Provide-Capability: org.foo.dependency;nameId=&quot;my-module&quot;,version=&quot;1.8.1-qualifier&quot;
</code></pre>
<p>Would I then be able to add this require to get the module above?</p>
<pre><code>Require-Capability: org.foo.dependency;filter:=&quot;&amp;(nameId=my-module)(version&gt;=1.8)&quot;
</code></pre>
<p>Is there also a way to leverage <code>Implementation-Version</code> on the manifest if it's already specified in the provider module? I see references to <code>osgi.wiring.bundle</code> <a href=""https://docs.osgi.org/specification/osgi.core/7.0.0/framework.namespaces.html#i1773242"" rel=""nofollow noreferrer"">here</a>. Would I be able to do this instead on the require:</p>
<pre><code>Require-Capability: org.foo.dependency;filter:=&quot;(nameId=my.module)&quot;,osgi.wiring.bundle;filter:=&quot;(bundle-version&gt;=1.8)&quot;
</code></pre>
<p>Appreciate any pointers on the subject matter.</p>
",<java><osgi><requirements><capability>,2021-01-21 17:57:17,129,0,1,65837281,"<p><code>1.8.1-qualifier</code> is not a valid <a href=""https://docs.osgi.org/specification/osgi.core/8.0.0/framework.module.html#i2655136"" rel=""nofollow noreferrer"">OSGi version</a>. <code>1.8.1.qualifier</code> is a valid OSGi version.</p>
<p><code>&amp;(nameId=my-module)(version&gt;=1.8)</code> is not a valid <a href=""https://docs.osgi.org/specification/osgi.core/8.0.0/framework.module.html#framework.module.filtersyntax"" rel=""nofollow noreferrer"">OSGi filter expression</a>. You need to surround with parenthesis. <code>(&amp;(nameId=my-module)(version&gt;=1.8))</code></p>
<p>You cannot use <code>Implementation-Version</code>, but you can use <code>Bundle-Version</code>.</p>
<pre><code>Bundle-SymbolicName: my-module
Bundle-Version: 1.8.1.qualifier

Require-Capability: osgi.wiring.bundle;filter:=&quot;(&amp;(osgi.wiring.bundle=my-module)(bundle-version&gt;=1.8))&quot;
</code></pre>
<p>See <a href=""https://docs.osgi.org/specification/osgi.core/8.0.0/framework.namespaces.html#framework.namespaces.osgi.wiring.bundle"" rel=""nofollow noreferrer"">https://docs.osgi.org/specification/osgi.core/8.0.0/framework.namespaces.html#framework.namespaces.osgi.wiring.bundle</a>.</p>
",2021-01,does osgi capabilities support versioning and how does it work say i have a module with the following declared bundle symbolicname my module implementation version       qualifier provide capability org foo dependency nameid my module version       qualifier would i then be able to add this require to get the module above require capability org foo dependency filter nameid my module version     is there also a way to leverage implementation version on the manifest if it s already specified in the provider module i see references to osgi wiring bundle here would i be able to do this instead on the require require capability org foo dependency filter nameid my module osgi wiring bundle filter bundle version     appreciate any pointers on the subject matter,qualifier is not a valid osgi version       qualifier is a valid osgi version nameid my module version     is not a valid osgi filter expression you need to surround with parenthesis nameid my module version     you cannot use implementation version but you can use bundle version bundle symbolicname my module bundle version       qualifier require capability osgi wiring bundle filter osgi wiring bundle my module bundle version     see https docs osgi org specification osgi core       framework namespaces html framework namespaces osgi wiring bundle,"['java', 'osgi', 'requirements', 'capability']","['does', 'osgi', 'capabilities', 'support', 'versioning', 'and', 'how', 'does', 'it', 'work', 'say', 'i', 'have', 'a', 'module', 'with', 'the', 'following', 'declared', 'bundle', 'symbolicname', 'my', 'module', 'implementation', 'version', 'qualifier', 'provide', 'capability', 'org', 'foo', 'dependency', 'nameid', 'my', 'module', 'version', 'qualifier', 'would', 'i', 'then', 'be', 'able', 'to', 'add', 'this', 'require', 'to', 'get', 'the', 'module', 'above', 'require', 'capability', 'org', 'foo', 'dependency', 'filter', 'nameid', 'my', 'module', 'version', 'is', 'there', 'also', 'a', 'way', 'to', 'leverage', 'implementation', 'version', 'on', 'the', 'manifest', 'if', 'it', 's', 'already', 'specified', 'in', 'the', 'provider', 'module', 'i', 'see', 'references', 'to', 'osgi', 'wiring', 'bundle', 'here', 'would', 'i', 'be', 'able', 'to', 'do', 'this', 'instead', 'on', 'the', 'require', 'require', 'capability', 'org', 'foo', 'dependency', 'filter', 'nameid', 'my', 'module', 'osgi', 'wiring', 'bundle', 'filter', 'bundle', 'version', 'appreciate', 'any', 'pointers', 'on', 'the', 'subject', 'matter']","['qualifier', 'is', 'not', 'a', 'valid', 'osgi', 'version', 'qualifier', 'is', 'a', 'valid', 'osgi', 'version', 'nameid', 'my', 'module', 'version', 'is', 'not', 'a', 'valid', 'osgi', 'filter', 'expression', 'you', 'need', 'to', 'surround', 'with', 'parenthesis', 'nameid', 'my', 'module', 'version', 'you', 'can', 'not', 'use', 'implementation', 'version', 'but', 'you', 'can', 'use', 'bundle', 'version', 'bundle', 'symbolicname', 'my', 'module', 'bundle', 'version', 'qualifier', 'require', 'capability', 'osgi', 'wiring', 'bundle', 'filter', 'osgi', 'wiring', 'bundle', 'my', 'module', 'bundle', 'version', 'see', 'https', 'docs', 'osgi', 'org', 'specification', 'osgi', 'core', 'framework', 'namespaces', 'html', 'framework', 'namespaces', 'osgi', 'wiring', 'bundle']","['doe', 'osgi', 'capability', 'support', 'versioning', 'doe', 'work', 'say', 'module', 'following', 'declared', 'bundle', 'symbolicname', 'module', 'implementation', 'version', 'qualifier', 'provide', 'capability', 'org', 'foo', 'dependency', 'nameid', 'module', 'version', 'qualifier', 'would', 'able', 'add', 'require', 'get', 'module', 'require', 'capability', 'org', 'foo', 'dependency', 'filter', 'nameid', 'module', 'version', 'also', 'way', 'leverage', 'implementation', 'version', 'manifest', 'already', 'specified', 'provider', 'module', 'see', 'reference', 'osgi', 'wiring', 'bundle', 'would', 'able', 'instead', 'require', 'require', 'capability', 'org', 'foo', 'dependency', 'filter', 'nameid', 'module', 'osgi', 'wiring', 'bundle', 'filter', 'bundle', 'version', 'appreciate', 'pointer', 'subject', 'matter']","['qualifier', 'is', 'not', 'a', 'valid', 'osgi', 'version', 'qualifier', 'is', 'a', 'valid', 'osgi', 'version', 'nameid', 'my', 'module', 'version', 'is', 'not', 'a', 'valid', 'osgi', 'filter', 'expression', 'you', 'need', 'to', 'surround', 'with', 'parenthesis', 'nameid', 'my', 'module', 'version', 'you', 'can', 'not', 'use', 'implementation', 'version', 'but', 'you', 'can', 'use', 'bundle', 'version', 'bundle', 'symbolicname', 'my', 'module', 'bundle', 'version', 'qualifier', 'require', 'capability', 'osgi', 'wiring', 'bundle', 'filter', 'osgi', 'wiring', 'bundle', 'my', 'module', 'bundle', 'version', 'see', 'http', 'doc', 'osgi', 'org', 'specification', 'osgi', 'core', 'framework', 'namespaces', 'html', 'framework', 'namespaces', 'osgi', 'wiring', 'bundle']",Package Management and File Handling,3,"{'neg': 0.0, 'neu': 0.963, 'pos': 0.037, 'compound': 0.5007}",0.20833333333333334,3,Python Package Installation and Management,3query
65744941,"Is providing the ability to violate ""shall"" requirement w/o generation of a diagnostic message a compiler bug / defect or feature?","<p>Context: The C standard does not classify diagnostic messages as &quot;warnings&quot; or &quot;errors&quot;.</p>
<p>Question: By treating certain &quot;diagnostic messages&quot; as &quot;warnings&quot; and by giving the ability to disable generation of warnings, certain compiler implementations allow to the end user to violate &quot;shall&quot; requirements of the C standard w/o generation of a diagnostic messages. Is this allowance a compiler bug / defect? If not, then how to correctly interpret this case? As a &quot;compiler feature that allows to violate &quot;shall&quot; requirement w/o generation of a diagnostic message&quot;?</p>
<p>Example:</p>
<pre><code>#pragma warning( disable : 34 )
typedef int T[];
int main()
{
    return sizeof(T);
}
</code></pre>
<pre><code>$ cl t28.c /Za
&lt;no diagnostic messages, the &quot;shall&quot; requirement [1] is silently violated&gt;
</code></pre>
<p>[1] ISO/IEC 9899:1990:</p>
<blockquote>
<p>The sizeof operator shall not be applied to an expression that has function type or an incomplete type.</p>
</blockquote>
<p>UPD.</p>
<ol>
<li>If <code>/Za</code> (Disable Language Extensions) is specified, then <code>__STDC__</code> is defined with definition 1.</li>
<li>According to <code>ANSI Conformance</code> page (<a href=""https://learn.microsoft.com/en-us/cpp/c-language/ansi-conformance?view=msvc-160"" rel=""nofollow noreferrer"">https://learn.microsoft.com/en-us/cpp/c-language/ansi-conformance?view=msvc-160</a>):</li>
</ol>
<blockquote>
<p>Microsoft C conforms to the standard for the C language as set forth in the 9899:1990 edition of the ANSI C standard.</p>
</blockquote>
<ol start=""3"">
<li>However, <code>cl</code> gives to the end user the ability to disable &quot;shall requirement originated&quot; warnings. Is it a compiler bug / defect or feature? Need to to correctly interpret this case.</li>
</ol>
",<c><constraints><compiler-warnings><requirements>,2021-01-15 23:41:25,53,0,2,65745241,"<p>C 2018 6.10.6 discusses the <code>#pragma</code> directive. Paragraph 1 says:</p>
<blockquote>
<p>… causes the implementation to behave in an implementation-defined manner. The behavior might cause translation to fail or cause the translator or the resulting program to behave in a non-conforming manner…</p>
</blockquote>
<p>That largely licenses the implementation to do anything it wants, as long as it documents it. If <code>#pragma warning( disable : 34 )</code> is documented to disable the warning, and that is what it does, then that is conforming.</p>
<p>Note in particular that the <code>#pragma</code> “might … cause the translator … to behave in a non-conforming manner.” So, doing something that is otherwise non-conforming because a pragma told you to is conforming.</p>
<p>(I think the original text should say that the <code>#pragma</code> may cause the translator or program to behave in an <strong>otherwise</strong> non-conforming manner. Because, as currently written, behaving in this documented non-conforming manner is conforming, not non-conforming.)</p>
",2021-01,context the c standard does not classify diagnostic messages as warnings or errors question by treating certain diagnostic messages as warnings and by giving the ability to disable generation of warnings certain compiler implementations allow to the end user to violate shall requirements of the c standard w o generation of a diagnostic messages is this allowance a compiler bug defect if not then how to correctly interpret this case as a compiler feature that allows to violate shall requirement w o generation of a diagnostic message example pragma warning disable   typedef int t int main return sizeof t cl t  c za no diagnostic messages the shall requirement   is silently violated   iso iec     the sizeof operator shall not be applied to an expression that has function type or an incomplete type upd if za disable language extensions is specified then __stdc__ is defined with definition   according to ansi conformance page https learn microsoft com en us cpp c language ansi conformance view msvc   microsoft c conforms to the standard for the c language as set forth in the     edition of the ansi c standard however cl gives to the end user the ability to disable shall requirement originated warnings is it a compiler bug defect or feature need to to correctly interpret this case,c         discusses the pragma directive paragraph   says causes the implementation to behave in an implementation defined manner the behavior might cause translation to fail or cause the translator or the resulting program to behave in a non conforming manner that largely licenses the implementation to do anything it wants as long as it documents it if pragma warning disable   is documented to disable the warning and that is what it does then that is conforming note in particular that the pragma might cause the translator to behave in a non conforming manner so doing something that is otherwise non conforming because a pragma told you to is conforming i think the original text should say that the pragma may cause the translator or program to behave in an otherwise non conforming manner because as currently written behaving in this documented non conforming manner is conforming not non conforming,"['c', 'constraints', 'compiler-warnings', 'requirements']","['context', 'the', 'c', 'standard', 'does', 'not', 'classify', 'diagnostic', 'messages', 'as', 'warnings', 'or', 'errors', 'question', 'by', 'treating', 'certain', 'diagnostic', 'messages', 'as', 'warnings', 'and', 'by', 'giving', 'the', 'ability', 'to', 'disable', 'generation', 'of', 'warnings', 'certain', 'compiler', 'implementations', 'allow', 'to', 'the', 'end', 'user', 'to', 'violate', 'shall', 'requirements', 'of', 'the', 'c', 'standard', 'w', 'o', 'generation', 'of', 'a', 'diagnostic', 'messages', 'is', 'this', 'allowance', 'a', 'compiler', 'bug', 'defect', 'if', 'not', 'then', 'how', 'to', 'correctly', 'interpret', 'this', 'case', 'as', 'a', 'compiler', 'feature', 'that', 'allows', 'to', 'violate', 'shall', 'requirement', 'w', 'o', 'generation', 'of', 'a', 'diagnostic', 'message', 'example', 'pragma', 'warning', 'disable', 'typedef', 'int', 't', 'int', 'main', 'return', 'sizeof', 't', 'cl', 't', 'c', 'za', 'no', 'diagnostic', 'messages', 'the', 'shall', 'requirement', 'is', 'silently', 'violated', 'iso', 'iec', 'the', 'sizeof', 'operator', 'shall', 'not', 'be', 'applied', 'to', 'an', 'expression', 'that', 'has', 'function', 'type', 'or', 'an', 'incomplete', 'type', 'upd', 'if', 'za', 'disable', 'language', 'extensions', 'is', 'specified', 'then', '__stdc__', 'is', 'defined', 'with', 'definition', 'according', 'to', 'ansi', 'conformance', 'page', 'https', 'learn', 'microsoft', 'com', 'en', 'us', 'cpp', 'c', 'language', 'ansi', 'conformance', 'view', 'msvc', 'microsoft', 'c', 'conforms', 'to', 'the', 'standard', 'for', 'the', 'c', 'language', 'as', 'set', 'forth', 'in', 'the', 'edition', 'of', 'the', 'ansi', 'c', 'standard', 'however', 'cl', 'gives', 'to', 'the', 'end', 'user', 'the', 'ability', 'to', 'disable', 'shall', 'requirement', 'originated', 'warnings', 'is', 'it', 'a', 'compiler', 'bug', 'defect', 'or', 'feature', 'need', 'to', 'to', 'correctly', 'interpret', 'this', 'case']","['c', 'discusses', 'the', 'pragma', 'directive', 'paragraph', 'says', 'causes', 'the', 'implementation', 'to', 'behave', 'in', 'an', 'implementation', 'defined', 'manner', 'the', 'behavior', 'might', 'cause', 'translation', 'to', 'fail', 'or', 'cause', 'the', 'translator', 'or', 'the', 'resulting', 'program', 'to', 'behave', 'in', 'a', 'non', 'conforming', 'manner', 'that', 'largely', 'licenses', 'the', 'implementation', 'to', 'do', 'anything', 'it', 'wants', 'as', 'long', 'as', 'it', 'documents', 'it', 'if', 'pragma', 'warning', 'disable', 'is', 'documented', 'to', 'disable', 'the', 'warning', 'and', 'that', 'is', 'what', 'it', 'does', 'then', 'that', 'is', 'conforming', 'note', 'in', 'particular', 'that', 'the', 'pragma', 'might', 'cause', 'the', 'translator', 'to', 'behave', 'in', 'a', 'non', 'conforming', 'manner', 'so', 'doing', 'something', 'that', 'is', 'otherwise', 'non', 'conforming', 'because', 'a', 'pragma', 'told', 'you', 'to', 'is', 'conforming', 'i', 'think', 'the', 'original', 'text', 'should', 'say', 'that', 'the', 'pragma', 'may', 'cause', 'the', 'translator', 'or', 'program', 'to', 'behave', 'in', 'an', 'otherwise', 'non', 'conforming', 'manner', 'because', 'as', 'currently', 'written', 'behaving', 'in', 'this', 'documented', 'non', 'conforming', 'manner', 'is', 'conforming', 'not', 'non', 'conforming']","['context', 'c', 'standard', 'doe', 'classify', 'diagnostic', 'message', 'warning', 'error', 'question', 'treating', 'certain', 'diagnostic', 'message', 'warning', 'giving', 'ability', 'disable', 'generation', 'warning', 'certain', 'compiler', 'implementation', 'allow', 'end', 'user', 'violate', 'shall', 'requirement', 'c', 'standard', 'w', 'generation', 'diagnostic', 'message', 'allowance', 'compiler', 'bug', 'defect', 'correctly', 'interpret', 'case', 'compiler', 'feature', 'allows', 'violate', 'shall', 'requirement', 'w', 'generation', 'diagnostic', 'message', 'example', 'pragma', 'warning', 'disable', 'typedef', 'int', 'int', 'main', 'return', 'sizeof', 'cl', 'c', 'za', 'diagnostic', 'message', 'shall', 'requirement', 'silently', 'violated', 'iso', 'iec', 'sizeof', 'operator', 'shall', 'applied', 'expression', 'ha', 'function', 'type', 'incomplete', 'type', 'upd', 'za', 'disable', 'language', 'extension', 'specified', '__stdc__', 'defined', 'definition', 'according', 'ansi', 'conformance', 'page', 'http', 'learn', 'microsoft', 'com', 'en', 'u', 'cpp', 'c', 'language', 'ansi', 'conformance', 'view', 'msvc', 'microsoft', 'c', 'conforms', 'standard', 'c', 'language', 'set', 'forth', 'edition', 'ansi', 'c', 'standard', 'however', 'cl', 'give', 'end', 'user', 'ability', 'disable', 'shall', 'requirement', 'originated', 'warning', 'compiler', 'bug', 'defect', 'feature', 'need', 'correctly', 'interpret', 'case']","['c', 'discus', 'the', 'pragma', 'directive', 'paragraph', 'say', 'cause', 'the', 'implementation', 'to', 'behave', 'in', 'an', 'implementation', 'defined', 'manner', 'the', 'behavior', 'might', 'cause', 'translation', 'to', 'fail', 'or', 'cause', 'the', 'translator', 'or', 'the', 'resulting', 'program', 'to', 'behave', 'in', 'a', 'non', 'conforming', 'manner', 'that', 'largely', 'license', 'the', 'implementation', 'to', 'do', 'anything', 'it', 'want', 'a', 'long', 'a', 'it', 'document', 'it', 'if', 'pragma', 'warning', 'disable', 'is', 'documented', 'to', 'disable', 'the', 'warning', 'and', 'that', 'is', 'what', 'it', 'doe', 'then', 'that', 'is', 'conforming', 'note', 'in', 'particular', 'that', 'the', 'pragma', 'might', 'cause', 'the', 'translator', 'to', 'behave', 'in', 'a', 'non', 'conforming', 'manner', 'so', 'doing', 'something', 'that', 'is', 'otherwise', 'non', 'conforming', 'because', 'a', 'pragma', 'told', 'you', 'to', 'is', 'conforming', 'i', 'think', 'the', 'original', 'text', 'should', 'say', 'that', 'the', 'pragma', 'may', 'cause', 'the', 'translator', 'or', 'program', 'to', 'behave', 'in', 'an', 'otherwise', 'non', 'conforming', 'manner', 'because', 'a', 'currently', 'written', 'behaving', 'in', 'this', 'documented', 'non', 'conforming', 'manner', 'is', 'conforming', 'not', 'non', 'conforming']",System Requirements and AWS,4,"{'neg': 0.073, 'neu': 0.869, 'pos': 0.058, 'compound': -0.6662}",0.08503401360544217,4,Building and Compiling Python Projects,3query
65744941,"Is providing the ability to violate ""shall"" requirement w/o generation of a diagnostic message a compiler bug / defect or feature?","<p>Context: The C standard does not classify diagnostic messages as &quot;warnings&quot; or &quot;errors&quot;.</p>
<p>Question: By treating certain &quot;diagnostic messages&quot; as &quot;warnings&quot; and by giving the ability to disable generation of warnings, certain compiler implementations allow to the end user to violate &quot;shall&quot; requirements of the C standard w/o generation of a diagnostic messages. Is this allowance a compiler bug / defect? If not, then how to correctly interpret this case? As a &quot;compiler feature that allows to violate &quot;shall&quot; requirement w/o generation of a diagnostic message&quot;?</p>
<p>Example:</p>
<pre><code>#pragma warning( disable : 34 )
typedef int T[];
int main()
{
    return sizeof(T);
}
</code></pre>
<pre><code>$ cl t28.c /Za
&lt;no diagnostic messages, the &quot;shall&quot; requirement [1] is silently violated&gt;
</code></pre>
<p>[1] ISO/IEC 9899:1990:</p>
<blockquote>
<p>The sizeof operator shall not be applied to an expression that has function type or an incomplete type.</p>
</blockquote>
<p>UPD.</p>
<ol>
<li>If <code>/Za</code> (Disable Language Extensions) is specified, then <code>__STDC__</code> is defined with definition 1.</li>
<li>According to <code>ANSI Conformance</code> page (<a href=""https://learn.microsoft.com/en-us/cpp/c-language/ansi-conformance?view=msvc-160"" rel=""nofollow noreferrer"">https://learn.microsoft.com/en-us/cpp/c-language/ansi-conformance?view=msvc-160</a>):</li>
</ol>
<blockquote>
<p>Microsoft C conforms to the standard for the C language as set forth in the 9899:1990 edition of the ANSI C standard.</p>
</blockquote>
<ol start=""3"">
<li>However, <code>cl</code> gives to the end user the ability to disable &quot;shall requirement originated&quot; warnings. Is it a compiler bug / defect or feature? Need to to correctly interpret this case.</li>
</ol>
",<c><constraints><compiler-warnings><requirements>,2021-01-15 23:41:25,53,0,2,65745707,"<p>&quot;shall&quot; (and &quot;shall not&quot;) requirements in the standard come in two distinct kinds: restrictions on the <em>program</em> and restrictions on the <em>implementation</em>.</p>
<p>Restrictions on the <em>implemention</em> are things the implementation must (or must not) do -- these may have mandatory diagnostics associated with them.</p>
<p>Restrictions on the <em>program</em> are in fact <em>freedoms</em> for the implementation -- they are things that -- if the program does them -- cause undefined behavior, so the implementation can do anything with them and still be conforming.</p>
<p>The example you have above &quot;The sizeof operator shall not be applied to an expression that &quot;... is a restriction on the <em>program</em>.  So a program that does that is not conforming and an implementation can do anything it wants (including treating it as an extension without any requirement for a flag or pragma) and still be conforming.</p>
",2021-01,context the c standard does not classify diagnostic messages as warnings or errors question by treating certain diagnostic messages as warnings and by giving the ability to disable generation of warnings certain compiler implementations allow to the end user to violate shall requirements of the c standard w o generation of a diagnostic messages is this allowance a compiler bug defect if not then how to correctly interpret this case as a compiler feature that allows to violate shall requirement w o generation of a diagnostic message example pragma warning disable   typedef int t int main return sizeof t cl t  c za no diagnostic messages the shall requirement   is silently violated   iso iec     the sizeof operator shall not be applied to an expression that has function type or an incomplete type upd if za disable language extensions is specified then __stdc__ is defined with definition   according to ansi conformance page https learn microsoft com en us cpp c language ansi conformance view msvc   microsoft c conforms to the standard for the c language as set forth in the     edition of the ansi c standard however cl gives to the end user the ability to disable shall requirement originated warnings is it a compiler bug defect or feature need to to correctly interpret this case,shall and shall not requirements in the standard come in two distinct kinds restrictions on the program and restrictions on the implementation restrictions on the implemention are things the implementation must or must not do these may have mandatory diagnostics associated with them restrictions on the program are in fact freedoms for the implementation they are things that if the program does them cause undefined behavior so the implementation can do anything with them and still be conforming the example you have above the sizeof operator shall not be applied to an expression that is a restriction on the program so a program that does that is not conforming and an implementation can do anything it wants including treating it as an extension without any requirement for a flag or pragma and still be conforming,"['c', 'constraints', 'compiler-warnings', 'requirements']","['context', 'the', 'c', 'standard', 'does', 'not', 'classify', 'diagnostic', 'messages', 'as', 'warnings', 'or', 'errors', 'question', 'by', 'treating', 'certain', 'diagnostic', 'messages', 'as', 'warnings', 'and', 'by', 'giving', 'the', 'ability', 'to', 'disable', 'generation', 'of', 'warnings', 'certain', 'compiler', 'implementations', 'allow', 'to', 'the', 'end', 'user', 'to', 'violate', 'shall', 'requirements', 'of', 'the', 'c', 'standard', 'w', 'o', 'generation', 'of', 'a', 'diagnostic', 'messages', 'is', 'this', 'allowance', 'a', 'compiler', 'bug', 'defect', 'if', 'not', 'then', 'how', 'to', 'correctly', 'interpret', 'this', 'case', 'as', 'a', 'compiler', 'feature', 'that', 'allows', 'to', 'violate', 'shall', 'requirement', 'w', 'o', 'generation', 'of', 'a', 'diagnostic', 'message', 'example', 'pragma', 'warning', 'disable', 'typedef', 'int', 't', 'int', 'main', 'return', 'sizeof', 't', 'cl', 't', 'c', 'za', 'no', 'diagnostic', 'messages', 'the', 'shall', 'requirement', 'is', 'silently', 'violated', 'iso', 'iec', 'the', 'sizeof', 'operator', 'shall', 'not', 'be', 'applied', 'to', 'an', 'expression', 'that', 'has', 'function', 'type', 'or', 'an', 'incomplete', 'type', 'upd', 'if', 'za', 'disable', 'language', 'extensions', 'is', 'specified', 'then', '__stdc__', 'is', 'defined', 'with', 'definition', 'according', 'to', 'ansi', 'conformance', 'page', 'https', 'learn', 'microsoft', 'com', 'en', 'us', 'cpp', 'c', 'language', 'ansi', 'conformance', 'view', 'msvc', 'microsoft', 'c', 'conforms', 'to', 'the', 'standard', 'for', 'the', 'c', 'language', 'as', 'set', 'forth', 'in', 'the', 'edition', 'of', 'the', 'ansi', 'c', 'standard', 'however', 'cl', 'gives', 'to', 'the', 'end', 'user', 'the', 'ability', 'to', 'disable', 'shall', 'requirement', 'originated', 'warnings', 'is', 'it', 'a', 'compiler', 'bug', 'defect', 'or', 'feature', 'need', 'to', 'to', 'correctly', 'interpret', 'this', 'case']","['shall', 'and', 'shall', 'not', 'requirements', 'in', 'the', 'standard', 'come', 'in', 'two', 'distinct', 'kinds', 'restrictions', 'on', 'the', 'program', 'and', 'restrictions', 'on', 'the', 'implementation', 'restrictions', 'on', 'the', 'implemention', 'are', 'things', 'the', 'implementation', 'must', 'or', 'must', 'not', 'do', 'these', 'may', 'have', 'mandatory', 'diagnostics', 'associated', 'with', 'them', 'restrictions', 'on', 'the', 'program', 'are', 'in', 'fact', 'freedoms', 'for', 'the', 'implementation', 'they', 'are', 'things', 'that', 'if', 'the', 'program', 'does', 'them', 'cause', 'undefined', 'behavior', 'so', 'the', 'implementation', 'can', 'do', 'anything', 'with', 'them', 'and', 'still', 'be', 'conforming', 'the', 'example', 'you', 'have', 'above', 'the', 'sizeof', 'operator', 'shall', 'not', 'be', 'applied', 'to', 'an', 'expression', 'that', 'is', 'a', 'restriction', 'on', 'the', 'program', 'so', 'a', 'program', 'that', 'does', 'that', 'is', 'not', 'conforming', 'and', 'an', 'implementation', 'can', 'do', 'anything', 'it', 'wants', 'including', 'treating', 'it', 'as', 'an', 'extension', 'without', 'any', 'requirement', 'for', 'a', 'flag', 'or', 'pragma', 'and', 'still', 'be', 'conforming']","['context', 'c', 'standard', 'doe', 'classify', 'diagnostic', 'message', 'warning', 'error', 'question', 'treating', 'certain', 'diagnostic', 'message', 'warning', 'giving', 'ability', 'disable', 'generation', 'warning', 'certain', 'compiler', 'implementation', 'allow', 'end', 'user', 'violate', 'shall', 'requirement', 'c', 'standard', 'w', 'generation', 'diagnostic', 'message', 'allowance', 'compiler', 'bug', 'defect', 'correctly', 'interpret', 'case', 'compiler', 'feature', 'allows', 'violate', 'shall', 'requirement', 'w', 'generation', 'diagnostic', 'message', 'example', 'pragma', 'warning', 'disable', 'typedef', 'int', 'int', 'main', 'return', 'sizeof', 'cl', 'c', 'za', 'diagnostic', 'message', 'shall', 'requirement', 'silently', 'violated', 'iso', 'iec', 'sizeof', 'operator', 'shall', 'applied', 'expression', 'ha', 'function', 'type', 'incomplete', 'type', 'upd', 'za', 'disable', 'language', 'extension', 'specified', '__stdc__', 'defined', 'definition', 'according', 'ansi', 'conformance', 'page', 'http', 'learn', 'microsoft', 'com', 'en', 'u', 'cpp', 'c', 'language', 'ansi', 'conformance', 'view', 'msvc', 'microsoft', 'c', 'conforms', 'standard', 'c', 'language', 'set', 'forth', 'edition', 'ansi', 'c', 'standard', 'however', 'cl', 'give', 'end', 'user', 'ability', 'disable', 'shall', 'requirement', 'originated', 'warning', 'compiler', 'bug', 'defect', 'feature', 'need', 'correctly', 'interpret', 'case']","['shall', 'and', 'shall', 'not', 'requirement', 'in', 'the', 'standard', 'come', 'in', 'two', 'distinct', 'kind', 'restriction', 'on', 'the', 'program', 'and', 'restriction', 'on', 'the', 'implementation', 'restriction', 'on', 'the', 'implemention', 'are', 'thing', 'the', 'implementation', 'must', 'or', 'must', 'not', 'do', 'these', 'may', 'have', 'mandatory', 'diagnostics', 'associated', 'with', 'them', 'restriction', 'on', 'the', 'program', 'are', 'in', 'fact', 'freedom', 'for', 'the', 'implementation', 'they', 'are', 'thing', 'that', 'if', 'the', 'program', 'doe', 'them', 'cause', 'undefined', 'behavior', 'so', 'the', 'implementation', 'can', 'do', 'anything', 'with', 'them', 'and', 'still', 'be', 'conforming', 'the', 'example', 'you', 'have', 'above', 'the', 'sizeof', 'operator', 'shall', 'not', 'be', 'applied', 'to', 'an', 'expression', 'that', 'is', 'a', 'restriction', 'on', 'the', 'program', 'so', 'a', 'program', 'that', 'doe', 'that', 'is', 'not', 'conforming', 'and', 'an', 'implementation', 'can', 'do', 'anything', 'it', 'want', 'including', 'treating', 'it', 'a', 'an', 'extension', 'without', 'any', 'requirement', 'for', 'a', 'flag', 'or', 'pragma', 'and', 'still', 'be', 'conforming']",System Requirements and AWS,4,"{'neg': 0.073, 'neu': 0.869, 'pos': 0.058, 'compound': -0.6662}",0.08503401360544217,4,Building and Compiling Python Projects,3query
65736410,pipenv deleted libraries from my virtual environment?,"<p>I am using Homebrew-installed <code>pipenv</code> to manage my virtual environments for Python projects. I navigate to my Python project's folder and use the <code>pipenv shell</code> command to activate the venv.</p>
<p>It has worked fine, until today when I noticed that I can't run my app.py from within the shell using the <code>python3 app.py</code> command. I get the <code>ModuleNotFoundError: No module named 'flask'</code> right from line 1.</p>
<p>When I run <code>which python3</code> and <code>which pip3</code>, I see the expected response that specifies that I'm within my venv. When I run <code>pip3 list</code>, I only see <code>pip</code>, <code>setuptools</code> and <code>wheel</code>.</p>
<p>This is odd, because just very recently everything has worked fine (1-2 weeks ago?), and I'm positive that I personally didn't do anything that would mess with the libraries/requirements.</p>
<p>The Pipfile still lists all the requirements as expected. So how come they got deleted from my virtual environment?</p>
<p>I understand that I can just redownload all of the requirements; I'm just curious about why this happened in the first place.</p>
<p>UPDATE: I just realised that I did change the name of the folder which contains the project; I assume this is the cause. Since I've redownloaded the requirements already, does that mean I now have duplicates existing somewhere? If so, where?</p>
",<python><pipenv><requirements><pipfile>,2021-01-15 12:47:42,270,0,1,65793232,"<p>If you moved/renamed the folder where you created your virtual env, then the next time you try to activate the virtual env there, Pipenv will create a brand new virtual env. This is because Pipenv creates the actual virtual env folders <strong>based on the full path to the project directory</strong>. This is noted in the docs:</p>
<p><a href=""https://pipenv-fork.readthedocs.io/en/latest/install.html#virtualenv-mapping-caveat"" rel=""nofollow noreferrer"">https://pipenv-fork.readthedocs.io/en/latest/install.html#virtualenv-mapping-caveat</a></p>
<blockquote>
<ul>
<li>Pipenv automatically maps projects to their specific virtualenvs.</li>
<li>The virtualenv is stored globally with the name of the project’s root directory plus the hash of the full path to the project’s root (e.g., <code>my_project-a3de50</code>).</li>
<li><strong>If you change your project’s path, you break such a default mapping and pipenv will no longer be able to find and to use the project’s virtualenv.</strong></li>
</ul>
</blockquote>
<p>Emphasis on the 3rd bullet. So it didn't delete your packages, it basically created a new one. You should have also seen a notice that it was creating a new one:</p>
<pre class=""lang-none prettyprint-override""><code>demo$ pipenv shell
Launching subshell in virtual environment...
...

(demo) demo$ 
exit
demo$ cd ..
~$ mv demo demo2
~$ cd demo2

demo2$ pipenv shell
Creating a virtualenv for this project...
...

(demo2) demo2$ 
</code></pre>
<p>That &quot;Creating a virtualenv...&quot; means it's creating a new one.</p>
<p>Now, on to:</p>
<blockquote>
<p>does that mean I now have duplicates existing somewhere? If so, where?</p>
</blockquote>
<p>It means you still have your previous virtual env folder somewhere, where you previously installed your packages. You can try using the <a href=""https://pipenv.pypa.io/en/latest/cli/#cmdoption-pipenv-venv"" rel=""nofollow noreferrer""><code>--venv</code></a> option to get the top-level directory where Pipenv creates all virtual env folders. In your new env:</p>
<pre class=""lang-none prettyprint-override""><code>(demo2) demo2$ pipenv --venv
/Users/gino.mempin/.venvs/demo2-4Y1NLH_X
</code></pre>
<p>As mentioned, the virtual env folder here is <code>demo2-4Y1NLH_X</code>, and the top-level folder is (for my case) <code>.venvs</code>. The default is something like <em>/.local/share/</em> or whatever you set <code>WORKON_HOME</code> to (see <a href=""https://pipenv.pypa.io/en/latest/advanced/#custom-virtual-environment-location"" rel=""nofollow noreferrer"">Custom Virtual Environment Location</a>). Just run the <code>--venv</code> for yourself.</p>
<p>You can try going there, and it will list all the virtual envs you have created:</p>
<pre class=""lang-none prettyprint-override""><code>(demo2) demo2$ ls /Users/gino.mempin/.venvs
demo-tSf-ZA7f
demo2-4Y1NLH_X
some-other-project-ABJaje5
another-project-8WUmE08m
...
</code></pre>
<p>Here, if you are lucky, you can find the name of your old folder, and then simply delete it if you want to cleanup. If you are unlucky, there'll be multiple folders with the same name, and you won't be able to tell which one was your old folder.</p>
<pre class=""lang-none prettyprint-override""><code>(demo2) demo2$ ls /Users/gino.mempin/.venvs
demo-tSf-ZA7f
demo-7I2ki6rH
demo-8WUmE08m
demo2-4Y1NLH_X
</code></pre>
<p>There is currently no way to get the full path to the original directly from the virtual env folder-hash itself. (See related: <a href=""https://stackoverflow.com/q/65126606/2745495"">How to remove all pipenv virtualenvs when the directory was deleted?</a>). There is also no way to reuse your old virtual env and copy it to your new one. But you don't need to anyway, creating virtual envs is inexpensive, just recreate it and reinstall all previous packages.</p>
",2021-01,i am using homebrew installed pipenv to manage my virtual environments for python projects i navigate to my python project s folder and use the pipenv shell command to activate the venv it has worked fine until today when i noticed that i can t run my app py from within the shell using the python  app py command i get the modulenotfounderror no module named flask right from line   when i run which python  and which pip  i see the expected response that specifies that i m within my venv when i run pip  list i only see pip setuptools and wheel this is odd because just very recently everything has worked fine     weeks ago and i m positive that i personally didn t do anything that would mess with the libraries requirements the pipfile still lists all the requirements as expected so how come they got deleted from my virtual environment i understand that i can just redownload all of the requirements i m just curious about why this happened in the first place update i just realised that i did change the name of the folder which contains the project i assume this is the cause since i ve redownloaded the requirements already does that mean i now have duplicates existing somewhere if so where,if you moved renamed the folder where you created your virtual env then the next time you try to activate the virtual env there pipenv will create a brand new virtual env this is because pipenv creates the actual virtual env folders based on the full path to the project directory this is noted in the docs https pipenv fork readthedocs io en latest install html virtualenv mapping caveat pipenv automatically maps projects to their specific virtualenvs the virtualenv is stored globally with the name of the project s root directory plus the hash of the full path to the project s root e g my_project a de  if you change your project s path you break such a default mapping and pipenv will no longer be able to find and to use the project s virtualenv emphasis on the  rd bullet so it didn t delete your packages it basically created a new one you should have also seen a notice that it was creating a new one demo pipenv shell launching subshell in virtual environment demo demo exit demo cd mv demo demo  cd demo  demo  pipenv shell creating a virtualenv for this project demo  demo  that creating a virtualenv means it s creating a new one now on to does that mean i now have duplicates existing somewhere if so where it means you still have your previous virtual env folder somewhere where you previously installed your packages you can try using the venv option to get the top level directory where pipenv creates all virtual env folders in your new env demo  demo  pipenv venv users gino mempin venvs demo   y nlh_x as mentioned the virtual env folder here is demo   y nlh_x and the top level folder is for my case venvs the default is something like local share or whatever you set workon_home to see custom virtual environment location just run the venv for yourself you can try going there and it will list all the virtual envs you have created demo  demo  ls users gino mempin venvs demo tsf za f demo   y nlh_x some other project abjaje  another project  wume m here if you are lucky you can find the name of your old folder and then simply delete it if you want to cleanup if you are unlucky there ll be multiple folders with the same name and you won t be able to tell which one was your old folder demo  demo  ls users gino mempin venvs demo tsf za f demo  i ki rh demo  wume m demo   y nlh_x there is currently no way to get the full path to the original directly from the virtual env folder hash itself see related how to remove all pipenv virtualenvs when the directory was deleted there is also no way to reuse your old virtual env and copy it to your new one but you don t need to anyway creating virtual envs is inexpensive just recreate it and reinstall all previous packages,"['python', 'pipenv', 'requirements', 'pipfile']","['i', 'am', 'using', 'homebrew', 'installed', 'pipenv', 'to', 'manage', 'my', 'virtual', 'environments', 'for', 'python', 'projects', 'i', 'navigate', 'to', 'my', 'python', 'project', 's', 'folder', 'and', 'use', 'the', 'pipenv', 'shell', 'command', 'to', 'activate', 'the', 'venv', 'it', 'has', 'worked', 'fine', 'until', 'today', 'when', 'i', 'noticed', 'that', 'i', 'can', 't', 'run', 'my', 'app', 'py', 'from', 'within', 'the', 'shell', 'using', 'the', 'python', 'app', 'py', 'command', 'i', 'get', 'the', 'modulenotfounderror', 'no', 'module', 'named', 'flask', 'right', 'from', 'line', 'when', 'i', 'run', 'which', 'python', 'and', 'which', 'pip', 'i', 'see', 'the', 'expected', 'response', 'that', 'specifies', 'that', 'i', 'm', 'within', 'my', 'venv', 'when', 'i', 'run', 'pip', 'list', 'i', 'only', 'see', 'pip', 'setuptools', 'and', 'wheel', 'this', 'is', 'odd', 'because', 'just', 'very', 'recently', 'everything', 'has', 'worked', 'fine', 'weeks', 'ago', 'and', 'i', 'm', 'positive', 'that', 'i', 'personally', 'didn', 't', 'do', 'anything', 'that', 'would', 'mess', 'with', 'the', 'libraries', 'requirements', 'the', 'pipfile', 'still', 'lists', 'all', 'the', 'requirements', 'as', 'expected', 'so', 'how', 'come', 'they', 'got', 'deleted', 'from', 'my', 'virtual', 'environment', 'i', 'understand', 'that', 'i', 'can', 'just', 'redownload', 'all', 'of', 'the', 'requirements', 'i', 'm', 'just', 'curious', 'about', 'why', 'this', 'happened', 'in', 'the', 'first', 'place', 'update', 'i', 'just', 'realised', 'that', 'i', 'did', 'change', 'the', 'name', 'of', 'the', 'folder', 'which', 'contains', 'the', 'project', 'i', 'assume', 'this', 'is', 'the', 'cause', 'since', 'i', 've', 'redownloaded', 'the', 'requirements', 'already', 'does', 'that', 'mean', 'i', 'now', 'have', 'duplicates', 'existing', 'somewhere', 'if', 'so', 'where']","['if', 'you', 'moved', 'renamed', 'the', 'folder', 'where', 'you', 'created', 'your', 'virtual', 'env', 'then', 'the', 'next', 'time', 'you', 'try', 'to', 'activate', 'the', 'virtual', 'env', 'there', 'pipenv', 'will', 'create', 'a', 'brand', 'new', 'virtual', 'env', 'this', 'is', 'because', 'pipenv', 'creates', 'the', 'actual', 'virtual', 'env', 'folders', 'based', 'on', 'the', 'full', 'path', 'to', 'the', 'project', 'directory', 'this', 'is', 'noted', 'in', 'the', 'docs', 'https', 'pipenv', 'fork', 'readthedocs', 'io', 'en', 'latest', 'install', 'html', 'virtualenv', 'mapping', 'caveat', 'pipenv', 'automatically', 'maps', 'projects', 'to', 'their', 'specific', 'virtualenvs', 'the', 'virtualenv', 'is', 'stored', 'globally', 'with', 'the', 'name', 'of', 'the', 'project', 's', 'root', 'directory', 'plus', 'the', 'hash', 'of', 'the', 'full', 'path', 'to', 'the', 'project', 's', 'root', 'e', 'g', 'my_project', 'a', 'de', 'if', 'you', 'change', 'your', 'project', 's', 'path', 'you', 'break', 'such', 'a', 'default', 'mapping', 'and', 'pipenv', 'will', 'no', 'longer', 'be', 'able', 'to', 'find', 'and', 'to', 'use', 'the', 'project', 's', 'virtualenv', 'emphasis', 'on', 'the', 'rd', 'bullet', 'so', 'it', 'didn', 't', 'delete', 'your', 'packages', 'it', 'basically', 'created', 'a', 'new', 'one', 'you', 'should', 'have', 'also', 'seen', 'a', 'notice', 'that', 'it', 'was', 'creating', 'a', 'new', 'one', 'demo', 'pipenv', 'shell', 'launching', 'subshell', 'in', 'virtual', 'environment', 'demo', 'demo', 'exit', 'demo', 'cd', 'mv', 'demo', 'demo', 'cd', 'demo', 'demo', 'pipenv', 'shell', 'creating', 'a', 'virtualenv', 'for', 'this', 'project', 'demo', 'demo', 'that', 'creating', 'a', 'virtualenv', 'means', 'it', 's', 'creating', 'a', 'new', 'one', 'now', 'on', 'to', 'does', 'that', 'mean', 'i', 'now', 'have', 'duplicates', 'existing', 'somewhere', 'if', 'so', 'where', 'it', 'means', 'you', 'still', 'have', 'your', 'previous', 'virtual', 'env', 'folder', 'somewhere', 'where', 'you', 'previously', 'installed', 'your', 'packages', 'you', 'can', 'try', 'using', 'the', 'venv', 'option', 'to', 'get', 'the', 'top', 'level', 'directory', 'where', 'pipenv', 'creates', 'all', 'virtual', 'env', 'folders', 'in', 'your', 'new', 'env', 'demo', 'demo', 'pipenv', 'venv', 'users', 'gino', 'mempin', 'venvs', 'demo', 'y', 'nlh_x', 'as', 'mentioned', 'the', 'virtual', 'env', 'folder', 'here', 'is', 'demo', 'y', 'nlh_x', 'and', 'the', 'top', 'level', 'folder', 'is', 'for', 'my', 'case', 'venvs', 'the', 'default', 'is', 'something', 'like', 'local', 'share', 'or', 'whatever', 'you', 'set', 'workon_home', 'to', 'see', 'custom', 'virtual', 'environment', 'location', 'just', 'run', 'the', 'venv', 'for', 'yourself', 'you', 'can', 'try', 'going', 'there', 'and', 'it', 'will', 'list', 'all', 'the', 'virtual', 'envs', 'you', 'have', 'created', 'demo', 'demo', 'ls', 'users', 'gino', 'mempin', 'venvs', 'demo', 'tsf', 'za', 'f', 'demo', 'y', 'nlh_x', 'some', 'other', 'project', 'abjaje', 'another', 'project', 'wume', 'm', 'here', 'if', 'you', 'are', 'lucky', 'you', 'can', 'find', 'the', 'name', 'of', 'your', 'old', 'folder', 'and', 'then', 'simply', 'delete', 'it', 'if', 'you', 'want', 'to', 'cleanup', 'if', 'you', 'are', 'unlucky', 'there', 'll', 'be', 'multiple', 'folders', 'with', 'the', 'same', 'name', 'and', 'you', 'won', 't', 'be', 'able', 'to', 'tell', 'which', 'one', 'was', 'your', 'old', 'folder', 'demo', 'demo', 'ls', 'users', 'gino', 'mempin', 'venvs', 'demo', 'tsf', 'za', 'f', 'demo', 'i', 'ki', 'rh', 'demo', 'wume', 'm', 'demo', 'y', 'nlh_x', 'there', 'is', 'currently', 'no', 'way', 'to', 'get', 'the', 'full', 'path', 'to', 'the', 'original', 'directly', 'from', 'the', 'virtual', 'env', 'folder', 'hash', 'itself', 'see', 'related', 'how', 'to', 'remove', 'all', 'pipenv', 'virtualenvs', 'when', 'the', 'directory', 'was', 'deleted', 'there', 'is', 'also', 'no', 'way', 'to', 'reuse', 'your', 'old', 'virtual', 'env', 'and', 'copy', 'it', 'to', 'your', 'new', 'one', 'but', 'you', 'don', 't', 'need', 'to', 'anyway', 'creating', 'virtual', 'envs', 'is', 'inexpensive', 'just', 'recreate', 'it', 'and', 'reinstall', 'all', 'previous', 'packages']","['using', 'homebrew', 'installed', 'pipenv', 'manage', 'virtual', 'environment', 'python', 'project', 'navigate', 'python', 'project', 'folder', 'use', 'pipenv', 'shell', 'command', 'activate', 'venv', 'ha', 'worked', 'fine', 'today', 'noticed', 'run', 'app', 'py', 'within', 'shell', 'using', 'python', 'app', 'py', 'command', 'get', 'modulenotfounderror', 'module', 'named', 'flask', 'right', 'line', 'run', 'python', 'pip', 'see', 'expected', 'response', 'specifies', 'within', 'venv', 'run', 'pip', 'list', 'see', 'pip', 'setuptools', 'wheel', 'odd', 'recently', 'everything', 'ha', 'worked', 'fine', 'week', 'ago', 'positive', 'personally', 'anything', 'would', 'mess', 'library', 'requirement', 'pipfile', 'still', 'list', 'requirement', 'expected', 'come', 'got', 'deleted', 'virtual', 'environment', 'understand', 'redownload', 'requirement', 'curious', 'happened', 'first', 'place', 'update', 'realised', 'change', 'name', 'folder', 'contains', 'project', 'assume', 'cause', 'since', 'redownloaded', 'requirement', 'already', 'doe', 'mean', 'duplicate', 'existing', 'somewhere']","['if', 'you', 'moved', 'renamed', 'the', 'folder', 'where', 'you', 'created', 'your', 'virtual', 'env', 'then', 'the', 'next', 'time', 'you', 'try', 'to', 'activate', 'the', 'virtual', 'env', 'there', 'pipenv', 'will', 'create', 'a', 'brand', 'new', 'virtual', 'env', 'this', 'is', 'because', 'pipenv', 'creates', 'the', 'actual', 'virtual', 'env', 'folder', 'based', 'on', 'the', 'full', 'path', 'to', 'the', 'project', 'directory', 'this', 'is', 'noted', 'in', 'the', 'doc', 'http', 'pipenv', 'fork', 'readthedocs', 'io', 'en', 'latest', 'install', 'html', 'virtualenv', 'mapping', 'caveat', 'pipenv', 'automatically', 'map', 'project', 'to', 'their', 'specific', 'virtualenvs', 'the', 'virtualenv', 'is', 'stored', 'globally', 'with', 'the', 'name', 'of', 'the', 'project', 's', 'root', 'directory', 'plus', 'the', 'hash', 'of', 'the', 'full', 'path', 'to', 'the', 'project', 's', 'root', 'e', 'g', 'my_project', 'a', 'de', 'if', 'you', 'change', 'your', 'project', 's', 'path', 'you', 'break', 'such', 'a', 'default', 'mapping', 'and', 'pipenv', 'will', 'no', 'longer', 'be', 'able', 'to', 'find', 'and', 'to', 'use', 'the', 'project', 's', 'virtualenv', 'emphasis', 'on', 'the', 'rd', 'bullet', 'so', 'it', 'didn', 't', 'delete', 'your', 'package', 'it', 'basically', 'created', 'a', 'new', 'one', 'you', 'should', 'have', 'also', 'seen', 'a', 'notice', 'that', 'it', 'wa', 'creating', 'a', 'new', 'one', 'demo', 'pipenv', 'shell', 'launching', 'subshell', 'in', 'virtual', 'environment', 'demo', 'demo', 'exit', 'demo', 'cd', 'mv', 'demo', 'demo', 'cd', 'demo', 'demo', 'pipenv', 'shell', 'creating', 'a', 'virtualenv', 'for', 'this', 'project', 'demo', 'demo', 'that', 'creating', 'a', 'virtualenv', 'mean', 'it', 's', 'creating', 'a', 'new', 'one', 'now', 'on', 'to', 'doe', 'that', 'mean', 'i', 'now', 'have', 'duplicate', 'existing', 'somewhere', 'if', 'so', 'where', 'it', 'mean', 'you', 'still', 'have', 'your', 'previous', 'virtual', 'env', 'folder', 'somewhere', 'where', 'you', 'previously', 'installed', 'your', 'package', 'you', 'can', 'try', 'using', 'the', 'venv', 'option', 'to', 'get', 'the', 'top', 'level', 'directory', 'where', 'pipenv', 'creates', 'all', 'virtual', 'env', 'folder', 'in', 'your', 'new', 'env', 'demo', 'demo', 'pipenv', 'venv', 'user', 'gino', 'mempin', 'venvs', 'demo', 'y', 'nlh_x', 'a', 'mentioned', 'the', 'virtual', 'env', 'folder', 'here', 'is', 'demo', 'y', 'nlh_x', 'and', 'the', 'top', 'level', 'folder', 'is', 'for', 'my', 'case', 'venvs', 'the', 'default', 'is', 'something', 'like', 'local', 'share', 'or', 'whatever', 'you', 'set', 'workon_home', 'to', 'see', 'custom', 'virtual', 'environment', 'location', 'just', 'run', 'the', 'venv', 'for', 'yourself', 'you', 'can', 'try', 'going', 'there', 'and', 'it', 'will', 'list', 'all', 'the', 'virtual', 'envs', 'you', 'have', 'created', 'demo', 'demo', 'l', 'user', 'gino', 'mempin', 'venvs', 'demo', 'tsf', 'za', 'f', 'demo', 'y', 'nlh_x', 'some', 'other', 'project', 'abjaje', 'another', 'project', 'wume', 'm', 'here', 'if', 'you', 'are', 'lucky', 'you', 'can', 'find', 'the', 'name', 'of', 'your', 'old', 'folder', 'and', 'then', 'simply', 'delete', 'it', 'if', 'you', 'want', 'to', 'cleanup', 'if', 'you', 'are', 'unlucky', 'there', 'll', 'be', 'multiple', 'folder', 'with', 'the', 'same', 'name', 'and', 'you', 'won', 't', 'be', 'able', 'to', 'tell', 'which', 'one', 'wa', 'your', 'old', 'folder', 'demo', 'demo', 'l', 'user', 'gino', 'mempin', 'venvs', 'demo', 'tsf', 'za', 'f', 'demo', 'i', 'ki', 'rh', 'demo', 'wume', 'm', 'demo', 'y', 'nlh_x', 'there', 'is', 'currently', 'no', 'way', 'to', 'get', 'the', 'full', 'path', 'to', 'the', 'original', 'directly', 'from', 'the', 'virtual', 'env', 'folder', 'hash', 'itself', 'see', 'related', 'how', 'to', 'remove', 'all', 'pipenv', 'virtualenvs', 'when', 'the', 'directory', 'wa', 'deleted', 'there', 'is', 'also', 'no', 'way', 'to', 'reuse', 'your', 'old', 'virtual', 'env', 'and', 'copy', 'it', 'to', 'your', 'new', 'one', 'but', 'you', 'don', 't', 'need', 'to', 'anyway', 'creating', 'virtual', 'envs', 'is', 'inexpensive', 'just', 'recreate', 'it', 'and', 'reinstall', 'all', 'previous', 'package']",System Requirements and AWS,3,"{'neg': 0.034, 'neu': 0.915, 'pos': 0.051, 'compound': 0.5362}",0.04586811997526284,3,Python Package Installation and Management,3query
65332828,Functional Requirement vs Non-Functional Requirement for Uber Application,"<p>What is the difference between the functional requirement and non-functional requirement for Uber application?</p>
",<uber-api><requirements><system-requirements>,2020-12-16 23:55:53,2578,2,1,65333161,"<p><strong>Regardless UberApi (or any product or technology)</strong></p>
<p>The terms are <strong>general terms</strong>.</p>
<p>If you have a client that asks you to develop an <strong>e-commerce web site</strong> that will be reached by customers thousands of times every minute, then based on this example:</p>
<p><strong>Functional</strong> Requirements are:</p>
<ol>
<li>Customer should be able to list products</li>
<li>Customer should be able to place order</li>
<li>Customer should be able to pay by card</li>
</ol>
<p>and so on</p>
<p><strong>Non-functional</strong> Requirements (Technical Requirement)</p>
<ol>
<li>The Site should be able to serve a huge number of customers at the
same time without problems.</li>
<li>The site should be secure enough because there will be sensitive data.</li>
</ol>
<p>and so on</p>
<p>So you can consider <strong>functional</strong> as the Domain(Business) requirements while the <strong>non-functional</strong> as the supportive requirements.</p>
",2020-12,what is the difference between the functional requirement and non functional requirement for uber application,regardless uberapi or any product or technology the terms are general terms if you have a client that asks you to develop an e commerce web site that will be reached by customers thousands of times every minute then based on this example functional requirements are customer should be able to list products customer should be able to place order customer should be able to pay by card and so on non functional requirements technical requirement the site should be able to serve a huge number of customers at the same time without problems the site should be secure enough because there will be sensitive data and so on so you can consider functional as the domain business requirements while the non functional as the supportive requirements,"['uber-api', 'requirements', 'system-requirements']","['what', 'is', 'the', 'difference', 'between', 'the', 'functional', 'requirement', 'and', 'non', 'functional', 'requirement', 'for', 'uber', 'application']","['regardless', 'uberapi', 'or', 'any', 'product', 'or', 'technology', 'the', 'terms', 'are', 'general', 'terms', 'if', 'you', 'have', 'a', 'client', 'that', 'asks', 'you', 'to', 'develop', 'an', 'e', 'commerce', 'web', 'site', 'that', 'will', 'be', 'reached', 'by', 'customers', 'thousands', 'of', 'times', 'every', 'minute', 'then', 'based', 'on', 'this', 'example', 'functional', 'requirements', 'are', 'customer', 'should', 'be', 'able', 'to', 'list', 'products', 'customer', 'should', 'be', 'able', 'to', 'place', 'order', 'customer', 'should', 'be', 'able', 'to', 'pay', 'by', 'card', 'and', 'so', 'on', 'non', 'functional', 'requirements', 'technical', 'requirement', 'the', 'site', 'should', 'be', 'able', 'to', 'serve', 'a', 'huge', 'number', 'of', 'customers', 'at', 'the', 'same', 'time', 'without', 'problems', 'the', 'site', 'should', 'be', 'secure', 'enough', 'because', 'there', 'will', 'be', 'sensitive', 'data', 'and', 'so', 'on', 'so', 'you', 'can', 'consider', 'functional', 'as', 'the', 'domain', 'business', 'requirements', 'while', 'the', 'non', 'functional', 'as', 'the', 'supportive', 'requirements']","['difference', 'functional', 'requirement', 'non', 'functional', 'requirement', 'uber', 'application']","['regardless', 'uberapi', 'or', 'any', 'product', 'or', 'technology', 'the', 'term', 'are', 'general', 'term', 'if', 'you', 'have', 'a', 'client', 'that', 'asks', 'you', 'to', 'develop', 'an', 'e', 'commerce', 'web', 'site', 'that', 'will', 'be', 'reached', 'by', 'customer', 'thousand', 'of', 'time', 'every', 'minute', 'then', 'based', 'on', 'this', 'example', 'functional', 'requirement', 'are', 'customer', 'should', 'be', 'able', 'to', 'list', 'product', 'customer', 'should', 'be', 'able', 'to', 'place', 'order', 'customer', 'should', 'be', 'able', 'to', 'pay', 'by', 'card', 'and', 'so', 'on', 'non', 'functional', 'requirement', 'technical', 'requirement', 'the', 'site', 'should', 'be', 'able', 'to', 'serve', 'a', 'huge', 'number', 'of', 'customer', 'at', 'the', 'same', 'time', 'without', 'problem', 'the', 'site', 'should', 'be', 'secure', 'enough', 'because', 'there', 'will', 'be', 'sensitive', 'data', 'and', 'so', 'on', 'so', 'you', 'can', 'consider', 'functional', 'a', 'the', 'domain', 'business', 'requirement', 'while', 'the', 'non', 'functional', 'a', 'the', 'supportive', 'requirement']",Python Libraries and Environment,2,"{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}",0.0,2,Python Libraries and Environment,3query
65127894,How far IEEE 754 can be violated for the goal of performance increase?,"<p>As we know, the practice &quot;not fully IEEE 754 conformant, but faster&quot; exists. This is what compilers optionally do (options related to <code>floating-point model</code> or <code>floating-point behavior</code>).
However, which exactly IEEE 754 requirements can never be violated? Is there any addendum describing these aspects (i.e. &quot;how far optimizing IEEE 754 implementations can go?&quot;).</p>
",<c><optimization><floating-point><ieee-754><requirements>,2020-12-03 14:27:53,75,0,2,65128063,"<p><a href=""https://en.wikipedia.org/wiki/IEEE_754"" rel=""nofollow noreferrer"">Wikipedia</a> gives a few directions/clues:</p>
<ul>
<li><p>The <a href=""https://en.wikipedia.org/wiki/IEEE_754#Extended_and_extendable_precision_formats"" rel=""nofollow noreferrer"">extended precision formats</a> are optional.</p>
</li>
<li><p>There are <a href=""https://en.wikipedia.org/wiki/IEEE_754#Recommendations"" rel=""nofollow noreferrer"">recommendations</a> which are not required.</p>
</li>
</ul>
<p>Other parts of this Wikipedia entry describes required functionality.</p>
",2020-12,as we know the practice not fully ieee   conformant but faster exists this is what compilers optionally do options related to floating point model or floating point behavior however which exactly ieee   requirements can never be violated is there any addendum describing these aspects i e how far optimizing ieee   implementations can go,wikipedia gives a few directions clues the extended precision formats are optional there are recommendations which are not required other parts of this wikipedia entry describes required functionality,"['c', 'optimization', 'floating-point', 'ieee-754', 'requirements']","['as', 'we', 'know', 'the', 'practice', 'not', 'fully', 'ieee', 'conformant', 'but', 'faster', 'exists', 'this', 'is', 'what', 'compilers', 'optionally', 'do', 'options', 'related', 'to', 'floating', 'point', 'model', 'or', 'floating', 'point', 'behavior', 'however', 'which', 'exactly', 'ieee', 'requirements', 'can', 'never', 'be', 'violated', 'is', 'there', 'any', 'addendum', 'describing', 'these', 'aspects', 'i', 'e', 'how', 'far', 'optimizing', 'ieee', 'implementations', 'can', 'go']","['wikipedia', 'gives', 'a', 'few', 'directions', 'clues', 'the', 'extended', 'precision', 'formats', 'are', 'optional', 'there', 'are', 'recommendations', 'which', 'are', 'not', 'required', 'other', 'parts', 'of', 'this', 'wikipedia', 'entry', 'describes', 'required', 'functionality']","['know', 'practice', 'fully', 'ieee', 'conformant', 'faster', 'exists', 'compiler', 'optionally', 'option', 'related', 'floating', 'point', 'model', 'floating', 'point', 'behavior', 'however', 'exactly', 'ieee', 'requirement', 'never', 'violated', 'addendum', 'describing', 'aspect', 'e', 'far', 'optimizing', 'ieee', 'implementation', 'go']","['wikipedia', 'give', 'a', 'few', 'direction', 'clue', 'the', 'extended', 'precision', 'format', 'are', 'optional', 'there', 'are', 'recommendation', 'which', 'are', 'not', 'required', 'other', 'part', 'of', 'this', 'wikipedia', 'entry', 'describes', 'required', 'functionality']",System Requirements and AWS,4,"{'neg': 0.0, 'neu': 0.864, 'pos': 0.136, 'compound': 0.8412}",0.11666666666666665,4,Building and Compiling Python Projects,3query
65127894,How far IEEE 754 can be violated for the goal of performance increase?,"<p>As we know, the practice &quot;not fully IEEE 754 conformant, but faster&quot; exists. This is what compilers optionally do (options related to <code>floating-point model</code> or <code>floating-point behavior</code>).
However, which exactly IEEE 754 requirements can never be violated? Is there any addendum describing these aspects (i.e. &quot;how far optimizing IEEE 754 implementations can go?&quot;).</p>
",<c><optimization><floating-point><ieee-754><requirements>,2020-12-03 14:27:53,75,0,2,65128555,"<blockquote>
<p>As we know, the practice &quot;not fully IEEE 754 conformant, but faster&quot; exists. This is what compilers optionally do (options related to floating-point model or floating-point behavior). However, which exactly IEEE 754 requirements can never be violated?</p>
</blockquote>
<p>This mostly devolves into a discussion about how much you can get away with before the words &quot;not fully&quot; aren't appropriate anymore. If you want to take things very literally, you could just have a sign bit (that conforms to IEEE 754) and nothing else (no exponent, no significant) and still say &quot;not fully compliant&quot; and be technically correct; but in this case most people would complain that the amount of &quot;not fully compliant&quot; is so close to &quot;not compliant&quot; that it's misleading.</p>
<p>To avoid being misleading; &quot;not fully compliant&quot; is closer to &quot;compliant enough for most things in practice&quot;, but this really depends on the implementation and should be interpreted as such (e.g. probably should be taken to mean &quot;read the compiler's manual&quot;).</p>
<p>Note that often &quot;not fully compliant&quot; actually means it pretends that subnormals are zero, and/or that signaling NaNs aren't supported, and/or that precision is higher than it should be (e.g. 80-bit floating point used for intermediate results causing more accurate final results than you would get if it was fully compliant).</p>
<p>Also; often compilers will offer a third &quot;fast math&quot; option that is even faster (and even less compliant), and don't use the words &quot;not fully compliant&quot; for this case. When that happens it makes sense for &quot;not fully compliant&quot; to be more of a middle ground between &quot;fast math&quot; and &quot;fully compliant&quot;.</p>
",2020-12,as we know the practice not fully ieee   conformant but faster exists this is what compilers optionally do options related to floating point model or floating point behavior however which exactly ieee   requirements can never be violated is there any addendum describing these aspects i e how far optimizing ieee   implementations can go,as we know the practice not fully ieee   conformant but faster exists this is what compilers optionally do options related to floating point model or floating point behavior however which exactly ieee   requirements can never be violated this mostly devolves into a discussion about how much you can get away with before the words not fully aren t appropriate anymore if you want to take things very literally you could just have a sign bit that conforms to ieee   and nothing else no exponent no significant and still say not fully compliant and be technically correct but in this case most people would complain that the amount of not fully compliant is so close to not compliant that it s misleading to avoid being misleading not fully compliant is closer to compliant enough for most things in practice but this really depends on the implementation and should be interpreted as such e g probably should be taken to mean read the compiler s manual note that often not fully compliant actually means it pretends that subnormals are zero and or that signaling nans aren t supported and or that precision is higher than it should be e g   bit floating point used for intermediate results causing more accurate final results than you would get if it was fully compliant also often compilers will offer a third fast math option that is even faster and even less compliant and don t use the words not fully compliant for this case when that happens it makes sense for not fully compliant to be more of a middle ground between fast math and fully compliant,"['c', 'optimization', 'floating-point', 'ieee-754', 'requirements']","['as', 'we', 'know', 'the', 'practice', 'not', 'fully', 'ieee', 'conformant', 'but', 'faster', 'exists', 'this', 'is', 'what', 'compilers', 'optionally', 'do', 'options', 'related', 'to', 'floating', 'point', 'model', 'or', 'floating', 'point', 'behavior', 'however', 'which', 'exactly', 'ieee', 'requirements', 'can', 'never', 'be', 'violated', 'is', 'there', 'any', 'addendum', 'describing', 'these', 'aspects', 'i', 'e', 'how', 'far', 'optimizing', 'ieee', 'implementations', 'can', 'go']","['as', 'we', 'know', 'the', 'practice', 'not', 'fully', 'ieee', 'conformant', 'but', 'faster', 'exists', 'this', 'is', 'what', 'compilers', 'optionally', 'do', 'options', 'related', 'to', 'floating', 'point', 'model', 'or', 'floating', 'point', 'behavior', 'however', 'which', 'exactly', 'ieee', 'requirements', 'can', 'never', 'be', 'violated', 'this', 'mostly', 'devolves', 'into', 'a', 'discussion', 'about', 'how', 'much', 'you', 'can', 'get', 'away', 'with', 'before', 'the', 'words', 'not', 'fully', 'aren', 't', 'appropriate', 'anymore', 'if', 'you', 'want', 'to', 'take', 'things', 'very', 'literally', 'you', 'could', 'just', 'have', 'a', 'sign', 'bit', 'that', 'conforms', 'to', 'ieee', 'and', 'nothing', 'else', 'no', 'exponent', 'no', 'significant', 'and', 'still', 'say', 'not', 'fully', 'compliant', 'and', 'be', 'technically', 'correct', 'but', 'in', 'this', 'case', 'most', 'people', 'would', 'complain', 'that', 'the', 'amount', 'of', 'not', 'fully', 'compliant', 'is', 'so', 'close', 'to', 'not', 'compliant', 'that', 'it', 's', 'misleading', 'to', 'avoid', 'being', 'misleading', 'not', 'fully', 'compliant', 'is', 'closer', 'to', 'compliant', 'enough', 'for', 'most', 'things', 'in', 'practice', 'but', 'this', 'really', 'depends', 'on', 'the', 'implementation', 'and', 'should', 'be', 'interpreted', 'as', 'such', 'e', 'g', 'probably', 'should', 'be', 'taken', 'to', 'mean', 'read', 'the', 'compiler', 's', 'manual', 'note', 'that', 'often', 'not', 'fully', 'compliant', 'actually', 'means', 'it', 'pretends', 'that', 'subnormals', 'are', 'zero', 'and', 'or', 'that', 'signaling', 'nans', 'aren', 't', 'supported', 'and', 'or', 'that', 'precision', 'is', 'higher', 'than', 'it', 'should', 'be', 'e', 'g', 'bit', 'floating', 'point', 'used', 'for', 'intermediate', 'results', 'causing', 'more', 'accurate', 'final', 'results', 'than', 'you', 'would', 'get', 'if', 'it', 'was', 'fully', 'compliant', 'also', 'often', 'compilers', 'will', 'offer', 'a', 'third', 'fast', 'math', 'option', 'that', 'is', 'even', 'faster', 'and', 'even', 'less', 'compliant', 'and', 'don', 't', 'use', 'the', 'words', 'not', 'fully', 'compliant', 'for', 'this', 'case', 'when', 'that', 'happens', 'it', 'makes', 'sense', 'for', 'not', 'fully', 'compliant', 'to', 'be', 'more', 'of', 'a', 'middle', 'ground', 'between', 'fast', 'math', 'and', 'fully', 'compliant']","['know', 'practice', 'fully', 'ieee', 'conformant', 'faster', 'exists', 'compiler', 'optionally', 'option', 'related', 'floating', 'point', 'model', 'floating', 'point', 'behavior', 'however', 'exactly', 'ieee', 'requirement', 'never', 'violated', 'addendum', 'describing', 'aspect', 'e', 'far', 'optimizing', 'ieee', 'implementation', 'go']","['a', 'we', 'know', 'the', 'practice', 'not', 'fully', 'ieee', 'conformant', 'but', 'faster', 'exists', 'this', 'is', 'what', 'compiler', 'optionally', 'do', 'option', 'related', 'to', 'floating', 'point', 'model', 'or', 'floating', 'point', 'behavior', 'however', 'which', 'exactly', 'ieee', 'requirement', 'can', 'never', 'be', 'violated', 'this', 'mostly', 'devolves', 'into', 'a', 'discussion', 'about', 'how', 'much', 'you', 'can', 'get', 'away', 'with', 'before', 'the', 'word', 'not', 'fully', 'aren', 't', 'appropriate', 'anymore', 'if', 'you', 'want', 'to', 'take', 'thing', 'very', 'literally', 'you', 'could', 'just', 'have', 'a', 'sign', 'bit', 'that', 'conforms', 'to', 'ieee', 'and', 'nothing', 'else', 'no', 'exponent', 'no', 'significant', 'and', 'still', 'say', 'not', 'fully', 'compliant', 'and', 'be', 'technically', 'correct', 'but', 'in', 'this', 'case', 'most', 'people', 'would', 'complain', 'that', 'the', 'amount', 'of', 'not', 'fully', 'compliant', 'is', 'so', 'close', 'to', 'not', 'compliant', 'that', 'it', 's', 'misleading', 'to', 'avoid', 'being', 'misleading', 'not', 'fully', 'compliant', 'is', 'closer', 'to', 'compliant', 'enough', 'for', 'most', 'thing', 'in', 'practice', 'but', 'this', 'really', 'depends', 'on', 'the', 'implementation', 'and', 'should', 'be', 'interpreted', 'a', 'such', 'e', 'g', 'probably', 'should', 'be', 'taken', 'to', 'mean', 'read', 'the', 'compiler', 's', 'manual', 'note', 'that', 'often', 'not', 'fully', 'compliant', 'actually', 'mean', 'it', 'pretend', 'that', 'subnormal', 'are', 'zero', 'and', 'or', 'that', 'signaling', 'nan', 'aren', 't', 'supported', 'and', 'or', 'that', 'precision', 'is', 'higher', 'than', 'it', 'should', 'be', 'e', 'g', 'bit', 'floating', 'point', 'used', 'for', 'intermediate', 'result', 'causing', 'more', 'accurate', 'final', 'result', 'than', 'you', 'would', 'get', 'if', 'it', 'wa', 'fully', 'compliant', 'also', 'often', 'compiler', 'will', 'offer', 'a', 'third', 'fast', 'math', 'option', 'that', 'is', 'even', 'faster', 'and', 'even', 'le', 'compliant', 'and', 'don', 't', 'use', 'the', 'word', 'not', 'fully', 'compliant', 'for', 'this', 'case', 'when', 'that', 'happens', 'it', 'make', 'sense', 'for', 'not', 'fully', 'compliant', 'to', 'be', 'more', 'of', 'a', 'middle', 'ground', 'between', 'fast', 'math', 'and', 'fully', 'compliant']",System Requirements and AWS,4,"{'neg': 0.0, 'neu': 0.864, 'pos': 0.136, 'compound': 0.8412}",0.11666666666666665,4,Building and Compiling Python Projects,3query
65110424,obtain requirements from HP ALM executing a query of a concrete target version,"<p>I need to obtain all the requirements in a corporate HPE ALM of a concrete target version (field user-template-18). To obtain these requirements, I'm using the next url in my code within the C# project that I'm developing:
http://&lt;hp_alm&gt;/qcbin/rest/domains/&lt;name_domain&gt;/projects/&lt;name_project&gt;/requirements/?fields=id,name,description,user-03,user-template-18</p>
<p>With the previous url, I obtain via url navigator all these fields of a concrete id available in corporate HPE ALM. My final goal is to achieve how to implement/execute the next sql in my code project.</p>
<p>If I execute directly the next sql in HP ALM console, returns correctly the desired requirements of a concrete target version:
select id,name,description,user-03,user-template-18
from req
where type_id = '108'
and user-template-18 = '&lt;version_target&gt;'</p>
<p>Could anyone specify how to implement the code to obtain all the requirements executing the previous sql of a concrete target version in a c# project?</p>
<p>Thanks in advance
Regards</p>
",<c#><api><rest><alm><requirements>,2020-12-02 14:50:15,123,0,1,65208961,"<p>I've developed the next method to obtain all requirements for a concrete target version of HP ALM (&lt;target_version&gt;) and I've an error in the line XmlSerializer.</p>
<p>Could you confirm which error exists in attached code?</p>
<p>public Entity LoginAlm (string url, string username, string password, string domain, string project, string targetVersion)
{</p>
<pre><code>        var client = new RestClient(url + &quot;/qcbin/&quot;);
        client.Authenticator = new HttpBasicAuthenticator(username, password);
        client.CookieContainer = new System.Net.CookieContainer();
        var Domain = domain;
        var Project = project;

        var getItems1 = new RestRequest(&quot;authentication-point/authenticate&quot;);
        IRestResponse response1 = client.Execute(getItems1);

        var getItems2 = new RestRequest(&quot;rest/site-session&quot;, Method.GET);
        IRestResponse response2 = client.Execute(getItems2);

        string sql = &quot;select id,name,description,user-03,user-31,user-template-03,father-name &quot; +
            &quot;from req where type_id = '108' and user-template-18 = '&lt;target_version&gt;'&quot;;

        var getReqs = new RestRequest(&quot;rest/domains/&quot; + Domain + &quot;/projects/&quot; + Project + &quot;/requirements?query=[{&quot; + sql + '}' + ']');

        getReqs.AddHeader(&quot;Content-Type&quot;, &quot;application/xml&quot;);
        getReqs.AddHeader(&quot;Accept&quot;, &quot;application/xml&quot;);

        getReqs.AddParameter(&quot;domain&quot;, Domain, ParameterType.UrlSegment);
        getReqs.AddParameter(&quot;project&quot;, Project, ParameterType.UrlSegment);

        IRestResponse response = client.Execute(getReqs);

        var reader = new StringReader(response.Content);
        var serializer = new XmlSerializer(typeof(Entity));
        var instance = (Entity)serializer.Deserialize(reader);

        return instance;//JsonConvert.SerializeObject(instance, Newtonsoft.Json.Formatting.Indented);
        
    }
</code></pre>
",2020-12,i need to obtain all the requirements in a corporate hpe alm of a concrete target version field user template   to obtain these requirements i m using the next url in my code within the c project that i m developing http hp_alm qcbin rest domains name_domain projects name_project requirements fields id name description user   user template   with the previous url i obtain via url navigator all these fields of a concrete id available in corporate hpe alm my final goal is to achieve how to implement execute the next sql in my code project if i execute directly the next sql in hp alm console returns correctly the desired requirements of a concrete target version select id name description user   user template   from req where type_id   and user template   version_target could anyone specify how to implement the code to obtain all the requirements executing the previous sql of a concrete target version in a c project thanks in advance regards,i ve developed the next method to obtain all requirements for a concrete target version of hp alm target_version and i ve an error in the line xmlserializer could you confirm which error exists in attached code public entity loginalm string url string username string password string domain string project string targetversion var client new restclient url qcbin client authenticator new httpbasicauthenticator username password client cookiecontainer new system net cookiecontainer var domain domain var project project var getitems  new restrequest authentication point authenticate irestresponse response  client execute getitems  var getitems  new restrequest rest site session method get irestresponse response  client execute getitems  string sql select id name description user   user   user template   father name from req where type_id   and user template   target_version var getreqs new restrequest rest domains domain projects project requirements query sql getreqs addheader content type application xml getreqs addheader accept application xml getreqs addparameter domain domain parametertype urlsegment getreqs addparameter project project parametertype urlsegment irestresponse response client execute getreqs var reader new stringreader response content var serializer new xmlserializer typeof entity var instance entity serializer deserialize reader return instance jsonconvert serializeobject instance newtonsoft json formatting indented,"['c#', 'api', 'rest', 'alm', 'requirements']","['i', 'need', 'to', 'obtain', 'all', 'the', 'requirements', 'in', 'a', 'corporate', 'hpe', 'alm', 'of', 'a', 'concrete', 'target', 'version', 'field', 'user', 'template', 'to', 'obtain', 'these', 'requirements', 'i', 'm', 'using', 'the', 'next', 'url', 'in', 'my', 'code', 'within', 'the', 'c', 'project', 'that', 'i', 'm', 'developing', 'http', 'hp_alm', 'qcbin', 'rest', 'domains', 'name_domain', 'projects', 'name_project', 'requirements', 'fields', 'id', 'name', 'description', 'user', 'user', 'template', 'with', 'the', 'previous', 'url', 'i', 'obtain', 'via', 'url', 'navigator', 'all', 'these', 'fields', 'of', 'a', 'concrete', 'id', 'available', 'in', 'corporate', 'hpe', 'alm', 'my', 'final', 'goal', 'is', 'to', 'achieve', 'how', 'to', 'implement', 'execute', 'the', 'next', 'sql', 'in', 'my', 'code', 'project', 'if', 'i', 'execute', 'directly', 'the', 'next', 'sql', 'in', 'hp', 'alm', 'console', 'returns', 'correctly', 'the', 'desired', 'requirements', 'of', 'a', 'concrete', 'target', 'version', 'select', 'id', 'name', 'description', 'user', 'user', 'template', 'from', 'req', 'where', 'type_id', 'and', 'user', 'template', 'version_target', 'could', 'anyone', 'specify', 'how', 'to', 'implement', 'the', 'code', 'to', 'obtain', 'all', 'the', 'requirements', 'executing', 'the', 'previous', 'sql', 'of', 'a', 'concrete', 'target', 'version', 'in', 'a', 'c', 'project', 'thanks', 'in', 'advance', 'regards']","['i', 've', 'developed', 'the', 'next', 'method', 'to', 'obtain', 'all', 'requirements', 'for', 'a', 'concrete', 'target', 'version', 'of', 'hp', 'alm', 'target_version', 'and', 'i', 've', 'an', 'error', 'in', 'the', 'line', 'xmlserializer', 'could', 'you', 'confirm', 'which', 'error', 'exists', 'in', 'attached', 'code', 'public', 'entity', 'loginalm', 'string', 'url', 'string', 'username', 'string', 'password', 'string', 'domain', 'string', 'project', 'string', 'targetversion', 'var', 'client', 'new', 'restclient', 'url', 'qcbin', 'client', 'authenticator', 'new', 'httpbasicauthenticator', 'username', 'password', 'client', 'cookiecontainer', 'new', 'system', 'net', 'cookiecontainer', 'var', 'domain', 'domain', 'var', 'project', 'project', 'var', 'getitems', 'new', 'restrequest', 'authentication', 'point', 'authenticate', 'irestresponse', 'response', 'client', 'execute', 'getitems', 'var', 'getitems', 'new', 'restrequest', 'rest', 'site', 'session', 'method', 'get', 'irestresponse', 'response', 'client', 'execute', 'getitems', 'string', 'sql', 'select', 'id', 'name', 'description', 'user', 'user', 'user', 'template', 'father', 'name', 'from', 'req', 'where', 'type_id', 'and', 'user', 'template', 'target_version', 'var', 'getreqs', 'new', 'restrequest', 'rest', 'domains', 'domain', 'projects', 'project', 'requirements', 'query', 'sql', 'getreqs', 'addheader', 'content', 'type', 'application', 'xml', 'getreqs', 'addheader', 'accept', 'application', 'xml', 'getreqs', 'addparameter', 'domain', 'domain', 'parametertype', 'urlsegment', 'getreqs', 'addparameter', 'project', 'project', 'parametertype', 'urlsegment', 'irestresponse', 'response', 'client', 'execute', 'getreqs', 'var', 'reader', 'new', 'stringreader', 'response', 'content', 'var', 'serializer', 'new', 'xmlserializer', 'typeof', 'entity', 'var', 'instance', 'entity', 'serializer', 'deserialize', 'reader', 'return', 'instance', 'jsonconvert', 'serializeobject', 'instance', 'newtonsoft', 'json', 'formatting', 'indented']","['need', 'obtain', 'requirement', 'corporate', 'hpe', 'alm', 'concrete', 'target', 'version', 'field', 'user', 'template', 'obtain', 'requirement', 'using', 'next', 'url', 'code', 'within', 'c', 'project', 'developing', 'http', 'hp_alm', 'qcbin', 'rest', 'domain', 'name_domain', 'project', 'name_project', 'requirement', 'field', 'id', 'name', 'description', 'user', 'user', 'template', 'previous', 'url', 'obtain', 'via', 'url', 'navigator', 'field', 'concrete', 'id', 'available', 'corporate', 'hpe', 'alm', 'final', 'goal', 'achieve', 'implement', 'execute', 'next', 'sql', 'code', 'project', 'execute', 'directly', 'next', 'sql', 'hp', 'alm', 'console', 'return', 'correctly', 'desired', 'requirement', 'concrete', 'target', 'version', 'select', 'id', 'name', 'description', 'user', 'user', 'template', 'req', 'type_id', 'user', 'template', 'version_target', 'could', 'anyone', 'specify', 'implement', 'code', 'obtain', 'requirement', 'executing', 'previous', 'sql', 'concrete', 'target', 'version', 'c', 'project', 'thanks', 'advance', 'regard']","['i', 've', 'developed', 'the', 'next', 'method', 'to', 'obtain', 'all', 'requirement', 'for', 'a', 'concrete', 'target', 'version', 'of', 'hp', 'alm', 'target_version', 'and', 'i', 've', 'an', 'error', 'in', 'the', 'line', 'xmlserializer', 'could', 'you', 'confirm', 'which', 'error', 'exists', 'in', 'attached', 'code', 'public', 'entity', 'loginalm', 'string', 'url', 'string', 'username', 'string', 'password', 'string', 'domain', 'string', 'project', 'string', 'targetversion', 'var', 'client', 'new', 'restclient', 'url', 'qcbin', 'client', 'authenticator', 'new', 'httpbasicauthenticator', 'username', 'password', 'client', 'cookiecontainer', 'new', 'system', 'net', 'cookiecontainer', 'var', 'domain', 'domain', 'var', 'project', 'project', 'var', 'getitems', 'new', 'restrequest', 'authentication', 'point', 'authenticate', 'irestresponse', 'response', 'client', 'execute', 'getitems', 'var', 'getitems', 'new', 'restrequest', 'rest', 'site', 'session', 'method', 'get', 'irestresponse', 'response', 'client', 'execute', 'getitems', 'string', 'sql', 'select', 'id', 'name', 'description', 'user', 'user', 'user', 'template', 'father', 'name', 'from', 'req', 'where', 'type_id', 'and', 'user', 'template', 'target_version', 'var', 'getreqs', 'new', 'restrequest', 'rest', 'domain', 'domain', 'project', 'project', 'requirement', 'query', 'sql', 'getreqs', 'addheader', 'content', 'type', 'application', 'xml', 'getreqs', 'addheader', 'accept', 'application', 'xml', 'getreqs', 'addparameter', 'domain', 'domain', 'parametertype', 'urlsegment', 'getreqs', 'addparameter', 'project', 'project', 'parametertype', 'urlsegment', 'irestresponse', 'response', 'client', 'execute', 'getreqs', 'var', 'reader', 'new', 'stringreader', 'response', 'content', 'var', 'serializer', 'new', 'xmlserializer', 'typeof', 'entity', 'var', 'instance', 'entity', 'serializer', 'deserialize', 'reader', 'return', 'instance', 'jsonconvert', 'serializeobject', 'instance', 'newtonsoft', 'json', 'formatting', 'indented']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.981, 'pos': 0.019, 'compound': 0.3527}",0.054761904761904776,3,Python Package Installation and Management,3query
64993251,Spyder IDE Version Operating System Requirements,"<p>What are the Operating System Requirements for different versions of the Spyder IDE Windows Installer found at <a href=""https://docs.spyder-ide.org/current/installation.html"" rel=""nofollow noreferrer"">https://docs.spyder-ide.org/current/installation.html</a> ?</p>
",<operating-system><version><spyder><requirements>,2020-11-24 19:08:07,2096,0,1,65012822,"<p>(<em>Spyder maintainer here</em>) Our Windows installer works on Windows 10 (it probably works on Windows 8.1 too).</p>
<p>You can find the list of our system requirements in the section <em>Running Spyder</em> of our <a href=""https://docs.spyder-ide.org/current/faq.html#running-spyder"" rel=""nofollow noreferrer"">FAQ</a></p>
",2020-11,what are the operating system requirements for different versions of the spyder ide windows installer found at https docs spyder ide org current installation html,spyder maintainer here our windows installer works on windows   it probably works on windows     too you can find the list of our system requirements in the section running spyder of our faq,"['operating-system', 'version', 'spyder', 'requirements']","['what', 'are', 'the', 'operating', 'system', 'requirements', 'for', 'different', 'versions', 'of', 'the', 'spyder', 'ide', 'windows', 'installer', 'found', 'at', 'https', 'docs', 'spyder', 'ide', 'org', 'current', 'installation', 'html']","['spyder', 'maintainer', 'here', 'our', 'windows', 'installer', 'works', 'on', 'windows', 'it', 'probably', 'works', 'on', 'windows', 'too', 'you', 'can', 'find', 'the', 'list', 'of', 'our', 'system', 'requirements', 'in', 'the', 'section', 'running', 'spyder', 'of', 'our', 'faq']","['operating', 'system', 'requirement', 'different', 'version', 'spyder', 'ide', 'window', 'installer', 'found', 'http', 'doc', 'spyder', 'ide', 'org', 'current', 'installation', 'html']","['spyder', 'maintainer', 'here', 'our', 'window', 'installer', 'work', 'on', 'window', 'it', 'probably', 'work', 'on', 'window', 'too', 'you', 'can', 'find', 'the', 'list', 'of', 'our', 'system', 'requirement', 'in', 'the', 'section', 'running', 'spyder', 'of', 'our', 'faq']",Python Package Installation and Management,3,"{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}",0.0,3,Python Package Installation and Management,3query
64991457,Getting subsets of signatures in Alloy,"<p>I was wondering if there is a way to extract a subset of a set in a given signature in Alloy.
The extracted set will then be used in the definition of some facts of the model.</p>
<p>Assume the following model:</p>
<pre><code>abstract sig Status{}
one sig Status1 extends Status{}
one sig Status2 extends Status{}

sig A {
     status: one Status
}

sig B {
     setA: set A
}

fun SubsetOfSetAinB [b: B] : set A {
    //have some kind of operation here 
    //that returns a subset of b.setA where b.setA.status in Status1
}

</code></pre>
<p>Thank you for your time.</p>
",<subset><modeling><alloy><requirements>,2020-11-24 17:10:27,98,1,2,64993990,"<p>You should be able to get this with a set intersection, like <code>b.setA &amp; Status1.~status</code>.</p>
",2020-11,i was wondering if there is a way to extract a subset of a set in a given signature in alloy the extracted set will then be used in the definition of some facts of the model assume the following model abstract sig status one sig status  extends status one sig status  extends status sig a status one status sig b seta set a fun subsetofsetainb b b set a have some kind of operation here that returns a subset of b seta where b seta status in status  thank you for your time,you should be able to get this with a set intersection like b seta status  status,"['subset', 'modeling', 'alloy', 'requirements']","['i', 'was', 'wondering', 'if', 'there', 'is', 'a', 'way', 'to', 'extract', 'a', 'subset', 'of', 'a', 'set', 'in', 'a', 'given', 'signature', 'in', 'alloy', 'the', 'extracted', 'set', 'will', 'then', 'be', 'used', 'in', 'the', 'definition', 'of', 'some', 'facts', 'of', 'the', 'model', 'assume', 'the', 'following', 'model', 'abstract', 'sig', 'status', 'one', 'sig', 'status', 'extends', 'status', 'one', 'sig', 'status', 'extends', 'status', 'sig', 'a', 'status', 'one', 'status', 'sig', 'b', 'seta', 'set', 'a', 'fun', 'subsetofsetainb', 'b', 'b', 'set', 'a', 'have', 'some', 'kind', 'of', 'operation', 'here', 'that', 'returns', 'a', 'subset', 'of', 'b', 'seta', 'where', 'b', 'seta', 'status', 'in', 'status', 'thank', 'you', 'for', 'your', 'time']","['you', 'should', 'be', 'able', 'to', 'get', 'this', 'with', 'a', 'set', 'intersection', 'like', 'b', 'seta', 'status', 'status']","['wa', 'wondering', 'way', 'extract', 'subset', 'set', 'given', 'signature', 'alloy', 'extracted', 'set', 'used', 'definition', 'fact', 'model', 'assume', 'following', 'model', 'abstract', 'sig', 'status', 'one', 'sig', 'status', 'extends', 'status', 'one', 'sig', 'status', 'extends', 'status', 'sig', 'status', 'one', 'status', 'sig', 'b', 'seta', 'set', 'fun', 'subsetofsetainb', 'b', 'b', 'set', 'kind', 'operation', 'return', 'subset', 'b', 'seta', 'b', 'seta', 'status', 'status', 'thank', 'time']","['you', 'should', 'be', 'able', 'to', 'get', 'this', 'with', 'a', 'set', 'intersection', 'like', 'b', 'seta', 'status', 'status']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.927, 'pos': 0.073, 'compound': 0.6486}",0.3,3,Python Package Installation and Management,3query
64991457,Getting subsets of signatures in Alloy,"<p>I was wondering if there is a way to extract a subset of a set in a given signature in Alloy.
The extracted set will then be used in the definition of some facts of the model.</p>
<p>Assume the following model:</p>
<pre><code>abstract sig Status{}
one sig Status1 extends Status{}
one sig Status2 extends Status{}

sig A {
     status: one Status
}

sig B {
     setA: set A
}

fun SubsetOfSetAinB [b: B] : set A {
    //have some kind of operation here 
    //that returns a subset of b.setA where b.setA.status in Status1
}

</code></pre>
<p>Thank you for your time.</p>
",<subset><modeling><alloy><requirements>,2020-11-24 17:10:27,98,1,2,65001744,"<p>You already gave the answer yourself :-). You only lacked 5 characters:</p>
<pre><code>fun SubsetOfSetAinB [b: B] : set A {
    { x : b.setA | b.setA.status in Status1 }
}
</code></pre>
<p>The enumeration with <code>{ vars | test(vars) }</code>  is incredibly useful for lots of problems.</p>
",2020-11,i was wondering if there is a way to extract a subset of a set in a given signature in alloy the extracted set will then be used in the definition of some facts of the model assume the following model abstract sig status one sig status  extends status one sig status  extends status sig a status one status sig b seta set a fun subsetofsetainb b b set a have some kind of operation here that returns a subset of b seta where b seta status in status  thank you for your time,you already gave the answer yourself you only lacked   characters fun subsetofsetainb b b set a x b seta b seta status in status  the enumeration with vars test vars is incredibly useful for lots of problems,"['subset', 'modeling', 'alloy', 'requirements']","['i', 'was', 'wondering', 'if', 'there', 'is', 'a', 'way', 'to', 'extract', 'a', 'subset', 'of', 'a', 'set', 'in', 'a', 'given', 'signature', 'in', 'alloy', 'the', 'extracted', 'set', 'will', 'then', 'be', 'used', 'in', 'the', 'definition', 'of', 'some', 'facts', 'of', 'the', 'model', 'assume', 'the', 'following', 'model', 'abstract', 'sig', 'status', 'one', 'sig', 'status', 'extends', 'status', 'one', 'sig', 'status', 'extends', 'status', 'sig', 'a', 'status', 'one', 'status', 'sig', 'b', 'seta', 'set', 'a', 'fun', 'subsetofsetainb', 'b', 'b', 'set', 'a', 'have', 'some', 'kind', 'of', 'operation', 'here', 'that', 'returns', 'a', 'subset', 'of', 'b', 'seta', 'where', 'b', 'seta', 'status', 'in', 'status', 'thank', 'you', 'for', 'your', 'time']","['you', 'already', 'gave', 'the', 'answer', 'yourself', 'you', 'only', 'lacked', 'characters', 'fun', 'subsetofsetainb', 'b', 'b', 'set', 'a', 'x', 'b', 'seta', 'b', 'seta', 'status', 'in', 'status', 'the', 'enumeration', 'with', 'vars', 'test', 'vars', 'is', 'incredibly', 'useful', 'for', 'lots', 'of', 'problems']","['wa', 'wondering', 'way', 'extract', 'subset', 'set', 'given', 'signature', 'alloy', 'extracted', 'set', 'used', 'definition', 'fact', 'model', 'assume', 'following', 'model', 'abstract', 'sig', 'status', 'one', 'sig', 'status', 'extends', 'status', 'one', 'sig', 'status', 'extends', 'status', 'sig', 'status', 'one', 'status', 'sig', 'b', 'seta', 'set', 'fun', 'subsetofsetainb', 'b', 'b', 'set', 'kind', 'operation', 'return', 'subset', 'b', 'seta', 'b', 'seta', 'status', 'status', 'thank', 'time']","['you', 'already', 'gave', 'the', 'answer', 'yourself', 'you', 'only', 'lacked', 'character', 'fun', 'subsetofsetainb', 'b', 'b', 'set', 'a', 'x', 'b', 'seta', 'b', 'seta', 'status', 'in', 'status', 'the', 'enumeration', 'with', 'var', 'test', 'var', 'is', 'incredibly', 'useful', 'for', 'lot', 'of', 'problem']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.927, 'pos': 0.073, 'compound': 0.6486}",0.3,3,Python Package Installation and Management,3query
64890268,Waterfall model,"<p>Im thinking about using the waterfall model as my main development methodology for my CS exam. I have experience working with Unified Process, and agile methodolgies such as SCRUM and XP. All of these have clear and structured way to collect either tasks, use cases or user stories. But i cant seem to find the equvilent for the waterfall model.</p>
<p>So my question is, does the waterfall model have any specific way to collect your 'use cases/user stories (or whatever you may call them) - or should i borrow some from ex. UP, and work with use cases?</p>
",<task><project-management><use-case><requirements><waterfall>,2020-11-18 09:25:59,213,1,1,65100314,"<p>Waterfall, Unified Process and agile approaches differ in the way the activities are organised:</p>
<ul>
<li>all of them need somehow to cover the full spectrum of software development activities such as to gather requirements,  design the system,  implement its features and test the result and deliver it.</li>
<li>each of them package and combine these activities differently: agile for example favors small iterations that combine all these activities to deliver a software increment, until everything's done.  At the other extreme, waterfall separates these activities one after the other, with a delivery in the end and iteration (back to implementation or back to requirements) only if there's a significant problem.</li>
</ul>
<p>When carrying out these activities, you may use a set of practices that help you to achieve more effectively the result.  Practice sometimes emerge in the context of a method,  but can often be generalized to be used in other contexts.  For example:</p>
<p>In a <a href=""https://en.wikipedia.org/wiki/Waterfall_model"" rel=""nofollow noreferrer"">Waterfall</a> context, requirements are written up-front. This works well only if the requirements are very well known and do not change very often.  In the case of a study project, you may well be in such a situation.</p>
<p>Nowadays, this kind of requirements are documented using the IEEE standard of <a href=""https://en.wikipedia.org/wiki/Software_requirements_specification"" rel=""nofollow noreferrer"">Software Requirement Statements (SRS)</a>. Frequently, the functional part of this document is structured according to <a href=""https://en.wikipedia.org/wiki/Use_case"" rel=""nofollow noreferrer"">use-cases</a> (not necessarily use-case diagrams).  Moreover modern use-cases, the so-called <a href=""https://www.ivarjacobson.com/publications/white-papers/use-case-ebook"" rel=""nofollow noreferrer"">Use-case 2.0</a>, evolved into a more agile practice which allow to gather &quot;user-stories&quot; (user narratives) to make use-case slices that gradually enrich a use-case.  This approach is in fact very similar to user-story mapping (which defines a high level narrative line) that decomposes a narrative line into detailed user-stories.</p>
<p>So yes,  you can borrow any of those techniques, except that waterfall requires everything to be ready upfront.  Since use-cases can be used both in waterfall (traditional use-cases) or agile (use-case 2.0), it's certainly a good base in your context.  For a school work,  an SRS structured according to use-cases would certainly make good impression.  However, if you want a task oriented approach, and if all the requirements are not yet clear, I'd really advise to go for use-case 2.0 or user-story mapping, and avoid waterfall.</p>
",2020-11,im thinking about using the waterfall model as my main development methodology for my cs exam i have experience working with unified process and agile methodolgies such as scrum and xp all of these have clear and structured way to collect either tasks use cases or user stories but i cant seem to find the equvilent for the waterfall model so my question is does the waterfall model have any specific way to collect your use cases user stories or whatever you may call them or should i borrow some from ex up and work with use cases,waterfall unified process and agile approaches differ in the way the activities are organised all of them need somehow to cover the full spectrum of software development activities such as to gather requirements design the system implement its features and test the result and deliver it each of them package and combine these activities differently agile for example favors small iterations that combine all these activities to deliver a software increment until everything s done at the other extreme waterfall separates these activities one after the other with a delivery in the end and iteration back to implementation or back to requirements only if there s a significant problem when carrying out these activities you may use a set of practices that help you to achieve more effectively the result practice sometimes emerge in the context of a method but can often be generalized to be used in other contexts for example in a waterfall context requirements are written up front this works well only if the requirements are very well known and do not change very often in the case of a study project you may well be in such a situation nowadays this kind of requirements are documented using the ieee standard of software requirement statements srs frequently the functional part of this document is structured according to use cases not necessarily use case diagrams moreover modern use cases the so called use case     evolved into a more agile practice which allow to gather user stories user narratives to make use case slices that gradually enrich a use case this approach is in fact very similar to user story mapping which defines a high level narrative line that decomposes a narrative line into detailed user stories so yes you can borrow any of those techniques except that waterfall requires everything to be ready upfront since use cases can be used both in waterfall traditional use cases or agile use case     it s certainly a good base in your context for a school work an srs structured according to use cases would certainly make good impression however if you want a task oriented approach and if all the requirements are not yet clear i d really advise to go for use case     or user story mapping and avoid waterfall,"['task', 'project-management', 'use-case', 'requirements', 'waterfall']","['im', 'thinking', 'about', 'using', 'the', 'waterfall', 'model', 'as', 'my', 'main', 'development', 'methodology', 'for', 'my', 'cs', 'exam', 'i', 'have', 'experience', 'working', 'with', 'unified', 'process', 'and', 'agile', 'methodolgies', 'such', 'as', 'scrum', 'and', 'xp', 'all', 'of', 'these', 'have', 'clear', 'and', 'structured', 'way', 'to', 'collect', 'either', 'tasks', 'use', 'cases', 'or', 'user', 'stories', 'but', 'i', 'cant', 'seem', 'to', 'find', 'the', 'equvilent', 'for', 'the', 'waterfall', 'model', 'so', 'my', 'question', 'is', 'does', 'the', 'waterfall', 'model', 'have', 'any', 'specific', 'way', 'to', 'collect', 'your', 'use', 'cases', 'user', 'stories', 'or', 'whatever', 'you', 'may', 'call', 'them', 'or', 'should', 'i', 'borrow', 'some', 'from', 'ex', 'up', 'and', 'work', 'with', 'use', 'cases']","['waterfall', 'unified', 'process', 'and', 'agile', 'approaches', 'differ', 'in', 'the', 'way', 'the', 'activities', 'are', 'organised', 'all', 'of', 'them', 'need', 'somehow', 'to', 'cover', 'the', 'full', 'spectrum', 'of', 'software', 'development', 'activities', 'such', 'as', 'to', 'gather', 'requirements', 'design', 'the', 'system', 'implement', 'its', 'features', 'and', 'test', 'the', 'result', 'and', 'deliver', 'it', 'each', 'of', 'them', 'package', 'and', 'combine', 'these', 'activities', 'differently', 'agile', 'for', 'example', 'favors', 'small', 'iterations', 'that', 'combine', 'all', 'these', 'activities', 'to', 'deliver', 'a', 'software', 'increment', 'until', 'everything', 's', 'done', 'at', 'the', 'other', 'extreme', 'waterfall', 'separates', 'these', 'activities', 'one', 'after', 'the', 'other', 'with', 'a', 'delivery', 'in', 'the', 'end', 'and', 'iteration', 'back', 'to', 'implementation', 'or', 'back', 'to', 'requirements', 'only', 'if', 'there', 's', 'a', 'significant', 'problem', 'when', 'carrying', 'out', 'these', 'activities', 'you', 'may', 'use', 'a', 'set', 'of', 'practices', 'that', 'help', 'you', 'to', 'achieve', 'more', 'effectively', 'the', 'result', 'practice', 'sometimes', 'emerge', 'in', 'the', 'context', 'of', 'a', 'method', 'but', 'can', 'often', 'be', 'generalized', 'to', 'be', 'used', 'in', 'other', 'contexts', 'for', 'example', 'in', 'a', 'waterfall', 'context', 'requirements', 'are', 'written', 'up', 'front', 'this', 'works', 'well', 'only', 'if', 'the', 'requirements', 'are', 'very', 'well', 'known', 'and', 'do', 'not', 'change', 'very', 'often', 'in', 'the', 'case', 'of', 'a', 'study', 'project', 'you', 'may', 'well', 'be', 'in', 'such', 'a', 'situation', 'nowadays', 'this', 'kind', 'of', 'requirements', 'are', 'documented', 'using', 'the', 'ieee', 'standard', 'of', 'software', 'requirement', 'statements', 'srs', 'frequently', 'the', 'functional', 'part', 'of', 'this', 'document', 'is', 'structured', 'according', 'to', 'use', 'cases', 'not', 'necessarily', 'use', 'case', 'diagrams', 'moreover', 'modern', 'use', 'cases', 'the', 'so', 'called', 'use', 'case', 'evolved', 'into', 'a', 'more', 'agile', 'practice', 'which', 'allow', 'to', 'gather', 'user', 'stories', 'user', 'narratives', 'to', 'make', 'use', 'case', 'slices', 'that', 'gradually', 'enrich', 'a', 'use', 'case', 'this', 'approach', 'is', 'in', 'fact', 'very', 'similar', 'to', 'user', 'story', 'mapping', 'which', 'defines', 'a', 'high', 'level', 'narrative', 'line', 'that', 'decomposes', 'a', 'narrative', 'line', 'into', 'detailed', 'user', 'stories', 'so', 'yes', 'you', 'can', 'borrow', 'any', 'of', 'those', 'techniques', 'except', 'that', 'waterfall', 'requires', 'everything', 'to', 'be', 'ready', 'upfront', 'since', 'use', 'cases', 'can', 'be', 'used', 'both', 'in', 'waterfall', 'traditional', 'use', 'cases', 'or', 'agile', 'use', 'case', 'it', 's', 'certainly', 'a', 'good', 'base', 'in', 'your', 'context', 'for', 'a', 'school', 'work', 'an', 'srs', 'structured', 'according', 'to', 'use', 'cases', 'would', 'certainly', 'make', 'good', 'impression', 'however', 'if', 'you', 'want', 'a', 'task', 'oriented', 'approach', 'and', 'if', 'all', 'the', 'requirements', 'are', 'not', 'yet', 'clear', 'i', 'd', 'really', 'advise', 'to', 'go', 'for', 'use', 'case', 'or', 'user', 'story', 'mapping', 'and', 'avoid', 'waterfall']","['im', 'thinking', 'using', 'waterfall', 'model', 'main', 'development', 'methodology', 'c', 'exam', 'experience', 'working', 'unified', 'process', 'agile', 'methodolgies', 'scrum', 'xp', 'clear', 'structured', 'way', 'collect', 'either', 'task', 'use', 'case', 'user', 'story', 'cant', 'seem', 'find', 'equvilent', 'waterfall', 'model', 'question', 'doe', 'waterfall', 'model', 'specific', 'way', 'collect', 'use', 'case', 'user', 'story', 'whatever', 'may', 'call', 'borrow', 'ex', 'work', 'use', 'case']","['waterfall', 'unified', 'process', 'and', 'agile', 'approach', 'differ', 'in', 'the', 'way', 'the', 'activity', 'are', 'organised', 'all', 'of', 'them', 'need', 'somehow', 'to', 'cover', 'the', 'full', 'spectrum', 'of', 'software', 'development', 'activity', 'such', 'a', 'to', 'gather', 'requirement', 'design', 'the', 'system', 'implement', 'it', 'feature', 'and', 'test', 'the', 'result', 'and', 'deliver', 'it', 'each', 'of', 'them', 'package', 'and', 'combine', 'these', 'activity', 'differently', 'agile', 'for', 'example', 'favor', 'small', 'iteration', 'that', 'combine', 'all', 'these', 'activity', 'to', 'deliver', 'a', 'software', 'increment', 'until', 'everything', 's', 'done', 'at', 'the', 'other', 'extreme', 'waterfall', 'separate', 'these', 'activity', 'one', 'after', 'the', 'other', 'with', 'a', 'delivery', 'in', 'the', 'end', 'and', 'iteration', 'back', 'to', 'implementation', 'or', 'back', 'to', 'requirement', 'only', 'if', 'there', 's', 'a', 'significant', 'problem', 'when', 'carrying', 'out', 'these', 'activity', 'you', 'may', 'use', 'a', 'set', 'of', 'practice', 'that', 'help', 'you', 'to', 'achieve', 'more', 'effectively', 'the', 'result', 'practice', 'sometimes', 'emerge', 'in', 'the', 'context', 'of', 'a', 'method', 'but', 'can', 'often', 'be', 'generalized', 'to', 'be', 'used', 'in', 'other', 'context', 'for', 'example', 'in', 'a', 'waterfall', 'context', 'requirement', 'are', 'written', 'up', 'front', 'this', 'work', 'well', 'only', 'if', 'the', 'requirement', 'are', 'very', 'well', 'known', 'and', 'do', 'not', 'change', 'very', 'often', 'in', 'the', 'case', 'of', 'a', 'study', 'project', 'you', 'may', 'well', 'be', 'in', 'such', 'a', 'situation', 'nowadays', 'this', 'kind', 'of', 'requirement', 'are', 'documented', 'using', 'the', 'ieee', 'standard', 'of', 'software', 'requirement', 'statement', 'sr', 'frequently', 'the', 'functional', 'part', 'of', 'this', 'document', 'is', 'structured', 'according', 'to', 'use', 'case', 'not', 'necessarily', 'use', 'case', 'diagram', 'moreover', 'modern', 'use', 'case', 'the', 'so', 'called', 'use', 'case', 'evolved', 'into', 'a', 'more', 'agile', 'practice', 'which', 'allow', 'to', 'gather', 'user', 'story', 'user', 'narrative', 'to', 'make', 'use', 'case', 'slice', 'that', 'gradually', 'enrich', 'a', 'use', 'case', 'this', 'approach', 'is', 'in', 'fact', 'very', 'similar', 'to', 'user', 'story', 'mapping', 'which', 'defines', 'a', 'high', 'level', 'narrative', 'line', 'that', 'decomposes', 'a', 'narrative', 'line', 'into', 'detailed', 'user', 'story', 'so', 'yes', 'you', 'can', 'borrow', 'any', 'of', 'those', 'technique', 'except', 'that', 'waterfall', 'requires', 'everything', 'to', 'be', 'ready', 'upfront', 'since', 'use', 'case', 'can', 'be', 'used', 'both', 'in', 'waterfall', 'traditional', 'use', 'case', 'or', 'agile', 'use', 'case', 'it', 's', 'certainly', 'a', 'good', 'base', 'in', 'your', 'context', 'for', 'a', 'school', 'work', 'an', 'sr', 'structured', 'according', 'to', 'use', 'case', 'would', 'certainly', 'make', 'good', 'impression', 'however', 'if', 'you', 'want', 'a', 'task', 'oriented', 'approach', 'and', 'if', 'all', 'the', 'requirement', 'are', 'not', 'yet', 'clear', 'i', 'd', 'really', 'advise', 'to', 'go', 'for', 'use', 'case', 'or', 'user', 'story', 'mapping', 'and', 'avoid', 'waterfall']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 0.94, 'pos': 0.06, 'compound': 0.5812}",0.15333333333333332,0,System Requirements and AWS,3query
64888110,Asp.net core mvc update after approval,"<p>I have two tables
one has all the employee information
the second one like log or history for the changes</p>
<p>what I want to do is</p>
<p>the employee can update his information but it will not update the main table unless the manger approve the changes when the manger approve the changes it will update the main table which has all the employee information</p>
<p>how I can do this and please
note that I am beginner
in asp.net core MVC &amp; Entity framework core</p>
<p>Thanks.</p>
",<.net><entity-framework-core><requirements>,2020-11-18 06:25:47,309,3,2,64888227,"<p>The easiest is to:</p>
<ol>
<li>Make a 2nd classes in your code, you can inherit from the employee, let's call it EmployeeAproval</li>
<li>When changes are needed to be made then find the latest change request that is not approved and load it, or, copy the employee data in a new EmployeeAproval instance, show that instance in your screen.</li>
<li>Save the changes made to the EmployeeAproval class, EF will save it in the table for you.
4, Notify the manager that he has changes pending (do not bombard managers they do not like to work) if he has no pending approvals.</li>
<li>Manager approves the change then cast the  EmployeeAproval to an Employee instance and save it or find the approved version, copy the changes and save it.</li>
<li>Notify the Employee instance that the changes where approved.</li>
</ol>
<p>That's the easy way.</p>
<p>The hard way is to set am approved DateTime and duplicate the records make sure you join on latest approved entries etc... becomes a maintenance mess as soon as you hand over the code in 3 years ;-)</p>
",2020-11,i have two tables one has all the employee information the second one like log or history for the changes what i want to do is the employee can update his information but it will not update the main table unless the manger approve the changes when the manger approve the changes it will update the main table which has all the employee information how i can do this and please note that i am beginner in asp net core mvc entity framework core thanks,the easiest is to make a  nd classes in your code you can inherit from the employee let s call it employeeaproval when changes are needed to be made then find the latest change request that is not approved and load it or copy the employee data in a new employeeaproval instance show that instance in your screen save the changes made to the employeeaproval class ef will save it in the table for you   notify the manager that he has changes pending do not bombard managers they do not like to work if he has no pending approvals manager approves the change then cast the employeeaproval to an employee instance and save it or find the approved version copy the changes and save it notify the employee instance that the changes where approved that s the easy way the hard way is to set am approved datetime and duplicate the records make sure you join on latest approved entries etc becomes a maintenance mess as soon as you hand over the code in   years,"['.net', 'entity-framework-core', 'requirements']","['i', 'have', 'two', 'tables', 'one', 'has', 'all', 'the', 'employee', 'information', 'the', 'second', 'one', 'like', 'log', 'or', 'history', 'for', 'the', 'changes', 'what', 'i', 'want', 'to', 'do', 'is', 'the', 'employee', 'can', 'update', 'his', 'information', 'but', 'it', 'will', 'not', 'update', 'the', 'main', 'table', 'unless', 'the', 'manger', 'approve', 'the', 'changes', 'when', 'the', 'manger', 'approve', 'the', 'changes', 'it', 'will', 'update', 'the', 'main', 'table', 'which', 'has', 'all', 'the', 'employee', 'information', 'how', 'i', 'can', 'do', 'this', 'and', 'please', 'note', 'that', 'i', 'am', 'beginner', 'in', 'asp', 'net', 'core', 'mvc', 'entity', 'framework', 'core', 'thanks']","['the', 'easiest', 'is', 'to', 'make', 'a', 'nd', 'classes', 'in', 'your', 'code', 'you', 'can', 'inherit', 'from', 'the', 'employee', 'let', 's', 'call', 'it', 'employeeaproval', 'when', 'changes', 'are', 'needed', 'to', 'be', 'made', 'then', 'find', 'the', 'latest', 'change', 'request', 'that', 'is', 'not', 'approved', 'and', 'load', 'it', 'or', 'copy', 'the', 'employee', 'data', 'in', 'a', 'new', 'employeeaproval', 'instance', 'show', 'that', 'instance', 'in', 'your', 'screen', 'save', 'the', 'changes', 'made', 'to', 'the', 'employeeaproval', 'class', 'ef', 'will', 'save', 'it', 'in', 'the', 'table', 'for', 'you', 'notify', 'the', 'manager', 'that', 'he', 'has', 'changes', 'pending', 'do', 'not', 'bombard', 'managers', 'they', 'do', 'not', 'like', 'to', 'work', 'if', 'he', 'has', 'no', 'pending', 'approvals', 'manager', 'approves', 'the', 'change', 'then', 'cast', 'the', 'employeeaproval', 'to', 'an', 'employee', 'instance', 'and', 'save', 'it', 'or', 'find', 'the', 'approved', 'version', 'copy', 'the', 'changes', 'and', 'save', 'it', 'notify', 'the', 'employee', 'instance', 'that', 'the', 'changes', 'where', 'approved', 'that', 's', 'the', 'easy', 'way', 'the', 'hard', 'way', 'is', 'to', 'set', 'am', 'approved', 'datetime', 'and', 'duplicate', 'the', 'records', 'make', 'sure', 'you', 'join', 'on', 'latest', 'approved', 'entries', 'etc', 'becomes', 'a', 'maintenance', 'mess', 'as', 'soon', 'as', 'you', 'hand', 'over', 'the', 'code', 'in', 'years']","['two', 'table', 'one', 'ha', 'employee', 'information', 'second', 'one', 'like', 'log', 'history', 'change', 'want', 'employee', 'update', 'information', 'update', 'main', 'table', 'unless', 'manger', 'approve', 'change', 'manger', 'approve', 'change', 'update', 'main', 'table', 'ha', 'employee', 'information', 'please', 'note', 'beginner', 'asp', 'net', 'core', 'mvc', 'entity', 'framework', 'core', 'thanks']","['the', 'easiest', 'is', 'to', 'make', 'a', 'nd', 'class', 'in', 'your', 'code', 'you', 'can', 'inherit', 'from', 'the', 'employee', 'let', 's', 'call', 'it', 'employeeaproval', 'when', 'change', 'are', 'needed', 'to', 'be', 'made', 'then', 'find', 'the', 'latest', 'change', 'request', 'that', 'is', 'not', 'approved', 'and', 'load', 'it', 'or', 'copy', 'the', 'employee', 'data', 'in', 'a', 'new', 'employeeaproval', 'instance', 'show', 'that', 'instance', 'in', 'your', 'screen', 'save', 'the', 'change', 'made', 'to', 'the', 'employeeaproval', 'class', 'ef', 'will', 'save', 'it', 'in', 'the', 'table', 'for', 'you', 'notify', 'the', 'manager', 'that', 'he', 'ha', 'change', 'pending', 'do', 'not', 'bombard', 'manager', 'they', 'do', 'not', 'like', 'to', 'work', 'if', 'he', 'ha', 'no', 'pending', 'approval', 'manager', 'approves', 'the', 'change', 'then', 'cast', 'the', 'employeeaproval', 'to', 'an', 'employee', 'instance', 'and', 'save', 'it', 'or', 'find', 'the', 'approved', 'version', 'copy', 'the', 'change', 'and', 'save', 'it', 'notify', 'the', 'employee', 'instance', 'that', 'the', 'change', 'where', 'approved', 'that', 's', 'the', 'easy', 'way', 'the', 'hard', 'way', 'is', 'to', 'set', 'am', 'approved', 'datetime', 'and', 'duplicate', 'the', 'record', 'make', 'sure', 'you', 'join', 'on', 'latest', 'approved', 'entry', 'etc', 'becomes', 'a', 'maintenance', 'mess', 'a', 'soon', 'a', 'you', 'hand', 'over', 'the', 'code', 'in', 'year']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 0.931, 'pos': 0.069, 'compound': 0.5927}",0.1111111111111111,0,System Requirements and AWS,3query
64888110,Asp.net core mvc update after approval,"<p>I have two tables
one has all the employee information
the second one like log or history for the changes</p>
<p>what I want to do is</p>
<p>the employee can update his information but it will not update the main table unless the manger approve the changes when the manger approve the changes it will update the main table which has all the employee information</p>
<p>how I can do this and please
note that I am beginner
in asp.net core MVC &amp; Entity framework core</p>
<p>Thanks.</p>
",<.net><entity-framework-core><requirements>,2020-11-18 06:25:47,309,3,2,64888249,"<p>Maybe you can share more details about what you keep in history, might help with information about the status of employees (if they have unsaved data that needs approval and so on)</p>
<p>You can use some intermediate table where to keep unsaved employee data. Then maybe add a flag on the employee, that has unsaved changes (that way also the manager knows which rows are looking for approvals) and once is approved update entry with data from intermediate table.</p>
<p>Would be other options as well, but you need to think what happens if the manager denies the changes. (in the case above, data will not be affected)</p>
",2020-11,i have two tables one has all the employee information the second one like log or history for the changes what i want to do is the employee can update his information but it will not update the main table unless the manger approve the changes when the manger approve the changes it will update the main table which has all the employee information how i can do this and please note that i am beginner in asp net core mvc entity framework core thanks,maybe you can share more details about what you keep in history might help with information about the status of employees if they have unsaved data that needs approval and so on you can use some intermediate table where to keep unsaved employee data then maybe add a flag on the employee that has unsaved changes that way also the manager knows which rows are looking for approvals and once is approved update entry with data from intermediate table would be other options as well but you need to think what happens if the manager denies the changes in the case above data will not be affected,"['.net', 'entity-framework-core', 'requirements']","['i', 'have', 'two', 'tables', 'one', 'has', 'all', 'the', 'employee', 'information', 'the', 'second', 'one', 'like', 'log', 'or', 'history', 'for', 'the', 'changes', 'what', 'i', 'want', 'to', 'do', 'is', 'the', 'employee', 'can', 'update', 'his', 'information', 'but', 'it', 'will', 'not', 'update', 'the', 'main', 'table', 'unless', 'the', 'manger', 'approve', 'the', 'changes', 'when', 'the', 'manger', 'approve', 'the', 'changes', 'it', 'will', 'update', 'the', 'main', 'table', 'which', 'has', 'all', 'the', 'employee', 'information', 'how', 'i', 'can', 'do', 'this', 'and', 'please', 'note', 'that', 'i', 'am', 'beginner', 'in', 'asp', 'net', 'core', 'mvc', 'entity', 'framework', 'core', 'thanks']","['maybe', 'you', 'can', 'share', 'more', 'details', 'about', 'what', 'you', 'keep', 'in', 'history', 'might', 'help', 'with', 'information', 'about', 'the', 'status', 'of', 'employees', 'if', 'they', 'have', 'unsaved', 'data', 'that', 'needs', 'approval', 'and', 'so', 'on', 'you', 'can', 'use', 'some', 'intermediate', 'table', 'where', 'to', 'keep', 'unsaved', 'employee', 'data', 'then', 'maybe', 'add', 'a', 'flag', 'on', 'the', 'employee', 'that', 'has', 'unsaved', 'changes', 'that', 'way', 'also', 'the', 'manager', 'knows', 'which', 'rows', 'are', 'looking', 'for', 'approvals', 'and', 'once', 'is', 'approved', 'update', 'entry', 'with', 'data', 'from', 'intermediate', 'table', 'would', 'be', 'other', 'options', 'as', 'well', 'but', 'you', 'need', 'to', 'think', 'what', 'happens', 'if', 'the', 'manager', 'denies', 'the', 'changes', 'in', 'the', 'case', 'above', 'data', 'will', 'not', 'be', 'affected']","['two', 'table', 'one', 'ha', 'employee', 'information', 'second', 'one', 'like', 'log', 'history', 'change', 'want', 'employee', 'update', 'information', 'update', 'main', 'table', 'unless', 'manger', 'approve', 'change', 'manger', 'approve', 'change', 'update', 'main', 'table', 'ha', 'employee', 'information', 'please', 'note', 'beginner', 'asp', 'net', 'core', 'mvc', 'entity', 'framework', 'core', 'thanks']","['maybe', 'you', 'can', 'share', 'more', 'detail', 'about', 'what', 'you', 'keep', 'in', 'history', 'might', 'help', 'with', 'information', 'about', 'the', 'status', 'of', 'employee', 'if', 'they', 'have', 'unsaved', 'data', 'that', 'need', 'approval', 'and', 'so', 'on', 'you', 'can', 'use', 'some', 'intermediate', 'table', 'where', 'to', 'keep', 'unsaved', 'employee', 'data', 'then', 'maybe', 'add', 'a', 'flag', 'on', 'the', 'employee', 'that', 'ha', 'unsaved', 'change', 'that', 'way', 'also', 'the', 'manager', 'know', 'which', 'row', 'are', 'looking', 'for', 'approval', 'and', 'once', 'is', 'approved', 'update', 'entry', 'with', 'data', 'from', 'intermediate', 'table', 'would', 'be', 'other', 'option', 'a', 'well', 'but', 'you', 'need', 'to', 'think', 'what', 'happens', 'if', 'the', 'manager', 'denies', 'the', 'change', 'in', 'the', 'case', 'above', 'data', 'will', 'not', 'be', 'affected']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 0.931, 'pos': 0.069, 'compound': 0.5927}",0.1111111111111111,0,System Requirements and AWS,3query
64783448,How to check if all packages meet version requirements?,"<p>When running a script in Python interpreter, I want to check if I use the following versions:</p>
<pre><code>absl-py==0.1.10
agate==1.6.0
agate-dbf==0.2.0
agate-excel==0.2.1
agate-sql==0.5.2
appnope==0.1.0
</code></pre>
<p>I can for example do this:</p>
<pre><code>if absl-py.__version__ != &quot;0.1.10&quot;:
    logging.error(&quot;update to version == 0.1.10&quot;)
    sys.exit() #
</code></pre>
<p>And repeat for all other packages. Is there a way to iterate through all the specified packages and raise and error when one if the conditions is not met?</p>
",<python><requirements>,2020-11-11 09:09:30,259,0,3,64783676,"<p>You can use the following code to check if the packages exist (make sure to create <code>requirements.txt</code> first):</p>
<pre class=""lang-py prettyprint-override""><code>with open(&quot;requirements.txt&quot;) as f:
    packages = f.read().split(&quot;\n&quot;)
    for package in packages:
        package_name, package_version = package.split(&quot;==&quot;)
        package_name = &quot;_&quot;.join(package_name.split(&quot;-&quot;))
        exec(f&quot;&quot;&quot;\
try:
    import {package_name}
except ImportError:
    print(&quot;{package_name} doesn't exist&quot;) 
else:
    if not {package_name}.__version__== '{package_version}': 
        print(f&quot;{package_name} is not up to date&quot;)&quot;&quot;&quot;)
        

</code></pre>
",2020-11,when running a script in python interpreter i want to check if i use the following versions absl py       agate       agate dbf       agate excel       agate sql       appnope       i can for example do this if absl py __version__       logging error update to version       sys exit and repeat for all other packages is there a way to iterate through all the specified packages and raise and error when one if the conditions is not met,you can use the following code to check if the packages exist make sure to create requirements txt first with open requirements txt as f packages f read split n for package in packages package_name package_version package split package_name _ join package_name split exec f try import package_name except importerror print package_name doesn t exist else if not package_name __version__ package_version print f package_name is not up to date,"['python', 'requirements']","['when', 'running', 'a', 'script', 'in', 'python', 'interpreter', 'i', 'want', 'to', 'check', 'if', 'i', 'use', 'the', 'following', 'versions', 'absl', 'py', 'agate', 'agate', 'dbf', 'agate', 'excel', 'agate', 'sql', 'appnope', 'i', 'can', 'for', 'example', 'do', 'this', 'if', 'absl', 'py', '__version__', 'logging', 'error', 'update', 'to', 'version', 'sys', 'exit', 'and', 'repeat', 'for', 'all', 'other', 'packages', 'is', 'there', 'a', 'way', 'to', 'iterate', 'through', 'all', 'the', 'specified', 'packages', 'and', 'raise', 'and', 'error', 'when', 'one', 'if', 'the', 'conditions', 'is', 'not', 'met']","['you', 'can', 'use', 'the', 'following', 'code', 'to', 'check', 'if', 'the', 'packages', 'exist', 'make', 'sure', 'to', 'create', 'requirements', 'txt', 'first', 'with', 'open', 'requirements', 'txt', 'as', 'f', 'packages', 'f', 'read', 'split', 'n', 'for', 'package', 'in', 'packages', 'package_name', 'package_version', 'package', 'split', 'package_name', '_', 'join', 'package_name', 'split', 'exec', 'f', 'try', 'import', 'package_name', 'except', 'importerror', 'print', 'package_name', 'doesn', 't', 'exist', 'else', 'if', 'not', 'package_name', '__version__', 'package_version', 'print', 'f', 'package_name', 'is', 'not', 'up', 'to', 'date']","['running', 'script', 'python', 'interpreter', 'want', 'check', 'use', 'following', 'version', 'absl', 'py', 'agate', 'agate', 'dbf', 'agate', 'excel', 'agate', 'sql', 'appnope', 'example', 'absl', 'py', '__version__', 'logging', 'error', 'update', 'version', 'sys', 'exit', 'repeat', 'package', 'way', 'iterate', 'specified', 'package', 'raise', 'error', 'one', 'condition', 'met']","['you', 'can', 'use', 'the', 'following', 'code', 'to', 'check', 'if', 'the', 'package', 'exist', 'make', 'sure', 'to', 'create', 'requirement', 'txt', 'first', 'with', 'open', 'requirement', 'txt', 'a', 'f', 'package', 'f', 'read', 'split', 'n', 'for', 'package', 'in', 'package', 'package_name', 'package_version', 'package', 'split', 'package_name', '_', 'join', 'package_name', 'split', 'exec', 'f', 'try', 'import', 'package_name', 'except', 'importerror', 'print', 'package_name', 'doesn', 't', 'exist', 'else', 'if', 'not', 'package_name', '__version__', 'package_version', 'print', 'f', 'package_name', 'is', 'not', 'up', 'to', 'date']",System Requirements and AWS,3,"{'neg': 0.044, 'neu': 0.937, 'pos': 0.019, 'compound': -0.4003}",0.041666666666666664,3,Python Package Installation and Management,3query
64783448,How to check if all packages meet version requirements?,"<p>When running a script in Python interpreter, I want to check if I use the following versions:</p>
<pre><code>absl-py==0.1.10
agate==1.6.0
agate-dbf==0.2.0
agate-excel==0.2.1
agate-sql==0.5.2
appnope==0.1.0
</code></pre>
<p>I can for example do this:</p>
<pre><code>if absl-py.__version__ != &quot;0.1.10&quot;:
    logging.error(&quot;update to version == 0.1.10&quot;)
    sys.exit() #
</code></pre>
<p>And repeat for all other packages. Is there a way to iterate through all the specified packages and raise and error when one if the conditions is not met?</p>
",<python><requirements>,2020-11-11 09:09:30,259,0,3,64783877,"<p>You can do something like this and define the modules and versions in a dictionary:</p>
<pre><code>import pkg_resources

module_versions = {&quot;absl-py&quot;:&quot;0.1.10&quot;, &quot;agate&quot;:&quot;1.6.0&quot;}

for module, v_req in module_versions.items():
    try:
        if pkg_resources.get_distribution(module).version != v_req:
            print(f&quot;{module}, Required Version: {v_req}, Your Version: {v_inst}&quot;)
    except:
        print(f&quot;{module} not installed&quot;)
</code></pre>
",2020-11,when running a script in python interpreter i want to check if i use the following versions absl py       agate       agate dbf       agate excel       agate sql       appnope       i can for example do this if absl py __version__       logging error update to version       sys exit and repeat for all other packages is there a way to iterate through all the specified packages and raise and error when one if the conditions is not met,you can do something like this and define the modules and versions in a dictionary import pkg_resources module_versions absl py       agate       for module v_req in module_versions items try if pkg_resources get_distribution module version v_req print f module required version v_req your version v_inst except print f module not installed,"['python', 'requirements']","['when', 'running', 'a', 'script', 'in', 'python', 'interpreter', 'i', 'want', 'to', 'check', 'if', 'i', 'use', 'the', 'following', 'versions', 'absl', 'py', 'agate', 'agate', 'dbf', 'agate', 'excel', 'agate', 'sql', 'appnope', 'i', 'can', 'for', 'example', 'do', 'this', 'if', 'absl', 'py', '__version__', 'logging', 'error', 'update', 'to', 'version', 'sys', 'exit', 'and', 'repeat', 'for', 'all', 'other', 'packages', 'is', 'there', 'a', 'way', 'to', 'iterate', 'through', 'all', 'the', 'specified', 'packages', 'and', 'raise', 'and', 'error', 'when', 'one', 'if', 'the', 'conditions', 'is', 'not', 'met']","['you', 'can', 'do', 'something', 'like', 'this', 'and', 'define', 'the', 'modules', 'and', 'versions', 'in', 'a', 'dictionary', 'import', 'pkg_resources', 'module_versions', 'absl', 'py', 'agate', 'for', 'module', 'v_req', 'in', 'module_versions', 'items', 'try', 'if', 'pkg_resources', 'get_distribution', 'module', 'version', 'v_req', 'print', 'f', 'module', 'required', 'version', 'v_req', 'your', 'version', 'v_inst', 'except', 'print', 'f', 'module', 'not', 'installed']","['running', 'script', 'python', 'interpreter', 'want', 'check', 'use', 'following', 'version', 'absl', 'py', 'agate', 'agate', 'dbf', 'agate', 'excel', 'agate', 'sql', 'appnope', 'example', 'absl', 'py', '__version__', 'logging', 'error', 'update', 'version', 'sys', 'exit', 'repeat', 'package', 'way', 'iterate', 'specified', 'package', 'raise', 'error', 'one', 'condition', 'met']","['you', 'can', 'do', 'something', 'like', 'this', 'and', 'define', 'the', 'module', 'and', 'version', 'in', 'a', 'dictionary', 'import', 'pkg_resources', 'module_versions', 'absl', 'py', 'agate', 'for', 'module', 'v_req', 'in', 'module_versions', 'item', 'try', 'if', 'pkg_resources', 'get_distribution', 'module', 'version', 'v_req', 'print', 'f', 'module', 'required', 'version', 'v_req', 'your', 'version', 'v_inst', 'except', 'print', 'f', 'module', 'not', 'installed']",System Requirements and AWS,3,"{'neg': 0.044, 'neu': 0.937, 'pos': 0.019, 'compound': -0.4003}",0.041666666666666664,3,Python Package Installation and Management,3query
64783448,How to check if all packages meet version requirements?,"<p>When running a script in Python interpreter, I want to check if I use the following versions:</p>
<pre><code>absl-py==0.1.10
agate==1.6.0
agate-dbf==0.2.0
agate-excel==0.2.1
agate-sql==0.5.2
appnope==0.1.0
</code></pre>
<p>I can for example do this:</p>
<pre><code>if absl-py.__version__ != &quot;0.1.10&quot;:
    logging.error(&quot;update to version == 0.1.10&quot;)
    sys.exit() #
</code></pre>
<p>And repeat for all other packages. Is there a way to iterate through all the specified packages and raise and error when one if the conditions is not met?</p>
",<python><requirements>,2020-11-11 09:09:30,259,0,3,64784094,"<p>You can receive the list of the installed packages using setuptools' <a href=""https://setuptools.readthedocs.io/en/latest/pkg_resources.html"" rel=""nofollow noreferrer""><code>pkg_resources</code></a>:</p>
<pre><code>import pkg_resources
package_versions = {
    p.project_name: p.version for p in pkg_resources.working_set
}
</code></pre>
<p>Now you can iterate through your file and compare the versions in it with those in the <code>package_versions</code> dict.</p>
",2020-11,when running a script in python interpreter i want to check if i use the following versions absl py       agate       agate dbf       agate excel       agate sql       appnope       i can for example do this if absl py __version__       logging error update to version       sys exit and repeat for all other packages is there a way to iterate through all the specified packages and raise and error when one if the conditions is not met,you can receive the list of the installed packages using setuptools pkg_resources import pkg_resources package_versions p project_name p version for p in pkg_resources working_set now you can iterate through your file and compare the versions in it with those in the package_versions dict,"['python', 'requirements']","['when', 'running', 'a', 'script', 'in', 'python', 'interpreter', 'i', 'want', 'to', 'check', 'if', 'i', 'use', 'the', 'following', 'versions', 'absl', 'py', 'agate', 'agate', 'dbf', 'agate', 'excel', 'agate', 'sql', 'appnope', 'i', 'can', 'for', 'example', 'do', 'this', 'if', 'absl', 'py', '__version__', 'logging', 'error', 'update', 'to', 'version', 'sys', 'exit', 'and', 'repeat', 'for', 'all', 'other', 'packages', 'is', 'there', 'a', 'way', 'to', 'iterate', 'through', 'all', 'the', 'specified', 'packages', 'and', 'raise', 'and', 'error', 'when', 'one', 'if', 'the', 'conditions', 'is', 'not', 'met']","['you', 'can', 'receive', 'the', 'list', 'of', 'the', 'installed', 'packages', 'using', 'setuptools', 'pkg_resources', 'import', 'pkg_resources', 'package_versions', 'p', 'project_name', 'p', 'version', 'for', 'p', 'in', 'pkg_resources', 'working_set', 'now', 'you', 'can', 'iterate', 'through', 'your', 'file', 'and', 'compare', 'the', 'versions', 'in', 'it', 'with', 'those', 'in', 'the', 'package_versions', 'dict']","['running', 'script', 'python', 'interpreter', 'want', 'check', 'use', 'following', 'version', 'absl', 'py', 'agate', 'agate', 'dbf', 'agate', 'excel', 'agate', 'sql', 'appnope', 'example', 'absl', 'py', '__version__', 'logging', 'error', 'update', 'version', 'sys', 'exit', 'repeat', 'package', 'way', 'iterate', 'specified', 'package', 'raise', 'error', 'one', 'condition', 'met']","['you', 'can', 'receive', 'the', 'list', 'of', 'the', 'installed', 'package', 'using', 'setuptools', 'pkg_resources', 'import', 'pkg_resources', 'package_versions', 'p', 'project_name', 'p', 'version', 'for', 'p', 'in', 'pkg_resources', 'working_set', 'now', 'you', 'can', 'iterate', 'through', 'your', 'file', 'and', 'compare', 'the', 'version', 'in', 'it', 'with', 'those', 'in', 'the', 'package_versions', 'dict']",System Requirements and AWS,3,"{'neg': 0.044, 'neu': 0.937, 'pos': 0.019, 'compound': -0.4003}",0.041666666666666664,3,Python Package Installation and Management,3query
64712007,Update objects from two modules with same attribute in DOORS,"<p>I have one module with objects that have the attribute <em>customer ID</em>.
I have new module, with updated data, which was an import from PDF to DOORS using ReqMan.</p>
<p>Now I want to update the first module with data from the new module. The <em>customer ID</em> attribute is equal in both modules, but I cannot find a way in DOORS to do a sort of VLOOKUP to look for the <em>customer ID</em> and update the <em>Object Text</em> on the base module.</p>
<p>Preferably I would like to do it without DXL.</p>
",<requirements><ibm-doors><ibm-rational><requirements-management>,2020-11-06 09:30:01,577,0,2,64712561,"<p>(modify the following instructions as needed - I describe my favorite settings here)</p>
<p>Use spreadsheet import and export, preferably Tab separated.
For export, create a view which does NOT contain Absolute Number nor the main column, but all the data you want to modify plus customer ID. Ensure that the labels of the columns are identical to the attribute names.</p>
<p>In the generated text file, you can change the attributes for existing rows and you can add new rows with customer IDs that do not yet exist in the module. Make sure that the first line contains the attribute names.</p>
<p>After you updated your text file, open the module and choose File -&gt; Import -&gt; Spreadsheet with the following settings :</p>
<ul>
<li>Import to attributes: by column labes</li>
<li>Import options: Update existing objects</li>
<li>Update: All Objects</li>
<li>Data separator: Tab</li>
<li>Input file: the full path to your .tsv file</li>
<li>Advanced: check that the columns in the first row correspond to your attribute names</li>
<li>set the correct encoding</li>
<li>press Import</li>
<li>there should be no question  &quot;create new attribute?&quot;</li>
<li>In the dialog &quot;Select key&quot;, select &quot;customer ID&quot; as the &quot;column/attribute that uniquely identifies the objects&quot;.</li>
<li>press &quot;Select&quot;</li>
<li>check the result, save the module only if everything looks correct.</li>
</ul>
",2020-11,i have one module with objects that have the attribute customer id i have new module with updated data which was an import from pdf to doors using reqman now i want to update the first module with data from the new module the customer id attribute is equal in both modules but i cannot find a way in doors to do a sort of vlookup to look for the customer id and update the object text on the base module preferably i would like to do it without dxl,modify the following instructions as needed i describe my favorite settings here use spreadsheet import and export preferably tab separated for export create a view which does not contain absolute number nor the main column but all the data you want to modify plus customer id ensure that the labels of the columns are identical to the attribute names in the generated text file you can change the attributes for existing rows and you can add new rows with customer ids that do not yet exist in the module make sure that the first line contains the attribute names after you updated your text file open the module and choose file import spreadsheet with the following settings import to attributes by column labes import options update existing objects update all objects data separator tab input file the full path to your tsv file advanced check that the columns in the first row correspond to your attribute names set the correct encoding press import there should be no question create new attribute in the dialog select key select customer id as the column attribute that uniquely identifies the objects press select check the result save the module only if everything looks correct,"['requirements', 'ibm-doors', 'ibm-rational', 'requirements-management']","['i', 'have', 'one', 'module', 'with', 'objects', 'that', 'have', 'the', 'attribute', 'customer', 'id', 'i', 'have', 'new', 'module', 'with', 'updated', 'data', 'which', 'was', 'an', 'import', 'from', 'pdf', 'to', 'doors', 'using', 'reqman', 'now', 'i', 'want', 'to', 'update', 'the', 'first', 'module', 'with', 'data', 'from', 'the', 'new', 'module', 'the', 'customer', 'id', 'attribute', 'is', 'equal', 'in', 'both', 'modules', 'but', 'i', 'can', 'not', 'find', 'a', 'way', 'in', 'doors', 'to', 'do', 'a', 'sort', 'of', 'vlookup', 'to', 'look', 'for', 'the', 'customer', 'id', 'and', 'update', 'the', 'object', 'text', 'on', 'the', 'base', 'module', 'preferably', 'i', 'would', 'like', 'to', 'do', 'it', 'without', 'dxl']","['modify', 'the', 'following', 'instructions', 'as', 'needed', 'i', 'describe', 'my', 'favorite', 'settings', 'here', 'use', 'spreadsheet', 'import', 'and', 'export', 'preferably', 'tab', 'separated', 'for', 'export', 'create', 'a', 'view', 'which', 'does', 'not', 'contain', 'absolute', 'number', 'nor', 'the', 'main', 'column', 'but', 'all', 'the', 'data', 'you', 'want', 'to', 'modify', 'plus', 'customer', 'id', 'ensure', 'that', 'the', 'labels', 'of', 'the', 'columns', 'are', 'identical', 'to', 'the', 'attribute', 'names', 'in', 'the', 'generated', 'text', 'file', 'you', 'can', 'change', 'the', 'attributes', 'for', 'existing', 'rows', 'and', 'you', 'can', 'add', 'new', 'rows', 'with', 'customer', 'ids', 'that', 'do', 'not', 'yet', 'exist', 'in', 'the', 'module', 'make', 'sure', 'that', 'the', 'first', 'line', 'contains', 'the', 'attribute', 'names', 'after', 'you', 'updated', 'your', 'text', 'file', 'open', 'the', 'module', 'and', 'choose', 'file', 'import', 'spreadsheet', 'with', 'the', 'following', 'settings', 'import', 'to', 'attributes', 'by', 'column', 'labes', 'import', 'options', 'update', 'existing', 'objects', 'update', 'all', 'objects', 'data', 'separator', 'tab', 'input', 'file', 'the', 'full', 'path', 'to', 'your', 'tsv', 'file', 'advanced', 'check', 'that', 'the', 'columns', 'in', 'the', 'first', 'row', 'correspond', 'to', 'your', 'attribute', 'names', 'set', 'the', 'correct', 'encoding', 'press', 'import', 'there', 'should', 'be', 'no', 'question', 'create', 'new', 'attribute', 'in', 'the', 'dialog', 'select', 'key', 'select', 'customer', 'id', 'as', 'the', 'column', 'attribute', 'that', 'uniquely', 'identifies', 'the', 'objects', 'press', 'select', 'check', 'the', 'result', 'save', 'the', 'module', 'only', 'if', 'everything', 'looks', 'correct']","['one', 'module', 'object', 'attribute', 'customer', 'id', 'new', 'module', 'updated', 'data', 'wa', 'import', 'pdf', 'door', 'using', 'reqman', 'want', 'update', 'first', 'module', 'data', 'new', 'module', 'customer', 'id', 'attribute', 'equal', 'module', 'find', 'way', 'door', 'sort', 'vlookup', 'look', 'customer', 'id', 'update', 'object', 'text', 'base', 'module', 'preferably', 'would', 'like', 'without', 'dxl']","['modify', 'the', 'following', 'instruction', 'a', 'needed', 'i', 'describe', 'my', 'favorite', 'setting', 'here', 'use', 'spreadsheet', 'import', 'and', 'export', 'preferably', 'tab', 'separated', 'for', 'export', 'create', 'a', 'view', 'which', 'doe', 'not', 'contain', 'absolute', 'number', 'nor', 'the', 'main', 'column', 'but', 'all', 'the', 'data', 'you', 'want', 'to', 'modify', 'plus', 'customer', 'id', 'ensure', 'that', 'the', 'label', 'of', 'the', 'column', 'are', 'identical', 'to', 'the', 'attribute', 'name', 'in', 'the', 'generated', 'text', 'file', 'you', 'can', 'change', 'the', 'attribute', 'for', 'existing', 'row', 'and', 'you', 'can', 'add', 'new', 'row', 'with', 'customer', 'id', 'that', 'do', 'not', 'yet', 'exist', 'in', 'the', 'module', 'make', 'sure', 'that', 'the', 'first', 'line', 'contains', 'the', 'attribute', 'name', 'after', 'you', 'updated', 'your', 'text', 'file', 'open', 'the', 'module', 'and', 'choose', 'file', 'import', 'spreadsheet', 'with', 'the', 'following', 'setting', 'import', 'to', 'attribute', 'by', 'column', 'labes', 'import', 'option', 'update', 'existing', 'object', 'update', 'all', 'object', 'data', 'separator', 'tab', 'input', 'file', 'the', 'full', 'path', 'to', 'your', 'tsv', 'file', 'advanced', 'check', 'that', 'the', 'column', 'in', 'the', 'first', 'row', 'correspond', 'to', 'your', 'attribute', 'name', 'set', 'the', 'correct', 'encoding', 'press', 'import', 'there', 'should', 'be', 'no', 'question', 'create', 'new', 'attribute', 'in', 'the', 'dialog', 'select', 'key', 'select', 'customer', 'id', 'a', 'the', 'column', 'attribute', 'that', 'uniquely', 'identifies', 'the', 'object', 'press', 'select', 'check', 'the', 'result', 'save', 'the', 'module', 'only', 'if', 'everything', 'look', 'correct']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.949, 'pos': 0.051, 'compound': 0.5267}",-0.055454545454545465,3,Python Package Installation and Management,3query
64712007,Update objects from two modules with same attribute in DOORS,"<p>I have one module with objects that have the attribute <em>customer ID</em>.
I have new module, with updated data, which was an import from PDF to DOORS using ReqMan.</p>
<p>Now I want to update the first module with data from the new module. The <em>customer ID</em> attribute is equal in both modules, but I cannot find a way in DOORS to do a sort of VLOOKUP to look for the <em>customer ID</em> and update the <em>Object Text</em> on the base module.</p>
<p>Preferably I would like to do it without DXL.</p>
",<requirements><ibm-doors><ibm-rational><requirements-management>,2020-11-06 09:30:01,577,0,2,64712710,"<pre><code>Object ob, ob1
Module m = current // First module

string s=&quot;/Training Car Project/Stakeholder Requirements&quot; //Give full path of your second module

Module mod=read(s,false)

for ob in m do
{
for ob1 in mod do
{
if((ob.&quot;customer ID&quot;&quot;&quot; = ob1.&quot;customer ID&quot;&quot;&quot;) &amp;&amp; (ob.&quot;Object Text&quot;&quot;&quot; != ob1.&quot;Object Text&quot;&quot;&quot;))
{
ob.&quot;Object Text&quot;&quot;&quot; = ob1.&quot;Object Text&quot;&quot;&quot;
}
}
}
</code></pre>
",2020-11,i have one module with objects that have the attribute customer id i have new module with updated data which was an import from pdf to doors using reqman now i want to update the first module with data from the new module the customer id attribute is equal in both modules but i cannot find a way in doors to do a sort of vlookup to look for the customer id and update the object text on the base module preferably i would like to do it without dxl,object ob ob  module m current first module string s training car project stakeholder requirements give full path of your second module module mod read s false for ob in m do for ob  in mod do if ob customer id ob  customer id ob object text ob  object text ob object text ob  object text,"['requirements', 'ibm-doors', 'ibm-rational', 'requirements-management']","['i', 'have', 'one', 'module', 'with', 'objects', 'that', 'have', 'the', 'attribute', 'customer', 'id', 'i', 'have', 'new', 'module', 'with', 'updated', 'data', 'which', 'was', 'an', 'import', 'from', 'pdf', 'to', 'doors', 'using', 'reqman', 'now', 'i', 'want', 'to', 'update', 'the', 'first', 'module', 'with', 'data', 'from', 'the', 'new', 'module', 'the', 'customer', 'id', 'attribute', 'is', 'equal', 'in', 'both', 'modules', 'but', 'i', 'can', 'not', 'find', 'a', 'way', 'in', 'doors', 'to', 'do', 'a', 'sort', 'of', 'vlookup', 'to', 'look', 'for', 'the', 'customer', 'id', 'and', 'update', 'the', 'object', 'text', 'on', 'the', 'base', 'module', 'preferably', 'i', 'would', 'like', 'to', 'do', 'it', 'without', 'dxl']","['object', 'ob', 'ob', 'module', 'm', 'current', 'first', 'module', 'string', 's', 'training', 'car', 'project', 'stakeholder', 'requirements', 'give', 'full', 'path', 'of', 'your', 'second', 'module', 'module', 'mod', 'read', 's', 'false', 'for', 'ob', 'in', 'm', 'do', 'for', 'ob', 'in', 'mod', 'do', 'if', 'ob', 'customer', 'id', 'ob', 'customer', 'id', 'ob', 'object', 'text', 'ob', 'object', 'text', 'ob', 'object', 'text', 'ob', 'object', 'text']","['one', 'module', 'object', 'attribute', 'customer', 'id', 'new', 'module', 'updated', 'data', 'wa', 'import', 'pdf', 'door', 'using', 'reqman', 'want', 'update', 'first', 'module', 'data', 'new', 'module', 'customer', 'id', 'attribute', 'equal', 'module', 'find', 'way', 'door', 'sort', 'vlookup', 'look', 'customer', 'id', 'update', 'object', 'text', 'base', 'module', 'preferably', 'would', 'like', 'without', 'dxl']","['object', 'ob', 'ob', 'module', 'm', 'current', 'first', 'module', 'string', 's', 'training', 'car', 'project', 'stakeholder', 'requirement', 'give', 'full', 'path', 'of', 'your', 'second', 'module', 'module', 'mod', 'read', 's', 'false', 'for', 'ob', 'in', 'm', 'do', 'for', 'ob', 'in', 'mod', 'do', 'if', 'ob', 'customer', 'id', 'ob', 'customer', 'id', 'ob', 'object', 'text', 'ob', 'object', 'text', 'ob', 'object', 'text', 'ob', 'object', 'text']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.949, 'pos': 0.051, 'compound': 0.5267}",-0.055454545454545465,3,Python Package Installation and Management,3query
63651256,PIP install version problems on Mac OS,"<p>I am trying to install several dependencies for a python project from a requirements.txt file.</p>
<p>When it encounters the &quot;torch&quot; dependency, it claims to be unable to find version 1.3.1 -- but only on my Mac and not on Ubuntu, which is puzzling. (using a different version like 1.4 is not an option for this project, unfortunately)</p>
<p>On my Mac:</p>
<pre><code>➜  code mkdir test_proj
➜  code cd test_proj
➜  test_proj mkvirtualenv $(basename $(pwd))
created virtual environment CPython3.8.5.final.0-64 in 304ms
  creator CPython3Posix(dest=/Users/aeb/.virtualenvs/test_proj, clear=False, global=False)
  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/Users/aeb/Library/Application Support/virtualenv)
    added seed packages: pip==20.2.2, setuptools==49.6.0, wheel==0.35.1
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
virtualenvwrapper.user_scripts creating /Users/aeb/.virtualenvs/test_proj/bin/predeactivate
virtualenvwrapper.user_scripts creating /Users/aeb/.virtualenvs/test_proj/bin/postdeactivate
virtualenvwrapper.user_scripts creating /Users/aeb/.virtualenvs/test_proj/bin/preactivate
virtualenvwrapper.user_scripts creating /Users/aeb/.virtualenvs/test_proj/bin/postactivate
virtualenvwrapper.user_scripts creating /Users/aeb/.virtualenvs/test_proj/bin/get_env_details
(test_proj) ➜  test_proj which python
/Users/aeb/.virtualenvs/test_proj/bin/python
(test_proj) ➜  test_proj which pip
/Users/aeb/.virtualenvs/test_proj/bin/pip
(test_proj) ➜  test_proj pip install torch==1.3.1
ERROR: Could not find a version that satisfies the requirement torch==1.3.1 (from versions: 0.1.2, 0.1.2.post1, 0.1.2.post2, 1.4.0, 1.5.0, 1.5.1, 1.6.0)
ERROR: No matching distribution found for torch==1.3.1
(test_proj) ➜  test_proj
</code></pre>
<p>Interestingly, within an Ubuntu VM, there is no issue with the same pip install command:</p>
<pre><code>user@devbox-vm2:~$ pip3 install torch==1.3.1
Collecting torch==1.3.1
  Using cached https://files.pythonhosted.org/packages/88/95/90e8c4c31cfc67248bf944ba42029295b77159982f532c5689bcfe4e9108/torch-1.3.1-cp36-cp36m-manylinux1_x86_64.whl
</code></pre>
<p>Does anyone <strong>know why the mac version of pip is having trouble finding this specific version of PyTorch, but Ubuntu is not having the same problem</strong> and completes successfully?</p>
<p>Perhaps more to the point, <strong>is there a way to &quot;point&quot; the Mac version of pip to the same package file that the Ubuntu VM</strong> is using, since that seems to be working (or an analogous <strong>modification I can make to the requirements.txt file so that it works on Mac</strong>, and not just on Ubuntu)?</p>
<p>Many thanks!</p>
",<python><macos><pip><virtualenv><requirements>,2020-08-29 20:00:04,939,2,2,63651345,"<p><a href=""https://pypi.org/project/torch/1.3.1/#files"" rel=""nofollow noreferrer""><code>torch</code> 1.3.1</a> doesn't provide wheels for Python 3.8 so your Python on Mac cannot install it. On Ubuntu you use Python 3.6 so <code>pip</code> on Ubuntu can install this version.</p>
<p>Use Python 3.6 or 3.7 on Mac.</p>
",2020-08,i am trying to install several dependencies for a python project from a requirements txt file when it encounters the torch dependency it claims to be unable to find version       but only on my mac and not on ubuntu which is puzzling using a different version like     is not an option for this project unfortunately on my mac code mkdir test_proj code cd test_proj test_proj mkvirtualenv basename pwd created virtual environment cpython      final     in  ms creator cpython posix dest users aeb virtualenvs test_proj clear false global false seeder fromappdata download false pip bundle setuptools bundle wheel bundle via copy app_data_dir users aeb library application support virtualenv added seed packages pip       setuptools       wheel       activators bashactivator cshellactivator fishactivator powershellactivator pythonactivator xonshactivator virtualenvwrapper user_scripts creating users aeb virtualenvs test_proj bin predeactivate virtualenvwrapper user_scripts creating users aeb virtualenvs test_proj bin postdeactivate virtualenvwrapper user_scripts creating users aeb virtualenvs test_proj bin preactivate virtualenvwrapper user_scripts creating users aeb virtualenvs test_proj bin postactivate virtualenvwrapper user_scripts creating users aeb virtualenvs test_proj bin get_env_details test_proj test_proj which python users aeb virtualenvs test_proj bin python test_proj test_proj which pip users aeb virtualenvs test_proj bin pip test_proj test_proj pip install torch       error could not find a version that satisfies the requirement torch       from versions             post        post                          error no matching distribution found for torch       test_proj test_proj interestingly within an ubuntu vm there is no issue with the same pip install command user devbox vm  pip  install torch       collecting torch       using cached https files pythonhosted org packages      e c c cfc bf ba b f c bcfe e  torch       cp  cp m manylinux _x _  whl does anyone know why the mac version of pip is having trouble finding this specific version of pytorch but ubuntu is not having the same problem and completes successfully perhaps more to the point is there a way to point the mac version of pip to the same package file that the ubuntu vm is using since that seems to be working or an analogous modification i can make to the requirements txt file so that it works on mac and not just on ubuntu many thanks,torch       doesn t provide wheels for python     so your python on mac cannot install it on ubuntu you use python     so pip on ubuntu can install this version use python     or     on mac,"['python', 'macos', 'pip', 'virtualenv', 'requirements']","['i', 'am', 'trying', 'to', 'install', 'several', 'dependencies', 'for', 'a', 'python', 'project', 'from', 'a', 'requirements', 'txt', 'file', 'when', 'it', 'encounters', 'the', 'torch', 'dependency', 'it', 'claims', 'to', 'be', 'unable', 'to', 'find', 'version', 'but', 'only', 'on', 'my', 'mac', 'and', 'not', 'on', 'ubuntu', 'which', 'is', 'puzzling', 'using', 'a', 'different', 'version', 'like', 'is', 'not', 'an', 'option', 'for', 'this', 'project', 'unfortunately', 'on', 'my', 'mac', 'code', 'mkdir', 'test_proj', 'code', 'cd', 'test_proj', 'test_proj', 'mkvirtualenv', 'basename', 'pwd', 'created', 'virtual', 'environment', 'cpython', 'final', 'in', 'ms', 'creator', 'cpython', 'posix', 'dest', 'users', 'aeb', 'virtualenvs', 'test_proj', 'clear', 'false', 'global', 'false', 'seeder', 'fromappdata', 'download', 'false', 'pip', 'bundle', 'setuptools', 'bundle', 'wheel', 'bundle', 'via', 'copy', 'app_data_dir', 'users', 'aeb', 'library', 'application', 'support', 'virtualenv', 'added', 'seed', 'packages', 'pip', 'setuptools', 'wheel', 'activators', 'bashactivator', 'cshellactivator', 'fishactivator', 'powershellactivator', 'pythonactivator', 'xonshactivator', 'virtualenvwrapper', 'user_scripts', 'creating', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'predeactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'postdeactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'preactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'postactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'get_env_details', 'test_proj', 'test_proj', 'which', 'python', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'python', 'test_proj', 'test_proj', 'which', 'pip', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'pip', 'test_proj', 'test_proj', 'pip', 'install', 'torch', 'error', 'could', 'not', 'find', 'a', 'version', 'that', 'satisfies', 'the', 'requirement', 'torch', 'from', 'versions', 'post', 'post', 'error', 'no', 'matching', 'distribution', 'found', 'for', 'torch', 'test_proj', 'test_proj', 'interestingly', 'within', 'an', 'ubuntu', 'vm', 'there', 'is', 'no', 'issue', 'with', 'the', 'same', 'pip', 'install', 'command', 'user', 'devbox', 'vm', 'pip', 'install', 'torch', 'collecting', 'torch', 'using', 'cached', 'https', 'files', 'pythonhosted', 'org', 'packages', 'e', 'c', 'c', 'cfc', 'bf', 'ba', 'b', 'f', 'c', 'bcfe', 'e', 'torch', 'cp', 'cp', 'm', 'manylinux', '_x', '_', 'whl', 'does', 'anyone', 'know', 'why', 'the', 'mac', 'version', 'of', 'pip', 'is', 'having', 'trouble', 'finding', 'this', 'specific', 'version', 'of', 'pytorch', 'but', 'ubuntu', 'is', 'not', 'having', 'the', 'same', 'problem', 'and', 'completes', 'successfully', 'perhaps', 'more', 'to', 'the', 'point', 'is', 'there', 'a', 'way', 'to', 'point', 'the', 'mac', 'version', 'of', 'pip', 'to', 'the', 'same', 'package', 'file', 'that', 'the', 'ubuntu', 'vm', 'is', 'using', 'since', 'that', 'seems', 'to', 'be', 'working', 'or', 'an', 'analogous', 'modification', 'i', 'can', 'make', 'to', 'the', 'requirements', 'txt', 'file', 'so', 'that', 'it', 'works', 'on', 'mac', 'and', 'not', 'just', 'on', 'ubuntu', 'many', 'thanks']","['torch', 'doesn', 't', 'provide', 'wheels', 'for', 'python', 'so', 'your', 'python', 'on', 'mac', 'can', 'not', 'install', 'it', 'on', 'ubuntu', 'you', 'use', 'python', 'so', 'pip', 'on', 'ubuntu', 'can', 'install', 'this', 'version', 'use', 'python', 'or', 'on', 'mac']","['trying', 'install', 'several', 'dependency', 'python', 'project', 'requirement', 'txt', 'file', 'encounter', 'torch', 'dependency', 'claim', 'unable', 'find', 'version', 'mac', 'ubuntu', 'puzzling', 'using', 'different', 'version', 'like', 'option', 'project', 'unfortunately', 'mac', 'code', 'mkdir', 'test_proj', 'code', 'cd', 'test_proj', 'test_proj', 'mkvirtualenv', 'basename', 'pwd', 'created', 'virtual', 'environment', 'cpython', 'final', 'creator', 'cpython', 'posix', 'dest', 'user', 'aeb', 'virtualenvs', 'test_proj', 'clear', 'false', 'global', 'false', 'seeder', 'fromappdata', 'download', 'false', 'pip', 'bundle', 'setuptools', 'bundle', 'wheel', 'bundle', 'via', 'copy', 'app_data_dir', 'user', 'aeb', 'library', 'application', 'support', 'virtualenv', 'added', 'seed', 'package', 'pip', 'setuptools', 'wheel', 'activator', 'bashactivator', 'cshellactivator', 'fishactivator', 'powershellactivator', 'pythonactivator', 'xonshactivator', 'virtualenvwrapper', 'user_scripts', 'creating', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'predeactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'postdeactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'preactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'postactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'get_env_details', 'test_proj', 'test_proj', 'python', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'python', 'test_proj', 'test_proj', 'pip', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'pip', 'test_proj', 'test_proj', 'pip', 'install', 'torch', 'error', 'could', 'find', 'version', 'satisfies', 'requirement', 'torch', 'version', 'post', 'post', 'error', 'matching', 'distribution', 'found', 'torch', 'test_proj', 'test_proj', 'interestingly', 'within', 'ubuntu', 'vm', 'issue', 'pip', 'install', 'command', 'user', 'devbox', 'vm', 'pip', 'install', 'torch', 'collecting', 'torch', 'using', 'cached', 'http', 'file', 'pythonhosted', 'org', 'package', 'e', 'c', 'c', 'cfc', 'bf', 'ba', 'b', 'f', 'c', 'bcfe', 'e', 'torch', 'cp', 'cp', 'manylinux', '_x', '_', 'whl', 'doe', 'anyone', 'know', 'mac', 'version', 'pip', 'trouble', 'finding', 'specific', 'version', 'pytorch', 'ubuntu', 'problem', 'completes', 'successfully', 'perhaps', 'point', 'way', 'point', 'mac', 'version', 'pip', 'package', 'file', 'ubuntu', 'vm', 'using', 'since', 'seems', 'working', 'analogous', 'modification', 'make', 'requirement', 'txt', 'file', 'work', 'mac', 'ubuntu', 'many', 'thanks']","['torch', 'doesn', 't', 'provide', 'wheel', 'for', 'python', 'so', 'your', 'python', 'on', 'mac', 'can', 'not', 'install', 'it', 'on', 'ubuntu', 'you', 'use', 'python', 'so', 'pip', 'on', 'ubuntu', 'can', 'install', 'this', 'version', 'use', 'python', 'or', 'on', 'mac']",System Requirements and AWS,1,"{'neg': 0.063, 'neu': 0.854, 'pos': 0.083, 'compound': 0.5651}",-0.019999999999999997,1,Package Management and File Handling,3query
63651256,PIP install version problems on Mac OS,"<p>I am trying to install several dependencies for a python project from a requirements.txt file.</p>
<p>When it encounters the &quot;torch&quot; dependency, it claims to be unable to find version 1.3.1 -- but only on my Mac and not on Ubuntu, which is puzzling. (using a different version like 1.4 is not an option for this project, unfortunately)</p>
<p>On my Mac:</p>
<pre><code>➜  code mkdir test_proj
➜  code cd test_proj
➜  test_proj mkvirtualenv $(basename $(pwd))
created virtual environment CPython3.8.5.final.0-64 in 304ms
  creator CPython3Posix(dest=/Users/aeb/.virtualenvs/test_proj, clear=False, global=False)
  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/Users/aeb/Library/Application Support/virtualenv)
    added seed packages: pip==20.2.2, setuptools==49.6.0, wheel==0.35.1
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
virtualenvwrapper.user_scripts creating /Users/aeb/.virtualenvs/test_proj/bin/predeactivate
virtualenvwrapper.user_scripts creating /Users/aeb/.virtualenvs/test_proj/bin/postdeactivate
virtualenvwrapper.user_scripts creating /Users/aeb/.virtualenvs/test_proj/bin/preactivate
virtualenvwrapper.user_scripts creating /Users/aeb/.virtualenvs/test_proj/bin/postactivate
virtualenvwrapper.user_scripts creating /Users/aeb/.virtualenvs/test_proj/bin/get_env_details
(test_proj) ➜  test_proj which python
/Users/aeb/.virtualenvs/test_proj/bin/python
(test_proj) ➜  test_proj which pip
/Users/aeb/.virtualenvs/test_proj/bin/pip
(test_proj) ➜  test_proj pip install torch==1.3.1
ERROR: Could not find a version that satisfies the requirement torch==1.3.1 (from versions: 0.1.2, 0.1.2.post1, 0.1.2.post2, 1.4.0, 1.5.0, 1.5.1, 1.6.0)
ERROR: No matching distribution found for torch==1.3.1
(test_proj) ➜  test_proj
</code></pre>
<p>Interestingly, within an Ubuntu VM, there is no issue with the same pip install command:</p>
<pre><code>user@devbox-vm2:~$ pip3 install torch==1.3.1
Collecting torch==1.3.1
  Using cached https://files.pythonhosted.org/packages/88/95/90e8c4c31cfc67248bf944ba42029295b77159982f532c5689bcfe4e9108/torch-1.3.1-cp36-cp36m-manylinux1_x86_64.whl
</code></pre>
<p>Does anyone <strong>know why the mac version of pip is having trouble finding this specific version of PyTorch, but Ubuntu is not having the same problem</strong> and completes successfully?</p>
<p>Perhaps more to the point, <strong>is there a way to &quot;point&quot; the Mac version of pip to the same package file that the Ubuntu VM</strong> is using, since that seems to be working (or an analogous <strong>modification I can make to the requirements.txt file so that it works on Mac</strong>, and not just on Ubuntu)?</p>
<p>Many thanks!</p>
",<python><macos><pip><virtualenv><requirements>,2020-08-29 20:00:04,939,2,2,63651386,"<p>When you look at the <a href=""https://pypi.org/project/torch/1.3.1/#files"" rel=""nofollow noreferrer"">list of files available</a> for that version of Torch, you can see that:</p>
<ul>
<li>There is no source distribution (which would generally be a <code>.tar.gz</code>) version that you would be able to recompile;</li>
<li>All available binary distributions target either:
<ul>
<li><code>manylinux1</code> is a tag that works on many linux versions, that can be pretty old - it is not surprising that it would work on Ubuntu, with Python 2.7, 3.5, 3.6 or 3.7;</li>
<li>Mac OS 10.6 with Python 3.5, or Mac OS 10.7 with Python 2.7, 3.6, or 3.7 - these builds would probably work on later versions of Mac OS, provided the version of Python matches;</li>
</ul>
</li>
</ul>
<p>In particular, none of these distributions can run on Python 3.8, which is the version of Python shown by your console output.</p>
",2020-08,i am trying to install several dependencies for a python project from a requirements txt file when it encounters the torch dependency it claims to be unable to find version       but only on my mac and not on ubuntu which is puzzling using a different version like     is not an option for this project unfortunately on my mac code mkdir test_proj code cd test_proj test_proj mkvirtualenv basename pwd created virtual environment cpython      final     in  ms creator cpython posix dest users aeb virtualenvs test_proj clear false global false seeder fromappdata download false pip bundle setuptools bundle wheel bundle via copy app_data_dir users aeb library application support virtualenv added seed packages pip       setuptools       wheel       activators bashactivator cshellactivator fishactivator powershellactivator pythonactivator xonshactivator virtualenvwrapper user_scripts creating users aeb virtualenvs test_proj bin predeactivate virtualenvwrapper user_scripts creating users aeb virtualenvs test_proj bin postdeactivate virtualenvwrapper user_scripts creating users aeb virtualenvs test_proj bin preactivate virtualenvwrapper user_scripts creating users aeb virtualenvs test_proj bin postactivate virtualenvwrapper user_scripts creating users aeb virtualenvs test_proj bin get_env_details test_proj test_proj which python users aeb virtualenvs test_proj bin python test_proj test_proj which pip users aeb virtualenvs test_proj bin pip test_proj test_proj pip install torch       error could not find a version that satisfies the requirement torch       from versions             post        post                          error no matching distribution found for torch       test_proj test_proj interestingly within an ubuntu vm there is no issue with the same pip install command user devbox vm  pip  install torch       collecting torch       using cached https files pythonhosted org packages      e c c cfc bf ba b f c bcfe e  torch       cp  cp m manylinux _x _  whl does anyone know why the mac version of pip is having trouble finding this specific version of pytorch but ubuntu is not having the same problem and completes successfully perhaps more to the point is there a way to point the mac version of pip to the same package file that the ubuntu vm is using since that seems to be working or an analogous modification i can make to the requirements txt file so that it works on mac and not just on ubuntu many thanks,when you look at the list of files available for that version of torch you can see that there is no source distribution which would generally be a tar gz version that you would be able to recompile all available binary distributions target either manylinux  is a tag that works on many linux versions that can be pretty old it is not surprising that it would work on ubuntu with python             or     mac os     with python     or mac os     with python         or     these builds would probably work on later versions of mac os provided the version of python matches in particular none of these distributions can run on python     which is the version of python shown by your console output,"['python', 'macos', 'pip', 'virtualenv', 'requirements']","['i', 'am', 'trying', 'to', 'install', 'several', 'dependencies', 'for', 'a', 'python', 'project', 'from', 'a', 'requirements', 'txt', 'file', 'when', 'it', 'encounters', 'the', 'torch', 'dependency', 'it', 'claims', 'to', 'be', 'unable', 'to', 'find', 'version', 'but', 'only', 'on', 'my', 'mac', 'and', 'not', 'on', 'ubuntu', 'which', 'is', 'puzzling', 'using', 'a', 'different', 'version', 'like', 'is', 'not', 'an', 'option', 'for', 'this', 'project', 'unfortunately', 'on', 'my', 'mac', 'code', 'mkdir', 'test_proj', 'code', 'cd', 'test_proj', 'test_proj', 'mkvirtualenv', 'basename', 'pwd', 'created', 'virtual', 'environment', 'cpython', 'final', 'in', 'ms', 'creator', 'cpython', 'posix', 'dest', 'users', 'aeb', 'virtualenvs', 'test_proj', 'clear', 'false', 'global', 'false', 'seeder', 'fromappdata', 'download', 'false', 'pip', 'bundle', 'setuptools', 'bundle', 'wheel', 'bundle', 'via', 'copy', 'app_data_dir', 'users', 'aeb', 'library', 'application', 'support', 'virtualenv', 'added', 'seed', 'packages', 'pip', 'setuptools', 'wheel', 'activators', 'bashactivator', 'cshellactivator', 'fishactivator', 'powershellactivator', 'pythonactivator', 'xonshactivator', 'virtualenvwrapper', 'user_scripts', 'creating', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'predeactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'postdeactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'preactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'postactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'get_env_details', 'test_proj', 'test_proj', 'which', 'python', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'python', 'test_proj', 'test_proj', 'which', 'pip', 'users', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'pip', 'test_proj', 'test_proj', 'pip', 'install', 'torch', 'error', 'could', 'not', 'find', 'a', 'version', 'that', 'satisfies', 'the', 'requirement', 'torch', 'from', 'versions', 'post', 'post', 'error', 'no', 'matching', 'distribution', 'found', 'for', 'torch', 'test_proj', 'test_proj', 'interestingly', 'within', 'an', 'ubuntu', 'vm', 'there', 'is', 'no', 'issue', 'with', 'the', 'same', 'pip', 'install', 'command', 'user', 'devbox', 'vm', 'pip', 'install', 'torch', 'collecting', 'torch', 'using', 'cached', 'https', 'files', 'pythonhosted', 'org', 'packages', 'e', 'c', 'c', 'cfc', 'bf', 'ba', 'b', 'f', 'c', 'bcfe', 'e', 'torch', 'cp', 'cp', 'm', 'manylinux', '_x', '_', 'whl', 'does', 'anyone', 'know', 'why', 'the', 'mac', 'version', 'of', 'pip', 'is', 'having', 'trouble', 'finding', 'this', 'specific', 'version', 'of', 'pytorch', 'but', 'ubuntu', 'is', 'not', 'having', 'the', 'same', 'problem', 'and', 'completes', 'successfully', 'perhaps', 'more', 'to', 'the', 'point', 'is', 'there', 'a', 'way', 'to', 'point', 'the', 'mac', 'version', 'of', 'pip', 'to', 'the', 'same', 'package', 'file', 'that', 'the', 'ubuntu', 'vm', 'is', 'using', 'since', 'that', 'seems', 'to', 'be', 'working', 'or', 'an', 'analogous', 'modification', 'i', 'can', 'make', 'to', 'the', 'requirements', 'txt', 'file', 'so', 'that', 'it', 'works', 'on', 'mac', 'and', 'not', 'just', 'on', 'ubuntu', 'many', 'thanks']","['when', 'you', 'look', 'at', 'the', 'list', 'of', 'files', 'available', 'for', 'that', 'version', 'of', 'torch', 'you', 'can', 'see', 'that', 'there', 'is', 'no', 'source', 'distribution', 'which', 'would', 'generally', 'be', 'a', 'tar', 'gz', 'version', 'that', 'you', 'would', 'be', 'able', 'to', 'recompile', 'all', 'available', 'binary', 'distributions', 'target', 'either', 'manylinux', 'is', 'a', 'tag', 'that', 'works', 'on', 'many', 'linux', 'versions', 'that', 'can', 'be', 'pretty', 'old', 'it', 'is', 'not', 'surprising', 'that', 'it', 'would', 'work', 'on', 'ubuntu', 'with', 'python', 'or', 'mac', 'os', 'with', 'python', 'or', 'mac', 'os', 'with', 'python', 'or', 'these', 'builds', 'would', 'probably', 'work', 'on', 'later', 'versions', 'of', 'mac', 'os', 'provided', 'the', 'version', 'of', 'python', 'matches', 'in', 'particular', 'none', 'of', 'these', 'distributions', 'can', 'run', 'on', 'python', 'which', 'is', 'the', 'version', 'of', 'python', 'shown', 'by', 'your', 'console', 'output']","['trying', 'install', 'several', 'dependency', 'python', 'project', 'requirement', 'txt', 'file', 'encounter', 'torch', 'dependency', 'claim', 'unable', 'find', 'version', 'mac', 'ubuntu', 'puzzling', 'using', 'different', 'version', 'like', 'option', 'project', 'unfortunately', 'mac', 'code', 'mkdir', 'test_proj', 'code', 'cd', 'test_proj', 'test_proj', 'mkvirtualenv', 'basename', 'pwd', 'created', 'virtual', 'environment', 'cpython', 'final', 'creator', 'cpython', 'posix', 'dest', 'user', 'aeb', 'virtualenvs', 'test_proj', 'clear', 'false', 'global', 'false', 'seeder', 'fromappdata', 'download', 'false', 'pip', 'bundle', 'setuptools', 'bundle', 'wheel', 'bundle', 'via', 'copy', 'app_data_dir', 'user', 'aeb', 'library', 'application', 'support', 'virtualenv', 'added', 'seed', 'package', 'pip', 'setuptools', 'wheel', 'activator', 'bashactivator', 'cshellactivator', 'fishactivator', 'powershellactivator', 'pythonactivator', 'xonshactivator', 'virtualenvwrapper', 'user_scripts', 'creating', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'predeactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'postdeactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'preactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'postactivate', 'virtualenvwrapper', 'user_scripts', 'creating', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'get_env_details', 'test_proj', 'test_proj', 'python', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'python', 'test_proj', 'test_proj', 'pip', 'user', 'aeb', 'virtualenvs', 'test_proj', 'bin', 'pip', 'test_proj', 'test_proj', 'pip', 'install', 'torch', 'error', 'could', 'find', 'version', 'satisfies', 'requirement', 'torch', 'version', 'post', 'post', 'error', 'matching', 'distribution', 'found', 'torch', 'test_proj', 'test_proj', 'interestingly', 'within', 'ubuntu', 'vm', 'issue', 'pip', 'install', 'command', 'user', 'devbox', 'vm', 'pip', 'install', 'torch', 'collecting', 'torch', 'using', 'cached', 'http', 'file', 'pythonhosted', 'org', 'package', 'e', 'c', 'c', 'cfc', 'bf', 'ba', 'b', 'f', 'c', 'bcfe', 'e', 'torch', 'cp', 'cp', 'manylinux', '_x', '_', 'whl', 'doe', 'anyone', 'know', 'mac', 'version', 'pip', 'trouble', 'finding', 'specific', 'version', 'pytorch', 'ubuntu', 'problem', 'completes', 'successfully', 'perhaps', 'point', 'way', 'point', 'mac', 'version', 'pip', 'package', 'file', 'ubuntu', 'vm', 'using', 'since', 'seems', 'working', 'analogous', 'modification', 'make', 'requirement', 'txt', 'file', 'work', 'mac', 'ubuntu', 'many', 'thanks']","['when', 'you', 'look', 'at', 'the', 'list', 'of', 'file', 'available', 'for', 'that', 'version', 'of', 'torch', 'you', 'can', 'see', 'that', 'there', 'is', 'no', 'source', 'distribution', 'which', 'would', 'generally', 'be', 'a', 'tar', 'gz', 'version', 'that', 'you', 'would', 'be', 'able', 'to', 'recompile', 'all', 'available', 'binary', 'distribution', 'target', 'either', 'manylinux', 'is', 'a', 'tag', 'that', 'work', 'on', 'many', 'linux', 'version', 'that', 'can', 'be', 'pretty', 'old', 'it', 'is', 'not', 'surprising', 'that', 'it', 'would', 'work', 'on', 'ubuntu', 'with', 'python', 'or', 'mac', 'o', 'with', 'python', 'or', 'mac', 'o', 'with', 'python', 'or', 'these', 'build', 'would', 'probably', 'work', 'on', 'later', 'version', 'of', 'mac', 'o', 'provided', 'the', 'version', 'of', 'python', 'match', 'in', 'particular', 'none', 'of', 'these', 'distribution', 'can', 'run', 'on', 'python', 'which', 'is', 'the', 'version', 'of', 'python', 'shown', 'by', 'your', 'console', 'output']",System Requirements and AWS,1,"{'neg': 0.063, 'neu': 0.854, 'pos': 0.083, 'compound': 0.5651}",-0.019999999999999997,1,Package Management and File Handling,3query
63432212,Change data requirements of an input field based on the value of a select field in a web form,"<p>I am working on a web form that includes a select drop down with two options: &quot;Cedula&quot; (in English, &quot;Identification&quot;) and &quot;Pasaporte&quot; (in English, &quot;Passport&quot;).</p>
<p><a href=""https://i.stack.imgur.com/3Nm6W.png"" rel=""nofollow noreferrer"">Here</a> is an image of my web form so far.</p>
<p>Please help me achieve the following goal: when the user selects &quot;Cedula&quot;, they are limited to 10 digits, but when they select &quot;Pasaporte, they are not limited to 10 digits.</p>
<p>Here is my code so far:</p>
<pre><code>&lt;?php
if ($_GET['id']) {
    $cliente = $clienteNegocio-&gt;recuperar($_GET['id']);
    $txtAction = 'Editar';          
}else{
    $cliente = new cliente();
    $txtAction = 'Agregar';
}

?&gt;
&lt;div class=&quot;container&quot;&gt;
  &lt;div class=&quot;page-header&quot;&gt;
    &lt;h1&gt;&lt;?php echo $txtAction; ?&gt; Cliente&lt;/h1&gt;
  &lt;/div&gt;
    &lt;form role=&quot;form&quot; method=&quot;post&quot; id=&quot;principal&quot;&gt;
        &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value=&quot;&lt;?php echo $cliente-&gt;getId();?&gt;&quot; &gt;
        
        &lt;div class=&quot;form-group&quot;&gt;
            &lt;label for=&quot;nombre&quot;&gt;Nombre&lt;/label&gt;
            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;nombre&quot; name=&quot;nombre&quot; placeholder=&quot;Nombre&quot; value=&quot;&lt;?php echo $cliente-&gt;getNombre();?&gt;&quot; required&gt;
            &lt;div class=&quot;help-block with-errors&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
            &lt;label for=&quot;apellido&quot;&gt;Apellidos&lt;/label&gt;
            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;apellido&quot; name=&quot;apellido&quot; placeholder=&quot;Apellido&quot; value=&quot;&lt;?php echo $cliente-&gt;getApellido();?&gt;&quot; required&gt;
            &lt;div class=&quot;help-block with-errors&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
            &lt;label for=&quot;tipoDoc&quot;&gt;Tipo de Documento&lt;/label&gt;
            &lt;select class=&quot;form-control&quot; id=&quot;tipoDoc&quot; name=&quot;tipoDoc&quot;&gt;
                &lt;option value=&quot;Cedula&quot;  &lt;?php if($cliente-&gt;getTipoDoc() == 'Cedula') {echo &quot;selected&quot;;} ?&gt;  &gt;Cedula&lt;/option&gt;
                &lt;option value=&quot;Pasaporte&quot; &lt;?php if($cliente-&gt;getTipoDoc() == 'Pasaporte') {echo &quot;selected&quot;;} ?&gt; &gt;Pasaporte&lt;/option&gt;
            &lt;/select&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
            &lt;label for=&quot;nroDoc&quot;&gt;Numero de Documento&lt;/label&gt;
            &lt;input type=&quot;number&quot; class=&quot;form-control&quot; id=&quot;nroDoc&quot; maxlength=10 oninput=&quot;if(this.value.length &gt; this.maxLength) this.value = this.value.slice(0, this.maxLength);&quot;
             name=&quot;nroDoc&quot; placeholder=&quot;Numero de Documento&quot; value=&quot;&lt;?php echo $cliente -&gt;getNroDoc();?&gt;&quot; required&gt;
            &lt;div class=&quot;help-block with-errors&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
</code></pre>
",<php>,2020-08-16 01:08:15,90,0,1,63432384,"<p>There you go.</p>
<p>I have written a javascript function to check the length with you select Pasaporte/Cedula.</p>
<p>Secondly, in <code>&lt;input type = &quot;number&quot;/&gt;</code> you cannot set maxLength. Hence you have to set <code>&lt;input type = &quot;text&quot; /&gt;</code>. Also, an <code>onKeyPress</code> event to verify the input as number</p>
<pre><code>&lt;?php
if ($_GET['id']) {
    $cliente = $clienteNegocio-&gt;recuperar($_GET['id']);
    $txtAction = 'Editar';          
}else{
    $cliente = new cliente();
    $txtAction = 'Agregar';
}

?&gt;

&lt;script&gt;
function setMaxLength(){
    var inputVal = document.getElementById(&quot;tipoDoc&quot;)
    var selIndex = inputVal.options[inputVal.selectedIndex].value
    var inputNum = document.getElementById(&quot;nroDoc&quot;);


    if( selIndex === &quot;Cedula&quot;){

        inputNum.maxLength = 10
        selIndex.substr(0, 9);
        inputNum.value = inputNum.value.substr(0, 9);

    } else{

        // Set your own limit here
        // if selIndex === &quot;Pasaporte&quot;
        inputNum.maxLength = 20
    }
}
&lt;/script&gt;


&lt;div class=&quot;container&quot;&gt;
  &lt;div class=&quot;page-header&quot;&gt;
    &lt;h1&gt;&lt;?php echo $txtAction; ?&gt; Cliente&lt;/h1&gt;
  &lt;/div&gt;
    &lt;form role=&quot;form&quot; method=&quot;post&quot; id=&quot;principal&quot;&gt;
        &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value=&quot;&lt;?php echo $cliente-&gt;getId();?&gt;&quot; &gt;
        
        &lt;div class=&quot;form-group&quot;&gt;
            &lt;label for=&quot;nombre&quot;&gt;Nombre&lt;/label&gt;
            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;nombre&quot; name=&quot;nombre&quot; placeholder=&quot;Nombre&quot; value=&quot;&lt;?php echo $cliente-&gt;getNombre();?&gt;&quot; required&gt;
            &lt;div class=&quot;help-block with-errors&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
            &lt;label for=&quot;apellido&quot;&gt;Apellidos&lt;/label&gt;
            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;apellido&quot; name=&quot;apellido&quot; placeholder=&quot;Apellido&quot; value=&quot;&lt;?php echo $cliente-&gt;getApellido();?&gt;&quot; required&gt;
            &lt;div class=&quot;help-block with-errors&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
            &lt;label for=&quot;tipoDoc&quot;&gt;Tipo de Documento&lt;/label&gt;
            &lt;select class=&quot;form-control&quot; id=&quot;tipoDoc&quot; name=&quot;tipoDoc&quot; onChange=&quot;setMaxLength()&quot;&gt;
                &lt;option value=&quot;Cedula&quot;  &lt;?php if($cliente-&gt;getTipoDoc() == 'Cedula') {echo &quot;selected&quot;;} ?&gt;  &gt;Cedula&lt;/option&gt;
                &lt;option value=&quot;Pasaporte&quot; &lt;?php if($cliente-&gt;getTipoDoc() == 'Pasaporte') {echo &quot;selected&quot;;} ?&gt; &gt;Pasaporte&lt;/option&gt;
            &lt;/select&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
            &lt;label for=&quot;nroDoc&quot;&gt;Numero de Documento&lt;/label&gt;
            &lt;!-- 
                Here onKeyPress method is used to check if the input is a number
                in &lt;input type = &quot;number&quot;/&gt; you cannot set maxLength
                hence you have to set &lt;input type = &quot;text&quot; /&gt;
            --&gt;
            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;nroDoc&quot; maxlength=10 onkeypress=&quot;if ( isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;&quot;
             name=&quot;nroDoc&quot; placeholder=&quot;Numero de Documento&quot; value=&quot;&lt;?php echo $cliente -&gt;getNroDoc();?&gt;&quot; required&gt;
            &lt;div class=&quot;help-block with-errors&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/form&gt;
&lt;/div&gt;
</code></pre>
",2020-08,i am working on a web form that includes a select drop down with two options cedula in english identification and pasaporte in english passport here is an image of my web form so far please help me achieve the following goal when the user selects cedula they are limited to   digits but when they select pasaporte they are not limited to   digits here is my code so far php if _get id cliente clientenegocio recuperar _get id txtaction editar else cliente new cliente txtaction agregar div class container div class page header h  php echo txtaction cliente h  div form role form method post id principal input type hidden name id value php echo cliente getid div class form group label for nombre nombre label input type text class form control id nombre name nombre placeholder nombre value php echo cliente getnombre required div class help block with errors div div div class form group label for apellido apellidos label input type text class form control id apellido name apellido placeholder apellido value php echo cliente getapellido required div class help block with errors div div div class form group label for tipodoc tipo de documento label select class form control id tipodoc name tipodoc option value cedula php if cliente gettipodoc cedula echo selected cedula option option value pasaporte php if cliente gettipodoc pasaporte echo selected pasaporte option select div div class form group label for nrodoc numero de documento label input type number class form control id nrodoc maxlength   oninput if this value length this maxlength this value this value slice   this maxlength name nrodoc placeholder numero de documento value php echo cliente getnrodoc required div class help block with errors div div,there you go i have written a javascript function to check the length with you select pasaporte cedula secondly in input type number you cannot set maxlength hence you have to set input type text also an onkeypress event to verify the input as number php if _get id cliente clientenegocio recuperar _get id txtaction editar else cliente new cliente txtaction agregar script function setmaxlength var inputval document getelementbyid tipodoc var selindex inputval options inputval selectedindex value var inputnum document getelementbyid nrodoc if selindex cedula inputnum maxlength   selindex substr     inputnum value inputnum value substr     else set your own limit here if selindex pasaporte inputnum maxlength   script div class container div class page header h  php echo txtaction cliente h  div form role form method post id principal input type hidden name id value php echo cliente getid div class form group label for nombre nombre label input type text class form control id nombre name nombre placeholder nombre value php echo cliente getnombre required div class help block with errors div div div class form group label for apellido apellidos label input type text class form control id apellido name apellido placeholder apellido value php echo cliente getapellido required div class help block with errors div div div class form group label for tipodoc tipo de documento label select class form control id tipodoc name tipodoc onchange setmaxlength option value cedula php if cliente gettipodoc cedula echo selected cedula option option value pasaporte php if cliente gettipodoc pasaporte echo selected pasaporte option select div div class form group label for nrodoc numero de documento label here onkeypress method is used to check if the input is a number in input type number you cannot set maxlength hence you have to set input type text input type text class form control id nrodoc maxlength   onkeypress if isnan this value string fromcharcode event keycode return false name nrodoc placeholder numero de documento value php echo cliente getnrodoc required div class help block with errors div div form div,['php'],"['i', 'am', 'working', 'on', 'a', 'web', 'form', 'that', 'includes', 'a', 'select', 'drop', 'down', 'with', 'two', 'options', 'cedula', 'in', 'english', 'identification', 'and', 'pasaporte', 'in', 'english', 'passport', 'here', 'is', 'an', 'image', 'of', 'my', 'web', 'form', 'so', 'far', 'please', 'help', 'me', 'achieve', 'the', 'following', 'goal', 'when', 'the', 'user', 'selects', 'cedula', 'they', 'are', 'limited', 'to', 'digits', 'but', 'when', 'they', 'select', 'pasaporte', 'they', 'are', 'not', 'limited', 'to', 'digits', 'here', 'is', 'my', 'code', 'so', 'far', 'php', 'if', '_get', 'id', 'cliente', 'clientenegocio', 'recuperar', '_get', 'id', 'txtaction', 'editar', 'else', 'cliente', 'new', 'cliente', 'txtaction', 'agregar', 'div', 'class', 'container', 'div', 'class', 'page', 'header', 'h', 'php', 'echo', 'txtaction', 'cliente', 'h', 'div', 'form', 'role', 'form', 'method', 'post', 'id', 'principal', 'input', 'type', 'hidden', 'name', 'id', 'value', 'php', 'echo', 'cliente', 'getid', 'div', 'class', 'form', 'group', 'label', 'for', 'nombre', 'nombre', 'label', 'input', 'type', 'text', 'class', 'form', 'control', 'id', 'nombre', 'name', 'nombre', 'placeholder', 'nombre', 'value', 'php', 'echo', 'cliente', 'getnombre', 'required', 'div', 'class', 'help', 'block', 'with', 'errors', 'div', 'div', 'div', 'class', 'form', 'group', 'label', 'for', 'apellido', 'apellidos', 'label', 'input', 'type', 'text', 'class', 'form', 'control', 'id', 'apellido', 'name', 'apellido', 'placeholder', 'apellido', 'value', 'php', 'echo', 'cliente', 'getapellido', 'required', 'div', 'class', 'help', 'block', 'with', 'errors', 'div', 'div', 'div', 'class', 'form', 'group', 'label', 'for', 'tipodoc', 'tipo', 'de', 'documento', 'label', 'select', 'class', 'form', 'control', 'id', 'tipodoc', 'name', 'tipodoc', 'option', 'value', 'cedula', 'php', 'if', 'cliente', 'gettipodoc', 'cedula', 'echo', 'selected', 'cedula', 'option', 'option', 'value', 'pasaporte', 'php', 'if', 'cliente', 'gettipodoc', 'pasaporte', 'echo', 'selected', 'pasaporte', 'option', 'select', 'div', 'div', 'class', 'form', 'group', 'label', 'for', 'nrodoc', 'numero', 'de', 'documento', 'label', 'input', 'type', 'number', 'class', 'form', 'control', 'id', 'nrodoc', 'maxlength', 'oninput', 'if', 'this', 'value', 'length', 'this', 'maxlength', 'this', 'value', 'this', 'value', 'slice', 'this', 'maxlength', 'name', 'nrodoc', 'placeholder', 'numero', 'de', 'documento', 'value', 'php', 'echo', 'cliente', 'getnrodoc', 'required', 'div', 'class', 'help', 'block', 'with', 'errors', 'div', 'div']","['there', 'you', 'go', 'i', 'have', 'written', 'a', 'javascript', 'function', 'to', 'check', 'the', 'length', 'with', 'you', 'select', 'pasaporte', 'cedula', 'secondly', 'in', 'input', 'type', 'number', 'you', 'can', 'not', 'set', 'maxlength', 'hence', 'you', 'have', 'to', 'set', 'input', 'type', 'text', 'also', 'an', 'onkeypress', 'event', 'to', 'verify', 'the', 'input', 'as', 'number', 'php', 'if', '_get', 'id', 'cliente', 'clientenegocio', 'recuperar', '_get', 'id', 'txtaction', 'editar', 'else', 'cliente', 'new', 'cliente', 'txtaction', 'agregar', 'script', 'function', 'setmaxlength', 'var', 'inputval', 'document', 'getelementbyid', 'tipodoc', 'var', 'selindex', 'inputval', 'options', 'inputval', 'selectedindex', 'value', 'var', 'inputnum', 'document', 'getelementbyid', 'nrodoc', 'if', 'selindex', 'cedula', 'inputnum', 'maxlength', 'selindex', 'substr', 'inputnum', 'value', 'inputnum', 'value', 'substr', 'else', 'set', 'your', 'own', 'limit', 'here', 'if', 'selindex', 'pasaporte', 'inputnum', 'maxlength', 'script', 'div', 'class', 'container', 'div', 'class', 'page', 'header', 'h', 'php', 'echo', 'txtaction', 'cliente', 'h', 'div', 'form', 'role', 'form', 'method', 'post', 'id', 'principal', 'input', 'type', 'hidden', 'name', 'id', 'value', 'php', 'echo', 'cliente', 'getid', 'div', 'class', 'form', 'group', 'label', 'for', 'nombre', 'nombre', 'label', 'input', 'type', 'text', 'class', 'form', 'control', 'id', 'nombre', 'name', 'nombre', 'placeholder', 'nombre', 'value', 'php', 'echo', 'cliente', 'getnombre', 'required', 'div', 'class', 'help', 'block', 'with', 'errors', 'div', 'div', 'div', 'class', 'form', 'group', 'label', 'for', 'apellido', 'apellidos', 'label', 'input', 'type', 'text', 'class', 'form', 'control', 'id', 'apellido', 'name', 'apellido', 'placeholder', 'apellido', 'value', 'php', 'echo', 'cliente', 'getapellido', 'required', 'div', 'class', 'help', 'block', 'with', 'errors', 'div', 'div', 'div', 'class', 'form', 'group', 'label', 'for', 'tipodoc', 'tipo', 'de', 'documento', 'label', 'select', 'class', 'form', 'control', 'id', 'tipodoc', 'name', 'tipodoc', 'onchange', 'setmaxlength', 'option', 'value', 'cedula', 'php', 'if', 'cliente', 'gettipodoc', 'cedula', 'echo', 'selected', 'cedula', 'option', 'option', 'value', 'pasaporte', 'php', 'if', 'cliente', 'gettipodoc', 'pasaporte', 'echo', 'selected', 'pasaporte', 'option', 'select', 'div', 'div', 'class', 'form', 'group', 'label', 'for', 'nrodoc', 'numero', 'de', 'documento', 'label', 'here', 'onkeypress', 'method', 'is', 'used', 'to', 'check', 'if', 'the', 'input', 'is', 'a', 'number', 'in', 'input', 'type', 'number', 'you', 'can', 'not', 'set', 'maxlength', 'hence', 'you', 'have', 'to', 'set', 'input', 'type', 'text', 'input', 'type', 'text', 'class', 'form', 'control', 'id', 'nrodoc', 'maxlength', 'onkeypress', 'if', 'isnan', 'this', 'value', 'string', 'fromcharcode', 'event', 'keycode', 'return', 'false', 'name', 'nrodoc', 'placeholder', 'numero', 'de', 'documento', 'value', 'php', 'echo', 'cliente', 'getnrodoc', 'required', 'div', 'class', 'help', 'block', 'with', 'errors', 'div', 'div', 'form', 'div']","['working', 'web', 'form', 'includes', 'select', 'drop', 'two', 'option', 'cedula', 'english', 'identification', 'pasaporte', 'english', 'passport', 'image', 'web', 'form', 'far', 'please', 'help', 'achieve', 'following', 'goal', 'user', 'selects', 'cedula', 'limited', 'digit', 'select', 'pasaporte', 'limited', 'digit', 'code', 'far', 'php', '_get', 'id', 'cliente', 'clientenegocio', 'recuperar', '_get', 'id', 'txtaction', 'editar', 'else', 'cliente', 'new', 'cliente', 'txtaction', 'agregar', 'div', 'class', 'container', 'div', 'class', 'page', 'header', 'h', 'php', 'echo', 'txtaction', 'cliente', 'h', 'div', 'form', 'role', 'form', 'method', 'post', 'id', 'principal', 'input', 'type', 'hidden', 'name', 'id', 'value', 'php', 'echo', 'cliente', 'getid', 'div', 'class', 'form', 'group', 'label', 'nombre', 'nombre', 'label', 'input', 'type', 'text', 'class', 'form', 'control', 'id', 'nombre', 'name', 'nombre', 'placeholder', 'nombre', 'value', 'php', 'echo', 'cliente', 'getnombre', 'required', 'div', 'class', 'help', 'block', 'error', 'div', 'div', 'div', 'class', 'form', 'group', 'label', 'apellido', 'apellidos', 'label', 'input', 'type', 'text', 'class', 'form', 'control', 'id', 'apellido', 'name', 'apellido', 'placeholder', 'apellido', 'value', 'php', 'echo', 'cliente', 'getapellido', 'required', 'div', 'class', 'help', 'block', 'error', 'div', 'div', 'div', 'class', 'form', 'group', 'label', 'tipodoc', 'tipo', 'de', 'documento', 'label', 'select', 'class', 'form', 'control', 'id', 'tipodoc', 'name', 'tipodoc', 'option', 'value', 'cedula', 'php', 'cliente', 'gettipodoc', 'cedula', 'echo', 'selected', 'cedula', 'option', 'option', 'value', 'pasaporte', 'php', 'cliente', 'gettipodoc', 'pasaporte', 'echo', 'selected', 'pasaporte', 'option', 'select', 'div', 'div', 'class', 'form', 'group', 'label', 'nrodoc', 'numero', 'de', 'documento', 'label', 'input', 'type', 'number', 'class', 'form', 'control', 'id', 'nrodoc', 'maxlength', 'oninput', 'value', 'length', 'maxlength', 'value', 'value', 'slice', 'maxlength', 'name', 'nrodoc', 'placeholder', 'numero', 'de', 'documento', 'value', 'php', 'echo', 'cliente', 'getnrodoc', 'required', 'div', 'class', 'help', 'block', 'error', 'div', 'div']","['there', 'you', 'go', 'i', 'have', 'written', 'a', 'javascript', 'function', 'to', 'check', 'the', 'length', 'with', 'you', 'select', 'pasaporte', 'cedula', 'secondly', 'in', 'input', 'type', 'number', 'you', 'can', 'not', 'set', 'maxlength', 'hence', 'you', 'have', 'to', 'set', 'input', 'type', 'text', 'also', 'an', 'onkeypress', 'event', 'to', 'verify', 'the', 'input', 'a', 'number', 'php', 'if', '_get', 'id', 'cliente', 'clientenegocio', 'recuperar', '_get', 'id', 'txtaction', 'editar', 'else', 'cliente', 'new', 'cliente', 'txtaction', 'agregar', 'script', 'function', 'setmaxlength', 'var', 'inputval', 'document', 'getelementbyid', 'tipodoc', 'var', 'selindex', 'inputval', 'option', 'inputval', 'selectedindex', 'value', 'var', 'inputnum', 'document', 'getelementbyid', 'nrodoc', 'if', 'selindex', 'cedula', 'inputnum', 'maxlength', 'selindex', 'substr', 'inputnum', 'value', 'inputnum', 'value', 'substr', 'else', 'set', 'your', 'own', 'limit', 'here', 'if', 'selindex', 'pasaporte', 'inputnum', 'maxlength', 'script', 'div', 'class', 'container', 'div', 'class', 'page', 'header', 'h', 'php', 'echo', 'txtaction', 'cliente', 'h', 'div', 'form', 'role', 'form', 'method', 'post', 'id', 'principal', 'input', 'type', 'hidden', 'name', 'id', 'value', 'php', 'echo', 'cliente', 'getid', 'div', 'class', 'form', 'group', 'label', 'for', 'nombre', 'nombre', 'label', 'input', 'type', 'text', 'class', 'form', 'control', 'id', 'nombre', 'name', 'nombre', 'placeholder', 'nombre', 'value', 'php', 'echo', 'cliente', 'getnombre', 'required', 'div', 'class', 'help', 'block', 'with', 'error', 'div', 'div', 'div', 'class', 'form', 'group', 'label', 'for', 'apellido', 'apellidos', 'label', 'input', 'type', 'text', 'class', 'form', 'control', 'id', 'apellido', 'name', 'apellido', 'placeholder', 'apellido', 'value', 'php', 'echo', 'cliente', 'getapellido', 'required', 'div', 'class', 'help', 'block', 'with', 'error', 'div', 'div', 'div', 'class', 'form', 'group', 'label', 'for', 'tipodoc', 'tipo', 'de', 'documento', 'label', 'select', 'class', 'form', 'control', 'id', 'tipodoc', 'name', 'tipodoc', 'onchange', 'setmaxlength', 'option', 'value', 'cedula', 'php', 'if', 'cliente', 'gettipodoc', 'cedula', 'echo', 'selected', 'cedula', 'option', 'option', 'value', 'pasaporte', 'php', 'if', 'cliente', 'gettipodoc', 'pasaporte', 'echo', 'selected', 'pasaporte', 'option', 'select', 'div', 'div', 'class', 'form', 'group', 'label', 'for', 'nrodoc', 'numero', 'de', 'documento', 'label', 'here', 'onkeypress', 'method', 'is', 'used', 'to', 'check', 'if', 'the', 'input', 'is', 'a', 'number', 'in', 'input', 'type', 'number', 'you', 'can', 'not', 'set', 'maxlength', 'hence', 'you', 'have', 'to', 'set', 'input', 'type', 'text', 'input', 'type', 'text', 'class', 'form', 'control', 'id', 'nrodoc', 'maxlength', 'onkeypress', 'if', 'isnan', 'this', 'value', 'string', 'fromcharcode', 'event', 'keycode', 'return', 'false', 'name', 'nrodoc', 'placeholder', 'numero', 'de', 'documento', 'value', 'php', 'echo', 'cliente', 'getnrodoc', 'required', 'div', 'class', 'help', 'block', 'with', 'error', 'div', 'div', 'form', 'div']",System Requirements and AWS,2,"{'neg': 0.03, 'neu': 0.961, 'pos': 0.009, 'compound': -0.5152}",0.02438672438672438,2,Python Libraries and Environment,3query
63228853,UML: How to reduce use cases for user accounts system to avoid redundancy and unnecessary use cases?,"<p>I need help to reduce the use cases on my subsystem.</p>
<p>This subsystem is about manage multiple accounts for users, administrators and a superuser with the following requirements:</p>
<blockquote>
<p>The system shall manage users accounts, where there are:</p>
<ul>
<li><p>Users: can create, read, update, delete and block their own accounts, also login.</p>
<p>Create needs email authentication. Login should ask for 2-step auth (optional)</p>
</li>
<li><p>Admins: can manage all users accounts (CRUD, block and login) as a user. Also read only and login their own account.</p>
<p>Login needs 2 step authentication.</p>
</li>
<li><p>Superuser: can manage both users and admin accounts (CRUD, block, logins) and their own superuser account.</p>
<p>Create admin needs email &amp; phone auth.<br>
Login is same as admins, needs 2 step auth.<br>
Can delegate the superuser access to another admin.</p>
</li>
</ul>
</blockquote>
<p>The system's flow need to be clear just with use case diagram and use case descriptions (without other type of diagram)</p>
<p><strong>What is the right way to design these use cases to avoid redundacy on use case descriptions and make unnecessary use cases on diagram?</strong></p>
<p>For example, on this system, the user, admin, and superuser have a Login Use Case each one. User Login ask for 2 step auth (optional) while on admin and superuser the 2 step auth must be always required.</p>
<p>SuperUser inherits from Admin who inherits from User.</p>
<p><em>The final goal I am looking for is to make (for instance) these 3 login uses cases into one that connects to the User Actor only so Admin and SuperUser inherit the use case but, due to the behavior is different for every Actor, I want to put one Login Use Case Description which changes the behavior according to the Actor type who triggers the Login. So instead of have 3 Login Use Cases (one for each actor), I have just 1 use case and 1 description that works for all.</em></p>
",<uml><software-design><use-case><requirements><use-case-diagram>,2020-08-03 11:47:08,406,0,1,63237966,"<p>What you seem to look for is the parametrised use-cases, which is a concept promoted by Alistair Cockburn for textual use-cases.</p>
<p>The typical example is CRUD when the same use-case description is used over and over again with a slight variant for each operation. The approach is the to have a parametrised use case where the parameter is the operation (create, read, update, delete).</p>
<p>The same concept doesn’t exist in UML notation as far as I know. So you would typically have either a use case <code>Manage XYZ</code> and describe the details in the narratives, or the four use-cases <code>Create XYZ</code>, <code>Update XYZ</code>, <code>Delete XYZ</code>, <code>Read XYZ</code>. Personally I prefer the first, so that the use-case convey the big picture.</p>
<p>Instead of multiplying the same use-cases for the different actors, you could also use less use-cases and use <a href=""https://www.uml-diagrams.org/constraint.html"" rel=""nofollow noreferrer"">contraints</a> to explain in plain text the special rules that apply to the  different categories of actors for the different use-cases.</p>
<p>Finally, I’d like to add that use-cases are not meant to model flows and sequence of events. Use cases are meant to identify different goals  that would translate to different kind of interactions. In this regard I  wonder if it could  make sense to distinguish <code>Manage own account</code> and <code>Manage other user account</code> since this correspond to very different goals.</p>
",2020-08,i need help to reduce the use cases on my subsystem this subsystem is about manage multiple accounts for users administrators and a superuser with the following requirements the system shall manage users accounts where there are users can create read update delete and block their own accounts also login create needs email authentication login should ask for   step auth optional admins can manage all users accounts crud block and login as a user also read only and login their own account login needs   step authentication superuser can manage both users and admin accounts crud block logins and their own superuser account create admin needs email phone auth login is same as admins needs   step auth can delegate the superuser access to another admin the system s flow need to be clear just with use case diagram and use case descriptions without other type of diagram what is the right way to design these use cases to avoid redundacy on use case descriptions and make unnecessary use cases on diagram for example on this system the user admin and superuser have a login use case each one user login ask for   step auth optional while on admin and superuser the   step auth must be always required superuser inherits from admin who inherits from user the final goal i am looking for is to make for instance these   login uses cases into one that connects to the user actor only so admin and superuser inherit the use case but due to the behavior is different for every actor i want to put one login use case description which changes the behavior according to the actor type who triggers the login so instead of have   login use cases one for each actor i have just   use case and   description that works for all,what you seem to look for is the parametrised use cases which is a concept promoted by alistair cockburn for textual use cases the typical example is crud when the same use case description is used over and over again with a slight variant for each operation the approach is the to have a parametrised use case where the parameter is the operation create read update delete the same concept doesn t exist in uml notation as far as i know so you would typically have either a use case manage xyz and describe the details in the narratives or the four use cases create xyz update xyz delete xyz read xyz personally i prefer the first so that the use case convey the big picture instead of multiplying the same use cases for the different actors you could also use less use cases and use contraints to explain in plain text the special rules that apply to the different categories of actors for the different use cases finally i d like to add that use cases are not meant to model flows and sequence of events use cases are meant to identify different goals that would translate to different kind of interactions in this regard i wonder if it could make sense to distinguish manage own account and manage other user account since this correspond to very different goals,"['uml', 'software-design', 'use-case', 'requirements', 'use-case-diagram']","['i', 'need', 'help', 'to', 'reduce', 'the', 'use', 'cases', 'on', 'my', 'subsystem', 'this', 'subsystem', 'is', 'about', 'manage', 'multiple', 'accounts', 'for', 'users', 'administrators', 'and', 'a', 'superuser', 'with', 'the', 'following', 'requirements', 'the', 'system', 'shall', 'manage', 'users', 'accounts', 'where', 'there', 'are', 'users', 'can', 'create', 'read', 'update', 'delete', 'and', 'block', 'their', 'own', 'accounts', 'also', 'login', 'create', 'needs', 'email', 'authentication', 'login', 'should', 'ask', 'for', 'step', 'auth', 'optional', 'admins', 'can', 'manage', 'all', 'users', 'accounts', 'crud', 'block', 'and', 'login', 'as', 'a', 'user', 'also', 'read', 'only', 'and', 'login', 'their', 'own', 'account', 'login', 'needs', 'step', 'authentication', 'superuser', 'can', 'manage', 'both', 'users', 'and', 'admin', 'accounts', 'crud', 'block', 'logins', 'and', 'their', 'own', 'superuser', 'account', 'create', 'admin', 'needs', 'email', 'phone', 'auth', 'login', 'is', 'same', 'as', 'admins', 'needs', 'step', 'auth', 'can', 'delegate', 'the', 'superuser', 'access', 'to', 'another', 'admin', 'the', 'system', 's', 'flow', 'need', 'to', 'be', 'clear', 'just', 'with', 'use', 'case', 'diagram', 'and', 'use', 'case', 'descriptions', 'without', 'other', 'type', 'of', 'diagram', 'what', 'is', 'the', 'right', 'way', 'to', 'design', 'these', 'use', 'cases', 'to', 'avoid', 'redundacy', 'on', 'use', 'case', 'descriptions', 'and', 'make', 'unnecessary', 'use', 'cases', 'on', 'diagram', 'for', 'example', 'on', 'this', 'system', 'the', 'user', 'admin', 'and', 'superuser', 'have', 'a', 'login', 'use', 'case', 'each', 'one', 'user', 'login', 'ask', 'for', 'step', 'auth', 'optional', 'while', 'on', 'admin', 'and', 'superuser', 'the', 'step', 'auth', 'must', 'be', 'always', 'required', 'superuser', 'inherits', 'from', 'admin', 'who', 'inherits', 'from', 'user', 'the', 'final', 'goal', 'i', 'am', 'looking', 'for', 'is', 'to', 'make', 'for', 'instance', 'these', 'login', 'uses', 'cases', 'into', 'one', 'that', 'connects', 'to', 'the', 'user', 'actor', 'only', 'so', 'admin', 'and', 'superuser', 'inherit', 'the', 'use', 'case', 'but', 'due', 'to', 'the', 'behavior', 'is', 'different', 'for', 'every', 'actor', 'i', 'want', 'to', 'put', 'one', 'login', 'use', 'case', 'description', 'which', 'changes', 'the', 'behavior', 'according', 'to', 'the', 'actor', 'type', 'who', 'triggers', 'the', 'login', 'so', 'instead', 'of', 'have', 'login', 'use', 'cases', 'one', 'for', 'each', 'actor', 'i', 'have', 'just', 'use', 'case', 'and', 'description', 'that', 'works', 'for', 'all']","['what', 'you', 'seem', 'to', 'look', 'for', 'is', 'the', 'parametrised', 'use', 'cases', 'which', 'is', 'a', 'concept', 'promoted', 'by', 'alistair', 'cockburn', 'for', 'textual', 'use', 'cases', 'the', 'typical', 'example', 'is', 'crud', 'when', 'the', 'same', 'use', 'case', 'description', 'is', 'used', 'over', 'and', 'over', 'again', 'with', 'a', 'slight', 'variant', 'for', 'each', 'operation', 'the', 'approach', 'is', 'the', 'to', 'have', 'a', 'parametrised', 'use', 'case', 'where', 'the', 'parameter', 'is', 'the', 'operation', 'create', 'read', 'update', 'delete', 'the', 'same', 'concept', 'doesn', 't', 'exist', 'in', 'uml', 'notation', 'as', 'far', 'as', 'i', 'know', 'so', 'you', 'would', 'typically', 'have', 'either', 'a', 'use', 'case', 'manage', 'xyz', 'and', 'describe', 'the', 'details', 'in', 'the', 'narratives', 'or', 'the', 'four', 'use', 'cases', 'create', 'xyz', 'update', 'xyz', 'delete', 'xyz', 'read', 'xyz', 'personally', 'i', 'prefer', 'the', 'first', 'so', 'that', 'the', 'use', 'case', 'convey', 'the', 'big', 'picture', 'instead', 'of', 'multiplying', 'the', 'same', 'use', 'cases', 'for', 'the', 'different', 'actors', 'you', 'could', 'also', 'use', 'less', 'use', 'cases', 'and', 'use', 'contraints', 'to', 'explain', 'in', 'plain', 'text', 'the', 'special', 'rules', 'that', 'apply', 'to', 'the', 'different', 'categories', 'of', 'actors', 'for', 'the', 'different', 'use', 'cases', 'finally', 'i', 'd', 'like', 'to', 'add', 'that', 'use', 'cases', 'are', 'not', 'meant', 'to', 'model', 'flows', 'and', 'sequence', 'of', 'events', 'use', 'cases', 'are', 'meant', 'to', 'identify', 'different', 'goals', 'that', 'would', 'translate', 'to', 'different', 'kind', 'of', 'interactions', 'in', 'this', 'regard', 'i', 'wonder', 'if', 'it', 'could', 'make', 'sense', 'to', 'distinguish', 'manage', 'own', 'account', 'and', 'manage', 'other', 'user', 'account', 'since', 'this', 'correspond', 'to', 'very', 'different', 'goals']","['need', 'help', 'reduce', 'use', 'case', 'subsystem', 'subsystem', 'manage', 'multiple', 'account', 'user', 'administrator', 'superuser', 'following', 'requirement', 'system', 'shall', 'manage', 'user', 'account', 'user', 'create', 'read', 'update', 'delete', 'block', 'account', 'also', 'login', 'create', 'need', 'email', 'authentication', 'login', 'ask', 'step', 'auth', 'optional', 'admins', 'manage', 'user', 'account', 'crud', 'block', 'login', 'user', 'also', 'read', 'login', 'account', 'login', 'need', 'step', 'authentication', 'superuser', 'manage', 'user', 'admin', 'account', 'crud', 'block', 'logins', 'superuser', 'account', 'create', 'admin', 'need', 'email', 'phone', 'auth', 'login', 'admins', 'need', 'step', 'auth', 'delegate', 'superuser', 'access', 'another', 'admin', 'system', 'flow', 'need', 'clear', 'use', 'case', 'diagram', 'use', 'case', 'description', 'without', 'type', 'diagram', 'right', 'way', 'design', 'use', 'case', 'avoid', 'redundacy', 'use', 'case', 'description', 'make', 'unnecessary', 'use', 'case', 'diagram', 'example', 'system', 'user', 'admin', 'superuser', 'login', 'use', 'case', 'one', 'user', 'login', 'ask', 'step', 'auth', 'optional', 'admin', 'superuser', 'step', 'auth', 'must', 'always', 'required', 'superuser', 'inherits', 'admin', 'inherits', 'user', 'final', 'goal', 'looking', 'make', 'instance', 'login', 'us', 'case', 'one', 'connects', 'user', 'actor', 'admin', 'superuser', 'inherit', 'use', 'case', 'due', 'behavior', 'different', 'every', 'actor', 'want', 'put', 'one', 'login', 'use', 'case', 'description', 'change', 'behavior', 'according', 'actor', 'type', 'trigger', 'login', 'instead', 'login', 'use', 'case', 'one', 'actor', 'use', 'case', 'description', 'work']","['what', 'you', 'seem', 'to', 'look', 'for', 'is', 'the', 'parametrised', 'use', 'case', 'which', 'is', 'a', 'concept', 'promoted', 'by', 'alistair', 'cockburn', 'for', 'textual', 'use', 'case', 'the', 'typical', 'example', 'is', 'crud', 'when', 'the', 'same', 'use', 'case', 'description', 'is', 'used', 'over', 'and', 'over', 'again', 'with', 'a', 'slight', 'variant', 'for', 'each', 'operation', 'the', 'approach', 'is', 'the', 'to', 'have', 'a', 'parametrised', 'use', 'case', 'where', 'the', 'parameter', 'is', 'the', 'operation', 'create', 'read', 'update', 'delete', 'the', 'same', 'concept', 'doesn', 't', 'exist', 'in', 'uml', 'notation', 'a', 'far', 'a', 'i', 'know', 'so', 'you', 'would', 'typically', 'have', 'either', 'a', 'use', 'case', 'manage', 'xyz', 'and', 'describe', 'the', 'detail', 'in', 'the', 'narrative', 'or', 'the', 'four', 'use', 'case', 'create', 'xyz', 'update', 'xyz', 'delete', 'xyz', 'read', 'xyz', 'personally', 'i', 'prefer', 'the', 'first', 'so', 'that', 'the', 'use', 'case', 'convey', 'the', 'big', 'picture', 'instead', 'of', 'multiplying', 'the', 'same', 'use', 'case', 'for', 'the', 'different', 'actor', 'you', 'could', 'also', 'use', 'le', 'use', 'case', 'and', 'use', 'contraints', 'to', 'explain', 'in', 'plain', 'text', 'the', 'special', 'rule', 'that', 'apply', 'to', 'the', 'different', 'category', 'of', 'actor', 'for', 'the', 'different', 'use', 'case', 'finally', 'i', 'd', 'like', 'to', 'add', 'that', 'use', 'case', 'are', 'not', 'meant', 'to', 'model', 'flow', 'and', 'sequence', 'of', 'event', 'use', 'case', 'are', 'meant', 'to', 'identify', 'different', 'goal', 'that', 'would', 'translate', 'to', 'different', 'kind', 'of', 'interaction', 'in', 'this', 'regard', 'i', 'wonder', 'if', 'it', 'could', 'make', 'sense', 'to', 'distinguish', 'manage', 'own', 'account', 'and', 'manage', 'other', 'user', 'account', 'since', 'this', 'correspond', 'to', 'very', 'different', 'goal']",System Requirements and AWS,0,"{'neg': 0.024, 'neu': 0.954, 'pos': 0.022, 'compound': -0.2023}",0.10238095238095238,0,System Requirements and AWS,3query
63163058,Collecting numpy causes docker build to crash,"<p>I'm trying to deploy a little python script using Selenium on my GCP Virtual Machine following <a href=""https://towardsdatascience.com/build-a-scalable-web-crawler-with-selenium-and-pyhton-9c0c23e3ebe5"" rel=""nofollow noreferrer"">this tutorial</a>. Unfortunately, I can't pass the <code>requirements.txt</code> when building the container image. Indeed as one can read:</p>
<pre><code>mikempc3@instance-1:~$ sudo docker build --tag my-python-app .
Sending build context to Docker daemon  387.1MB
Step 1/6 : FROM python:alpine3.7
alpine3.7: Pulling from library/python
48ecbb6b270e: Pull complete 
692f29ee68fa: Pull complete 
6439819450d1: Pull complete 
3c7be240f7bf: Pull complete 
ca4b349df8ed: Pull complete 
Digest: sha256:35f6f83ab08f98c727dbefd53738e3b3174a48b4571ccb1910bae480dcdba847
Status: Downloaded newer image for python:alpine3.7
 ---&gt; 00be2573e9f7
Step 2/6 : COPY . /app
 ---&gt; d8ae78db92f8
Step 3/6 : WORKDIR /app
 ---&gt; Running in 3f6269c90e90
Removing intermediate container 3f6269c90e90
 ---&gt; 717897752d1d
Step 4/6 : RUN pip install -r requirements.txt
 ---&gt; Running in 061da28ee5cb
Collecting selenium (from -r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/80/d6/4294f0b4bce4de0abf13e17190289f9d0613b0a44e5dd6a7f5ca98459853/selenium-3.141.0-py2.py3-none-any.whl (904kB)
Collecting pandas (from -r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/6f/29/32ff85413724ffa7cc8d52373f93c2ef1cb197ffd0c7b1b10d36452dd0ca/pandas-1.1.0.tar.gz (5.2MB)
  Installing build dependencies: started
  Installing build dependencies: finished with status 'error'
  Complete output from command /usr/local/bin/python /usr/local/lib/python3.7/site-packages/pip install --ignore-installed --no-user --prefix /tmp/pip-build-env-ou2zb3ns/overlay --no-warn-script-l
ocation --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools wheel Cython&gt;=0.29.16,&lt;3 &quot;numpy==1.15.4; python_version=='3.6' and platform_system!='AIX'&quot; &quot;numpy==1.15.4; 
python_version=='3.7' and platform_system!='AIX'&quot; &quot;numpy==1.17.3; python_version&gt;='3.8' and platform_system!='AIX'&quot; &quot;numpy==1.16.0; python_version=='3.6' and platform_system=='AIX'&quot; &quot;numpy==1.16.0
; python_version=='3.7' and platform_system=='AIX'&quot; &quot;numpy==1.17.3; python_version&gt;='3.8' and platform_system=='AIX'&quot;:
  Ignoring numpy: markers 'python_version == &quot;3.6&quot; and platform_system != &quot;AIX&quot;' don't match your environment
  Ignoring numpy: markers 'python_version &gt;= &quot;3.8&quot; and platform_system != &quot;AIX&quot;' don't match your environment
  Ignoring numpy: markers 'python_version == &quot;3.6&quot; and platform_system == &quot;AIX&quot;' don't match your environment
  Ignoring numpy: markers 'python_version == &quot;3.7&quot; and platform_system == &quot;AIX&quot;' don't match your environment
  Ignoring numpy: markers 'python_version &gt;= &quot;3.8&quot; and platform_system == &quot;AIX&quot;' don't match your environment
  Collecting setuptools
    Downloading https://files.pythonhosted.org/packages/8e/11/9e10f1cad4518cb307b484c255cae61e97f05b82f6d536932b1714e01b47/setuptools-49.2.0-py3-none-any.whl (789kB)
  Collecting wheel
    Downloading https://files.pythonhosted.org/packages/8c/23/848298cccf8e40f5bbb59009b32848a4c38f4e7f3364297ab3c3e2e2cd14/wheel-0.34.2-py2.py3-none-any.whl
  Collecting Cython&lt;3,&gt;=0.29.16
    Downloading https://files.pythonhosted.org/packages/ad/4b/9e53bcce3c959fd0db143626e573210bba07be810fe8d7296373948c4183/Cython-0.29.21-py2.py3-none-any.whl (974kB)
  Collecting numpy==1.15.4
    Downloading https://files.pythonhosted.org/packages/2d/80/1809de155bad674b494248bcfca0e49eb4c5d8bee58f26fe7a0dd45029e2/numpy-1.15.4.zip (4.5MB)
  Building wheels for collected packages: numpy
    Building wheel for numpy (setup.py): started
    Building wheel for numpy (setup.py): finished with status 'error'
    Complete output from command /usr/local/bin/python -u -c &quot;import setuptools, tokenize;__file__='/tmp/pip-install-800mjafl/numpy/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.rea
d().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))&quot; bdist_wheel -d /tmp/pip-wheel-q_b64mdo --python-tag cp37:
    Running from numpy source directory.
    blas_opt_info:
    blas_mkl_info:
    customize UnixCCompiler
      libraries mkl_rt not found in ['/usr/local/lib', '/usr/lib']
      NOT AVAILABLE
  
    blis_info:
    customize UnixCCompiler
      libraries blis not found in ['/usr/local/lib', '/usr/lib']
      NOT AVAILABLE
  
    openblas_info:
    customize UnixCCompiler
    customize UnixCCompiler
      libraries openblas not found in ['/usr/local/lib', '/usr/lib']
      NOT AVAILABLE
  
    atlas_3_10_blas_threads_info:
    Setting PTATLAS=ATLAS
    customize UnixCCompiler
      libraries tatlas not found in ['/usr/local/lib', '/usr/lib']
      NOT AVAILABLE
  
    atlas_3_10_blas_info:
    customize UnixCCompiler
      libraries satlas not found in ['/usr/local/lib', '/usr/lib']
      NOT AVAILABLE
  
    atlas_blas_threads_info:
    Setting PTATLAS=ATLAS
    customize UnixCCompiler
      libraries ptf77blas,ptcblas,atlas not found in ['/usr/local/lib', '/usr/lib']
      NOT AVAILABLE
  
    atlas_blas_info:
    customize UnixCCompiler
      libraries f77blas,cblas,atlas not found in ['/usr/local/lib', '/usr/lib']
      NOT AVAILABLE
  
    accelerate_info:
      NOT AVAILABLE
  
    /tmp/pip-install-800mjafl/numpy/numpy/distutils/system_info.py:625: UserWarning:
        Atlas (http://math-atlas.sourceforge.net/) libraries not found.
        Directories to search for the libraries can be specified in the
        numpy/distutils/site.cfg file (section [atlas]) or by setting
        the ATLAS environment variable.
      self.calc_info()
    blas_info:
    customize UnixCCompiler
      libraries blas not found in ['/usr/local/lib', '/usr/lib']
      NOT AVAILABLE
    ...
        File &quot;/usr/local/lib/python3.7/distutils/core.py&quot;, line 148, in setup
          dist.run_commands()
        File &quot;/usr/local/lib/python3.7/distutils/dist.py&quot;, line 966, in run_commands
          self.run_command(cmd)
        File &quot;/usr/local/lib/python3.7/distutils/dist.py&quot;, line 985, in run_command
          cmd_obj.run()
        File &quot;/tmp/pip-install-800mjafl/numpy/numpy/distutils/command/install.py&quot;, line 62, in run
          r = self.setuptools_run()
        File &quot;/tmp/pip-install-800mjafl/numpy/numpy/distutils/command/install.py&quot;, line 36, in setuptools_run
          return distutils_install.run(self)
        File &quot;/usr/local/lib/python3.7/distutils/command/install.py&quot;, line 545, in run
          self.run_command('build')
        File &quot;/usr/local/lib/python3.7/distutils/cmd.py&quot;, line 313, in run_command
          self.distribution.run_command(command)
        File &quot;/usr/local/lib/python3.7/distutils/dist.py&quot;, line 985, in run_command
          cmd_obj.run()
        File &quot;/tmp/pip-install-800mjafl/numpy/numpy/distutils/command/build.py&quot;, line 47, in run
          old_build.run(self)
        File &quot;/usr/local/lib/python3.7/distutils/command/build.py&quot;, line 135, in run
          self.run_command(cmd_name)
        File &quot;/usr/local/lib/python3.7/distutils/cmd.py&quot;, line 313, in run_command
          self.distribution.run_command(command)
        File &quot;/usr/local/lib/python3.7/distutils/dist.py&quot;, line 985, in run_command
          cmd_obj.run()
        File &quot;/tmp/pip-install-800mjafl/numpy/numpy/distutils/command/build_src.py&quot;, line 148, in run
          self.build_sources()
        File &quot;/tmp/pip-install-800mjafl/numpy/numpy/distutils/command/build_src.py&quot;, line 159, in build_sources
          self.build_library_sources(*libname_info)
        File &quot;/tmp/pip-install-800mjafl/numpy/numpy/distutils/command/build_src.py&quot;, line 294, in build_library_sources
          sources = self.generate_sources(sources, (lib_name, build_info))
        File &quot;/tmp/pip-install-800mjafl/numpy/numpy/distutils/command/build_src.py&quot;, line 377, in generate_sources
          source = func(extension, build_dir)
        File &quot;numpy/core/setup.py&quot;, line 666, in get_mathlib_info
          raise RuntimeError(&quot;Broken toolchain: cannot link a simple C program&quot;)
      RuntimeError: Broken toolchain: cannot link a simple C program
  
      ----------------------------------------
  Command &quot;/usr/local/bin/python -u -c &quot;import setuptools, tokenize;__file__='/tmp/pip-install-800mjafl/numpy/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\
n');f.close();exec(compile(code, __file__, 'exec'))&quot; install --record /tmp/pip-record-sgbls4z_/install-record.txt --single-version-externally-managed --prefix /tmp/pip-build-env-ou2zb3ns/overlay -
-compile&quot; failed with error code 1 in /tmp/pip-install-800mjafl/numpy/
  You are using pip version 19.0.1, however version 20.2 is available.
  You should consider upgrading via the 'pip install --upgrade pip' command.
  
  ----------------------------------------
Command &quot;/usr/local/bin/python /usr/local/lib/python3.7/site-packages/pip install --ignore-installed --no-user --prefix /tmp/pip-build-env-ou2zb3ns/overlay --no-warn-script-location --no-binary :n
one: --only-binary :none: -i https://pypi.org/simple -- setuptools wheel Cython&gt;=0.29.16,&lt;3 &quot;numpy==1.15.4; python_version=='3.6' and platform_system!='AIX'&quot; &quot;numpy==1.15.4; python_version=='3.7' 
and platform_system!='AIX'&quot; &quot;numpy==1.17.3; python_version&gt;='3.8' and platform_system!='AIX'&quot; &quot;numpy==1.16.0; python_version=='3.6' and platform_system=='AIX'&quot; &quot;numpy==1.16.0; python_version=='3.7
' and platform_system=='AIX'&quot; &quot;numpy==1.17.3; python_version&gt;='3.8' and platform_system=='AIX'&quot;&quot; failed with error code 1 in None
You are using pip version 19.0.1, however version 20.2 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
The command '/bin/sh -c pip install -r requirements.txt' returned a non-zero code: 1
</code></pre>
<p>Here is my requirements.txt file:</p>
<pre><code>selenium
pandas
numpy
collections
json
time
requests
</code></pre>
<p>And here is the file I'm trying to contenerize:</p>
<pre><code>from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import ElementClickInterceptedException
from selenium.common.exceptions import NoSuchElementException
from selenium.webdriver.chrome.options import Options



import pandas as pd
import numpy as np

from collections import defaultdict
import json

import time

import requests
from requests.exceptions import ConnectionError

# Define Browser Options
chrome_options = Options()
chrome_options.add_argument(&quot;--headless&quot;) # Hides the browser window

# Reference the local Chromedriver instance
chrome_path = r&quot;C:\Programs\chromedriver.exe&quot;
driver = webdriver.Chrome(executable_path=chrome_path, options=chrome_options)

df = pd.read_csv('path/to/file')    

tradable = []
print(len(df['Ticker']))
for ticker in df['Ticker']:
    print(&quot;ticker: &quot;, ticker)
    location = &quot;https://www.etoro.com/markets/&quot; + ticker.lower()
    try:
        request = requests.get(location)
        driver.get(location)
        time.sleep(2)
        current_url = driver.current_url
        if current_url == location:
            tradable.append(ticker)
        else:
            print(&quot;no page but request= &quot;, request)
    except ConnectionError:
        print('Ticker isn\'t tradable')
    else:
        tradable.append(ticker)
</code></pre>
<p>Here is my  Dockerfile:</p>
<pre><code>FROM python:alpine3.7
COPY . /app
WORKDIR /app
RUN pip install -r requirements.txt
EXPOSE 5000
CMD python ./find_tradable.py
</code></pre>
<p>Here are my os name and version:</p>
<pre><code>mikempc3@instance-1:~$ cat /etc/os-release
PRETTY_NAME=&quot;Debian GNU/Linux 9 (stretch)&quot;
NAME=&quot;Debian GNU/Linux&quot;
VERSION_ID=&quot;9&quot;
VERSION=&quot;9 (stretch)&quot;
VERSION_CODENAME=stretch
ID=debian
HOME_URL=&quot;https://www.debian.org/&quot;
SUPPORT_URL=&quot;https://www.debian.org/support&quot;
BUG_REPORT_URL=&quot;https://bugs.debian.org/&quot;
</code></pre>
<p>Here is my Linux kernel version:</p>
<pre><code>mikempc3@instance-1:~$ uname -r
4.9.0-12-amd64
</code></pre>
<h1>Update</h1>
<p>I'm trying Serhii Rohoza's answer.</p>
<p>I have updated my requirements.txt file, I don't have the same issue but now I have an error when trying the command to build the image from the Dockerfile:</p>
<pre><code>mikempc3@instance-1:~$ sudo docker build --tag my-python-app:1 .
Sending build context to Docker daemon  387.1MB
Step 1/6 : FROM python:python3.7-slim
manifest for python:python3.7-slim not found: manifest unknown: manifest unknown
</code></pre>
<p>So I tried:</p>
<pre><code>mikempc3@instance-1:~$ sudo docker pull python:3.7-slim
3.7-slim: Pulling from library/python
6ec8c9369e08: Already exists 
401b5acb42e6: Already exists 
2e487de6656a: Pull complete 
519de614852e: Pull complete 
a3d1a61e090c: Pull complete 
Digest: sha256:47081c7bca01b314e26c64d777970d46b2ad7049601a6f702d424881af9f2738
Status: Downloaded newer image for python:3.7-slim
docker.io/library/python:3.7-slim
mikempc3@instance-1:~$ sudo docker build --tag my-python-app:1 .
Sending build context to Docker daemon  387.1MB
Step 1/6 : FROM python:python3.7-slim
manifest for python:python3.7-slim not found: manifest unknown: manifest unknown
</code></pre>
",<python-3.x><docker><google-cloud-platform><requirements>,2020-07-29 21:58:15,822,0,1,63175982,"<p><strong>To solve your issue</strong> you should use Debian based image:</p>
<p>To build Docker image I removed <code>collections</code> (which is <a href=""https://docs.python.org/3.7/library/collections.html"" rel=""nofollow noreferrer"">deprecated</a>), <code>json</code> (it's built in) and <code>time</code> (it's built in) from <code>requirements.txt</code> and changed  <code>Dockerfile</code>:</p>
<pre><code>$ cat Dockerfile 
FROM python:3.7-slim
COPY . /app
WORKDIR /app
RUN pip install -r requirements.txt
EXPOSE 5000
CMD python ./find_tradable.py

$ cat requirements.txt
selenium
pandas
numpy
requests

$ sudo docker build --tag my-python-app:1 .
Sending build context to Docker daemon   5.12kB
Step 1/6 : FROM python:3.7-slim
 ---&gt; c042d3af0838
Step 2/6 : COPY . /app
 ---&gt; ddb4662cd16f
Step 3/6 : WORKDIR /app
 ---&gt; Running in 24e1a60ce53c
Removing intermediate container 24e1a60ce53c
 ---&gt; 5db1f089513b
Step 4/6 : RUN pip install -r requirements.txt
 ---&gt; Running in 5cdde4c11b10
Collecting selenium
  Downloading selenium-3.141.0-py2.py3-none-any.whl (904 kB)
Collecting pandas
  Downloading pandas-1.1.0-cp37-cp37m-manylinux1_x86_64.whl (10.5 MB)
Collecting numpy
  Downloading numpy-1.19.1-cp37-cp37m-manylinux2010_x86_64.whl (14.5 MB)
Collecting requests
  Downloading requests-2.24.0-py2.py3-none-any.whl (61 kB)
Collecting urllib3
  Downloading urllib3-1.25.10-py2.py3-none-any.whl (127 kB)
Collecting python-dateutil&gt;=2.7.3
  Downloading python_dateutil-2.8.1-py2.py3-none-any.whl (227 kB)
Collecting pytz&gt;=2017.2
  Downloading pytz-2020.1-py2.py3-none-any.whl (510 kB)
Collecting idna&lt;3,&gt;=2.5
  Downloading idna-2.10-py2.py3-none-any.whl (58 kB)
Collecting chardet&lt;4,&gt;=3.0.2
  Downloading chardet-3.0.4-py2.py3-none-any.whl (133 kB)
Collecting certifi&gt;=2017.4.17
  Downloading certifi-2020.6.20-py2.py3-none-any.whl (156 kB)
Collecting six&gt;=1.5
  Downloading six-1.15.0-py2.py3-none-any.whl (10 kB)
Installing collected packages: urllib3, selenium, six, python-dateutil, numpy, pytz, pandas, idna, chardet, certifi, requests
Successfully installed certifi-2020.6.20 chardet-3.0.4 idna-2.10 numpy-1.19.1 pandas-1.1.0 python-dateutil-2.8.1 pytz-2020.1 requests-2.24.0 selenium-3.141.0 six-1.15.0 urllib3-1.25.10
WARNING: You are using pip version 20.1.1; however, version 20.2 is available.
You should consider upgrading via the '/usr/local/bin/python -m pip install --upgrade pip' command.
Removing intermediate container 5cdde4c11b10
 ---&gt; 94dd7203a37c
Step 5/6 : EXPOSE 5000
 ---&gt; Running in 3f24bb8b62f5
Removing intermediate container 3f24bb8b62f5
 ---&gt; 3bed65d447d6
Step 6/6 : CMD python ./find_tradable.py
 ---&gt; Running in 35c0601f2c70
Removing intermediate container 35c0601f2c70
 ---&gt; af17d0675fee
Successfully built af17d0675fee
Successfully tagged my-python-app:1
</code></pre>
<p>As a possible <a href=""https://stackoverflow.com/a/57485724/12428794"">workaround</a>, you can try to install <code>pandas</code> and <code>numpy</code> from packages available in the <a href=""https://pkgs.alpinelinux.org/contents?file=&amp;path=&amp;name=&amp;branch=edge&amp;repo=community&amp;arch=x86"" rel=""nofollow noreferrer"">Alpine repository</a>:</p>
<pre><code>$ cat Dockerfile 
FROM python:alpine3.7
COPY . /app
WORKDIR /app
RUN echo &quot;http://dl-8.alpinelinux.org/alpine/edge/community&quot; &gt;&gt; /etc/apk/repositories
RUN apk add --update --no-cache libgfortran py3-pandas py3-numpy
ENV PYTHONPATH=/usr/lib/python3.7/site-packages
RUN pip install -r requirements.txt
EXPOSE 5000
CMD python ./find_tradable.py

$ cat requirements.txt
selenium
requests

$ sudo docker build --tag my-python-app:2 .
Sending build context to Docker daemon   5.12kB
Step 1/9 : FROM python:alpine3.7
 ---&gt; 00be2573e9f7
Step 2/9 : COPY . /app
 ---&gt; 2d9fe2cb3266
Step 3/9 : WORKDIR /app
 ---&gt; Running in c106bf69643a
Removing intermediate container c106bf69643a
 ---&gt; 807d1d546864
Step 4/9 : RUN echo &quot;http://dl-8.alpinelinux.org/alpine/edge/community&quot; &gt;&gt; /etc/apk/repositories
 ---&gt; Running in 77a65a19f776
Removing intermediate container 77a65a19f776
 ---&gt; 940ce2de1711
Step 5/9 : RUN apk add --update --no-cache libgfortran py3-numpy py3-pandas
 ---&gt; Running in 5084ac4055a2
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/community/x86_64/APKINDEX.tar.gz
fetch http://dl-8.alpinelinux.org/alpine/edge/community/x86_64/APKINDEX.tar.gz
(1/11) Installing libgcc (6.4.0-r5)
(2/11) Installing libquadmath (6.4.0-r5)
(3/11) Installing libgfortran (6.4.0-r5)
(4/11) Installing openblas (0.2.19-r3)
(5/11) Installing py3-numpy (1.19.1-r0)
(6/11) Installing python3 (3.6.9-r1)
(7/11) Installing py3-six (1.11.0-r0)
(8/11) Installing py3-dateutil (2.8.1-r0)
(9/11) Installing py3-tz (2017.3-r0)
(10/11) Installing libstdc++ (6.4.0-r5)
(11/11) Installing py3-pandas (1.0.5-r0)
Executing busybox-1.27.2-r11.trigger
OK: 172 MiB in 47 packages
Removing intermediate container 5084ac4055a2
 ---&gt; 3af579bb35da
Step 6/9 : ENV PYTHONPATH=/usr/lib/python3.7/site-packages
 ---&gt; Running in 89513c5c2f02
Removing intermediate container 89513c5c2f02
 ---&gt; 3edc5aa5ef96
Step 7/9 : RUN pip install -r requirements.txt
 ---&gt; Running in a694e49a4fbf
Collecting selenium (from -r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/80/d6/4294f0b4bce4de0abf13e17190289f9d0613b0a44e5dd6a7f5ca98459853/selenium-3.141.0-py2.py3-none-any.whl (904kB)
Collecting requests (from -r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/45/1e/0c169c6a5381e241ba7404532c16a21d86ab872c9bed8bdcd4c423954103/requests-2.24.0-py2.py3-none-any.whl (61kB)
Collecting urllib3 (from selenium-&gt;-r requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/9f/f0/a391d1463ebb1b233795cabfc0ef38d3db4442339de68f847026199e69d7/urllib3-1.25.10-py2.py3-none-any.whl (127kB)
Collecting chardet&lt;4,&gt;=3.0.2 (from requests-&gt;-r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl (133kB)
Collecting idna&lt;3,&gt;=2.5 (from requests-&gt;-r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/a2/38/928ddce2273eaa564f6f50de919327bf3a00f091b5baba8dfa9460f3a8a8/idna-2.10-py2.py3-none-any.whl (58kB)
Collecting certifi&gt;=2017.4.17 (from requests-&gt;-r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/5e/c4/6c4fe722df5343c33226f0b4e0bb042e4dc13483228b4718baf286f86d87/certifi-2020.6.20-py2.py3-none-any.whl (156kB)
Installing collected packages: urllib3, selenium, chardet, idna, certifi, requests
Successfully installed certifi-2020.6.20 chardet-3.0.4 idna-2.10 requests-2.24.0 selenium-3.141.0 urllib3-1.25.10
You are using pip version 19.0.1, however version 20.2 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
Removing intermediate container a694e49a4fbf
 ---&gt; c6cee0e65a83
Step 8/9 : EXPOSE 5000
 ---&gt; Running in 0a8738c81f82
Removing intermediate container 0a8738c81f82
 ---&gt; 66b223aa513c
Step 9/9 : CMD python ./find_tradable.py
 ---&gt; Running in 3ca56154d699
Removing intermediate container 3ca56154d699
 ---&gt; 3b5e507c7b4b
Successfully built 3b5e507c7b4b
Successfully tagged my-python-app:2
</code></pre>
",2020-07,i m trying to deploy a little python script using selenium on my gcp virtual machine following this tutorial unfortunately i can t pass the requirements txt when building the container image indeed as one can read mikempc  instance   sudo docker build tag my python app sending build context to docker daemon    mb step     from python alpine    alpine    pulling from library python  ecbb b e pull complete  f ee fa pull complete  d  pull complete  c be f bf pull complete ca b df ed pull complete digest sha   f f ab f c dbefd e b a b ccb bae dcdba  status downloaded newer image for python alpine     be e f  step     copy app d ae db f  step     workdir app running in  f c e  removing intermediate container  f c e   d d step     run pip install r requirements txt running in  da ee cb collecting selenium from r requirements txt line   downloading https files pythonhosted org packages   d   f b bce de abf e f d b a e dd a f ca  selenium       py  py  none any whl  kb collecting pandas from r requirements txt line   downloading https files pythonhosted org packages  f    ff ffa cc d f c ef cb ffd c b b d dd ca pandas       tar gz    mb installing build dependencies started installing build dependencies finished with status error complete output from command usr local bin python usr local lib python    site packages pip install ignore installed no user prefix tmp pip build env ou zb ns overlay no warn script l ocation no binary none only binary none i https pypi org simple setuptools wheel cython         numpy       python_version     and platform_system aix numpy       python_version     and platform_system aix numpy       python_version     and platform_system aix numpy       python_version     and platform_system aix numpy       python_version     and platform_system aix numpy       python_version     and platform_system aix ignoring numpy markers python_version     and platform_system aix don t match your environment ignoring numpy markers python_version     and platform_system aix don t match your environment ignoring numpy markers python_version     and platform_system aix don t match your environment ignoring numpy markers python_version     and platform_system aix don t match your environment ignoring numpy markers python_version     and platform_system aix don t match your environment collecting setuptools downloading https files pythonhosted org packages  e    e f cad cb b c cae e f b f d b e b  setuptools       py  none any whl  kb collecting wheel downloading https files pythonhosted org packages  c    cccf e f bbb b a c f e f ab c e e cd  wheel       py  py  none any whl collecting cython         downloading https files pythonhosted org packages ad  b  e bcce c fd db e bba be fe d c  cython       py  py  none any whl  kb collecting numpy       downloading https files pythonhosted org packages  d    de bad b bcfca e eb c d bee f fe a dd e  numpy       zip    mb building wheels for collected packages numpy building wheel for numpy setup py started building wheel for numpy setup py finished with status error complete output from command usr local bin python u c import setuptools tokenize __file__ tmp pip install  mjafl numpy setup py f getattr tokenize open open __file__ code f rea d replace r n n f close exec compile code __file__ exec bdist_wheel d tmp pip wheel q_b mdo python tag cp  running from numpy source directory blas_opt_info blas_mkl_info customize unixccompiler libraries mkl_rt not found in usr local lib usr lib not available blis_info customize unixccompiler libraries blis not found in usr local lib usr lib not available openblas_info customize unixccompiler customize unixccompiler libraries openblas not found in usr local lib usr lib not available atlas_ _ _blas_threads_info setting ptatlas atlas customize unixccompiler libraries tatlas not found in usr local lib usr lib not available atlas_ _ _blas_info customize unixccompiler libraries satlas not found in usr local lib usr lib not available atlas_blas_threads_info setting ptatlas atlas customize unixccompiler libraries ptf blas ptcblas atlas not found in usr local lib usr lib not available atlas_blas_info customize unixccompiler libraries f blas cblas atlas not found in usr local lib usr lib not available accelerate_info not available tmp pip install  mjafl numpy numpy distutils system_info py   userwarning atlas http math atlas sourceforge net libraries not found directories to search for the libraries can be specified in the numpy distutils site cfg file section atlas or by setting the atlas environment variable self calc_info blas_info customize unixccompiler libraries blas not found in usr local lib usr lib not available file usr local lib python    distutils core py line   in setup dist run_commands file usr local lib python    distutils dist py line   in run_commands self run_command cmd file usr local lib python    distutils dist py line   in run_command cmd_obj run file tmp pip install  mjafl numpy numpy distutils command install py line   in run r self setuptools_run file tmp pip install  mjafl numpy numpy distutils command install py line   in setuptools_run return distutils_install run self file usr local lib python    distutils command install py line   in run self run_command build file usr local lib python    distutils cmd py line   in run_command self distribution run_command command file usr local lib python    distutils dist py line   in run_command cmd_obj run file tmp pip install  mjafl numpy numpy distutils command build py line   in run old_build run self file usr local lib python    distutils command build py line   in run self run_command cmd_name file usr local lib python    distutils cmd py line   in run_command self distribution run_command command file usr local lib python    distutils dist py line   in run_command cmd_obj run file tmp pip install  mjafl numpy numpy distutils command build_src py line   in run self build_sources file tmp pip install  mjafl numpy numpy distutils command build_src py line   in build_sources self build_library_sources libname_info file tmp pip install  mjafl numpy numpy distutils command build_src py line   in build_library_sources sources self generate_sources sources lib_name build_info file tmp pip install  mjafl numpy numpy distutils command build_src py line   in generate_sources source func extension build_dir file numpy core setup py line   in get_mathlib_info raise runtimeerror broken toolchain cannot link a simple c program runtimeerror broken toolchain cannot link a simple c program command usr local bin python u c import setuptools tokenize __file__ tmp pip install  mjafl numpy setup py f getattr tokenize open open __file__ code f read replace r n n f close exec compile code __file__ exec install record tmp pip record sgbls z_ install record txt single version externally managed prefix tmp pip build env ou zb ns overlay compile failed with error code   in tmp pip install  mjafl numpy you are using pip version       however version     is available you should consider upgrading via the pip install upgrade pip command command usr local bin python usr local lib python    site packages pip install ignore installed no user prefix tmp pip build env ou zb ns overlay no warn script location no binary n one only binary none i https pypi org simple setuptools wheel cython         numpy       python_version     and platform_system aix numpy       python_version     and platform_system aix numpy       python_version     and platform_system aix numpy       python_version     and platform_system aix numpy       python_version     and platform_system aix numpy       python_version     and platform_system aix failed with error code   in none you are using pip version       however version     is available you should consider upgrading via the pip install upgrade pip command the command bin sh c pip install r requirements txt returned a non zero code   here is my requirements txt file selenium pandas numpy collections json time requests and here is the file i m trying to contenerize from selenium import webdriver from selenium webdriver common keys import keys from selenium webdriver common by import by from selenium webdriver support ui import webdriverwait from selenium webdriver support import expected_conditions as ec from selenium common exceptions import elementclickinterceptedexception from selenium common exceptions import nosuchelementexception from selenium webdriver chrome options import options import pandas as pd import numpy as np from collections import defaultdict import json import time import requests from requests exceptions import connectionerror define browser options chrome_options options chrome_options add_argument headless hides the browser window reference the local chromedriver instance chrome_path r c programs chromedriver exe driver webdriver chrome executable_path chrome_path options chrome_options df pd read_csv path to file tradable print len df ticker for ticker in df ticker print ticker ticker location https www etoro com markets ticker lower try request requests get location driver get location time sleep   current_url driver current_url if current_url location tradable append ticker else print no page but request request except connectionerror print ticker isn t tradable else tradable append ticker here is my dockerfile from python alpine    copy app workdir app run pip install r requirements txt expose   cmd python find_tradable py here are my os name and version mikempc  instance   cat etc os release pretty_name debian gnu linux   stretch name debian gnu linux version_id   version   stretch version_codename stretch id debian home_url https www debian org support_url https www debian org support bug_report_url https bugs debian org here is my linux kernel version mikempc  instance   uname r         amd  update i m trying serhii rohoza s answer i have updated my requirements txt file i don t have the same issue but now i have an error when trying the command to build the image from the dockerfile mikempc  instance   sudo docker build tag my python app   sending build context to docker daemon    mb step     from python python    slim manifest for python python    slim not found manifest unknown manifest unknown so i tried mikempc  instance   sudo docker pull python     slim     slim pulling from library python  ec c e  already exists  b acb e  already exists  e de a pull complete  de e pull complete a d a e c pull complete digest sha   c bca b e c d d b ad a f d af f  status downloaded newer image for python     slim docker io library python     slim mikempc  instance   sudo docker build tag my python app   sending build context to docker daemon    mb step     from python python    slim manifest for python python    slim not found manifest unknown manifest unknown,to solve your issue you should use debian based image to build docker image i removed collections which is deprecated json it s built in and time it s built in from requirements txt and changed dockerfile cat dockerfile from python     slim copy app workdir app run pip install r requirements txt expose   cmd python find_tradable py cat requirements txt selenium pandas numpy requests sudo docker build tag my python app   sending build context to docker daemon    kb step     from python     slim c d af  step     copy app ddb cd f step     workdir app running in  e a ce c removing intermediate container  e a ce c  db f b step     run pip install r requirements txt running in  cdde c b  collecting selenium downloading selenium       py  py  none any whl   kb collecting pandas downloading pandas       cp  cp m manylinux _x _  whl     mb collecting numpy downloading numpy       cp  cp m manylinux _x _  whl     mb collecting requests downloading requests       py  py  none any whl   kb collecting urllib  downloading urllib        py  py  none any whl   kb collecting python dateutil       downloading python_dateutil       py  py  none any whl   kb collecting pytz     downloading pytz     py  py  none any whl   kb collecting idna       downloading idna     py  py  none any whl   kb collecting chardet         downloading chardet       py  py  none any whl   kb collecting certifi       downloading certifi       py  py  none any whl   kb collecting six     downloading six       py  py  none any whl   kb installing collected packages urllib  selenium six python dateutil numpy pytz pandas idna chardet certifi requests successfully installed certifi       chardet       idna     numpy       pandas       python dateutil       pytz     requests       selenium       six       urllib        warning you are using pip version       however version     is available you should consider upgrading via the usr local bin python m pip install upgrade pip command removing intermediate container  cdde c b   dd a c step     expose   running in  f bb b f  removing intermediate container  f bb b f   bed d d  step     cmd python find_tradable py running in  c f c  removing intermediate container  c f c  af d fee successfully built af d fee successfully tagged my python app   as a possible workaround you can try to install pandas and numpy from packages available in the alpine repository cat dockerfile from python alpine    copy app workdir app run echo http dl   alpinelinux org alpine edge community etc apk repositories run apk add update no cache libgfortran py  pandas py  numpy env pythonpath usr lib python    site packages run pip install r requirements txt expose   cmd python find_tradable py cat requirements txt selenium requests sudo docker build tag my python app   sending build context to docker daemon    kb step     from python alpine     be e f  step     copy app  d fe cb  step     workdir app running in c bf a removing intermediate container c bf a  d d  step     run echo http dl   alpinelinux org alpine edge community etc apk repositories running in  a a f  removing intermediate container  a a f   ce de  step     run apk add update no cache libgfortran py  numpy py  pandas running in  ac a  fetch http dl cdn alpinelinux org alpine v    main x _  apkindex tar gz fetch http dl cdn alpinelinux org alpine v    community x _  apkindex tar gz fetch http dl   alpinelinux org alpine edge community x _  apkindex tar gz     installing libgcc       r      installing libquadmath       r      installing libgfortran       r      installing openblas       r      installing py  numpy       r      installing python        r      installing py  six       r      installing py  dateutil       r      installing py  tz     r      installing libstdc       r      installing py  pandas       r  executing busybox       r  trigger ok   mib in   packages removing intermediate container  ac a   af bb da step     env pythonpath usr lib python    site packages running in  c c f  removing intermediate container  c c f   edc aa ef  step     run pip install r requirements txt running in a e a fbf collecting selenium from r requirements txt line   downloading https files pythonhosted org packages   d   f b bce de abf e f d b a e dd a f ca  selenium       py  py  none any whl  kb collecting requests from r requirements txt line   downloading https files pythonhosted org packages    e  c c a e ba c a d ab c bed bdcd c  requests       py  py  none any whl  kb collecting urllib  from selenium r requirements txt line   downloading https files pythonhosted org packages  f f  a d ebb b cabfc ef d db de f e d  urllib        py  py  none any whl  kb collecting chardet         from requests r requirements txt line   downloading https files pythonhosted org packages bc a   ffebfb e b b bb ddec ca ec b e c f b  chardet       py  py  none any whl  kb collecting idna       from requests r requirements txt line   downloading https files pythonhosted org packages a     ddce eaa f f de bf a f b baba dfa f a a  idna     py  py  none any whl  kb collecting certifi       from requests r requirements txt line   downloading https files pythonhosted org packages  e c   c fe df c f b e bb e dc b baf f d  certifi       py  py  none any whl  kb installing collected packages urllib  selenium chardet idna certifi requests successfully installed certifi       chardet       idna     requests       selenium       urllib        you are using pip version       however version     is available you should consider upgrading via the pip install upgrade pip command removing intermediate container a e a fbf c cee e a  step     expose   running in  a c f  removing intermediate container  a c f   b aa c step     cmd python find_tradable py running in  ca d  removing intermediate container  ca d   b e c b b successfully built  b e c b b successfully tagged my python app,"['python-3.x', 'docker', 'google-cloud-platform', 'requirements']","['i', 'm', 'trying', 'to', 'deploy', 'a', 'little', 'python', 'script', 'using', 'selenium', 'on', 'my', 'gcp', 'virtual', 'machine', 'following', 'this', 'tutorial', 'unfortunately', 'i', 'can', 't', 'pass', 'the', 'requirements', 'txt', 'when', 'building', 'the', 'container', 'image', 'indeed', 'as', 'one', 'can', 'read', 'mikempc', 'instance', 'sudo', 'docker', 'build', 'tag', 'my', 'python', 'app', 'sending', 'build', 'context', 'to', 'docker', 'daemon', 'mb', 'step', 'from', 'python', 'alpine', 'alpine', 'pulling', 'from', 'library', 'python', 'ecbb', 'b', 'e', 'pull', 'complete', 'f', 'ee', 'fa', 'pull', 'complete', 'd', 'pull', 'complete', 'c', 'be', 'f', 'bf', 'pull', 'complete', 'ca', 'b', 'df', 'ed', 'pull', 'complete', 'digest', 'sha', 'f', 'f', 'ab', 'f', 'c', 'dbefd', 'e', 'b', 'a', 'b', 'ccb', 'bae', 'dcdba', 'status', 'downloaded', 'newer', 'image', 'for', 'python', 'alpine', 'be', 'e', 'f', 'step', 'copy', 'app', 'd', 'ae', 'db', 'f', 'step', 'workdir', 'app', 'running', 'in', 'f', 'c', 'e', 'removing', 'intermediate', 'container', 'f', 'c', 'e', 'd', 'd', 'step', 'run', 'pip', 'install', 'r', 'requirements', 'txt', 'running', 'in', 'da', 'ee', 'cb', 'collecting', 'selenium', 'from', 'r', 'requirements', 'txt', 'line', 'downloading', 'https', 'files', 'pythonhosted', 'org', 'packages', 'd', 'f', 'b', 'bce', 'de', 'abf', 'e', 'f', 'd', 'b', 'a', 'e', 'dd', 'a', 'f', 'ca', 'selenium', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'pandas', 'from', 'r', 'requirements', 'txt', 'line', 'downloading', 'https', 'files', 'pythonhosted', 'org', 'packages', 'f', 'ff', 'ffa', 'cc', 'd', 'f', 'c', 'ef', 'cb', 'ffd', 'c', 'b', 'b', 'd', 'dd', 'ca', 'pandas', 'tar', 'gz', 'mb', 'installing', 'build', 'dependencies', 'started', 'installing', 'build', 'dependencies', 'finished', 'with', 'status', 'error', 'complete', 'output', 'from', 'command', 'usr', 'local', 'bin', 'python', 'usr', 'local', 'lib', 'python', 'site', 'packages', 'pip', 'install', 'ignore', 'installed', 'no', 'user', 'prefix', 'tmp', 'pip', 'build', 'env', 'ou', 'zb', 'ns', 'overlay', 'no', 'warn', 'script', 'l', 'ocation', 'no', 'binary', 'none', 'only', 'binary', 'none', 'i', 'https', 'pypi', 'org', 'simple', 'setuptools', 'wheel', 'cython', 'numpy', 'python_version', 'and', 'platform_system', 'aix', 'numpy', 'python_version', 'and', 'platform_system', 'aix', 'numpy', 'python_version', 'and', 'platform_system', 'aix', 'numpy', 'python_version', 'and', 'platform_system', 'aix', 'numpy', 'python_version', 'and', 'platform_system', 'aix', 'numpy', 'python_version', 'and', 'platform_system', 'aix', 'ignoring', 'numpy', 'markers', 'python_version', 'and', 'platform_system', 'aix', 'don', 't', 'match', 'your', 'environment', 'ignoring', 'numpy', 'markers', 'python_version', 'and', 'platform_system', 'aix', 'don', 't', 'match', 'your', 'environment', 'ignoring', 'numpy', 'markers', 'python_version', 'and', 'platform_system', 'aix', 'don', 't', 'match', 'your', 'environment', 'ignoring', 'numpy', 'markers', 'python_version', 'and', 'platform_system', 'aix', 'don', 't', 'match', 'your', 'environment', 'ignoring', 'numpy', 'markers', 'python_version', 'and', 'platform_system', 'aix', 'don', 't', 'match', 'your', 'environment', 'collecting', 'setuptools', 'downloading', 'https', 'files', 'pythonhosted', 'org', 'packages', 'e', 'e', 'f', 'cad', 'cb', 'b', 'c', 'cae', 'e', 'f', 'b', 'f', 'd', 'b', 'e', 'b', 'setuptools', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'wheel', 'downloading', 'https', 'files', 'pythonhosted', 'org', 'packages', 'c', 'cccf', 'e', 'f', 'bbb', 'b', 'a', 'c', 'f', 'e', 'f', 'ab', 'c', 'e', 'e', 'cd', 'wheel', 'py', 'py', 'none', 'any', 'whl', 'collecting', 'cython', 'downloading', 'https', 'files', 'pythonhosted', 'org', 'packages', 'ad', 'b', 'e', 'bcce', 'c', 'fd', 'db', 'e', 'bba', 'be', 'fe', 'd', 'c', 'cython', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'numpy', 'downloading', 'https', 'files', 'pythonhosted', 'org', 'packages', 'd', 'de', 'bad', 'b', 'bcfca', 'e', 'eb', 'c', 'd', 'bee', 'f', 'fe', 'a', 'dd', 'e', 'numpy', 'zip', 'mb', 'building', 'wheels', 'for', 'collected', 'packages', 'numpy', 'building', 'wheel', 'for', 'numpy', 'setup', 'py', 'started', 'building', 'wheel', 'for', 'numpy', 'setup', 'py', 'finished', 'with', 'status', 'error', 'complete', 'output', 'from', 'command', 'usr', 'local', 'bin', 'python', 'u', 'c', 'import', 'setuptools', 'tokenize', '__file__', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'setup', 'py', 'f', 'getattr', 'tokenize', 'open', 'open', '__file__', 'code', 'f', 'rea', 'd', 'replace', 'r', 'n', 'n', 'f', 'close', 'exec', 'compile', 'code', '__file__', 'exec', 'bdist_wheel', 'd', 'tmp', 'pip', 'wheel', 'q_b', 'mdo', 'python', 'tag', 'cp', 'running', 'from', 'numpy', 'source', 'directory', 'blas_opt_info', 'blas_mkl_info', 'customize', 'unixccompiler', 'libraries', 'mkl_rt', 'not', 'found', 'in', 'usr', 'local', 'lib', 'usr', 'lib', 'not', 'available', 'blis_info', 'customize', 'unixccompiler', 'libraries', 'blis', 'not', 'found', 'in', 'usr', 'local', 'lib', 'usr', 'lib', 'not', 'available', 'openblas_info', 'customize', 'unixccompiler', 'customize', 'unixccompiler', 'libraries', 'openblas', 'not', 'found', 'in', 'usr', 'local', 'lib', 'usr', 'lib', 'not', 'available', 'atlas_', '_', '_blas_threads_info', 'setting', 'ptatlas', 'atlas', 'customize', 'unixccompiler', 'libraries', 'tatlas', 'not', 'found', 'in', 'usr', 'local', 'lib', 'usr', 'lib', 'not', 'available', 'atlas_', '_', '_blas_info', 'customize', 'unixccompiler', 'libraries', 'satlas', 'not', 'found', 'in', 'usr', 'local', 'lib', 'usr', 'lib', 'not', 'available', 'atlas_blas_threads_info', 'setting', 'ptatlas', 'atlas', 'customize', 'unixccompiler', 'libraries', 'ptf', 'blas', 'ptcblas', 'atlas', 'not', 'found', 'in', 'usr', 'local', 'lib', 'usr', 'lib', 'not', 'available', 'atlas_blas_info', 'customize', 'unixccompiler', 'libraries', 'f', 'blas', 'cblas', 'atlas', 'not', 'found', 'in', 'usr', 'local', 'lib', 'usr', 'lib', 'not', 'available', 'accelerate_info', 'not', 'available', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'system_info', 'py', 'userwarning', 'atlas', 'http', 'math', 'atlas', 'sourceforge', 'net', 'libraries', 'not', 'found', 'directories', 'to', 'search', 'for', 'the', 'libraries', 'can', 'be', 'specified', 'in', 'the', 'numpy', 'distutils', 'site', 'cfg', 'file', 'section', 'atlas', 'or', 'by', 'setting', 'the', 'atlas', 'environment', 'variable', 'self', 'calc_info', 'blas_info', 'customize', 'unixccompiler', 'libraries', 'blas', 'not', 'found', 'in', 'usr', 'local', 'lib', 'usr', 'lib', 'not', 'available', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'core', 'py', 'line', 'in', 'setup', 'dist', 'run_commands', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'dist', 'py', 'line', 'in', 'run_commands', 'self', 'run_command', 'cmd', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'dist', 'py', 'line', 'in', 'run_command', 'cmd_obj', 'run', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'install', 'py', 'line', 'in', 'run', 'r', 'self', 'setuptools_run', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'install', 'py', 'line', 'in', 'setuptools_run', 'return', 'distutils_install', 'run', 'self', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'command', 'install', 'py', 'line', 'in', 'run', 'self', 'run_command', 'build', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'cmd', 'py', 'line', 'in', 'run_command', 'self', 'distribution', 'run_command', 'command', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'dist', 'py', 'line', 'in', 'run_command', 'cmd_obj', 'run', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'build', 'py', 'line', 'in', 'run', 'old_build', 'run', 'self', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'command', 'build', 'py', 'line', 'in', 'run', 'self', 'run_command', 'cmd_name', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'cmd', 'py', 'line', 'in', 'run_command', 'self', 'distribution', 'run_command', 'command', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'dist', 'py', 'line', 'in', 'run_command', 'cmd_obj', 'run', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'build_src', 'py', 'line', 'in', 'run', 'self', 'build_sources', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'build_src', 'py', 'line', 'in', 'build_sources', 'self', 'build_library_sources', 'libname_info', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'build_src', 'py', 'line', 'in', 'build_library_sources', 'sources', 'self', 'generate_sources', 'sources', 'lib_name', 'build_info', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'build_src', 'py', 'line', 'in', 'generate_sources', 'source', 'func', 'extension', 'build_dir', 'file', 'numpy', 'core', 'setup', 'py', 'line', 'in', 'get_mathlib_info', 'raise', 'runtimeerror', 'broken', 'toolchain', 'can', 'not', 'link', 'a', 'simple', 'c', 'program', 'runtimeerror', 'broken', 'toolchain', 'can', 'not', 'link', 'a', 'simple', 'c', 'program', 'command', 'usr', 'local', 'bin', 'python', 'u', 'c', 'import', 'setuptools', 'tokenize', '__file__', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'setup', 'py', 'f', 'getattr', 'tokenize', 'open', 'open', '__file__', 'code', 'f', 'read', 'replace', 'r', 'n', 'n', 'f', 'close', 'exec', 'compile', 'code', '__file__', 'exec', 'install', 'record', 'tmp', 'pip', 'record', 'sgbls', 'z_', 'install', 'record', 'txt', 'single', 'version', 'externally', 'managed', 'prefix', 'tmp', 'pip', 'build', 'env', 'ou', 'zb', 'ns', 'overlay', 'compile', 'failed', 'with', 'error', 'code', 'in', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'you', 'are', 'using', 'pip', 'version', 'however', 'version', 'is', 'available', 'you', 'should', 'consider', 'upgrading', 'via', 'the', 'pip', 'install', 'upgrade', 'pip', 'command', 'command', 'usr', 'local', 'bin', 'python', 'usr', 'local', 'lib', 'python', 'site', 'packages', 'pip', 'install', 'ignore', 'installed', 'no', 'user', 'prefix', 'tmp', 'pip', 'build', 'env', 'ou', 'zb', 'ns', 'overlay', 'no', 'warn', 'script', 'location', 'no', 'binary', 'n', 'one', 'only', 'binary', 'none', 'i', 'https', 'pypi', 'org', 'simple', 'setuptools', 'wheel', 'cython', 'numpy', 'python_version', 'and', 'platform_system', 'aix', 'numpy', 'python_version', 'and', 'platform_system', 'aix', 'numpy', 'python_version', 'and', 'platform_system', 'aix', 'numpy', 'python_version', 'and', 'platform_system', 'aix', 'numpy', 'python_version', 'and', 'platform_system', 'aix', 'numpy', 'python_version', 'and', 'platform_system', 'aix', 'failed', 'with', 'error', 'code', 'in', 'none', 'you', 'are', 'using', 'pip', 'version', 'however', 'version', 'is', 'available', 'you', 'should', 'consider', 'upgrading', 'via', 'the', 'pip', 'install', 'upgrade', 'pip', 'command', 'the', 'command', 'bin', 'sh', 'c', 'pip', 'install', 'r', 'requirements', 'txt', 'returned', 'a', 'non', 'zero', 'code', 'here', 'is', 'my', 'requirements', 'txt', 'file', 'selenium', 'pandas', 'numpy', 'collections', 'json', 'time', 'requests', 'and', 'here', 'is', 'the', 'file', 'i', 'm', 'trying', 'to', 'contenerize', 'from', 'selenium', 'import', 'webdriver', 'from', 'selenium', 'webdriver', 'common', 'keys', 'import', 'keys', 'from', 'selenium', 'webdriver', 'common', 'by', 'import', 'by', 'from', 'selenium', 'webdriver', 'support', 'ui', 'import', 'webdriverwait', 'from', 'selenium', 'webdriver', 'support', 'import', 'expected_conditions', 'as', 'ec', 'from', 'selenium', 'common', 'exceptions', 'import', 'elementclickinterceptedexception', 'from', 'selenium', 'common', 'exceptions', 'import', 'nosuchelementexception', 'from', 'selenium', 'webdriver', 'chrome', 'options', 'import', 'options', 'import', 'pandas', 'as', 'pd', 'import', 'numpy', 'as', 'np', 'from', 'collections', 'import', 'defaultdict', 'import', 'json', 'import', 'time', 'import', 'requests', 'from', 'requests', 'exceptions', 'import', 'connectionerror', 'define', 'browser', 'options', 'chrome_options', 'options', 'chrome_options', 'add_argument', 'headless', 'hides', 'the', 'browser', 'window', 'reference', 'the', 'local', 'chromedriver', 'instance', 'chrome_path', 'r', 'c', 'programs', 'chromedriver', 'exe', 'driver', 'webdriver', 'chrome', 'executable_path', 'chrome_path', 'options', 'chrome_options', 'df', 'pd', 'read_csv', 'path', 'to', 'file', 'tradable', 'print', 'len', 'df', 'ticker', 'for', 'ticker', 'in', 'df', 'ticker', 'print', 'ticker', 'ticker', 'location', 'https', 'www', 'etoro', 'com', 'markets', 'ticker', 'lower', 'try', 'request', 'requests', 'get', 'location', 'driver', 'get', 'location', 'time', 'sleep', 'current_url', 'driver', 'current_url', 'if', 'current_url', 'location', 'tradable', 'append', 'ticker', 'else', 'print', 'no', 'page', 'but', 'request', 'request', 'except', 'connectionerror', 'print', 'ticker', 'isn', 't', 'tradable', 'else', 'tradable', 'append', 'ticker', 'here', 'is', 'my', 'dockerfile', 'from', 'python', 'alpine', 'copy', 'app', 'workdir', 'app', 'run', 'pip', 'install', 'r', 'requirements', 'txt', 'expose', 'cmd', 'python', 'find_tradable', 'py', 'here', 'are', 'my', 'os', 'name', 'and', 'version', 'mikempc', 'instance', 'cat', 'etc', 'os', 'release', 'pretty_name', 'debian', 'gnu', 'linux', 'stretch', 'name', 'debian', 'gnu', 'linux', 'version_id', 'version', 'stretch', 'version_codename', 'stretch', 'id', 'debian', 'home_url', 'https', 'www', 'debian', 'org', 'support_url', 'https', 'www', 'debian', 'org', 'support', 'bug_report_url', 'https', 'bugs', 'debian', 'org', 'here', 'is', 'my', 'linux', 'kernel', 'version', 'mikempc', 'instance', 'uname', 'r', 'amd', 'update', 'i', 'm', 'trying', 'serhii', 'rohoza', 's', 'answer', 'i', 'have', 'updated', 'my', 'requirements', 'txt', 'file', 'i', 'don', 't', 'have', 'the', 'same', 'issue', 'but', 'now', 'i', 'have', 'an', 'error', 'when', 'trying', 'the', 'command', 'to', 'build', 'the', 'image', 'from', 'the', 'dockerfile', 'mikempc', 'instance', 'sudo', 'docker', 'build', 'tag', 'my', 'python', 'app', 'sending', 'build', 'context', 'to', 'docker', 'daemon', 'mb', 'step', 'from', 'python', 'python', 'slim', 'manifest', 'for', 'python', 'python', 'slim', 'not', 'found', 'manifest', 'unknown', 'manifest', 'unknown', 'so', 'i', 'tried', 'mikempc', 'instance', 'sudo', 'docker', 'pull', 'python', 'slim', 'slim', 'pulling', 'from', 'library', 'python', 'ec', 'c', 'e', 'already', 'exists', 'b', 'acb', 'e', 'already', 'exists', 'e', 'de', 'a', 'pull', 'complete', 'de', 'e', 'pull', 'complete', 'a', 'd', 'a', 'e', 'c', 'pull', 'complete', 'digest', 'sha', 'c', 'bca', 'b', 'e', 'c', 'd', 'd', 'b', 'ad', 'a', 'f', 'd', 'af', 'f', 'status', 'downloaded', 'newer', 'image', 'for', 'python', 'slim', 'docker', 'io', 'library', 'python', 'slim', 'mikempc', 'instance', 'sudo', 'docker', 'build', 'tag', 'my', 'python', 'app', 'sending', 'build', 'context', 'to', 'docker', 'daemon', 'mb', 'step', 'from', 'python', 'python', 'slim', 'manifest', 'for', 'python', 'python', 'slim', 'not', 'found', 'manifest', 'unknown', 'manifest', 'unknown']","['to', 'solve', 'your', 'issue', 'you', 'should', 'use', 'debian', 'based', 'image', 'to', 'build', 'docker', 'image', 'i', 'removed', 'collections', 'which', 'is', 'deprecated', 'json', 'it', 's', 'built', 'in', 'and', 'time', 'it', 's', 'built', 'in', 'from', 'requirements', 'txt', 'and', 'changed', 'dockerfile', 'cat', 'dockerfile', 'from', 'python', 'slim', 'copy', 'app', 'workdir', 'app', 'run', 'pip', 'install', 'r', 'requirements', 'txt', 'expose', 'cmd', 'python', 'find_tradable', 'py', 'cat', 'requirements', 'txt', 'selenium', 'pandas', 'numpy', 'requests', 'sudo', 'docker', 'build', 'tag', 'my', 'python', 'app', 'sending', 'build', 'context', 'to', 'docker', 'daemon', 'kb', 'step', 'from', 'python', 'slim', 'c', 'd', 'af', 'step', 'copy', 'app', 'ddb', 'cd', 'f', 'step', 'workdir', 'app', 'running', 'in', 'e', 'a', 'ce', 'c', 'removing', 'intermediate', 'container', 'e', 'a', 'ce', 'c', 'db', 'f', 'b', 'step', 'run', 'pip', 'install', 'r', 'requirements', 'txt', 'running', 'in', 'cdde', 'c', 'b', 'collecting', 'selenium', 'downloading', 'selenium', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'pandas', 'downloading', 'pandas', 'cp', 'cp', 'm', 'manylinux', '_x', '_', 'whl', 'mb', 'collecting', 'numpy', 'downloading', 'numpy', 'cp', 'cp', 'm', 'manylinux', '_x', '_', 'whl', 'mb', 'collecting', 'requests', 'downloading', 'requests', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'urllib', 'downloading', 'urllib', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'python', 'dateutil', 'downloading', 'python_dateutil', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'pytz', 'downloading', 'pytz', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'idna', 'downloading', 'idna', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'chardet', 'downloading', 'chardet', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'certifi', 'downloading', 'certifi', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'six', 'downloading', 'six', 'py', 'py', 'none', 'any', 'whl', 'kb', 'installing', 'collected', 'packages', 'urllib', 'selenium', 'six', 'python', 'dateutil', 'numpy', 'pytz', 'pandas', 'idna', 'chardet', 'certifi', 'requests', 'successfully', 'installed', 'certifi', 'chardet', 'idna', 'numpy', 'pandas', 'python', 'dateutil', 'pytz', 'requests', 'selenium', 'six', 'urllib', 'warning', 'you', 'are', 'using', 'pip', 'version', 'however', 'version', 'is', 'available', 'you', 'should', 'consider', 'upgrading', 'via', 'the', 'usr', 'local', 'bin', 'python', 'm', 'pip', 'install', 'upgrade', 'pip', 'command', 'removing', 'intermediate', 'container', 'cdde', 'c', 'b', 'dd', 'a', 'c', 'step', 'expose', 'running', 'in', 'f', 'bb', 'b', 'f', 'removing', 'intermediate', 'container', 'f', 'bb', 'b', 'f', 'bed', 'd', 'd', 'step', 'cmd', 'python', 'find_tradable', 'py', 'running', 'in', 'c', 'f', 'c', 'removing', 'intermediate', 'container', 'c', 'f', 'c', 'af', 'd', 'fee', 'successfully', 'built', 'af', 'd', 'fee', 'successfully', 'tagged', 'my', 'python', 'app', 'as', 'a', 'possible', 'workaround', 'you', 'can', 'try', 'to', 'install', 'pandas', 'and', 'numpy', 'from', 'packages', 'available', 'in', 'the', 'alpine', 'repository', 'cat', 'dockerfile', 'from', 'python', 'alpine', 'copy', 'app', 'workdir', 'app', 'run', 'echo', 'http', 'dl', 'alpinelinux', 'org', 'alpine', 'edge', 'community', 'etc', 'apk', 'repositories', 'run', 'apk', 'add', 'update', 'no', 'cache', 'libgfortran', 'py', 'pandas', 'py', 'numpy', 'env', 'pythonpath', 'usr', 'lib', 'python', 'site', 'packages', 'run', 'pip', 'install', 'r', 'requirements', 'txt', 'expose', 'cmd', 'python', 'find_tradable', 'py', 'cat', 'requirements', 'txt', 'selenium', 'requests', 'sudo', 'docker', 'build', 'tag', 'my', 'python', 'app', 'sending', 'build', 'context', 'to', 'docker', 'daemon', 'kb', 'step', 'from', 'python', 'alpine', 'be', 'e', 'f', 'step', 'copy', 'app', 'd', 'fe', 'cb', 'step', 'workdir', 'app', 'running', 'in', 'c', 'bf', 'a', 'removing', 'intermediate', 'container', 'c', 'bf', 'a', 'd', 'd', 'step', 'run', 'echo', 'http', 'dl', 'alpinelinux', 'org', 'alpine', 'edge', 'community', 'etc', 'apk', 'repositories', 'running', 'in', 'a', 'a', 'f', 'removing', 'intermediate', 'container', 'a', 'a', 'f', 'ce', 'de', 'step', 'run', 'apk', 'add', 'update', 'no', 'cache', 'libgfortran', 'py', 'numpy', 'py', 'pandas', 'running', 'in', 'ac', 'a', 'fetch', 'http', 'dl', 'cdn', 'alpinelinux', 'org', 'alpine', 'v', 'main', 'x', '_', 'apkindex', 'tar', 'gz', 'fetch', 'http', 'dl', 'cdn', 'alpinelinux', 'org', 'alpine', 'v', 'community', 'x', '_', 'apkindex', 'tar', 'gz', 'fetch', 'http', 'dl', 'alpinelinux', 'org', 'alpine', 'edge', 'community', 'x', '_', 'apkindex', 'tar', 'gz', 'installing', 'libgcc', 'r', 'installing', 'libquadmath', 'r', 'installing', 'libgfortran', 'r', 'installing', 'openblas', 'r', 'installing', 'py', 'numpy', 'r', 'installing', 'python', 'r', 'installing', 'py', 'six', 'r', 'installing', 'py', 'dateutil', 'r', 'installing', 'py', 'tz', 'r', 'installing', 'libstdc', 'r', 'installing', 'py', 'pandas', 'r', 'executing', 'busybox', 'r', 'trigger', 'ok', 'mib', 'in', 'packages', 'removing', 'intermediate', 'container', 'ac', 'a', 'af', 'bb', 'da', 'step', 'env', 'pythonpath', 'usr', 'lib', 'python', 'site', 'packages', 'running', 'in', 'c', 'c', 'f', 'removing', 'intermediate', 'container', 'c', 'c', 'f', 'edc', 'aa', 'ef', 'step', 'run', 'pip', 'install', 'r', 'requirements', 'txt', 'running', 'in', 'a', 'e', 'a', 'fbf', 'collecting', 'selenium', 'from', 'r', 'requirements', 'txt', 'line', 'downloading', 'https', 'files', 'pythonhosted', 'org', 'packages', 'd', 'f', 'b', 'bce', 'de', 'abf', 'e', 'f', 'd', 'b', 'a', 'e', 'dd', 'a', 'f', 'ca', 'selenium', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'requests', 'from', 'r', 'requirements', 'txt', 'line', 'downloading', 'https', 'files', 'pythonhosted', 'org', 'packages', 'e', 'c', 'c', 'a', 'e', 'ba', 'c', 'a', 'd', 'ab', 'c', 'bed', 'bdcd', 'c', 'requests', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'urllib', 'from', 'selenium', 'r', 'requirements', 'txt', 'line', 'downloading', 'https', 'files', 'pythonhosted', 'org', 'packages', 'f', 'f', 'a', 'd', 'ebb', 'b', 'cabfc', 'ef', 'd', 'db', 'de', 'f', 'e', 'd', 'urllib', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'chardet', 'from', 'requests', 'r', 'requirements', 'txt', 'line', 'downloading', 'https', 'files', 'pythonhosted', 'org', 'packages', 'bc', 'a', 'ffebfb', 'e', 'b', 'b', 'bb', 'ddec', 'ca', 'ec', 'b', 'e', 'c', 'f', 'b', 'chardet', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'idna', 'from', 'requests', 'r', 'requirements', 'txt', 'line', 'downloading', 'https', 'files', 'pythonhosted', 'org', 'packages', 'a', 'ddce', 'eaa', 'f', 'f', 'de', 'bf', 'a', 'f', 'b', 'baba', 'dfa', 'f', 'a', 'a', 'idna', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'certifi', 'from', 'requests', 'r', 'requirements', 'txt', 'line', 'downloading', 'https', 'files', 'pythonhosted', 'org', 'packages', 'e', 'c', 'c', 'fe', 'df', 'c', 'f', 'b', 'e', 'bb', 'e', 'dc', 'b', 'baf', 'f', 'd', 'certifi', 'py', 'py', 'none', 'any', 'whl', 'kb', 'installing', 'collected', 'packages', 'urllib', 'selenium', 'chardet', 'idna', 'certifi', 'requests', 'successfully', 'installed', 'certifi', 'chardet', 'idna', 'requests', 'selenium', 'urllib', 'you', 'are', 'using', 'pip', 'version', 'however', 'version', 'is', 'available', 'you', 'should', 'consider', 'upgrading', 'via', 'the', 'pip', 'install', 'upgrade', 'pip', 'command', 'removing', 'intermediate', 'container', 'a', 'e', 'a', 'fbf', 'c', 'cee', 'e', 'a', 'step', 'expose', 'running', 'in', 'a', 'c', 'f', 'removing', 'intermediate', 'container', 'a', 'c', 'f', 'b', 'aa', 'c', 'step', 'cmd', 'python', 'find_tradable', 'py', 'running', 'in', 'ca', 'd', 'removing', 'intermediate', 'container', 'ca', 'd', 'b', 'e', 'c', 'b', 'b', 'successfully', 'built', 'b', 'e', 'c', 'b', 'b', 'successfully', 'tagged', 'my', 'python', 'app']","['trying', 'deploy', 'little', 'python', 'script', 'using', 'selenium', 'gcp', 'virtual', 'machine', 'following', 'tutorial', 'unfortunately', 'pas', 'requirement', 'txt', 'building', 'container', 'image', 'indeed', 'one', 'read', 'mikempc', 'instance', 'sudo', 'docker', 'build', 'tag', 'python', 'app', 'sending', 'build', 'context', 'docker', 'daemon', 'mb', 'step', 'python', 'alpine', 'alpine', 'pulling', 'library', 'python', 'ecbb', 'b', 'e', 'pull', 'complete', 'f', 'ee', 'fa', 'pull', 'complete', 'pull', 'complete', 'c', 'f', 'bf', 'pull', 'complete', 'ca', 'b', 'df', 'ed', 'pull', 'complete', 'digest', 'sha', 'f', 'f', 'ab', 'f', 'c', 'dbefd', 'e', 'b', 'b', 'ccb', 'bae', 'dcdba', 'status', 'downloaded', 'newer', 'image', 'python', 'alpine', 'e', 'f', 'step', 'copy', 'app', 'ae', 'db', 'f', 'step', 'workdir', 'app', 'running', 'f', 'c', 'e', 'removing', 'intermediate', 'container', 'f', 'c', 'e', 'step', 'run', 'pip', 'install', 'r', 'requirement', 'txt', 'running', 'da', 'ee', 'cb', 'collecting', 'selenium', 'r', 'requirement', 'txt', 'line', 'downloading', 'http', 'file', 'pythonhosted', 'org', 'package', 'f', 'b', 'bce', 'de', 'abf', 'e', 'f', 'b', 'e', 'dd', 'f', 'ca', 'selenium', 'py', 'py', 'none', 'whl', 'kb', 'collecting', 'panda', 'r', 'requirement', 'txt', 'line', 'downloading', 'http', 'file', 'pythonhosted', 'org', 'package', 'f', 'ff', 'ffa', 'cc', 'f', 'c', 'ef', 'cb', 'ffd', 'c', 'b', 'b', 'dd', 'ca', 'panda', 'tar', 'gz', 'mb', 'installing', 'build', 'dependency', 'started', 'installing', 'build', 'dependency', 'finished', 'status', 'error', 'complete', 'output', 'command', 'usr', 'local', 'bin', 'python', 'usr', 'local', 'lib', 'python', 'site', 'package', 'pip', 'install', 'ignore', 'installed', 'user', 'prefix', 'tmp', 'pip', 'build', 'env', 'ou', 'zb', 'n', 'overlay', 'warn', 'script', 'l', 'ocation', 'binary', 'none', 'binary', 'none', 'http', 'pypi', 'org', 'simple', 'setuptools', 'wheel', 'cython', 'numpy', 'python_version', 'platform_system', 'aix', 'numpy', 'python_version', 'platform_system', 'aix', 'numpy', 'python_version', 'platform_system', 'aix', 'numpy', 'python_version', 'platform_system', 'aix', 'numpy', 'python_version', 'platform_system', 'aix', 'numpy', 'python_version', 'platform_system', 'aix', 'ignoring', 'numpy', 'marker', 'python_version', 'platform_system', 'aix', 'match', 'environment', 'ignoring', 'numpy', 'marker', 'python_version', 'platform_system', 'aix', 'match', 'environment', 'ignoring', 'numpy', 'marker', 'python_version', 'platform_system', 'aix', 'match', 'environment', 'ignoring', 'numpy', 'marker', 'python_version', 'platform_system', 'aix', 'match', 'environment', 'ignoring', 'numpy', 'marker', 'python_version', 'platform_system', 'aix', 'match', 'environment', 'collecting', 'setuptools', 'downloading', 'http', 'file', 'pythonhosted', 'org', 'package', 'e', 'e', 'f', 'cad', 'cb', 'b', 'c', 'cae', 'e', 'f', 'b', 'f', 'b', 'e', 'b', 'setuptools', 'py', 'none', 'whl', 'kb', 'collecting', 'wheel', 'downloading', 'http', 'file', 'pythonhosted', 'org', 'package', 'c', 'cccf', 'e', 'f', 'bbb', 'b', 'c', 'f', 'e', 'f', 'ab', 'c', 'e', 'e', 'cd', 'wheel', 'py', 'py', 'none', 'whl', 'collecting', 'cython', 'downloading', 'http', 'file', 'pythonhosted', 'org', 'package', 'ad', 'b', 'e', 'bcce', 'c', 'fd', 'db', 'e', 'bba', 'fe', 'c', 'cython', 'py', 'py', 'none', 'whl', 'kb', 'collecting', 'numpy', 'downloading', 'http', 'file', 'pythonhosted', 'org', 'package', 'de', 'bad', 'b', 'bcfca', 'e', 'eb', 'c', 'bee', 'f', 'fe', 'dd', 'e', 'numpy', 'zip', 'mb', 'building', 'wheel', 'collected', 'package', 'numpy', 'building', 'wheel', 'numpy', 'setup', 'py', 'started', 'building', 'wheel', 'numpy', 'setup', 'py', 'finished', 'status', 'error', 'complete', 'output', 'command', 'usr', 'local', 'bin', 'python', 'u', 'c', 'import', 'setuptools', 'tokenize', '__file__', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'setup', 'py', 'f', 'getattr', 'tokenize', 'open', 'open', '__file__', 'code', 'f', 'rea', 'replace', 'r', 'n', 'n', 'f', 'close', 'exec', 'compile', 'code', '__file__', 'exec', 'bdist_wheel', 'tmp', 'pip', 'wheel', 'q_b', 'mdo', 'python', 'tag', 'cp', 'running', 'numpy', 'source', 'directory', 'blas_opt_info', 'blas_mkl_info', 'customize', 'unixccompiler', 'library', 'mkl_rt', 'found', 'usr', 'local', 'lib', 'usr', 'lib', 'available', 'blis_info', 'customize', 'unixccompiler', 'library', 'blis', 'found', 'usr', 'local', 'lib', 'usr', 'lib', 'available', 'openblas_info', 'customize', 'unixccompiler', 'customize', 'unixccompiler', 'library', 'openblas', 'found', 'usr', 'local', 'lib', 'usr', 'lib', 'available', 'atlas_', '_', '_blas_threads_info', 'setting', 'ptatlas', 'atlas', 'customize', 'unixccompiler', 'library', 'tatlas', 'found', 'usr', 'local', 'lib', 'usr', 'lib', 'available', 'atlas_', '_', '_blas_info', 'customize', 'unixccompiler', 'library', 'satlas', 'found', 'usr', 'local', 'lib', 'usr', 'lib', 'available', 'atlas_blas_threads_info', 'setting', 'ptatlas', 'atlas', 'customize', 'unixccompiler', 'library', 'ptf', 'blas', 'ptcblas', 'atlas', 'found', 'usr', 'local', 'lib', 'usr', 'lib', 'available', 'atlas_blas_info', 'customize', 'unixccompiler', 'library', 'f', 'blas', 'cblas', 'atlas', 'found', 'usr', 'local', 'lib', 'usr', 'lib', 'available', 'accelerate_info', 'available', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'system_info', 'py', 'userwarning', 'atlas', 'http', 'math', 'atlas', 'sourceforge', 'net', 'library', 'found', 'directory', 'search', 'library', 'specified', 'numpy', 'distutils', 'site', 'cfg', 'file', 'section', 'atlas', 'setting', 'atlas', 'environment', 'variable', 'self', 'calc_info', 'blas_info', 'customize', 'unixccompiler', 'library', 'blas', 'found', 'usr', 'local', 'lib', 'usr', 'lib', 'available', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'core', 'py', 'line', 'setup', 'dist', 'run_commands', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'dist', 'py', 'line', 'run_commands', 'self', 'run_command', 'cmd', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'dist', 'py', 'line', 'run_command', 'cmd_obj', 'run', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'install', 'py', 'line', 'run', 'r', 'self', 'setuptools_run', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'install', 'py', 'line', 'setuptools_run', 'return', 'distutils_install', 'run', 'self', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'command', 'install', 'py', 'line', 'run', 'self', 'run_command', 'build', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'cmd', 'py', 'line', 'run_command', 'self', 'distribution', 'run_command', 'command', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'dist', 'py', 'line', 'run_command', 'cmd_obj', 'run', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'build', 'py', 'line', 'run', 'old_build', 'run', 'self', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'command', 'build', 'py', 'line', 'run', 'self', 'run_command', 'cmd_name', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'cmd', 'py', 'line', 'run_command', 'self', 'distribution', 'run_command', 'command', 'file', 'usr', 'local', 'lib', 'python', 'distutils', 'dist', 'py', 'line', 'run_command', 'cmd_obj', 'run', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'build_src', 'py', 'line', 'run', 'self', 'build_sources', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'build_src', 'py', 'line', 'build_sources', 'self', 'build_library_sources', 'libname_info', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'build_src', 'py', 'line', 'build_library_sources', 'source', 'self', 'generate_sources', 'source', 'lib_name', 'build_info', 'file', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'numpy', 'distutils', 'command', 'build_src', 'py', 'line', 'generate_sources', 'source', 'func', 'extension', 'build_dir', 'file', 'numpy', 'core', 'setup', 'py', 'line', 'get_mathlib_info', 'raise', 'runtimeerror', 'broken', 'toolchain', 'link', 'simple', 'c', 'program', 'runtimeerror', 'broken', 'toolchain', 'link', 'simple', 'c', 'program', 'command', 'usr', 'local', 'bin', 'python', 'u', 'c', 'import', 'setuptools', 'tokenize', '__file__', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'setup', 'py', 'f', 'getattr', 'tokenize', 'open', 'open', '__file__', 'code', 'f', 'read', 'replace', 'r', 'n', 'n', 'f', 'close', 'exec', 'compile', 'code', '__file__', 'exec', 'install', 'record', 'tmp', 'pip', 'record', 'sgbls', 'z_', 'install', 'record', 'txt', 'single', 'version', 'externally', 'managed', 'prefix', 'tmp', 'pip', 'build', 'env', 'ou', 'zb', 'n', 'overlay', 'compile', 'failed', 'error', 'code', 'tmp', 'pip', 'install', 'mjafl', 'numpy', 'using', 'pip', 'version', 'however', 'version', 'available', 'consider', 'upgrading', 'via', 'pip', 'install', 'upgrade', 'pip', 'command', 'command', 'usr', 'local', 'bin', 'python', 'usr', 'local', 'lib', 'python', 'site', 'package', 'pip', 'install', 'ignore', 'installed', 'user', 'prefix', 'tmp', 'pip', 'build', 'env', 'ou', 'zb', 'n', 'overlay', 'warn', 'script', 'location', 'binary', 'n', 'one', 'binary', 'none', 'http', 'pypi', 'org', 'simple', 'setuptools', 'wheel', 'cython', 'numpy', 'python_version', 'platform_system', 'aix', 'numpy', 'python_version', 'platform_system', 'aix', 'numpy', 'python_version', 'platform_system', 'aix', 'numpy', 'python_version', 'platform_system', 'aix', 'numpy', 'python_version', 'platform_system', 'aix', 'numpy', 'python_version', 'platform_system', 'aix', 'failed', 'error', 'code', 'none', 'using', 'pip', 'version', 'however', 'version', 'available', 'consider', 'upgrading', 'via', 'pip', 'install', 'upgrade', 'pip', 'command', 'command', 'bin', 'sh', 'c', 'pip', 'install', 'r', 'requirement', 'txt', 'returned', 'non', 'zero', 'code', 'requirement', 'txt', 'file', 'selenium', 'panda', 'numpy', 'collection', 'json', 'time', 'request', 'file', 'trying', 'contenerize', 'selenium', 'import', 'webdriver', 'selenium', 'webdriver', 'common', 'key', 'import', 'key', 'selenium', 'webdriver', 'common', 'import', 'selenium', 'webdriver', 'support', 'ui', 'import', 'webdriverwait', 'selenium', 'webdriver', 'support', 'import', 'expected_conditions', 'ec', 'selenium', 'common', 'exception', 'import', 'elementclickinterceptedexception', 'selenium', 'common', 'exception', 'import', 'nosuchelementexception', 'selenium', 'webdriver', 'chrome', 'option', 'import', 'option', 'import', 'panda', 'pd', 'import', 'numpy', 'np', 'collection', 'import', 'defaultdict', 'import', 'json', 'import', 'time', 'import', 'request', 'request', 'exception', 'import', 'connectionerror', 'define', 'browser', 'option', 'chrome_options', 'option', 'chrome_options', 'add_argument', 'headless', 'hide', 'browser', 'window', 'reference', 'local', 'chromedriver', 'instance', 'chrome_path', 'r', 'c', 'program', 'chromedriver', 'exe', 'driver', 'webdriver', 'chrome', 'executable_path', 'chrome_path', 'option', 'chrome_options', 'df', 'pd', 'read_csv', 'path', 'file', 'tradable', 'print', 'len', 'df', 'ticker', 'ticker', 'df', 'ticker', 'print', 'ticker', 'ticker', 'location', 'http', 'www', 'etoro', 'com', 'market', 'ticker', 'lower', 'try', 'request', 'request', 'get', 'location', 'driver', 'get', 'location', 'time', 'sleep', 'current_url', 'driver', 'current_url', 'current_url', 'location', 'tradable', 'append', 'ticker', 'else', 'print', 'page', 'request', 'request', 'except', 'connectionerror', 'print', 'ticker', 'tradable', 'else', 'tradable', 'append', 'ticker', 'dockerfile', 'python', 'alpine', 'copy', 'app', 'workdir', 'app', 'run', 'pip', 'install', 'r', 'requirement', 'txt', 'expose', 'cmd', 'python', 'find_tradable', 'py', 'name', 'version', 'mikempc', 'instance', 'cat', 'etc', 'release', 'pretty_name', 'debian', 'gnu', 'linux', 'stretch', 'name', 'debian', 'gnu', 'linux', 'version_id', 'version', 'stretch', 'version_codename', 'stretch', 'id', 'debian', 'home_url', 'http', 'www', 'debian', 'org', 'support_url', 'http', 'www', 'debian', 'org', 'support', 'bug_report_url', 'http', 'bug', 'debian', 'org', 'linux', 'kernel', 'version', 'mikempc', 'instance', 'uname', 'r', 'amd', 'update', 'trying', 'serhii', 'rohoza', 'answer', 'updated', 'requirement', 'txt', 'file', 'issue', 'error', 'trying', 'command', 'build', 'image', 'dockerfile', 'mikempc', 'instance', 'sudo', 'docker', 'build', 'tag', 'python', 'app', 'sending', 'build', 'context', 'docker', 'daemon', 'mb', 'step', 'python', 'python', 'slim', 'manifest', 'python', 'python', 'slim', 'found', 'manifest', 'unknown', 'manifest', 'unknown', 'tried', 'mikempc', 'instance', 'sudo', 'docker', 'pull', 'python', 'slim', 'slim', 'pulling', 'library', 'python', 'ec', 'c', 'e', 'already', 'exists', 'b', 'acb', 'e', 'already', 'exists', 'e', 'de', 'pull', 'complete', 'de', 'e', 'pull', 'complete', 'e', 'c', 'pull', 'complete', 'digest', 'sha', 'c', 'bca', 'b', 'e', 'c', 'b', 'ad', 'f', 'af', 'f', 'status', 'downloaded', 'newer', 'image', 'python', 'slim', 'docker', 'io', 'library', 'python', 'slim', 'mikempc', 'instance', 'sudo', 'docker', 'build', 'tag', 'python', 'app', 'sending', 'build', 'context', 'docker', 'daemon', 'mb', 'step', 'python', 'python', 'slim', 'manifest', 'python', 'python', 'slim', 'found', 'manifest', 'unknown', 'manifest', 'unknown']","['to', 'solve', 'your', 'issue', 'you', 'should', 'use', 'debian', 'based', 'image', 'to', 'build', 'docker', 'image', 'i', 'removed', 'collection', 'which', 'is', 'deprecated', 'json', 'it', 's', 'built', 'in', 'and', 'time', 'it', 's', 'built', 'in', 'from', 'requirement', 'txt', 'and', 'changed', 'dockerfile', 'cat', 'dockerfile', 'from', 'python', 'slim', 'copy', 'app', 'workdir', 'app', 'run', 'pip', 'install', 'r', 'requirement', 'txt', 'expose', 'cmd', 'python', 'find_tradable', 'py', 'cat', 'requirement', 'txt', 'selenium', 'panda', 'numpy', 'request', 'sudo', 'docker', 'build', 'tag', 'my', 'python', 'app', 'sending', 'build', 'context', 'to', 'docker', 'daemon', 'kb', 'step', 'from', 'python', 'slim', 'c', 'd', 'af', 'step', 'copy', 'app', 'ddb', 'cd', 'f', 'step', 'workdir', 'app', 'running', 'in', 'e', 'a', 'ce', 'c', 'removing', 'intermediate', 'container', 'e', 'a', 'ce', 'c', 'db', 'f', 'b', 'step', 'run', 'pip', 'install', 'r', 'requirement', 'txt', 'running', 'in', 'cdde', 'c', 'b', 'collecting', 'selenium', 'downloading', 'selenium', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'panda', 'downloading', 'panda', 'cp', 'cp', 'm', 'manylinux', '_x', '_', 'whl', 'mb', 'collecting', 'numpy', 'downloading', 'numpy', 'cp', 'cp', 'm', 'manylinux', '_x', '_', 'whl', 'mb', 'collecting', 'request', 'downloading', 'request', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'urllib', 'downloading', 'urllib', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'python', 'dateutil', 'downloading', 'python_dateutil', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'pytz', 'downloading', 'pytz', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'idna', 'downloading', 'idna', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'chardet', 'downloading', 'chardet', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'certifi', 'downloading', 'certifi', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'six', 'downloading', 'six', 'py', 'py', 'none', 'any', 'whl', 'kb', 'installing', 'collected', 'package', 'urllib', 'selenium', 'six', 'python', 'dateutil', 'numpy', 'pytz', 'panda', 'idna', 'chardet', 'certifi', 'request', 'successfully', 'installed', 'certifi', 'chardet', 'idna', 'numpy', 'panda', 'python', 'dateutil', 'pytz', 'request', 'selenium', 'six', 'urllib', 'warning', 'you', 'are', 'using', 'pip', 'version', 'however', 'version', 'is', 'available', 'you', 'should', 'consider', 'upgrading', 'via', 'the', 'usr', 'local', 'bin', 'python', 'm', 'pip', 'install', 'upgrade', 'pip', 'command', 'removing', 'intermediate', 'container', 'cdde', 'c', 'b', 'dd', 'a', 'c', 'step', 'expose', 'running', 'in', 'f', 'bb', 'b', 'f', 'removing', 'intermediate', 'container', 'f', 'bb', 'b', 'f', 'bed', 'd', 'd', 'step', 'cmd', 'python', 'find_tradable', 'py', 'running', 'in', 'c', 'f', 'c', 'removing', 'intermediate', 'container', 'c', 'f', 'c', 'af', 'd', 'fee', 'successfully', 'built', 'af', 'd', 'fee', 'successfully', 'tagged', 'my', 'python', 'app', 'a', 'a', 'possible', 'workaround', 'you', 'can', 'try', 'to', 'install', 'panda', 'and', 'numpy', 'from', 'package', 'available', 'in', 'the', 'alpine', 'repository', 'cat', 'dockerfile', 'from', 'python', 'alpine', 'copy', 'app', 'workdir', 'app', 'run', 'echo', 'http', 'dl', 'alpinelinux', 'org', 'alpine', 'edge', 'community', 'etc', 'apk', 'repository', 'run', 'apk', 'add', 'update', 'no', 'cache', 'libgfortran', 'py', 'panda', 'py', 'numpy', 'env', 'pythonpath', 'usr', 'lib', 'python', 'site', 'package', 'run', 'pip', 'install', 'r', 'requirement', 'txt', 'expose', 'cmd', 'python', 'find_tradable', 'py', 'cat', 'requirement', 'txt', 'selenium', 'request', 'sudo', 'docker', 'build', 'tag', 'my', 'python', 'app', 'sending', 'build', 'context', 'to', 'docker', 'daemon', 'kb', 'step', 'from', 'python', 'alpine', 'be', 'e', 'f', 'step', 'copy', 'app', 'd', 'fe', 'cb', 'step', 'workdir', 'app', 'running', 'in', 'c', 'bf', 'a', 'removing', 'intermediate', 'container', 'c', 'bf', 'a', 'd', 'd', 'step', 'run', 'echo', 'http', 'dl', 'alpinelinux', 'org', 'alpine', 'edge', 'community', 'etc', 'apk', 'repository', 'running', 'in', 'a', 'a', 'f', 'removing', 'intermediate', 'container', 'a', 'a', 'f', 'ce', 'de', 'step', 'run', 'apk', 'add', 'update', 'no', 'cache', 'libgfortran', 'py', 'numpy', 'py', 'panda', 'running', 'in', 'ac', 'a', 'fetch', 'http', 'dl', 'cdn', 'alpinelinux', 'org', 'alpine', 'v', 'main', 'x', '_', 'apkindex', 'tar', 'gz', 'fetch', 'http', 'dl', 'cdn', 'alpinelinux', 'org', 'alpine', 'v', 'community', 'x', '_', 'apkindex', 'tar', 'gz', 'fetch', 'http', 'dl', 'alpinelinux', 'org', 'alpine', 'edge', 'community', 'x', '_', 'apkindex', 'tar', 'gz', 'installing', 'libgcc', 'r', 'installing', 'libquadmath', 'r', 'installing', 'libgfortran', 'r', 'installing', 'openblas', 'r', 'installing', 'py', 'numpy', 'r', 'installing', 'python', 'r', 'installing', 'py', 'six', 'r', 'installing', 'py', 'dateutil', 'r', 'installing', 'py', 'tz', 'r', 'installing', 'libstdc', 'r', 'installing', 'py', 'panda', 'r', 'executing', 'busybox', 'r', 'trigger', 'ok', 'mib', 'in', 'package', 'removing', 'intermediate', 'container', 'ac', 'a', 'af', 'bb', 'da', 'step', 'env', 'pythonpath', 'usr', 'lib', 'python', 'site', 'package', 'running', 'in', 'c', 'c', 'f', 'removing', 'intermediate', 'container', 'c', 'c', 'f', 'edc', 'aa', 'ef', 'step', 'run', 'pip', 'install', 'r', 'requirement', 'txt', 'running', 'in', 'a', 'e', 'a', 'fbf', 'collecting', 'selenium', 'from', 'r', 'requirement', 'txt', 'line', 'downloading', 'http', 'file', 'pythonhosted', 'org', 'package', 'd', 'f', 'b', 'bce', 'de', 'abf', 'e', 'f', 'd', 'b', 'a', 'e', 'dd', 'a', 'f', 'ca', 'selenium', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'request', 'from', 'r', 'requirement', 'txt', 'line', 'downloading', 'http', 'file', 'pythonhosted', 'org', 'package', 'e', 'c', 'c', 'a', 'e', 'ba', 'c', 'a', 'd', 'ab', 'c', 'bed', 'bdcd', 'c', 'request', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'urllib', 'from', 'selenium', 'r', 'requirement', 'txt', 'line', 'downloading', 'http', 'file', 'pythonhosted', 'org', 'package', 'f', 'f', 'a', 'd', 'ebb', 'b', 'cabfc', 'ef', 'd', 'db', 'de', 'f', 'e', 'd', 'urllib', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'chardet', 'from', 'request', 'r', 'requirement', 'txt', 'line', 'downloading', 'http', 'file', 'pythonhosted', 'org', 'package', 'bc', 'a', 'ffebfb', 'e', 'b', 'b', 'bb', 'ddec', 'ca', 'ec', 'b', 'e', 'c', 'f', 'b', 'chardet', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'idna', 'from', 'request', 'r', 'requirement', 'txt', 'line', 'downloading', 'http', 'file', 'pythonhosted', 'org', 'package', 'a', 'ddce', 'eaa', 'f', 'f', 'de', 'bf', 'a', 'f', 'b', 'baba', 'dfa', 'f', 'a', 'a', 'idna', 'py', 'py', 'none', 'any', 'whl', 'kb', 'collecting', 'certifi', 'from', 'request', 'r', 'requirement', 'txt', 'line', 'downloading', 'http', 'file', 'pythonhosted', 'org', 'package', 'e', 'c', 'c', 'fe', 'df', 'c', 'f', 'b', 'e', 'bb', 'e', 'dc', 'b', 'baf', 'f', 'd', 'certifi', 'py', 'py', 'none', 'any', 'whl', 'kb', 'installing', 'collected', 'package', 'urllib', 'selenium', 'chardet', 'idna', 'certifi', 'request', 'successfully', 'installed', 'certifi', 'chardet', 'idna', 'request', 'selenium', 'urllib', 'you', 'are', 'using', 'pip', 'version', 'however', 'version', 'is', 'available', 'you', 'should', 'consider', 'upgrading', 'via', 'the', 'pip', 'install', 'upgrade', 'pip', 'command', 'removing', 'intermediate', 'container', 'a', 'e', 'a', 'fbf', 'c', 'cee', 'e', 'a', 'step', 'expose', 'running', 'in', 'a', 'c', 'f', 'removing', 'intermediate', 'container', 'a', 'c', 'f', 'b', 'aa', 'c', 'step', 'cmd', 'python', 'find_tradable', 'py', 'running', 'in', 'ca', 'd', 'removing', 'intermediate', 'container', 'ca', 'd', 'b', 'e', 'c', 'b', 'b', 'successfully', 'built', 'b', 'e', 'c', 'b', 'b', 'successfully', 'tagged', 'my', 'python', 'app']",Package Management and File Handling,3,"{'neg': 0.028, 'neu': 0.97, 'pos': 0.002, 'compound': -0.9697}",-0.035924979967948724,3,Python Package Installation and Management,3query
63083042,discord.py how to make requirements.txt,"<p>finally I made my discord bot now I need to upload it to Heroku so it can be online 24/7. I watched some videos about that. youtube guys were using a simple bot code. and their requirements.txt file be like</p>
<pre><code>discord
</code></pre>
<p>yea literally this because their code is so simple. how do I add my other things into that.</p>
<p>top of my code is like</p>
<pre><code>import discord
from discord.ext import commands
import youtube_dl
from discord import FFmpegPCMAudio
import os
</code></pre>
<p>i dont wanna do smth wrong that I cant fix it later because it happens to me a lot :v</p>
",<python><heroku><bots><discord.py><requirements>,2020-07-25 00:29:16,3734,0,1,63083100,"<p>os is a default python package so it doesn't need to be included. Aside from that you only have discord and youtube_dl so place those in your requirements.txt</p>
<pre><code>discord
youtube_dl
</code></pre>
",2020-07,finally i made my discord bot now i need to upload it to heroku so it can be online     i watched some videos about that youtube guys were using a simple bot code and their requirements txt file be like discord yea literally this because their code is so simple how do i add my other things into that top of my code is like import discord from discord ext import commands import youtube_dl from discord import ffmpegpcmaudio import os i dont wanna do smth wrong that i cant fix it later because it happens to me a lot v,os is a default python package so it doesn t need to be included aside from that you only have discord and youtube_dl so place those in your requirements txt discord youtube_dl,"['python', 'heroku', 'bots', 'discord.py', 'requirements']","['finally', 'i', 'made', 'my', 'discord', 'bot', 'now', 'i', 'need', 'to', 'upload', 'it', 'to', 'heroku', 'so', 'it', 'can', 'be', 'online', 'i', 'watched', 'some', 'videos', 'about', 'that', 'youtube', 'guys', 'were', 'using', 'a', 'simple', 'bot', 'code', 'and', 'their', 'requirements', 'txt', 'file', 'be', 'like', 'discord', 'yea', 'literally', 'this', 'because', 'their', 'code', 'is', 'so', 'simple', 'how', 'do', 'i', 'add', 'my', 'other', 'things', 'into', 'that', 'top', 'of', 'my', 'code', 'is', 'like', 'import', 'discord', 'from', 'discord', 'ext', 'import', 'commands', 'import', 'youtube_dl', 'from', 'discord', 'import', 'ffmpegpcmaudio', 'import', 'os', 'i', 'dont', 'wan', 'na', 'do', 'smth', 'wrong', 'that', 'i', 'cant', 'fix', 'it', 'later', 'because', 'it', 'happens', 'to', 'me', 'a', 'lot', 'v']","['os', 'is', 'a', 'default', 'python', 'package', 'so', 'it', 'doesn', 't', 'need', 'to', 'be', 'included', 'aside', 'from', 'that', 'you', 'only', 'have', 'discord', 'and', 'youtube_dl', 'so', 'place', 'those', 'in', 'your', 'requirements', 'txt', 'discord', 'youtube_dl']","['finally', 'made', 'discord', 'bot', 'need', 'upload', 'heroku', 'online', 'watched', 'video', 'youtube', 'guy', 'using', 'simple', 'bot', 'code', 'requirement', 'txt', 'file', 'like', 'discord', 'yea', 'literally', 'code', 'simple', 'add', 'thing', 'top', 'code', 'like', 'import', 'discord', 'discord', 'ext', 'import', 'command', 'import', 'youtube_dl', 'discord', 'import', 'ffmpegpcmaudio', 'import', 'dont', 'wan', 'na', 'smth', 'wrong', 'cant', 'fix', 'later', 'happens', 'lot', 'v']","['o', 'is', 'a', 'default', 'python', 'package', 'so', 'it', 'doesn', 't', 'need', 'to', 'be', 'included', 'aside', 'from', 'that', 'you', 'only', 'have', 'discord', 'and', 'youtube_dl', 'so', 'place', 'those', 'in', 'your', 'requirement', 'txt', 'discord', 'youtube_dl']",System Requirements and AWS,1,"{'neg': 0.111, 'neu': 0.889, 'pos': 0.0, 'compound': -0.8807}",-0.125,1,Package Management and File Handling,3query
62988451,What would be the better unit to draw state machine diagrams in SRS?,"<p>Recently I am working on a SRS documentation for my university project. When I draw the state machine diagrams I'm confused for what parts should I draw it. Is that for the components? or for the classes?</p>
<p>Clearly the inherent state of the object shows in the state diagrams. But, my question is how do we find for what we should draw states. Is that get from the components or classes?</p>
",<uml><state-machine><requirements><state-diagram><system-analysis>,2020-07-20 03:59:00,158,2,1,62992886,"<p>An SRS is a <a href=""https://en.wikipedia.org/wiki/Software_requirements_specification"" rel=""nofollow noreferrer"">System Requirement Specification</a>: you document the requirements and not the solution. So the state diagram in the SRS should be <strong>related to the requirements</strong>, whatever they are.</p>
<p>In UML, state-machines are defined for classifiers. They can define event driven behaviors (<a href=""https://www.uml-diagrams.org/state-machine-diagrams.html#behavioral-state-machine"" rel=""nofollow noreferrer"">behavioral state-machine</a>) or the valid set of interactions with the classifier (<a href=""https://www.uml-diagrams.org/protocol-state-machine-diagrams.html#protocol-state-machine"" rel=""nofollow noreferrer"">protocol state-machine</a>).  A <a href=""https://www.uml-diagrams.org/classifier.html"" rel=""nofollow noreferrer"">classifier</a> is typically a class or a component: both are possible.</p>
<p>But in your SRS you don't care:  you don't need to provide an SM for every class or every component; you need to provide an SM only if there are state-related requirements.</p>
<p>Dummy examples:</p>
<blockquote>
<ol>
<li>The user may create a <code>shopping basket</code>, and add <code>items</code> from the <code>catalog</code> to the cart.  Items may also be removed.  The user may view the shopping cart and continue  the purchases.  The user can check-out the shopping cart, and once the <code>payment</code> is completed, <em><strong>no changes shall be possible anymore</strong></em> to the cart.</li>
<li>The <code>controller</code> ignites the rocket booster.  Once the booster fuel level is detected to be empty, the controller activate the decoupling of the booster, and ignites the main engine. Once the booster is succesfully decoupled, the controller shall monitor any variation in altitude.</li>
</ol>
</blockquote>
<p>You'd certainly model 1 with classes, and the constraints about the validity of operations on <code>shopping cart</code> are easily expressed in a state-machine.  This is, by the way, typical for any object that has a life-cycle that is to be tracked.  The other classes seem not to have any interesting state to model.</p>
<p>You'd certainly model 2 with a <code>controller</code> component, and the event-driven set of behaviors are easily and clearly expressed with a state-machine.</p>
<p>So ultimately, you do not care if it is a class or a component.  The only thing that should drive your modelling in the SRS, is if there are behavior or constraints that <em><strong>CAN be expressed more precisely/easily/clearly</strong></em> with a state machine.  Many SRS don't even show any state-machine, because the states emerge only in the design of the solution.</p>
",2020-07,recently i am working on a srs documentation for my university project when i draw the state machine diagrams i m confused for what parts should i draw it is that for the components or for the classes clearly the inherent state of the object shows in the state diagrams but my question is how do we find for what we should draw states is that get from the components or classes,an srs is a system requirement specification you document the requirements and not the solution so the state diagram in the srs should be related to the requirements whatever they are in uml state machines are defined for classifiers they can define event driven behaviors behavioral state machine or the valid set of interactions with the classifier protocol state machine a classifier is typically a class or a component both are possible but in your srs you don t care you don t need to provide an sm for every class or every component you need to provide an sm only if there are state related requirements dummy examples the user may create a shopping basket and add items from the catalog to the cart items may also be removed the user may view the shopping cart and continue the purchases the user can check out the shopping cart and once the payment is completed no changes shall be possible anymore to the cart the controller ignites the rocket booster once the booster fuel level is detected to be empty the controller activate the decoupling of the booster and ignites the main engine once the booster is succesfully decoupled the controller shall monitor any variation in altitude you d certainly model   with classes and the constraints about the validity of operations on shopping cart are easily expressed in a state machine this is by the way typical for any object that has a life cycle that is to be tracked the other classes seem not to have any interesting state to model you d certainly model   with a controller component and the event driven set of behaviors are easily and clearly expressed with a state machine so ultimately you do not care if it is a class or a component the only thing that should drive your modelling in the srs is if there are behavior or constraints that can be expressed more precisely easily clearly with a state machine many srs don t even show any state machine because the states emerge only in the design of the solution,"['uml', 'state-machine', 'requirements', 'state-diagram', 'system-analysis']","['recently', 'i', 'am', 'working', 'on', 'a', 'srs', 'documentation', 'for', 'my', 'university', 'project', 'when', 'i', 'draw', 'the', 'state', 'machine', 'diagrams', 'i', 'm', 'confused', 'for', 'what', 'parts', 'should', 'i', 'draw', 'it', 'is', 'that', 'for', 'the', 'components', 'or', 'for', 'the', 'classes', 'clearly', 'the', 'inherent', 'state', 'of', 'the', 'object', 'shows', 'in', 'the', 'state', 'diagrams', 'but', 'my', 'question', 'is', 'how', 'do', 'we', 'find', 'for', 'what', 'we', 'should', 'draw', 'states', 'is', 'that', 'get', 'from', 'the', 'components', 'or', 'classes']","['an', 'srs', 'is', 'a', 'system', 'requirement', 'specification', 'you', 'document', 'the', 'requirements', 'and', 'not', 'the', 'solution', 'so', 'the', 'state', 'diagram', 'in', 'the', 'srs', 'should', 'be', 'related', 'to', 'the', 'requirements', 'whatever', 'they', 'are', 'in', 'uml', 'state', 'machines', 'are', 'defined', 'for', 'classifiers', 'they', 'can', 'define', 'event', 'driven', 'behaviors', 'behavioral', 'state', 'machine', 'or', 'the', 'valid', 'set', 'of', 'interactions', 'with', 'the', 'classifier', 'protocol', 'state', 'machine', 'a', 'classifier', 'is', 'typically', 'a', 'class', 'or', 'a', 'component', 'both', 'are', 'possible', 'but', 'in', 'your', 'srs', 'you', 'don', 't', 'care', 'you', 'don', 't', 'need', 'to', 'provide', 'an', 'sm', 'for', 'every', 'class', 'or', 'every', 'component', 'you', 'need', 'to', 'provide', 'an', 'sm', 'only', 'if', 'there', 'are', 'state', 'related', 'requirements', 'dummy', 'examples', 'the', 'user', 'may', 'create', 'a', 'shopping', 'basket', 'and', 'add', 'items', 'from', 'the', 'catalog', 'to', 'the', 'cart', 'items', 'may', 'also', 'be', 'removed', 'the', 'user', 'may', 'view', 'the', 'shopping', 'cart', 'and', 'continue', 'the', 'purchases', 'the', 'user', 'can', 'check', 'out', 'the', 'shopping', 'cart', 'and', 'once', 'the', 'payment', 'is', 'completed', 'no', 'changes', 'shall', 'be', 'possible', 'anymore', 'to', 'the', 'cart', 'the', 'controller', 'ignites', 'the', 'rocket', 'booster', 'once', 'the', 'booster', 'fuel', 'level', 'is', 'detected', 'to', 'be', 'empty', 'the', 'controller', 'activate', 'the', 'decoupling', 'of', 'the', 'booster', 'and', 'ignites', 'the', 'main', 'engine', 'once', 'the', 'booster', 'is', 'succesfully', 'decoupled', 'the', 'controller', 'shall', 'monitor', 'any', 'variation', 'in', 'altitude', 'you', 'd', 'certainly', 'model', 'with', 'classes', 'and', 'the', 'constraints', 'about', 'the', 'validity', 'of', 'operations', 'on', 'shopping', 'cart', 'are', 'easily', 'expressed', 'in', 'a', 'state', 'machine', 'this', 'is', 'by', 'the', 'way', 'typical', 'for', 'any', 'object', 'that', 'has', 'a', 'life', 'cycle', 'that', 'is', 'to', 'be', 'tracked', 'the', 'other', 'classes', 'seem', 'not', 'to', 'have', 'any', 'interesting', 'state', 'to', 'model', 'you', 'd', 'certainly', 'model', 'with', 'a', 'controller', 'component', 'and', 'the', 'event', 'driven', 'set', 'of', 'behaviors', 'are', 'easily', 'and', 'clearly', 'expressed', 'with', 'a', 'state', 'machine', 'so', 'ultimately', 'you', 'do', 'not', 'care', 'if', 'it', 'is', 'a', 'class', 'or', 'a', 'component', 'the', 'only', 'thing', 'that', 'should', 'drive', 'your', 'modelling', 'in', 'the', 'srs', 'is', 'if', 'there', 'are', 'behavior', 'or', 'constraints', 'that', 'can', 'be', 'expressed', 'more', 'precisely', 'easily', 'clearly', 'with', 'a', 'state', 'machine', 'many', 'srs', 'don', 't', 'even', 'show', 'any', 'state', 'machine', 'because', 'the', 'states', 'emerge', 'only', 'in', 'the', 'design', 'of', 'the', 'solution']","['recently', 'working', 'sr', 'documentation', 'university', 'project', 'draw', 'state', 'machine', 'diagram', 'confused', 'part', 'draw', 'component', 'class', 'clearly', 'inherent', 'state', 'object', 'show', 'state', 'diagram', 'question', 'find', 'draw', 'state', 'get', 'component', 'class']","['an', 'sr', 'is', 'a', 'system', 'requirement', 'specification', 'you', 'document', 'the', 'requirement', 'and', 'not', 'the', 'solution', 'so', 'the', 'state', 'diagram', 'in', 'the', 'sr', 'should', 'be', 'related', 'to', 'the', 'requirement', 'whatever', 'they', 'are', 'in', 'uml', 'state', 'machine', 'are', 'defined', 'for', 'classifier', 'they', 'can', 'define', 'event', 'driven', 'behavior', 'behavioral', 'state', 'machine', 'or', 'the', 'valid', 'set', 'of', 'interaction', 'with', 'the', 'classifier', 'protocol', 'state', 'machine', 'a', 'classifier', 'is', 'typically', 'a', 'class', 'or', 'a', 'component', 'both', 'are', 'possible', 'but', 'in', 'your', 'sr', 'you', 'don', 't', 'care', 'you', 'don', 't', 'need', 'to', 'provide', 'an', 'sm', 'for', 'every', 'class', 'or', 'every', 'component', 'you', 'need', 'to', 'provide', 'an', 'sm', 'only', 'if', 'there', 'are', 'state', 'related', 'requirement', 'dummy', 'example', 'the', 'user', 'may', 'create', 'a', 'shopping', 'basket', 'and', 'add', 'item', 'from', 'the', 'catalog', 'to', 'the', 'cart', 'item', 'may', 'also', 'be', 'removed', 'the', 'user', 'may', 'view', 'the', 'shopping', 'cart', 'and', 'continue', 'the', 'purchase', 'the', 'user', 'can', 'check', 'out', 'the', 'shopping', 'cart', 'and', 'once', 'the', 'payment', 'is', 'completed', 'no', 'change', 'shall', 'be', 'possible', 'anymore', 'to', 'the', 'cart', 'the', 'controller', 'ignites', 'the', 'rocket', 'booster', 'once', 'the', 'booster', 'fuel', 'level', 'is', 'detected', 'to', 'be', 'empty', 'the', 'controller', 'activate', 'the', 'decoupling', 'of', 'the', 'booster', 'and', 'ignites', 'the', 'main', 'engine', 'once', 'the', 'booster', 'is', 'succesfully', 'decoupled', 'the', 'controller', 'shall', 'monitor', 'any', 'variation', 'in', 'altitude', 'you', 'd', 'certainly', 'model', 'with', 'class', 'and', 'the', 'constraint', 'about', 'the', 'validity', 'of', 'operation', 'on', 'shopping', 'cart', 'are', 'easily', 'expressed', 'in', 'a', 'state', 'machine', 'this', 'is', 'by', 'the', 'way', 'typical', 'for', 'any', 'object', 'that', 'ha', 'a', 'life', 'cycle', 'that', 'is', 'to', 'be', 'tracked', 'the', 'other', 'class', 'seem', 'not', 'to', 'have', 'any', 'interesting', 'state', 'to', 'model', 'you', 'd', 'certainly', 'model', 'with', 'a', 'controller', 'component', 'and', 'the', 'event', 'driven', 'set', 'of', 'behavior', 'are', 'easily', 'and', 'clearly', 'expressed', 'with', 'a', 'state', 'machine', 'so', 'ultimately', 'you', 'do', 'not', 'care', 'if', 'it', 'is', 'a', 'class', 'or', 'a', 'component', 'the', 'only', 'thing', 'that', 'should', 'drive', 'your', 'modelling', 'in', 'the', 'sr', 'is', 'if', 'there', 'are', 'behavior', 'or', 'constraint', 'that', 'can', 'be', 'expressed', 'more', 'precisely', 'easily', 'clearly', 'with', 'a', 'state', 'machine', 'many', 'sr', 'don', 't', 'even', 'show', 'any', 'state', 'machine', 'because', 'the', 'state', 'emerge', 'only', 'in', 'the', 'design', 'of', 'the', 'solution']",System Requirements and AWS,3,"{'neg': 0.032, 'neu': 0.968, 'pos': 0.0, 'compound': -0.2937}",-0.4,3,Python Package Installation and Management,3query
62726398,Sha256 Mismatch for pip install on fresh docker image,"<p>I am trying to create a docker image with a bunch of python libraries.</p>
<p>On doing a <code>pip install --no-cache-dir -r requirements.txt</code>, it keeps failing with mismatched hashes for libraries, especially pyspark.</p>
<p>The failure message looks like -</p>
<pre><code>ERROR: THESE PACKAGES DO NOT MATCH THE HASHES FROM THE REQUIREMENTS FILE. If you have updated the package versions, please update the hashes. Otherwise, examine the package contents carefully; someone may have tampered with them.
    pyspark==2.4.6 from https://files.pythonhosted.org/packages/e9/e4/5c15ab8d354c4e3528510821865e6748209a9b0ff6a1788f4cd36cc2a5dc/pyspark-2.4.6.tar.gz#sha256=b4b319a3ffd187a3019f654ae1c8ac38048bcec2940f8cecdef829302d166feb (from -r requirements.txt (line 4)):
        Expected sha256 b4b319a3ffd187a3019f654ae1c8ac38048bcec2940f8cecdef829302d166feb
             Got        e15b72fe55a366df7329932882c56328874152cf618950c7ce45e11f1c9dc5d1
</code></pre>
<p>Some stuff that I have already tried, consulting other stack overflow threads -</p>
<ol>
<li>Remove <code>__pycache__</code> and <code>~/.cache/</code> directories.</li>
<li>Downgrade pip to 20.0.2, since there were threads saying that this was caused by pip20.1.0</li>
<li>Also tried using <code>--no-cache-dir</code> as you can see.</li>
<li>Build the docker image without caching using - <code>docker build --no-cache . -t labydock-image</code></li>
</ol>
<p>The Dockerfile looks something like this -</p>
<pre><code>FROM python:3.7.7-stretch

USER root
RUN apt-get update &amp;&amp; apt-get install -y --no-install-recommends openjdk-8-jdk

WORKDIR /labyrinth
COPY ./dodo.py .
COPY ./requirements.txt .

RUN pip install pip==20.0.2

RUN rm -rf ~/.cache
RUN rm -rf __pycache__

RUN pip install --no-cache-dir -r requirements.txt
</code></pre>
<p>And the corresponding requirements.txt file looks like this -</p>
<pre><code>mockito==1.2.1
py4j==0.10.7
pypandoc==1.5
pyspark==2.4.6
pytest
pandas
doit
koalas
requests
presto-client
mysql-connector-python
</code></pre>
<p>Any help would be highly appreciated. Please let me know if you need more details</p>
",<python><docker><caching><pip><requirements>,2020-07-04 07:14:54,1334,5,1,62737561,"<p>After much deliberation, I could figure this out with the help of a colleague.</p>
<p>Our Root cause analysis is as follows - When we download a library, the server itself sends a SHA to be verified post download, to prevent tampering with the library. Now, due to <strong>poor internet</strong> connection, the library was getting corrupted while downloading and hence the sha mismatch happened. It sounds incredibly weird to me since I assumed pip would have detected this failure and prompted that the library download failed.</p>
<p>Anyway, we ran the same docker image on a VM and it worked like a charm.</p>
",2020-07,i am trying to create a docker image with a bunch of python libraries on doing a pip install no cache dir r requirements txt it keeps failing with mismatched hashes for libraries especially pyspark the failure message looks like error these packages do not match the hashes from the requirements file if you have updated the package versions please update the hashes otherwise examine the package contents carefully someone may have tampered with them pyspark       from https files pythonhosted org packages e  e   c ab d c e e a b ff a f cd cc a dc pyspark       tar gz sha  b b a ffd a f ae c ac bcec f cecdef d feb from r requirements txt line   expected sha  b b a ffd a f ae c ac bcec f cecdef d feb got e b fe a df c cf c ce e f c dc d  some stuff that i have already tried consulting other stack overflow threads remove __pycache__ and cache directories downgrade pip to       since there were threads saying that this was caused by pip      also tried using no cache dir as you can see build the docker image without caching using docker build no cache t labydock image the dockerfile looks something like this from python       stretch user root run apt get update apt get install y no install recommends openjdk   jdk workdir labyrinth copy dodo py copy requirements txt run pip install pip       run rm rf cache run rm rf __pycache__ run pip install no cache dir r requirements txt and the corresponding requirements txt file looks like this mockito       py j       pypandoc     pyspark       pytest pandas doit koalas requests presto client mysql connector python any help would be highly appreciated please let me know if you need more details,after much deliberation i could figure this out with the help of a colleague our root cause analysis is as follows when we download a library the server itself sends a sha to be verified post download to prevent tampering with the library now due to poor internet connection the library was getting corrupted while downloading and hence the sha mismatch happened it sounds incredibly weird to me since i assumed pip would have detected this failure and prompted that the library download failed anyway we ran the same docker image on a vm and it worked like a charm,"['python', 'docker', 'caching', 'pip', 'requirements']","['i', 'am', 'trying', 'to', 'create', 'a', 'docker', 'image', 'with', 'a', 'bunch', 'of', 'python', 'libraries', 'on', 'doing', 'a', 'pip', 'install', 'no', 'cache', 'dir', 'r', 'requirements', 'txt', 'it', 'keeps', 'failing', 'with', 'mismatched', 'hashes', 'for', 'libraries', 'especially', 'pyspark', 'the', 'failure', 'message', 'looks', 'like', 'error', 'these', 'packages', 'do', 'not', 'match', 'the', 'hashes', 'from', 'the', 'requirements', 'file', 'if', 'you', 'have', 'updated', 'the', 'package', 'versions', 'please', 'update', 'the', 'hashes', 'otherwise', 'examine', 'the', 'package', 'contents', 'carefully', 'someone', 'may', 'have', 'tampered', 'with', 'them', 'pyspark', 'from', 'https', 'files', 'pythonhosted', 'org', 'packages', 'e', 'e', 'c', 'ab', 'd', 'c', 'e', 'e', 'a', 'b', 'ff', 'a', 'f', 'cd', 'cc', 'a', 'dc', 'pyspark', 'tar', 'gz', 'sha', 'b', 'b', 'a', 'ffd', 'a', 'f', 'ae', 'c', 'ac', 'bcec', 'f', 'cecdef', 'd', 'feb', 'from', 'r', 'requirements', 'txt', 'line', 'expected', 'sha', 'b', 'b', 'a', 'ffd', 'a', 'f', 'ae', 'c', 'ac', 'bcec', 'f', 'cecdef', 'd', 'feb', 'got', 'e', 'b', 'fe', 'a', 'df', 'c', 'cf', 'c', 'ce', 'e', 'f', 'c', 'dc', 'd', 'some', 'stuff', 'that', 'i', 'have', 'already', 'tried', 'consulting', 'other', 'stack', 'overflow', 'threads', 'remove', '__pycache__', 'and', 'cache', 'directories', 'downgrade', 'pip', 'to', 'since', 'there', 'were', 'threads', 'saying', 'that', 'this', 'was', 'caused', 'by', 'pip', 'also', 'tried', 'using', 'no', 'cache', 'dir', 'as', 'you', 'can', 'see', 'build', 'the', 'docker', 'image', 'without', 'caching', 'using', 'docker', 'build', 'no', 'cache', 't', 'labydock', 'image', 'the', 'dockerfile', 'looks', 'something', 'like', 'this', 'from', 'python', 'stretch', 'user', 'root', 'run', 'apt', 'get', 'update', 'apt', 'get', 'install', 'y', 'no', 'install', 'recommends', 'openjdk', 'jdk', 'workdir', 'labyrinth', 'copy', 'dodo', 'py', 'copy', 'requirements', 'txt', 'run', 'pip', 'install', 'pip', 'run', 'rm', 'rf', 'cache', 'run', 'rm', 'rf', '__pycache__', 'run', 'pip', 'install', 'no', 'cache', 'dir', 'r', 'requirements', 'txt', 'and', 'the', 'corresponding', 'requirements', 'txt', 'file', 'looks', 'like', 'this', 'mockito', 'py', 'j', 'pypandoc', 'pyspark', 'pytest', 'pandas', 'doit', 'koalas', 'requests', 'presto', 'client', 'mysql', 'connector', 'python', 'any', 'help', 'would', 'be', 'highly', 'appreciated', 'please', 'let', 'me', 'know', 'if', 'you', 'need', 'more', 'details']","['after', 'much', 'deliberation', 'i', 'could', 'figure', 'this', 'out', 'with', 'the', 'help', 'of', 'a', 'colleague', 'our', 'root', 'cause', 'analysis', 'is', 'as', 'follows', 'when', 'we', 'download', 'a', 'library', 'the', 'server', 'itself', 'sends', 'a', 'sha', 'to', 'be', 'verified', 'post', 'download', 'to', 'prevent', 'tampering', 'with', 'the', 'library', 'now', 'due', 'to', 'poor', 'internet', 'connection', 'the', 'library', 'was', 'getting', 'corrupted', 'while', 'downloading', 'and', 'hence', 'the', 'sha', 'mismatch', 'happened', 'it', 'sounds', 'incredibly', 'weird', 'to', 'me', 'since', 'i', 'assumed', 'pip', 'would', 'have', 'detected', 'this', 'failure', 'and', 'prompted', 'that', 'the', 'library', 'download', 'failed', 'anyway', 'we', 'ran', 'the', 'same', 'docker', 'image', 'on', 'a', 'vm', 'and', 'it', 'worked', 'like', 'a', 'charm']","['trying', 'create', 'docker', 'image', 'bunch', 'python', 'library', 'pip', 'install', 'cache', 'dir', 'r', 'requirement', 'txt', 'keep', 'failing', 'mismatched', 'hash', 'library', 'especially', 'pyspark', 'failure', 'message', 'look', 'like', 'error', 'package', 'match', 'hash', 'requirement', 'file', 'updated', 'package', 'version', 'please', 'update', 'hash', 'otherwise', 'examine', 'package', 'content', 'carefully', 'someone', 'may', 'tampered', 'pyspark', 'http', 'file', 'pythonhosted', 'org', 'package', 'e', 'e', 'c', 'ab', 'c', 'e', 'e', 'b', 'ff', 'f', 'cd', 'cc', 'dc', 'pyspark', 'tar', 'gz', 'sha', 'b', 'b', 'ffd', 'f', 'ae', 'c', 'ac', 'bcec', 'f', 'cecdef', 'feb', 'r', 'requirement', 'txt', 'line', 'expected', 'sha', 'b', 'b', 'ffd', 'f', 'ae', 'c', 'ac', 'bcec', 'f', 'cecdef', 'feb', 'got', 'e', 'b', 'fe', 'df', 'c', 'cf', 'c', 'ce', 'e', 'f', 'c', 'dc', 'stuff', 'already', 'tried', 'consulting', 'stack', 'overflow', 'thread', 'remove', '__pycache__', 'cache', 'directory', 'downgrade', 'pip', 'since', 'thread', 'saying', 'wa', 'caused', 'pip', 'also', 'tried', 'using', 'cache', 'dir', 'see', 'build', 'docker', 'image', 'without', 'caching', 'using', 'docker', 'build', 'cache', 'labydock', 'image', 'dockerfile', 'look', 'something', 'like', 'python', 'stretch', 'user', 'root', 'run', 'apt', 'get', 'update', 'apt', 'get', 'install', 'install', 'recommends', 'openjdk', 'jdk', 'workdir', 'labyrinth', 'copy', 'dodo', 'py', 'copy', 'requirement', 'txt', 'run', 'pip', 'install', 'pip', 'run', 'rm', 'rf', 'cache', 'run', 'rm', 'rf', '__pycache__', 'run', 'pip', 'install', 'cache', 'dir', 'r', 'requirement', 'txt', 'corresponding', 'requirement', 'txt', 'file', 'look', 'like', 'mockito', 'py', 'j', 'pypandoc', 'pyspark', 'pytest', 'panda', 'doit', 'koala', 'request', 'presto', 'client', 'mysql', 'connector', 'python', 'help', 'would', 'highly', 'appreciated', 'please', 'let', 'know', 'need', 'detail']","['after', 'much', 'deliberation', 'i', 'could', 'figure', 'this', 'out', 'with', 'the', 'help', 'of', 'a', 'colleague', 'our', 'root', 'cause', 'analysis', 'is', 'a', 'follows', 'when', 'we', 'download', 'a', 'library', 'the', 'server', 'itself', 'sends', 'a', 'sha', 'to', 'be', 'verified', 'post', 'download', 'to', 'prevent', 'tampering', 'with', 'the', 'library', 'now', 'due', 'to', 'poor', 'internet', 'connection', 'the', 'library', 'wa', 'getting', 'corrupted', 'while', 'downloading', 'and', 'hence', 'the', 'sha', 'mismatch', 'happened', 'it', 'sound', 'incredibly', 'weird', 'to', 'me', 'since', 'i', 'assumed', 'pip', 'would', 'have', 'detected', 'this', 'failure', 'and', 'prompted', 'that', 'the', 'library', 'download', 'failed', 'anyway', 'we', 'ran', 'the', 'same', 'docker', 'image', 'on', 'a', 'vm', 'and', 'it', 'worked', 'like', 'a', 'charm']",System Requirements and AWS,1,"{'neg': 0.029, 'neu': 0.877, 'pos': 0.094, 'compound': 0.9083}",0.008333333333333328,1,Package Management and File Handling,3query
62657477,Requirements to access IP Camera using OpenCV,"<p>I'm new to IP cameras and I know there are quite a lot of topics about this in the forum already, but I can't find a concrete answer for my needs.</p>
<p>I want to access an IP camera using OpenCV in Python from a Windows PC. As I don't have a camera yet, I need to buy one and I can't figure out, what requirements this camera needs to have.</p>
<p>For example, there are quite cheap IP cameras (e.g. Xi****) which say they come with an Android or iOS app and are only accessible via those.</p>
<p>I thought you can access any IP cam via OpenCV, but now I'm not sure anymore... can anyone give me an overview, what specs an IP cam needs, to be accessed via OpenCV on Windows? I don't want to buy a camera and later realize, that I can't access the video stream.</p>
<p>I'm really sorry, if this has already been asked, but I can't find a satisfying answer to this question and Google doesn't seem to be very helpful...</p>
<p>Thanks in advance.</p>
",<opencv><camera><ip><requirements>,2020-06-30 12:28:16,238,0,1,62657778,"<p>check for IP cam that can transmit RTSP opencv know how to work with this type of stream.</p>
",2020-06,i m new to ip cameras and i know there are quite a lot of topics about this in the forum already but i can t find a concrete answer for my needs i want to access an ip camera using opencv in python from a windows pc as i don t have a camera yet i need to buy one and i can t figure out what requirements this camera needs to have for example there are quite cheap ip cameras e g xi which say they come with an android or ios app and are only accessible via those i thought you can access any ip cam via opencv but now i m not sure anymore can anyone give me an overview what specs an ip cam needs to be accessed via opencv on windows i don t want to buy a camera and later realize that i can t access the video stream i m really sorry if this has already been asked but i can t find a satisfying answer to this question and google doesn t seem to be very helpful thanks in advance,check for ip cam that can transmit rtsp opencv know how to work with this type of stream,"['opencv', 'camera', 'ip', 'requirements']","['i', 'm', 'new', 'to', 'ip', 'cameras', 'and', 'i', 'know', 'there', 'are', 'quite', 'a', 'lot', 'of', 'topics', 'about', 'this', 'in', 'the', 'forum', 'already', 'but', 'i', 'can', 't', 'find', 'a', 'concrete', 'answer', 'for', 'my', 'needs', 'i', 'want', 'to', 'access', 'an', 'ip', 'camera', 'using', 'opencv', 'in', 'python', 'from', 'a', 'windows', 'pc', 'as', 'i', 'don', 't', 'have', 'a', 'camera', 'yet', 'i', 'need', 'to', 'buy', 'one', 'and', 'i', 'can', 't', 'figure', 'out', 'what', 'requirements', 'this', 'camera', 'needs', 'to', 'have', 'for', 'example', 'there', 'are', 'quite', 'cheap', 'ip', 'cameras', 'e', 'g', 'xi', 'which', 'say', 'they', 'come', 'with', 'an', 'android', 'or', 'ios', 'app', 'and', 'are', 'only', 'accessible', 'via', 'those', 'i', 'thought', 'you', 'can', 'access', 'any', 'ip', 'cam', 'via', 'opencv', 'but', 'now', 'i', 'm', 'not', 'sure', 'anymore', 'can', 'anyone', 'give', 'me', 'an', 'overview', 'what', 'specs', 'an', 'ip', 'cam', 'needs', 'to', 'be', 'accessed', 'via', 'opencv', 'on', 'windows', 'i', 'don', 't', 'want', 'to', 'buy', 'a', 'camera', 'and', 'later', 'realize', 'that', 'i', 'can', 't', 'access', 'the', 'video', 'stream', 'i', 'm', 'really', 'sorry', 'if', 'this', 'has', 'already', 'been', 'asked', 'but', 'i', 'can', 't', 'find', 'a', 'satisfying', 'answer', 'to', 'this', 'question', 'and', 'google', 'doesn', 't', 'seem', 'to', 'be', 'very', 'helpful', 'thanks', 'in', 'advance']","['check', 'for', 'ip', 'cam', 'that', 'can', 'transmit', 'rtsp', 'opencv', 'know', 'how', 'to', 'work', 'with', 'this', 'type', 'of', 'stream']","['new', 'ip', 'camera', 'know', 'quite', 'lot', 'topic', 'forum', 'already', 'find', 'concrete', 'answer', 'need', 'want', 'access', 'ip', 'camera', 'using', 'opencv', 'python', 'window', 'pc', 'camera', 'yet', 'need', 'buy', 'one', 'figure', 'requirement', 'camera', 'need', 'example', 'quite', 'cheap', 'ip', 'camera', 'e', 'g', 'xi', 'say', 'come', 'android', 'io', 'app', 'accessible', 'via', 'thought', 'access', 'ip', 'cam', 'via', 'opencv', 'sure', 'anymore', 'anyone', 'give', 'overview', 'spec', 'ip', 'cam', 'need', 'accessed', 'via', 'opencv', 'window', 'want', 'buy', 'camera', 'later', 'realize', 'access', 'video', 'stream', 'really', 'sorry', 'ha', 'already', 'asked', 'find', 'satisfying', 'answer', 'question', 'google', 'seem', 'helpful', 'thanks', 'advance']","['check', 'for', 'ip', 'cam', 'that', 'can', 'transmit', 'rtsp', 'opencv', 'know', 'how', 'to', 'work', 'with', 'this', 'type', 'of', 'stream']",System Requirements and AWS,1,"{'neg': 0.045, 'neu': 0.938, 'pos': 0.017, 'compound': -0.6861}",0.11466942148760331,1,Package Management and File Handling,3query
62546088,Non functional requirements and functional requirement example,"<p>I am analyzing Milk teas management website,  that is a web online to help user buys via online and seller can manage their products, orders</p>
<p>I have to do Non-functional requirements and functional requirements for this website like this</p>
<p>FUNCTIONAL REQUIREMENTS</p>
<p>Register</p>
<p>Login</p>
<p>Add products to card</p>
<p>Submit order</p>
<p>Cancel order</p>
<p>NON - FUNCTIONAL REQUIREMENTS</p>
<p>Number of milk tea can be added to the cart</p>
<p>I am right for that? Can you give me some idea for this to let me improve better, I am new for this section, thank you so much</p>
",<requirements>,2020-06-24 01:14:18,1891,4,1,62546520,"<h2>Functional Requirements</h2>
<p>Good functional requirements should clearly describe the behavior of the system. Here are some examples:</p>
<ul>
<li>&quot;If the user enters the wrong password 3 times when signing in, the account shall be locked for 24h.&quot;</li>
<li>&quot;When an electronics product is added to the cart, the user shall be presented with an option to purchase a warranty.&quot;</li>
<li>&quot;If a user attempts to cancel an order after it has been processed, the user must specify the reason for the cancellation, which must be approved before a refund is issued&quot;</li>
</ul>
<p>If you want to add more functionality, create more requirements, don't pile them all into one. For example, the last requirement in the above list can be split into 2: (1) require cancellation reason, (2) approval before refund. It also helps to organize requirements by feature in spreadsheets (one row per requirement) or JIRA Stories, for example.</p>
<p>Make sure you read many examples of well-written requirements, and practice. Follow a checklist, and have a co-worker review your work. <strong>Always</strong> ask yourselves how you would test each requirement. If you can't figure out how to write a test for the requirement, how can you ever prove the product works as intended?</p>
<h2>Non-Functional Requirements</h2>
<p>Non-functional requirements are also known as &quot;quality attributes&quot; or &quot;constraints&quot; of the system. The range of possible items that can be added to a cart (0..max) seems like a constraint on that field, so I can see how some would consider this a NFR. But how would you test it?</p>
<p>Instead, you can express this like a functional requirement: &quot;When the user enters a value that is greater than the maximum, display an error message&quot;. A NFR might describe the color, size and location of the error message. NFRs can also specify which UI kit to use and style guidelines to follow. For example, &quot;Must follow Google Material Design&quot; (<a href=""https://material.io"" rel=""nofollow noreferrer"">https://material.io</a>).</p>
<p>You should also be familiar with NFR categories (also known as the &quot;ilities&quot;):</p>
<ul>
<li>Performance</li>
<li>Stability</li>
<li>Reliability</li>
<li>Scalability</li>
<li>Flexibility</li>
<li>Usability</li>
<li>Testability</li>
<li>Traceability/Auditability</li>
<li>Security</li>
<li>Compliance/Certification</li>
<li>Much More: <a href=""https://en.wikipedia.org/wiki/Non-functional_requirement#Examples"" rel=""nofollow noreferrer"">https://en.wikipedia.org/wiki/Non-functional_requirement#Examples</a></li>
</ul>
<p>Here are some examples of NFRs for a website:</p>
<ul>
<li>Performance: &quot;A new user account shall be created in less than 2000 ms&quot;</li>
<li>Reliability: &quot;The system shall have at least 99.9% availability&quot;</li>
<li>Capacity: &quot;The system shall service up to 1000 simultaneous users&quot;</li>
<li>Scalability: &quot;The system shall be horizontally scalable to increase the number of simultaneous users&quot;</li>
<li>Usability: &quot;Users should be able to navigate to any page in the site within 3 clicks&quot;</li>
</ul>
<h2>References</h2>
<p>Read these guidelines by the System Engineering Body of Knowledge (SEBoK). Follow them closely, share with your team:</p>
<ul>
<li><a href=""https://www.sebokwiki.org/wiki/System_Requirements#Presentation_and_Quality_of_Requirements"" rel=""nofollow noreferrer"">https://www.sebokwiki.org/wiki/System_Requirements#Presentation_and_Quality_of_Requirements</a></li>
</ul>
<p>This is an excellent book on large-scale agile requirements if you want to go deeper:</p>
<ul>
<li><a href=""https://www.oreilly.com/library/view/agile-software-requirements/9780321685438/"" rel=""nofollow noreferrer"">https://www.oreilly.com/library/view/agile-software-requirements/9780321685438/</a></li>
</ul>
",2020-06,i am analyzing milk teas management website that is a web online to help user buys via online and seller can manage their products orders i have to do non functional requirements and functional requirements for this website like this functional requirements register login add products to card submit order cancel order non functional requirements number of milk tea can be added to the cart i am right for that can you give me some idea for this to let me improve better i am new for this section thank you so much,functional requirements good functional requirements should clearly describe the behavior of the system here are some examples if the user enters the wrong password   times when signing in the account shall be locked for  h when an electronics product is added to the cart the user shall be presented with an option to purchase a warranty if a user attempts to cancel an order after it has been processed the user must specify the reason for the cancellation which must be approved before a refund is issued if you want to add more functionality create more requirements don t pile them all into one for example the last requirement in the above list can be split into     require cancellation reason   approval before refund it also helps to organize requirements by feature in spreadsheets one row per requirement or jira stories for example make sure you read many examples of well written requirements and practice follow a checklist and have a co worker review your work always ask yourselves how you would test each requirement if you can t figure out how to write a test for the requirement how can you ever prove the product works as intended non functional requirements non functional requirements are also known as quality attributes or constraints of the system the range of possible items that can be added to a cart   max seems like a constraint on that field so i can see how some would consider this a nfr but how would you test it instead you can express this like a functional requirement when the user enters a value that is greater than the maximum display an error message a nfr might describe the color size and location of the error message nfrs can also specify which ui kit to use and style guidelines to follow for example must follow google material design https material io you should also be familiar with nfr categories also known as the ilities performance stability reliability scalability flexibility usability testability traceability auditability security compliance certification much more https en wikipedia org wiki non functional_requirement examples here are some examples of nfrs for a website performance a new user account shall be created in less than   ms reliability the system shall have at least     availability capacity the system shall service up to   simultaneous users scalability the system shall be horizontally scalable to increase the number of simultaneous users usability users should be able to navigate to any page in the site within   clicks references read these guidelines by the system engineering body of knowledge sebok follow them closely share with your team https www sebokwiki org wiki system_requirements presentation_and_quality_of_requirements this is an excellent book on large scale agile requirements if you want to go deeper https www oreilly com library view agile software requirements,['requirements'],"['i', 'am', 'analyzing', 'milk', 'teas', 'management', 'website', 'that', 'is', 'a', 'web', 'online', 'to', 'help', 'user', 'buys', 'via', 'online', 'and', 'seller', 'can', 'manage', 'their', 'products', 'orders', 'i', 'have', 'to', 'do', 'non', 'functional', 'requirements', 'and', 'functional', 'requirements', 'for', 'this', 'website', 'like', 'this', 'functional', 'requirements', 'register', 'login', 'add', 'products', 'to', 'card', 'submit', 'order', 'cancel', 'order', 'non', 'functional', 'requirements', 'number', 'of', 'milk', 'tea', 'can', 'be', 'added', 'to', 'the', 'cart', 'i', 'am', 'right', 'for', 'that', 'can', 'you', 'give', 'me', 'some', 'idea', 'for', 'this', 'to', 'let', 'me', 'improve', 'better', 'i', 'am', 'new', 'for', 'this', 'section', 'thank', 'you', 'so', 'much']","['functional', 'requirements', 'good', 'functional', 'requirements', 'should', 'clearly', 'describe', 'the', 'behavior', 'of', 'the', 'system', 'here', 'are', 'some', 'examples', 'if', 'the', 'user', 'enters', 'the', 'wrong', 'password', 'times', 'when', 'signing', 'in', 'the', 'account', 'shall', 'be', 'locked', 'for', 'h', 'when', 'an', 'electronics', 'product', 'is', 'added', 'to', 'the', 'cart', 'the', 'user', 'shall', 'be', 'presented', 'with', 'an', 'option', 'to', 'purchase', 'a', 'warranty', 'if', 'a', 'user', 'attempts', 'to', 'cancel', 'an', 'order', 'after', 'it', 'has', 'been', 'processed', 'the', 'user', 'must', 'specify', 'the', 'reason', 'for', 'the', 'cancellation', 'which', 'must', 'be', 'approved', 'before', 'a', 'refund', 'is', 'issued', 'if', 'you', 'want', 'to', 'add', 'more', 'functionality', 'create', 'more', 'requirements', 'don', 't', 'pile', 'them', 'all', 'into', 'one', 'for', 'example', 'the', 'last', 'requirement', 'in', 'the', 'above', 'list', 'can', 'be', 'split', 'into', 'require', 'cancellation', 'reason', 'approval', 'before', 'refund', 'it', 'also', 'helps', 'to', 'organize', 'requirements', 'by', 'feature', 'in', 'spreadsheets', 'one', 'row', 'per', 'requirement', 'or', 'jira', 'stories', 'for', 'example', 'make', 'sure', 'you', 'read', 'many', 'examples', 'of', 'well', 'written', 'requirements', 'and', 'practice', 'follow', 'a', 'checklist', 'and', 'have', 'a', 'co', 'worker', 'review', 'your', 'work', 'always', 'ask', 'yourselves', 'how', 'you', 'would', 'test', 'each', 'requirement', 'if', 'you', 'can', 't', 'figure', 'out', 'how', 'to', 'write', 'a', 'test', 'for', 'the', 'requirement', 'how', 'can', 'you', 'ever', 'prove', 'the', 'product', 'works', 'as', 'intended', 'non', 'functional', 'requirements', 'non', 'functional', 'requirements', 'are', 'also', 'known', 'as', 'quality', 'attributes', 'or', 'constraints', 'of', 'the', 'system', 'the', 'range', 'of', 'possible', 'items', 'that', 'can', 'be', 'added', 'to', 'a', 'cart', 'max', 'seems', 'like', 'a', 'constraint', 'on', 'that', 'field', 'so', 'i', 'can', 'see', 'how', 'some', 'would', 'consider', 'this', 'a', 'nfr', 'but', 'how', 'would', 'you', 'test', 'it', 'instead', 'you', 'can', 'express', 'this', 'like', 'a', 'functional', 'requirement', 'when', 'the', 'user', 'enters', 'a', 'value', 'that', 'is', 'greater', 'than', 'the', 'maximum', 'display', 'an', 'error', 'message', 'a', 'nfr', 'might', 'describe', 'the', 'color', 'size', 'and', 'location', 'of', 'the', 'error', 'message', 'nfrs', 'can', 'also', 'specify', 'which', 'ui', 'kit', 'to', 'use', 'and', 'style', 'guidelines', 'to', 'follow', 'for', 'example', 'must', 'follow', 'google', 'material', 'design', 'https', 'material', 'io', 'you', 'should', 'also', 'be', 'familiar', 'with', 'nfr', 'categories', 'also', 'known', 'as', 'the', 'ilities', 'performance', 'stability', 'reliability', 'scalability', 'flexibility', 'usability', 'testability', 'traceability', 'auditability', 'security', 'compliance', 'certification', 'much', 'more', 'https', 'en', 'wikipedia', 'org', 'wiki', 'non', 'functional_requirement', 'examples', 'here', 'are', 'some', 'examples', 'of', 'nfrs', 'for', 'a', 'website', 'performance', 'a', 'new', 'user', 'account', 'shall', 'be', 'created', 'in', 'less', 'than', 'ms', 'reliability', 'the', 'system', 'shall', 'have', 'at', 'least', 'availability', 'capacity', 'the', 'system', 'shall', 'service', 'up', 'to', 'simultaneous', 'users', 'scalability', 'the', 'system', 'shall', 'be', 'horizontally', 'scalable', 'to', 'increase', 'the', 'number', 'of', 'simultaneous', 'users', 'usability', 'users', 'should', 'be', 'able', 'to', 'navigate', 'to', 'any', 'page', 'in', 'the', 'site', 'within', 'clicks', 'references', 'read', 'these', 'guidelines', 'by', 'the', 'system', 'engineering', 'body', 'of', 'knowledge', 'sebok', 'follow', 'them', 'closely', 'share', 'with', 'your', 'team', 'https', 'www', 'sebokwiki', 'org', 'wiki', 'system_requirements', 'presentation_and_quality_of_requirements', 'this', 'is', 'an', 'excellent', 'book', 'on', 'large', 'scale', 'agile', 'requirements', 'if', 'you', 'want', 'to', 'go', 'deeper', 'https', 'www', 'oreilly', 'com', 'library', 'view', 'agile', 'software', 'requirements']","['analyzing', 'milk', 'tea', 'management', 'website', 'web', 'online', 'help', 'user', 'buy', 'via', 'online', 'seller', 'manage', 'product', 'order', 'non', 'functional', 'requirement', 'functional', 'requirement', 'website', 'like', 'functional', 'requirement', 'register', 'login', 'add', 'product', 'card', 'submit', 'order', 'cancel', 'order', 'non', 'functional', 'requirement', 'number', 'milk', 'tea', 'added', 'cart', 'right', 'give', 'idea', 'let', 'improve', 'better', 'new', 'section', 'thank', 'much']","['functional', 'requirement', 'good', 'functional', 'requirement', 'should', 'clearly', 'describe', 'the', 'behavior', 'of', 'the', 'system', 'here', 'are', 'some', 'example', 'if', 'the', 'user', 'enters', 'the', 'wrong', 'password', 'time', 'when', 'signing', 'in', 'the', 'account', 'shall', 'be', 'locked', 'for', 'h', 'when', 'an', 'electronics', 'product', 'is', 'added', 'to', 'the', 'cart', 'the', 'user', 'shall', 'be', 'presented', 'with', 'an', 'option', 'to', 'purchase', 'a', 'warranty', 'if', 'a', 'user', 'attempt', 'to', 'cancel', 'an', 'order', 'after', 'it', 'ha', 'been', 'processed', 'the', 'user', 'must', 'specify', 'the', 'reason', 'for', 'the', 'cancellation', 'which', 'must', 'be', 'approved', 'before', 'a', 'refund', 'is', 'issued', 'if', 'you', 'want', 'to', 'add', 'more', 'functionality', 'create', 'more', 'requirement', 'don', 't', 'pile', 'them', 'all', 'into', 'one', 'for', 'example', 'the', 'last', 'requirement', 'in', 'the', 'above', 'list', 'can', 'be', 'split', 'into', 'require', 'cancellation', 'reason', 'approval', 'before', 'refund', 'it', 'also', 'help', 'to', 'organize', 'requirement', 'by', 'feature', 'in', 'spreadsheet', 'one', 'row', 'per', 'requirement', 'or', 'jira', 'story', 'for', 'example', 'make', 'sure', 'you', 'read', 'many', 'example', 'of', 'well', 'written', 'requirement', 'and', 'practice', 'follow', 'a', 'checklist', 'and', 'have', 'a', 'co', 'worker', 'review', 'your', 'work', 'always', 'ask', 'yourselves', 'how', 'you', 'would', 'test', 'each', 'requirement', 'if', 'you', 'can', 't', 'figure', 'out', 'how', 'to', 'write', 'a', 'test', 'for', 'the', 'requirement', 'how', 'can', 'you', 'ever', 'prove', 'the', 'product', 'work', 'a', 'intended', 'non', 'functional', 'requirement', 'non', 'functional', 'requirement', 'are', 'also', 'known', 'a', 'quality', 'attribute', 'or', 'constraint', 'of', 'the', 'system', 'the', 'range', 'of', 'possible', 'item', 'that', 'can', 'be', 'added', 'to', 'a', 'cart', 'max', 'seems', 'like', 'a', 'constraint', 'on', 'that', 'field', 'so', 'i', 'can', 'see', 'how', 'some', 'would', 'consider', 'this', 'a', 'nfr', 'but', 'how', 'would', 'you', 'test', 'it', 'instead', 'you', 'can', 'express', 'this', 'like', 'a', 'functional', 'requirement', 'when', 'the', 'user', 'enters', 'a', 'value', 'that', 'is', 'greater', 'than', 'the', 'maximum', 'display', 'an', 'error', 'message', 'a', 'nfr', 'might', 'describe', 'the', 'color', 'size', 'and', 'location', 'of', 'the', 'error', 'message', 'nfrs', 'can', 'also', 'specify', 'which', 'ui', 'kit', 'to', 'use', 'and', 'style', 'guideline', 'to', 'follow', 'for', 'example', 'must', 'follow', 'google', 'material', 'design', 'http', 'material', 'io', 'you', 'should', 'also', 'be', 'familiar', 'with', 'nfr', 'category', 'also', 'known', 'a', 'the', 'ilities', 'performance', 'stability', 'reliability', 'scalability', 'flexibility', 'usability', 'testability', 'traceability', 'auditability', 'security', 'compliance', 'certification', 'much', 'more', 'http', 'en', 'wikipedia', 'org', 'wiki', 'non', 'functional_requirement', 'example', 'here', 'are', 'some', 'example', 'of', 'nfrs', 'for', 'a', 'website', 'performance', 'a', 'new', 'user', 'account', 'shall', 'be', 'created', 'in', 'le', 'than', 'm', 'reliability', 'the', 'system', 'shall', 'have', 'at', 'least', 'availability', 'capacity', 'the', 'system', 'shall', 'service', 'up', 'to', 'simultaneous', 'user', 'scalability', 'the', 'system', 'shall', 'be', 'horizontally', 'scalable', 'to', 'increase', 'the', 'number', 'of', 'simultaneous', 'user', 'usability', 'user', 'should', 'be', 'able', 'to', 'navigate', 'to', 'any', 'page', 'in', 'the', 'site', 'within', 'click', 'reference', 'read', 'these', 'guideline', 'by', 'the', 'system', 'engineering', 'body', 'of', 'knowledge', 'sebok', 'follow', 'them', 'closely', 'share', 'with', 'your', 'team', 'http', 'www', 'sebokwiki', 'org', 'wiki', 'system_requirements', 'presentation_and_quality_of_requirements', 'this', 'is', 'an', 'excellent', 'book', 'on', 'large', 'scale', 'agile', 'requirement', 'if', 'you', 'want', 'to', 'go', 'deeper', 'http', 'www', 'oreilly', 'com', 'library', 'view', 'agile', 'software', 'requirement']",Package Management and File Handling,2,"{'neg': 0.0, 'neu': 0.85, 'pos': 0.15, 'compound': 0.9153}",0.30735930735930733,2,Python Libraries and Environment,3query
62329755,is there a way to list all dependancies that being used for the specific project in Python,"<p>I just have finished the project with Python. I need to add <code>requirements.txt</code>. Is there a way in a command line to list all the dependencies I have been using along with their versions? </p>

<p>I have researched but it looks like I need to go manually through every single one of them, I was wondering if there is a better way to accomplish this?</p>

<p>Thank you. </p>
",<python><import><dependencies><requirements>,2020-06-11 17:07:16,35,1,1,62330296,"<p>to do that you need to type the following command <code>pip/pip3 freeze</code></p>

<p>after that you can copy the dependencies into the <code>requirements.txt</code> file</p>
",2020-06,i just have finished the project with python i need to add requirements txt is there a way in a command line to list all the dependencies i have been using along with their versions i have researched but it looks like i need to go manually through every single one of them i was wondering if there is a better way to accomplish this thank you,to do that you need to type the following command pip pip  freeze after that you can copy the dependencies into the requirements txt file,"['python', 'import', 'dependencies', 'requirements']","['i', 'just', 'have', 'finished', 'the', 'project', 'with', 'python', 'i', 'need', 'to', 'add', 'requirements', 'txt', 'is', 'there', 'a', 'way', 'in', 'a', 'command', 'line', 'to', 'list', 'all', 'the', 'dependencies', 'i', 'have', 'been', 'using', 'along', 'with', 'their', 'versions', 'i', 'have', 'researched', 'but', 'it', 'looks', 'like', 'i', 'need', 'to', 'go', 'manually', 'through', 'every', 'single', 'one', 'of', 'them', 'i', 'was', 'wondering', 'if', 'there', 'is', 'a', 'better', 'way', 'to', 'accomplish', 'this', 'thank', 'you']","['to', 'do', 'that', 'you', 'need', 'to', 'type', 'the', 'following', 'command', 'pip', 'pip', 'freeze', 'after', 'that', 'you', 'can', 'copy', 'the', 'dependencies', 'into', 'the', 'requirements', 'txt', 'file']","['finished', 'project', 'python', 'need', 'add', 'requirement', 'txt', 'way', 'command', 'line', 'list', 'dependency', 'using', 'along', 'version', 'researched', 'look', 'like', 'need', 'go', 'manually', 'every', 'single', 'one', 'wa', 'wondering', 'better', 'way', 'accomplish', 'thank']","['to', 'do', 'that', 'you', 'need', 'to', 'type', 'the', 'following', 'command', 'pip', 'pip', 'freeze', 'after', 'that', 'you', 'can', 'copy', 'the', 'dependency', 'into', 'the', 'requirement', 'txt', 'file']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.839, 'pos': 0.161, 'compound': 0.9034}",0.2142857142857143,3,Python Package Installation and Management,3query
62032382,Dataflow fails when I add requirements.txt [Python],"<p>So when I try to run dataflow with the DataflowRunner and include the requirements.txt which looks like this </p>

<pre><code>google-cloud-storage==1.28.1
pandas==1.0.3
smart-open==2.0.0
</code></pre>

<p>Every time it fails on this line </p>

<pre><code>INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://..../beamapp-.../numpy-1.18.2.zip...
Traceback (most recent call last):
File ""Database.py"", line 107, in &lt;module&gt;
run()
File ""Database.py"", line 101, in run
| 'Write CSV' &gt;&gt; beam.ParDo(WriteCSVFIle(options.output_bucket, 
pandora_options.output_folder))
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/pipeline.py"", line 503, in __exit__
    self.run().wait_until_finish()
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/pipeline.py"", line 483, in run
    self._options).run(False)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/pipeline.py"", line 496, in run
    return self.runner.run_pipeline(self, self._options)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/dataflow_runner.py"", line 548, in run_pipeline
    self.dataflow_client.create_job(self.job), self)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/utils/retry.py"", line 234, in wrapper
    return fun(*args, **kwargs)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 624, in create_job
    self.create_job_description(job)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 680, in create_job_description
    resources = self._stage_resources(job.options)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 577, in _stage_resources
    staging_location=google_cloud_options.staging_location)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/portability/stager.py"", line 182, in stage_job_resources
    pkg, FileSystems.join(staging_location, os.path.basename(pkg)))
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 942, in stage_artifact
    local_path_to_artifact, artifact_name)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/utils/retry.py"", line 234, in wrapper
    return fun(*args, **kwargs)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 564, in _gcs_file_copy
    self.stage_file(to_folder, to_name, f, total_size=total_size)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 602, in stage_file
    response = self._storage_client.objects.Insert(request, upload=upload)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/io/gcp/internal/clients/storage/storage_v1_client.py"", line 1156, in Insert
    upload=upload, upload_config=upload_config)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/base_api.py"", line 715, in _RunMethod
    http_request, client=self.client)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 908, in InitializeUpload
    return self.StreamInChunks()
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 1020, in StreamInChunks
    additional_headers=additional_headers)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 957, in __StreamMedia
    response = send_func(self.stream.tell())
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 943, in CallSendChunk
    start, additional_headers=additional_headers)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 1120, in __SendChunk
    return self.__SendMediaRequest(request, end)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 1033, in __SendMediaRequest
    retries=self.num_retries, check_response_func=CheckResponse)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 356, in MakeRequest
    max_retry_wait, total_wait_sec))
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 304, in HandleExceptionsAndRebuildHttpConnections
    raise retry_args.exc
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 346, in MakeRequest
    check_response_func=check_response_func)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 396, in _MakeRequestNoRetry
    redirections=redirections, connection_type=connection_type)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/oauth2client/transport.py"", line 169, in new_request
    redirections, connection_type)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/oauth2client/transport.py"", line 169, in new_request
    redirections, connection_type)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/httplib2/__init__.py"", line 1991, in request
    cachekey,
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/httplib2/__init__.py"", line 1690, in _request
    content,
httplib2.RedirectMissingLocation: Redirected but the response is missing a Location: header.
</code></pre>

<p>This is the command I'm running</p>

<pre><code>python Database.py     
--runner DataflowRunner     
--project XXX     
--staging_location gs://.../staging     
--temp_location gs://.../temp     
--template_location gs://.../Template     
--requirements_file requirements.txt
</code></pre>

<p>if I remove the --requirements_file requirements.txt it finishes but when I try to run the job it fails because it can't find the packages.</p>

<ul>
<li>I'm using cloud-storage to list all the files from a bucket so if you have another solution which doesn't involve cloud-storage it would be much appreciated</li>
</ul>

<p>This is my dataflow-requirements-cache folder. Before cleaning it up I had multiple files with different versions e.g. </p>

<pre><code>botocore-1.16.16.tar.gz
botocore-1.16.17.tar.gz
botocore-1.16.18.tar.gz
</code></pre>

<p>After I cleaned it up it looks like this, (it still failed while trying to upload numpy)</p>

<pre><code>numpy-1.18.4.zip
urllib3-1.25.9.tar.gz
smart_open-2.0.0.tar.gz
six-1.15.0.tar.gz
setuptools-47.1.0.zip
s3transfer-0.3.3.tar.gz
rsa-4.0.tar.gz
requests-2.23.0.tar.gz
pytz-2020.1.tar.gz
python-dateutil-2.8.1.tar.gz
pyasn1-modules-0.2.8.tar.gz
pyasn1-0.4.8.tar.gz
protobuf-3.12.2.tar.gz
pandas-1.0.3.tar.gz
jmespath-0.10.0.tar.gz
idna-2.9.tar.gz
googleapis-common-protos-1.51.0.tar.gz
google-resumable-media-0.5.0.tar.gz
google-cloud-storage-1.28.1.tar.gz
google-cloud-core-1.3.0.tar.gz
google-auth-1.15.0.tar.gz
google-api-core-1.17.0.tar.gz
docutils-0.15.2.tar.gz
chardet-3.0.4.tar.gz
certifi-2020.4.5.1.tar.gz
cachetools-4.1.0.tar.gz
botocore-1.16.18.tar.gz
boto3-1.13.18.tar.gz
boto-2.49.0.tar.gz
</code></pre>

<p>---- EDIT ----
The full output</p>

<pre><code>(airflow) afragotsis-mac:pandora_database afragotsis$ python PandoraDatabase.py \
&gt;     --runner DataflowRunner \
&gt;     --project XXX \
&gt;     --staging_location gs://.../dataflow-template/PandoraDatabase/staging \
&gt;     --temp_location gs://.../dataflow-template/PandoraDatabase/temp \
&gt;     --template_location gs://.../dataflow-template/PandoraDatabase/pandoraTemplate \
&gt;     --requirements_file requirements.txt \
&gt;     --save_main_session True
WARNING:apache_beam.options.pipeline_options:--region not set; will default to us-central1. Future releases of Beam will require the user to set --region explicitly, or else have a default set via the gcloud tool. https://cloud.google.com/compute/docs/regions-zones
INFO:apache_beam.internal.gcp.auth:Setting socket default timeout to 60 seconds.
INFO:apache_beam.internal.gcp.auth:socket default timeout is 60.0 seconds.
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/pipeline.pb...
INFO:oauth2client.transport:Attempting refresh to obtain initial access_token
INFO:oauth2client.client:Refreshing access_token
INFO:oauth2client.transport:Attempting refresh to obtain initial access_token
INFO:oauth2client.client:Refreshing access_token
INFO:apache_beam.runners.dataflow.internal.apiclient:Completed GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/pipeline.pb in 0 seconds.
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/requirements.txt...
INFO:apache_beam.runners.dataflow.internal.apiclient:Completed GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/requirements.txt in 0 seconds.
INFO:apache_beam.runners.portability.stager:Executing command: ['/Users/afragotsis/opt/anaconda3/envs/airflow/bin/python', '-m', 'pip', 'download', '--dest', '/var/folders/zj/dqg766ks0cx663lg7brll7b80000gn/T/dataflow-requirements-cache', '-r', 'requirements.txt', '--exists-action', 'i', '--no-binary', ':all:']
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/rsa-4.0.tar.gz...
INFO:apache_beam.runners.dataflow.internal.apiclient:Completed GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/rsa-4.0.tar.gz in 0 seconds.
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/urllib3-1.25.9.tar.gz...
INFO:apache_beam.runners.dataflow.internal.apiclient:Completed GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/urllib3-1.25.9.tar.gz in 0 seconds.
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/boto3-1.13.19.tar.gz...
INFO:apache_beam.runners.dataflow.internal.apiclient:Completed GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/boto3-1.13.19.tar.gz in 0 seconds.
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/pyasn1-modules-0.2.8.tar.gz...
INFO:apache_beam.runners.dataflow.internal.apiclient:Completed GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/pyasn1-modules-0.2.8.tar.gz in 0 seconds.
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/numpy-1.18.4.zip...
Traceback (most recent call last):
  File ""PandoraDatabase.py"", line 125, in &lt;module&gt;
    run()
  File ""PandoraDatabase.py"", line 119, in run
    | 'Write CSV' &gt;&gt; beam.ParDo(WriteCSVFIle(pandora_options.output_bucket, pandora_options.output_folder))
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/pipeline.py"", line 503, in __exit__
    self.run().wait_until_finish()
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/pipeline.py"", line 483, in run
    self._options).run(False)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/pipeline.py"", line 496, in run
    return self.runner.run_pipeline(self, self._options)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/dataflow_runner.py"", line 548, in run_pipeline
    self.dataflow_client.create_job(self.job), self)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/utils/retry.py"", line 234, in wrapper
    return fun(*args, **kwargs)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 624, in create_job
    self.create_job_description(job)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 680, in create_job_description
    resources = self._stage_resources(job.options)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 577, in _stage_resources
    staging_location=google_cloud_options.staging_location)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/portability/stager.py"", line 182, in stage_job_resources
    pkg, FileSystems.join(staging_location, os.path.basename(pkg)))
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 942, in stage_artifact
    local_path_to_artifact, artifact_name)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/utils/retry.py"", line 234, in wrapper
    return fun(*args, **kwargs)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 564, in _gcs_file_copy
    self.stage_file(to_folder, to_name, f, total_size=total_size)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 602, in stage_file
    response = self._storage_client.objects.Insert(request, upload=upload)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/io/gcp/internal/clients/storage/storage_v1_client.py"", line 1156, in Insert
    upload=upload, upload_config=upload_config)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/base_api.py"", line 715, in _RunMethod
    http_request, client=self.client)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 908, in InitializeUpload
    return self.StreamInChunks()
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 1020, in StreamInChunks
    additional_headers=additional_headers)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 957, in __StreamMedia
    response = send_func(self.stream.tell())
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 943, in CallSendChunk
    start, additional_headers=additional_headers)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 1120, in __SendChunk
    return self.__SendMediaRequest(request, end)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 1033, in __SendMediaRequest
    retries=self.num_retries, check_response_func=CheckResponse)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 356, in MakeRequest
    max_retry_wait, total_wait_sec))
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 304, in HandleExceptionsAndRebuildHttpConnections
    raise retry_args.exc
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 346, in MakeRequest
    check_response_func=check_response_func)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 396, in _MakeRequestNoRetry
    redirections=redirections, connection_type=connection_type)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/oauth2client/transport.py"", line 169, in new_request
    redirections, connection_type)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/oauth2client/transport.py"", line 169, in new_request
    redirections, connection_type)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/httplib2/__init__.py"", line 1991, in request
    cachekey,
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/httplib2/__init__.py"", line 1690, in _request
    content,
httplib2.RedirectMissingLocation: Redirected but the response is missing a Location: header.
</code></pre>

<p>the full path of the dataflow-requirements-cache</p>

<pre><code>/private/var/folders/zj/dqg766ks0cx663lg7brll7b80000gn/T/dataflow-requirements-cache
</code></pre>

<p>it always fails when it tries to upload numpy</p>
",<python><google-cloud-dataflow><dataflow><requirements>,2020-05-26 22:23:49,1366,4,2,62046774,"<p>ok so no matter what I tried I couldn't make it work with the requirements file. So I tried the setup file. So now the command looks like this</p>

<pre><code>python Database.py     
--runner DataflowRunner     
--project XXX     
--staging_location gs://.../staging     
--temp_location gs://.../temp
--template_location gs://.../Template       
--setup_file /Users/.../setup.py \
--save_main_session True 
</code></pre>

<p>and the setup file is this </p>

<pre><code>import setuptools

REQUIRED_PACKAGES = [
          'google-cloud-storage==1.28.1',
          'pandas==1.0.3',
          'smart-open==2.0.0'
      ]

PACKAGE_NAME = 'my_package'
PACKAGE_VERSION = '0.0.1'

setuptools.setup(
    name=PACKAGE_NAME,
    version=PACKAGE_VERSION,
    description='Example project',
    install_requires=REQUIRED_PACKAGES,
    packages=setuptools.find_packages(),
)
</code></pre>
",2020-05,so when i try to run dataflow with the dataflowrunner and include the requirements txt which looks like this google cloud storage       pandas       smart open       every time it fails on this line info apache_beam runners dataflow internal apiclient starting gcs upload to gs beamapp numpy       zip traceback most recent call last file database py line   in module run file database py line   in run write csv beam pardo writecsvfile options output_bucket pandora_options output_folder file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam pipeline py line   in __exit__ self run wait_until_finish file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam pipeline py line   in run self _options run false file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam pipeline py line   in run return self runner run_pipeline self self _options file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow dataflow_runner py line   in run_pipeline self dataflow_client create_job self job self file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam utils retry py line   in wrapper return fun args kwargs file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in create_job self create_job_description job file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in create_job_description resources self _stage_resources job options file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in _stage_resources staging_location google_cloud_options staging_location file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners portability stager py line   in stage_job_resources pkg filesystems join staging_location os path basename pkg file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in stage_artifact local_path_to_artifact artifact_name file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam utils retry py line   in wrapper return fun args kwargs file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in _gcs_file_copy self stage_file to_folder to_name f total_size total_size file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in stage_file response self _storage_client objects insert request upload upload file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam io gcp internal clients storage storage_v _client py line   in insert upload upload upload_config upload_config file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py base_api py line   in _runmethod http_request client self client file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in initializeupload return self streaminchunks file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in streaminchunks additional_headers additional_headers file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in __streammedia response send_func self stream tell file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in callsendchunk start additional_headers additional_headers file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in __sendchunk return self __sendmediarequest request end file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in __sendmediarequest retries self num_retries check_response_func checkresponse file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in makerequest max_retry_wait total_wait_sec file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in handleexceptionsandrebuildhttpconnections raise retry_args exc file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in makerequest check_response_func check_response_func file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in _makerequestnoretry redirections redirections connection_type connection_type file users afragotsis opt anaconda  envs airflow lib python    site packages oauth client transport py line   in new_request redirections connection_type file users afragotsis opt anaconda  envs airflow lib python    site packages oauth client transport py line   in new_request redirections connection_type file users afragotsis opt anaconda  envs airflow lib python    site packages httplib  __init__ py line   in request cachekey file users afragotsis opt anaconda  envs airflow lib python    site packages httplib  __init__ py line   in _request content httplib  redirectmissinglocation redirected but the response is missing a location header this is the command i m running python database py runner dataflowrunner project xxx staging_location gs staging temp_location gs temp template_location gs template requirements_file requirements txt if i remove the requirements_file requirements txt it finishes but when i try to run the job it fails because it can t find the packages i m using cloud storage to list all the files from a bucket so if you have another solution which doesn t involve cloud storage it would be much appreciated this is my dataflow requirements cache folder before cleaning it up i had multiple files with different versions e g botocore       tar gz botocore       tar gz botocore       tar gz after i cleaned it up it looks like this it still failed while trying to upload numpy numpy       zip urllib        tar gz smart_open       tar gz six       tar gz setuptools       zip s transfer       tar gz rsa     tar gz requests       tar gz pytz     tar gz python dateutil       tar gz pyasn  modules       tar gz pyasn        tar gz protobuf       tar gz pandas       tar gz jmespath       tar gz idna     tar gz googleapis common protos       tar gz google resumable media       tar gz google cloud storage       tar gz google cloud core       tar gz google auth       tar gz google api core       tar gz docutils       tar gz chardet       tar gz certifi         tar gz cachetools       tar gz botocore       tar gz boto        tar gz boto       tar gz edit the full output airflow afragotsis mac pandora_database afragotsis python pandoradatabase py runner dataflowrunner project xxx staging_location gs dataflow template pandoradatabase staging temp_location gs dataflow template pandoradatabase temp template_location gs dataflow template pandoradatabase pandoratemplate requirements_file requirements txt save_main_session true warning apache_beam options pipeline_options region not set will default to us central  future releases of beam will require the user to set region explicitly or else have a default set via the gcloud tool https cloud google com compute docs regions zones info apache_beam internal gcp auth setting socket default timeout to   seconds info apache_beam internal gcp auth socket default timeout is     seconds info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         pipeline pb info oauth client transport attempting refresh to obtain initial access_token info oauth client client refreshing access_token info oauth client transport attempting refresh to obtain initial access_token info oauth client client refreshing access_token info apache_beam runners dataflow internal apiclient completed gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         pipeline pb in   seconds info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         requirements txt info apache_beam runners dataflow internal apiclient completed gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         requirements txt in   seconds info apache_beam runners portability stager executing command users afragotsis opt anaconda  envs airflow bin python m pip download dest var folders zj dqg ks cx lg brll b gn t dataflow requirements cache r requirements txt exists action i no binary all info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         rsa     tar gz info apache_beam runners dataflow internal apiclient completed gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         rsa     tar gz in   seconds info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         urllib        tar gz info apache_beam runners dataflow internal apiclient completed gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         urllib        tar gz in   seconds info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         boto        tar gz info apache_beam runners dataflow internal apiclient completed gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         boto        tar gz in   seconds info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         pyasn  modules       tar gz info apache_beam runners dataflow internal apiclient completed gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         pyasn  modules       tar gz in   seconds info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         numpy       zip traceback most recent call last file pandoradatabase py line   in module run file pandoradatabase py line   in run write csv beam pardo writecsvfile pandora_options output_bucket pandora_options output_folder file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam pipeline py line   in __exit__ self run wait_until_finish file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam pipeline py line   in run self _options run false file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam pipeline py line   in run return self runner run_pipeline self self _options file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow dataflow_runner py line   in run_pipeline self dataflow_client create_job self job self file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam utils retry py line   in wrapper return fun args kwargs file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in create_job self create_job_description job file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in create_job_description resources self _stage_resources job options file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in _stage_resources staging_location google_cloud_options staging_location file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners portability stager py line   in stage_job_resources pkg filesystems join staging_location os path basename pkg file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in stage_artifact local_path_to_artifact artifact_name file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam utils retry py line   in wrapper return fun args kwargs file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in _gcs_file_copy self stage_file to_folder to_name f total_size total_size file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in stage_file response self _storage_client objects insert request upload upload file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam io gcp internal clients storage storage_v _client py line   in insert upload upload upload_config upload_config file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py base_api py line   in _runmethod http_request client self client file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in initializeupload return self streaminchunks file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in streaminchunks additional_headers additional_headers file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in __streammedia response send_func self stream tell file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in callsendchunk start additional_headers additional_headers file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in __sendchunk return self __sendmediarequest request end file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in __sendmediarequest retries self num_retries check_response_func checkresponse file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in makerequest max_retry_wait total_wait_sec file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in handleexceptionsandrebuildhttpconnections raise retry_args exc file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in makerequest check_response_func check_response_func file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in _makerequestnoretry redirections redirections connection_type connection_type file users afragotsis opt anaconda  envs airflow lib python    site packages oauth client transport py line   in new_request redirections connection_type file users afragotsis opt anaconda  envs airflow lib python    site packages oauth client transport py line   in new_request redirections connection_type file users afragotsis opt anaconda  envs airflow lib python    site packages httplib  __init__ py line   in request cachekey file users afragotsis opt anaconda  envs airflow lib python    site packages httplib  __init__ py line   in _request content httplib  redirectmissinglocation redirected but the response is missing a location header the full path of the dataflow requirements cache private var folders zj dqg ks cx lg brll b gn t dataflow requirements cache it always fails when it tries to upload numpy,ok so no matter what i tried i couldn t make it work with the requirements file so i tried the setup file so now the command looks like this python database py runner dataflowrunner project xxx staging_location gs staging temp_location gs temp template_location gs template setup_file users setup py save_main_session true and the setup file is this import setuptools required_packages google cloud storage       pandas       smart open       package_name my_package package_version       setuptools setup name package_name version package_version description example project install_requires required_packages packages setuptools find_packages,"['python', 'google-cloud-dataflow', 'dataflow', 'requirements']","['so', 'when', 'i', 'try', 'to', 'run', 'dataflow', 'with', 'the', 'dataflowrunner', 'and', 'include', 'the', 'requirements', 'txt', 'which', 'looks', 'like', 'this', 'google', 'cloud', 'storage', 'pandas', 'smart', 'open', 'every', 'time', 'it', 'fails', 'on', 'this', 'line', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'beamapp', 'numpy', 'zip', 'traceback', 'most', 'recent', 'call', 'last', 'file', 'database', 'py', 'line', 'in', 'module', 'run', 'file', 'database', 'py', 'line', 'in', 'run', 'write', 'csv', 'beam', 'pardo', 'writecsvfile', 'options', 'output_bucket', 'pandora_options', 'output_folder', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'pipeline', 'py', 'line', 'in', '__exit__', 'self', 'run', 'wait_until_finish', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'pipeline', 'py', 'line', 'in', 'run', 'self', '_options', 'run', 'false', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'pipeline', 'py', 'line', 'in', 'run', 'return', 'self', 'runner', 'run_pipeline', 'self', 'self', '_options', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'dataflow_runner', 'py', 'line', 'in', 'run_pipeline', 'self', 'dataflow_client', 'create_job', 'self', 'job', 'self', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'utils', 'retry', 'py', 'line', 'in', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'create_job', 'self', 'create_job_description', 'job', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'create_job_description', 'resources', 'self', '_stage_resources', 'job', 'options', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', '_stage_resources', 'staging_location', 'google_cloud_options', 'staging_location', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'portability', 'stager', 'py', 'line', 'in', 'stage_job_resources', 'pkg', 'filesystems', 'join', 'staging_location', 'os', 'path', 'basename', 'pkg', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'stage_artifact', 'local_path_to_artifact', 'artifact_name', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'utils', 'retry', 'py', 'line', 'in', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', '_gcs_file_copy', 'self', 'stage_file', 'to_folder', 'to_name', 'f', 'total_size', 'total_size', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'stage_file', 'response', 'self', '_storage_client', 'objects', 'insert', 'request', 'upload', 'upload', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'io', 'gcp', 'internal', 'clients', 'storage', 'storage_v', '_client', 'py', 'line', 'in', 'insert', 'upload', 'upload', 'upload_config', 'upload_config', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'base_api', 'py', 'line', 'in', '_runmethod', 'http_request', 'client', 'self', 'client', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', 'initializeupload', 'return', 'self', 'streaminchunks', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', 'streaminchunks', 'additional_headers', 'additional_headers', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', '__streammedia', 'response', 'send_func', 'self', 'stream', 'tell', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', 'callsendchunk', 'start', 'additional_headers', 'additional_headers', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', '__sendchunk', 'return', 'self', '__sendmediarequest', 'request', 'end', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', '__sendmediarequest', 'retries', 'self', 'num_retries', 'check_response_func', 'checkresponse', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', 'makerequest', 'max_retry_wait', 'total_wait_sec', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', 'handleexceptionsandrebuildhttpconnections', 'raise', 'retry_args', 'exc', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', 'makerequest', 'check_response_func', 'check_response_func', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', '_makerequestnoretry', 'redirections', 'redirections', 'connection_type', 'connection_type', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'oauth', 'client', 'transport', 'py', 'line', 'in', 'new_request', 'redirections', 'connection_type', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'oauth', 'client', 'transport', 'py', 'line', 'in', 'new_request', 'redirections', 'connection_type', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'httplib', '__init__', 'py', 'line', 'in', 'request', 'cachekey', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'httplib', '__init__', 'py', 'line', 'in', '_request', 'content', 'httplib', 'redirectmissinglocation', 'redirected', 'but', 'the', 'response', 'is', 'missing', 'a', 'location', 'header', 'this', 'is', 'the', 'command', 'i', 'm', 'running', 'python', 'database', 'py', 'runner', 'dataflowrunner', 'project', 'xxx', 'staging_location', 'gs', 'staging', 'temp_location', 'gs', 'temp', 'template_location', 'gs', 'template', 'requirements_file', 'requirements', 'txt', 'if', 'i', 'remove', 'the', 'requirements_file', 'requirements', 'txt', 'it', 'finishes', 'but', 'when', 'i', 'try', 'to', 'run', 'the', 'job', 'it', 'fails', 'because', 'it', 'can', 't', 'find', 'the', 'packages', 'i', 'm', 'using', 'cloud', 'storage', 'to', 'list', 'all', 'the', 'files', 'from', 'a', 'bucket', 'so', 'if', 'you', 'have', 'another', 'solution', 'which', 'doesn', 't', 'involve', 'cloud', 'storage', 'it', 'would', 'be', 'much', 'appreciated', 'this', 'is', 'my', 'dataflow', 'requirements', 'cache', 'folder', 'before', 'cleaning', 'it', 'up', 'i', 'had', 'multiple', 'files', 'with', 'different', 'versions', 'e', 'g', 'botocore', 'tar', 'gz', 'botocore', 'tar', 'gz', 'botocore', 'tar', 'gz', 'after', 'i', 'cleaned', 'it', 'up', 'it', 'looks', 'like', 'this', 'it', 'still', 'failed', 'while', 'trying', 'to', 'upload', 'numpy', 'numpy', 'zip', 'urllib', 'tar', 'gz', 'smart_open', 'tar', 'gz', 'six', 'tar', 'gz', 'setuptools', 'zip', 's', 'transfer', 'tar', 'gz', 'rsa', 'tar', 'gz', 'requests', 'tar', 'gz', 'pytz', 'tar', 'gz', 'python', 'dateutil', 'tar', 'gz', 'pyasn', 'modules', 'tar', 'gz', 'pyasn', 'tar', 'gz', 'protobuf', 'tar', 'gz', 'pandas', 'tar', 'gz', 'jmespath', 'tar', 'gz', 'idna', 'tar', 'gz', 'googleapis', 'common', 'protos', 'tar', 'gz', 'google', 'resumable', 'media', 'tar', 'gz', 'google', 'cloud', 'storage', 'tar', 'gz', 'google', 'cloud', 'core', 'tar', 'gz', 'google', 'auth', 'tar', 'gz', 'google', 'api', 'core', 'tar', 'gz', 'docutils', 'tar', 'gz', 'chardet', 'tar', 'gz', 'certifi', 'tar', 'gz', 'cachetools', 'tar', 'gz', 'botocore', 'tar', 'gz', 'boto', 'tar', 'gz', 'boto', 'tar', 'gz', 'edit', 'the', 'full', 'output', 'airflow', 'afragotsis', 'mac', 'pandora_database', 'afragotsis', 'python', 'pandoradatabase', 'py', 'runner', 'dataflowrunner', 'project', 'xxx', 'staging_location', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'temp_location', 'gs', 'dataflow', 'template', 'pandoradatabase', 'temp', 'template_location', 'gs', 'dataflow', 'template', 'pandoradatabase', 'pandoratemplate', 'requirements_file', 'requirements', 'txt', 'save_main_session', 'true', 'warning', 'apache_beam', 'options', 'pipeline_options', 'region', 'not', 'set', 'will', 'default', 'to', 'us', 'central', 'future', 'releases', 'of', 'beam', 'will', 'require', 'the', 'user', 'to', 'set', 'region', 'explicitly', 'or', 'else', 'have', 'a', 'default', 'set', 'via', 'the', 'gcloud', 'tool', 'https', 'cloud', 'google', 'com', 'compute', 'docs', 'regions', 'zones', 'info', 'apache_beam', 'internal', 'gcp', 'auth', 'setting', 'socket', 'default', 'timeout', 'to', 'seconds', 'info', 'apache_beam', 'internal', 'gcp', 'auth', 'socket', 'default', 'timeout', 'is', 'seconds', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pipeline', 'pb', 'info', 'oauth', 'client', 'transport', 'attempting', 'refresh', 'to', 'obtain', 'initial', 'access_token', 'info', 'oauth', 'client', 'client', 'refreshing', 'access_token', 'info', 'oauth', 'client', 'transport', 'attempting', 'refresh', 'to', 'obtain', 'initial', 'access_token', 'info', 'oauth', 'client', 'client', 'refreshing', 'access_token', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'completed', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pipeline', 'pb', 'in', 'seconds', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'requirements', 'txt', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'completed', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'requirements', 'txt', 'in', 'seconds', 'info', 'apache_beam', 'runners', 'portability', 'stager', 'executing', 'command', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'bin', 'python', 'm', 'pip', 'download', 'dest', 'var', 'folders', 'zj', 'dqg', 'ks', 'cx', 'lg', 'brll', 'b', 'gn', 't', 'dataflow', 'requirements', 'cache', 'r', 'requirements', 'txt', 'exists', 'action', 'i', 'no', 'binary', 'all', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'rsa', 'tar', 'gz', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'completed', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'rsa', 'tar', 'gz', 'in', 'seconds', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'urllib', 'tar', 'gz', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'completed', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'urllib', 'tar', 'gz', 'in', 'seconds', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'boto', 'tar', 'gz', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'completed', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'boto', 'tar', 'gz', 'in', 'seconds', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pyasn', 'modules', 'tar', 'gz', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'completed', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pyasn', 'modules', 'tar', 'gz', 'in', 'seconds', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'numpy', 'zip', 'traceback', 'most', 'recent', 'call', 'last', 'file', 'pandoradatabase', 'py', 'line', 'in', 'module', 'run', 'file', 'pandoradatabase', 'py', 'line', 'in', 'run', 'write', 'csv', 'beam', 'pardo', 'writecsvfile', 'pandora_options', 'output_bucket', 'pandora_options', 'output_folder', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'pipeline', 'py', 'line', 'in', '__exit__', 'self', 'run', 'wait_until_finish', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'pipeline', 'py', 'line', 'in', 'run', 'self', '_options', 'run', 'false', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'pipeline', 'py', 'line', 'in', 'run', 'return', 'self', 'runner', 'run_pipeline', 'self', 'self', '_options', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'dataflow_runner', 'py', 'line', 'in', 'run_pipeline', 'self', 'dataflow_client', 'create_job', 'self', 'job', 'self', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'utils', 'retry', 'py', 'line', 'in', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'create_job', 'self', 'create_job_description', 'job', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'create_job_description', 'resources', 'self', '_stage_resources', 'job', 'options', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', '_stage_resources', 'staging_location', 'google_cloud_options', 'staging_location', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'portability', 'stager', 'py', 'line', 'in', 'stage_job_resources', 'pkg', 'filesystems', 'join', 'staging_location', 'os', 'path', 'basename', 'pkg', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'stage_artifact', 'local_path_to_artifact', 'artifact_name', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'utils', 'retry', 'py', 'line', 'in', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', '_gcs_file_copy', 'self', 'stage_file', 'to_folder', 'to_name', 'f', 'total_size', 'total_size', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'stage_file', 'response', 'self', '_storage_client', 'objects', 'insert', 'request', 'upload', 'upload', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'io', 'gcp', 'internal', 'clients', 'storage', 'storage_v', '_client', 'py', 'line', 'in', 'insert', 'upload', 'upload', 'upload_config', 'upload_config', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'base_api', 'py', 'line', 'in', '_runmethod', 'http_request', 'client', 'self', 'client', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', 'initializeupload', 'return', 'self', 'streaminchunks', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', 'streaminchunks', 'additional_headers', 'additional_headers', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', '__streammedia', 'response', 'send_func', 'self', 'stream', 'tell', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', 'callsendchunk', 'start', 'additional_headers', 'additional_headers', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', '__sendchunk', 'return', 'self', '__sendmediarequest', 'request', 'end', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', '__sendmediarequest', 'retries', 'self', 'num_retries', 'check_response_func', 'checkresponse', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', 'makerequest', 'max_retry_wait', 'total_wait_sec', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', 'handleexceptionsandrebuildhttpconnections', 'raise', 'retry_args', 'exc', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', 'makerequest', 'check_response_func', 'check_response_func', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', '_makerequestnoretry', 'redirections', 'redirections', 'connection_type', 'connection_type', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'oauth', 'client', 'transport', 'py', 'line', 'in', 'new_request', 'redirections', 'connection_type', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'oauth', 'client', 'transport', 'py', 'line', 'in', 'new_request', 'redirections', 'connection_type', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'httplib', '__init__', 'py', 'line', 'in', 'request', 'cachekey', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'httplib', '__init__', 'py', 'line', 'in', '_request', 'content', 'httplib', 'redirectmissinglocation', 'redirected', 'but', 'the', 'response', 'is', 'missing', 'a', 'location', 'header', 'the', 'full', 'path', 'of', 'the', 'dataflow', 'requirements', 'cache', 'private', 'var', 'folders', 'zj', 'dqg', 'ks', 'cx', 'lg', 'brll', 'b', 'gn', 't', 'dataflow', 'requirements', 'cache', 'it', 'always', 'fails', 'when', 'it', 'tries', 'to', 'upload', 'numpy']","['ok', 'so', 'no', 'matter', 'what', 'i', 'tried', 'i', 'couldn', 't', 'make', 'it', 'work', 'with', 'the', 'requirements', 'file', 'so', 'i', 'tried', 'the', 'setup', 'file', 'so', 'now', 'the', 'command', 'looks', 'like', 'this', 'python', 'database', 'py', 'runner', 'dataflowrunner', 'project', 'xxx', 'staging_location', 'gs', 'staging', 'temp_location', 'gs', 'temp', 'template_location', 'gs', 'template', 'setup_file', 'users', 'setup', 'py', 'save_main_session', 'true', 'and', 'the', 'setup', 'file', 'is', 'this', 'import', 'setuptools', 'required_packages', 'google', 'cloud', 'storage', 'pandas', 'smart', 'open', 'package_name', 'my_package', 'package_version', 'setuptools', 'setup', 'name', 'package_name', 'version', 'package_version', 'description', 'example', 'project', 'install_requires', 'required_packages', 'packages', 'setuptools', 'find_packages']","['try', 'run', 'dataflow', 'dataflowrunner', 'include', 'requirement', 'txt', 'look', 'like', 'google', 'cloud', 'storage', 'panda', 'smart', 'open', 'every', 'time', 'fails', 'line', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'beamapp', 'numpy', 'zip', 'traceback', 'recent', 'call', 'last', 'file', 'database', 'py', 'line', 'module', 'run', 'file', 'database', 'py', 'line', 'run', 'write', 'csv', 'beam', 'pardo', 'writecsvfile', 'option', 'output_bucket', 'pandora_options', 'output_folder', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'pipeline', 'py', 'line', '__exit__', 'self', 'run', 'wait_until_finish', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'pipeline', 'py', 'line', 'run', 'self', '_options', 'run', 'false', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'pipeline', 'py', 'line', 'run', 'return', 'self', 'runner', 'run_pipeline', 'self', 'self', '_options', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'dataflow_runner', 'py', 'line', 'run_pipeline', 'self', 'dataflow_client', 'create_job', 'self', 'job', 'self', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'utils', 'retry', 'py', 'line', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'create_job', 'self', 'create_job_description', 'job', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'create_job_description', 'resource', 'self', '_stage_resources', 'job', 'option', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', '_stage_resources', 'staging_location', 'google_cloud_options', 'staging_location', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'portability', 'stager', 'py', 'line', 'stage_job_resources', 'pkg', 'filesystems', 'join', 'staging_location', 'path', 'basename', 'pkg', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'stage_artifact', 'local_path_to_artifact', 'artifact_name', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'utils', 'retry', 'py', 'line', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', '_gcs_file_copy', 'self', 'stage_file', 'to_folder', 'to_name', 'f', 'total_size', 'total_size', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'stage_file', 'response', 'self', '_storage_client', 'object', 'insert', 'request', 'upload', 'upload', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'io', 'gcp', 'internal', 'client', 'storage', 'storage_v', '_client', 'py', 'line', 'insert', 'upload', 'upload', 'upload_config', 'upload_config', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'base_api', 'py', 'line', '_runmethod', 'http_request', 'client', 'self', 'client', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'initializeupload', 'return', 'self', 'streaminchunks', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'streaminchunks', 'additional_headers', 'additional_headers', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', '__streammedia', 'response', 'send_func', 'self', 'stream', 'tell', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'callsendchunk', 'start', 'additional_headers', 'additional_headers', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', '__sendchunk', 'return', 'self', '__sendmediarequest', 'request', 'end', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', '__sendmediarequest', 'retries', 'self', 'num_retries', 'check_response_func', 'checkresponse', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'makerequest', 'max_retry_wait', 'total_wait_sec', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'handleexceptionsandrebuildhttpconnections', 'raise', 'retry_args', 'exc', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'makerequest', 'check_response_func', 'check_response_func', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', '_makerequestnoretry', 'redirections', 'redirections', 'connection_type', 'connection_type', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'oauth', 'client', 'transport', 'py', 'line', 'new_request', 'redirections', 'connection_type', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'oauth', 'client', 'transport', 'py', 'line', 'new_request', 'redirections', 'connection_type', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'httplib', '__init__', 'py', 'line', 'request', 'cachekey', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'httplib', '__init__', 'py', 'line', '_request', 'content', 'httplib', 'redirectmissinglocation', 'redirected', 'response', 'missing', 'location', 'header', 'command', 'running', 'python', 'database', 'py', 'runner', 'dataflowrunner', 'project', 'xxx', 'staging_location', 'g', 'staging', 'temp_location', 'g', 'temp', 'template_location', 'g', 'template', 'requirements_file', 'requirement', 'txt', 'remove', 'requirements_file', 'requirement', 'txt', 'finish', 'try', 'run', 'job', 'fails', 'find', 'package', 'using', 'cloud', 'storage', 'list', 'file', 'bucket', 'another', 'solution', 'involve', 'cloud', 'storage', 'would', 'much', 'appreciated', 'dataflow', 'requirement', 'cache', 'folder', 'cleaning', 'multiple', 'file', 'different', 'version', 'e', 'g', 'botocore', 'tar', 'gz', 'botocore', 'tar', 'gz', 'botocore', 'tar', 'gz', 'cleaned', 'look', 'like', 'still', 'failed', 'trying', 'upload', 'numpy', 'numpy', 'zip', 'urllib', 'tar', 'gz', 'smart_open', 'tar', 'gz', 'six', 'tar', 'gz', 'setuptools', 'zip', 'transfer', 'tar', 'gz', 'rsa', 'tar', 'gz', 'request', 'tar', 'gz', 'pytz', 'tar', 'gz', 'python', 'dateutil', 'tar', 'gz', 'pyasn', 'module', 'tar', 'gz', 'pyasn', 'tar', 'gz', 'protobuf', 'tar', 'gz', 'panda', 'tar', 'gz', 'jmespath', 'tar', 'gz', 'idna', 'tar', 'gz', 'googleapis', 'common', 'protos', 'tar', 'gz', 'google', 'resumable', 'medium', 'tar', 'gz', 'google', 'cloud', 'storage', 'tar', 'gz', 'google', 'cloud', 'core', 'tar', 'gz', 'google', 'auth', 'tar', 'gz', 'google', 'api', 'core', 'tar', 'gz', 'docutils', 'tar', 'gz', 'chardet', 'tar', 'gz', 'certifi', 'tar', 'gz', 'cachetools', 'tar', 'gz', 'botocore', 'tar', 'gz', 'boto', 'tar', 'gz', 'boto', 'tar', 'gz', 'edit', 'full', 'output', 'airflow', 'afragotsis', 'mac', 'pandora_database', 'afragotsis', 'python', 'pandoradatabase', 'py', 'runner', 'dataflowrunner', 'project', 'xxx', 'staging_location', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'temp_location', 'g', 'dataflow', 'template', 'pandoradatabase', 'temp', 'template_location', 'g', 'dataflow', 'template', 'pandoradatabase', 'pandoratemplate', 'requirements_file', 'requirement', 'txt', 'save_main_session', 'true', 'warning', 'apache_beam', 'option', 'pipeline_options', 'region', 'set', 'default', 'u', 'central', 'future', 'release', 'beam', 'require', 'user', 'set', 'region', 'explicitly', 'else', 'default', 'set', 'via', 'gcloud', 'tool', 'http', 'cloud', 'google', 'com', 'compute', 'doc', 'region', 'zone', 'info', 'apache_beam', 'internal', 'gcp', 'auth', 'setting', 'socket', 'default', 'timeout', 'second', 'info', 'apache_beam', 'internal', 'gcp', 'auth', 'socket', 'default', 'timeout', 'second', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pipeline', 'pb', 'info', 'oauth', 'client', 'transport', 'attempting', 'refresh', 'obtain', 'initial', 'access_token', 'info', 'oauth', 'client', 'client', 'refreshing', 'access_token', 'info', 'oauth', 'client', 'transport', 'attempting', 'refresh', 'obtain', 'initial', 'access_token', 'info', 'oauth', 'client', 'client', 'refreshing', 'access_token', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'completed', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pipeline', 'pb', 'second', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'requirement', 'txt', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'completed', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'requirement', 'txt', 'second', 'info', 'apache_beam', 'runner', 'portability', 'stager', 'executing', 'command', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'bin', 'python', 'pip', 'download', 'dest', 'var', 'folder', 'zj', 'dqg', 'k', 'cx', 'lg', 'brll', 'b', 'gn', 'dataflow', 'requirement', 'cache', 'r', 'requirement', 'txt', 'exists', 'action', 'binary', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'rsa', 'tar', 'gz', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'completed', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'rsa', 'tar', 'gz', 'second', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'urllib', 'tar', 'gz', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'completed', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'urllib', 'tar', 'gz', 'second', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'boto', 'tar', 'gz', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'completed', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'boto', 'tar', 'gz', 'second', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pyasn', 'module', 'tar', 'gz', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'completed', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pyasn', 'module', 'tar', 'gz', 'second', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'numpy', 'zip', 'traceback', 'recent', 'call', 'last', 'file', 'pandoradatabase', 'py', 'line', 'module', 'run', 'file', 'pandoradatabase', 'py', 'line', 'run', 'write', 'csv', 'beam', 'pardo', 'writecsvfile', 'pandora_options', 'output_bucket', 'pandora_options', 'output_folder', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'pipeline', 'py', 'line', '__exit__', 'self', 'run', 'wait_until_finish', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'pipeline', 'py', 'line', 'run', 'self', '_options', 'run', 'false', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'pipeline', 'py', 'line', 'run', 'return', 'self', 'runner', 'run_pipeline', 'self', 'self', '_options', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'dataflow_runner', 'py', 'line', 'run_pipeline', 'self', 'dataflow_client', 'create_job', 'self', 'job', 'self', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'utils', 'retry', 'py', 'line', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'create_job', 'self', 'create_job_description', 'job', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'create_job_description', 'resource', 'self', '_stage_resources', 'job', 'option', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', '_stage_resources', 'staging_location', 'google_cloud_options', 'staging_location', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'portability', 'stager', 'py', 'line', 'stage_job_resources', 'pkg', 'filesystems', 'join', 'staging_location', 'path', 'basename', 'pkg', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'stage_artifact', 'local_path_to_artifact', 'artifact_name', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'utils', 'retry', 'py', 'line', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', '_gcs_file_copy', 'self', 'stage_file', 'to_folder', 'to_name', 'f', 'total_size', 'total_size', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'stage_file', 'response', 'self', '_storage_client', 'object', 'insert', 'request', 'upload', 'upload', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'io', 'gcp', 'internal', 'client', 'storage', 'storage_v', '_client', 'py', 'line', 'insert', 'upload', 'upload', 'upload_config', 'upload_config', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'base_api', 'py', 'line', '_runmethod', 'http_request', 'client', 'self', 'client', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'initializeupload', 'return', 'self', 'streaminchunks', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'streaminchunks', 'additional_headers', 'additional_headers', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', '__streammedia', 'response', 'send_func', 'self', 'stream', 'tell', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'callsendchunk', 'start', 'additional_headers', 'additional_headers', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', '__sendchunk', 'return', 'self', '__sendmediarequest', 'request', 'end', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', '__sendmediarequest', 'retries', 'self', 'num_retries', 'check_response_func', 'checkresponse', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'makerequest', 'max_retry_wait', 'total_wait_sec', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'handleexceptionsandrebuildhttpconnections', 'raise', 'retry_args', 'exc', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'makerequest', 'check_response_func', 'check_response_func', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', '_makerequestnoretry', 'redirections', 'redirections', 'connection_type', 'connection_type', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'oauth', 'client', 'transport', 'py', 'line', 'new_request', 'redirections', 'connection_type', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'oauth', 'client', 'transport', 'py', 'line', 'new_request', 'redirections', 'connection_type', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'httplib', '__init__', 'py', 'line', 'request', 'cachekey', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'httplib', '__init__', 'py', 'line', '_request', 'content', 'httplib', 'redirectmissinglocation', 'redirected', 'response', 'missing', 'location', 'header', 'full', 'path', 'dataflow', 'requirement', 'cache', 'private', 'var', 'folder', 'zj', 'dqg', 'k', 'cx', 'lg', 'brll', 'b', 'gn', 'dataflow', 'requirement', 'cache', 'always', 'fails', 'try', 'upload', 'numpy']","['ok', 'so', 'no', 'matter', 'what', 'i', 'tried', 'i', 'couldn', 't', 'make', 'it', 'work', 'with', 'the', 'requirement', 'file', 'so', 'i', 'tried', 'the', 'setup', 'file', 'so', 'now', 'the', 'command', 'look', 'like', 'this', 'python', 'database', 'py', 'runner', 'dataflowrunner', 'project', 'xxx', 'staging_location', 'g', 'staging', 'temp_location', 'g', 'temp', 'template_location', 'g', 'template', 'setup_file', 'user', 'setup', 'py', 'save_main_session', 'true', 'and', 'the', 'setup', 'file', 'is', 'this', 'import', 'setuptools', 'required_packages', 'google', 'cloud', 'storage', 'panda', 'smart', 'open', 'package_name', 'my_package', 'package_version', 'setuptools', 'setup', 'name', 'package_name', 'version', 'package_version', 'description', 'example', 'project', 'install_requires', 'required_packages', 'package', 'setuptools', 'find_packages']",System Requirements and AWS,0,"{'neg': 0.029, 'neu': 0.958, 'pos': 0.013, 'compound': -0.9477}",-0.043478260869565216,0,System Requirements and AWS,3query
62032382,Dataflow fails when I add requirements.txt [Python],"<p>So when I try to run dataflow with the DataflowRunner and include the requirements.txt which looks like this </p>

<pre><code>google-cloud-storage==1.28.1
pandas==1.0.3
smart-open==2.0.0
</code></pre>

<p>Every time it fails on this line </p>

<pre><code>INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://..../beamapp-.../numpy-1.18.2.zip...
Traceback (most recent call last):
File ""Database.py"", line 107, in &lt;module&gt;
run()
File ""Database.py"", line 101, in run
| 'Write CSV' &gt;&gt; beam.ParDo(WriteCSVFIle(options.output_bucket, 
pandora_options.output_folder))
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/pipeline.py"", line 503, in __exit__
    self.run().wait_until_finish()
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/pipeline.py"", line 483, in run
    self._options).run(False)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/pipeline.py"", line 496, in run
    return self.runner.run_pipeline(self, self._options)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/dataflow_runner.py"", line 548, in run_pipeline
    self.dataflow_client.create_job(self.job), self)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/utils/retry.py"", line 234, in wrapper
    return fun(*args, **kwargs)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 624, in create_job
    self.create_job_description(job)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 680, in create_job_description
    resources = self._stage_resources(job.options)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 577, in _stage_resources
    staging_location=google_cloud_options.staging_location)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/portability/stager.py"", line 182, in stage_job_resources
    pkg, FileSystems.join(staging_location, os.path.basename(pkg)))
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 942, in stage_artifact
    local_path_to_artifact, artifact_name)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/utils/retry.py"", line 234, in wrapper
    return fun(*args, **kwargs)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 564, in _gcs_file_copy
    self.stage_file(to_folder, to_name, f, total_size=total_size)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 602, in stage_file
    response = self._storage_client.objects.Insert(request, upload=upload)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/io/gcp/internal/clients/storage/storage_v1_client.py"", line 1156, in Insert
    upload=upload, upload_config=upload_config)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/base_api.py"", line 715, in _RunMethod
    http_request, client=self.client)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 908, in InitializeUpload
    return self.StreamInChunks()
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 1020, in StreamInChunks
    additional_headers=additional_headers)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 957, in __StreamMedia
    response = send_func(self.stream.tell())
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 943, in CallSendChunk
    start, additional_headers=additional_headers)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 1120, in __SendChunk
    return self.__SendMediaRequest(request, end)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 1033, in __SendMediaRequest
    retries=self.num_retries, check_response_func=CheckResponse)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 356, in MakeRequest
    max_retry_wait, total_wait_sec))
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 304, in HandleExceptionsAndRebuildHttpConnections
    raise retry_args.exc
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 346, in MakeRequest
    check_response_func=check_response_func)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 396, in _MakeRequestNoRetry
    redirections=redirections, connection_type=connection_type)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/oauth2client/transport.py"", line 169, in new_request
    redirections, connection_type)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/oauth2client/transport.py"", line 169, in new_request
    redirections, connection_type)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/httplib2/__init__.py"", line 1991, in request
    cachekey,
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/httplib2/__init__.py"", line 1690, in _request
    content,
httplib2.RedirectMissingLocation: Redirected but the response is missing a Location: header.
</code></pre>

<p>This is the command I'm running</p>

<pre><code>python Database.py     
--runner DataflowRunner     
--project XXX     
--staging_location gs://.../staging     
--temp_location gs://.../temp     
--template_location gs://.../Template     
--requirements_file requirements.txt
</code></pre>

<p>if I remove the --requirements_file requirements.txt it finishes but when I try to run the job it fails because it can't find the packages.</p>

<ul>
<li>I'm using cloud-storage to list all the files from a bucket so if you have another solution which doesn't involve cloud-storage it would be much appreciated</li>
</ul>

<p>This is my dataflow-requirements-cache folder. Before cleaning it up I had multiple files with different versions e.g. </p>

<pre><code>botocore-1.16.16.tar.gz
botocore-1.16.17.tar.gz
botocore-1.16.18.tar.gz
</code></pre>

<p>After I cleaned it up it looks like this, (it still failed while trying to upload numpy)</p>

<pre><code>numpy-1.18.4.zip
urllib3-1.25.9.tar.gz
smart_open-2.0.0.tar.gz
six-1.15.0.tar.gz
setuptools-47.1.0.zip
s3transfer-0.3.3.tar.gz
rsa-4.0.tar.gz
requests-2.23.0.tar.gz
pytz-2020.1.tar.gz
python-dateutil-2.8.1.tar.gz
pyasn1-modules-0.2.8.tar.gz
pyasn1-0.4.8.tar.gz
protobuf-3.12.2.tar.gz
pandas-1.0.3.tar.gz
jmespath-0.10.0.tar.gz
idna-2.9.tar.gz
googleapis-common-protos-1.51.0.tar.gz
google-resumable-media-0.5.0.tar.gz
google-cloud-storage-1.28.1.tar.gz
google-cloud-core-1.3.0.tar.gz
google-auth-1.15.0.tar.gz
google-api-core-1.17.0.tar.gz
docutils-0.15.2.tar.gz
chardet-3.0.4.tar.gz
certifi-2020.4.5.1.tar.gz
cachetools-4.1.0.tar.gz
botocore-1.16.18.tar.gz
boto3-1.13.18.tar.gz
boto-2.49.0.tar.gz
</code></pre>

<p>---- EDIT ----
The full output</p>

<pre><code>(airflow) afragotsis-mac:pandora_database afragotsis$ python PandoraDatabase.py \
&gt;     --runner DataflowRunner \
&gt;     --project XXX \
&gt;     --staging_location gs://.../dataflow-template/PandoraDatabase/staging \
&gt;     --temp_location gs://.../dataflow-template/PandoraDatabase/temp \
&gt;     --template_location gs://.../dataflow-template/PandoraDatabase/pandoraTemplate \
&gt;     --requirements_file requirements.txt \
&gt;     --save_main_session True
WARNING:apache_beam.options.pipeline_options:--region not set; will default to us-central1. Future releases of Beam will require the user to set --region explicitly, or else have a default set via the gcloud tool. https://cloud.google.com/compute/docs/regions-zones
INFO:apache_beam.internal.gcp.auth:Setting socket default timeout to 60 seconds.
INFO:apache_beam.internal.gcp.auth:socket default timeout is 60.0 seconds.
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/pipeline.pb...
INFO:oauth2client.transport:Attempting refresh to obtain initial access_token
INFO:oauth2client.client:Refreshing access_token
INFO:oauth2client.transport:Attempting refresh to obtain initial access_token
INFO:oauth2client.client:Refreshing access_token
INFO:apache_beam.runners.dataflow.internal.apiclient:Completed GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/pipeline.pb in 0 seconds.
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/requirements.txt...
INFO:apache_beam.runners.dataflow.internal.apiclient:Completed GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/requirements.txt in 0 seconds.
INFO:apache_beam.runners.portability.stager:Executing command: ['/Users/afragotsis/opt/anaconda3/envs/airflow/bin/python', '-m', 'pip', 'download', '--dest', '/var/folders/zj/dqg766ks0cx663lg7brll7b80000gn/T/dataflow-requirements-cache', '-r', 'requirements.txt', '--exists-action', 'i', '--no-binary', ':all:']
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/rsa-4.0.tar.gz...
INFO:apache_beam.runners.dataflow.internal.apiclient:Completed GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/rsa-4.0.tar.gz in 0 seconds.
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/urllib3-1.25.9.tar.gz...
INFO:apache_beam.runners.dataflow.internal.apiclient:Completed GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/urllib3-1.25.9.tar.gz in 0 seconds.
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/boto3-1.13.19.tar.gz...
INFO:apache_beam.runners.dataflow.internal.apiclient:Completed GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/boto3-1.13.19.tar.gz in 0 seconds.
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/pyasn1-modules-0.2.8.tar.gz...
INFO:apache_beam.runners.dataflow.internal.apiclient:Completed GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/pyasn1-modules-0.2.8.tar.gz in 0 seconds.
INFO:apache_beam.runners.dataflow.internal.apiclient:Starting GCS upload to gs://.../dataflow-template/PandoraDatabase/staging/beamapp-afragotsis-0529200636-871276.1590782796.871390/numpy-1.18.4.zip...
Traceback (most recent call last):
  File ""PandoraDatabase.py"", line 125, in &lt;module&gt;
    run()
  File ""PandoraDatabase.py"", line 119, in run
    | 'Write CSV' &gt;&gt; beam.ParDo(WriteCSVFIle(pandora_options.output_bucket, pandora_options.output_folder))
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/pipeline.py"", line 503, in __exit__
    self.run().wait_until_finish()
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/pipeline.py"", line 483, in run
    self._options).run(False)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/pipeline.py"", line 496, in run
    return self.runner.run_pipeline(self, self._options)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/dataflow_runner.py"", line 548, in run_pipeline
    self.dataflow_client.create_job(self.job), self)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/utils/retry.py"", line 234, in wrapper
    return fun(*args, **kwargs)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 624, in create_job
    self.create_job_description(job)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 680, in create_job_description
    resources = self._stage_resources(job.options)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 577, in _stage_resources
    staging_location=google_cloud_options.staging_location)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/portability/stager.py"", line 182, in stage_job_resources
    pkg, FileSystems.join(staging_location, os.path.basename(pkg)))
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 942, in stage_artifact
    local_path_to_artifact, artifact_name)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/utils/retry.py"", line 234, in wrapper
    return fun(*args, **kwargs)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 564, in _gcs_file_copy
    self.stage_file(to_folder, to_name, f, total_size=total_size)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/runners/dataflow/internal/apiclient.py"", line 602, in stage_file
    response = self._storage_client.objects.Insert(request, upload=upload)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apache_beam/io/gcp/internal/clients/storage/storage_v1_client.py"", line 1156, in Insert
    upload=upload, upload_config=upload_config)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/base_api.py"", line 715, in _RunMethod
    http_request, client=self.client)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 908, in InitializeUpload
    return self.StreamInChunks()
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 1020, in StreamInChunks
    additional_headers=additional_headers)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 957, in __StreamMedia
    response = send_func(self.stream.tell())
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 943, in CallSendChunk
    start, additional_headers=additional_headers)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 1120, in __SendChunk
    return self.__SendMediaRequest(request, end)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/transfer.py"", line 1033, in __SendMediaRequest
    retries=self.num_retries, check_response_func=CheckResponse)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 356, in MakeRequest
    max_retry_wait, total_wait_sec))
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 304, in HandleExceptionsAndRebuildHttpConnections
    raise retry_args.exc
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 346, in MakeRequest
    check_response_func=check_response_func)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/apitools/base/py/http_wrapper.py"", line 396, in _MakeRequestNoRetry
    redirections=redirections, connection_type=connection_type)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/oauth2client/transport.py"", line 169, in new_request
    redirections, connection_type)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/oauth2client/transport.py"", line 169, in new_request
    redirections, connection_type)
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/httplib2/__init__.py"", line 1991, in request
    cachekey,
  File ""/Users/afragotsis/opt/anaconda3/envs/airflow/lib/python3.7/site-packages/httplib2/__init__.py"", line 1690, in _request
    content,
httplib2.RedirectMissingLocation: Redirected but the response is missing a Location: header.
</code></pre>

<p>the full path of the dataflow-requirements-cache</p>

<pre><code>/private/var/folders/zj/dqg766ks0cx663lg7brll7b80000gn/T/dataflow-requirements-cache
</code></pre>

<p>it always fails when it tries to upload numpy</p>
",<python><google-cloud-dataflow><dataflow><requirements>,2020-05-26 22:23:49,1366,4,2,62142282,"<p>A quick search turns up this related question: <a href=""https://stackoverflow.com/questions/59815620/gcloud-upload-httplib2-redirectmissinglocation-redirected-but-the-response-is-m"">GCloud Upload httplib2.RedirectMissingLocation: Redirected but the response is missing a Location: header</a></p>

<p>You may be affected by <a href=""https://github.com/googleapis/google-api-python-client/issues/803"" rel=""nofollow noreferrer"">https://github.com/googleapis/google-api-python-client/issues/803</a>. A workaround appears to be to adjust the httplib2 version.</p>
",2020-05,so when i try to run dataflow with the dataflowrunner and include the requirements txt which looks like this google cloud storage       pandas       smart open       every time it fails on this line info apache_beam runners dataflow internal apiclient starting gcs upload to gs beamapp numpy       zip traceback most recent call last file database py line   in module run file database py line   in run write csv beam pardo writecsvfile options output_bucket pandora_options output_folder file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam pipeline py line   in __exit__ self run wait_until_finish file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam pipeline py line   in run self _options run false file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam pipeline py line   in run return self runner run_pipeline self self _options file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow dataflow_runner py line   in run_pipeline self dataflow_client create_job self job self file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam utils retry py line   in wrapper return fun args kwargs file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in create_job self create_job_description job file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in create_job_description resources self _stage_resources job options file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in _stage_resources staging_location google_cloud_options staging_location file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners portability stager py line   in stage_job_resources pkg filesystems join staging_location os path basename pkg file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in stage_artifact local_path_to_artifact artifact_name file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam utils retry py line   in wrapper return fun args kwargs file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in _gcs_file_copy self stage_file to_folder to_name f total_size total_size file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in stage_file response self _storage_client objects insert request upload upload file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam io gcp internal clients storage storage_v _client py line   in insert upload upload upload_config upload_config file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py base_api py line   in _runmethod http_request client self client file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in initializeupload return self streaminchunks file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in streaminchunks additional_headers additional_headers file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in __streammedia response send_func self stream tell file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in callsendchunk start additional_headers additional_headers file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in __sendchunk return self __sendmediarequest request end file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in __sendmediarequest retries self num_retries check_response_func checkresponse file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in makerequest max_retry_wait total_wait_sec file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in handleexceptionsandrebuildhttpconnections raise retry_args exc file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in makerequest check_response_func check_response_func file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in _makerequestnoretry redirections redirections connection_type connection_type file users afragotsis opt anaconda  envs airflow lib python    site packages oauth client transport py line   in new_request redirections connection_type file users afragotsis opt anaconda  envs airflow lib python    site packages oauth client transport py line   in new_request redirections connection_type file users afragotsis opt anaconda  envs airflow lib python    site packages httplib  __init__ py line   in request cachekey file users afragotsis opt anaconda  envs airflow lib python    site packages httplib  __init__ py line   in _request content httplib  redirectmissinglocation redirected but the response is missing a location header this is the command i m running python database py runner dataflowrunner project xxx staging_location gs staging temp_location gs temp template_location gs template requirements_file requirements txt if i remove the requirements_file requirements txt it finishes but when i try to run the job it fails because it can t find the packages i m using cloud storage to list all the files from a bucket so if you have another solution which doesn t involve cloud storage it would be much appreciated this is my dataflow requirements cache folder before cleaning it up i had multiple files with different versions e g botocore       tar gz botocore       tar gz botocore       tar gz after i cleaned it up it looks like this it still failed while trying to upload numpy numpy       zip urllib        tar gz smart_open       tar gz six       tar gz setuptools       zip s transfer       tar gz rsa     tar gz requests       tar gz pytz     tar gz python dateutil       tar gz pyasn  modules       tar gz pyasn        tar gz protobuf       tar gz pandas       tar gz jmespath       tar gz idna     tar gz googleapis common protos       tar gz google resumable media       tar gz google cloud storage       tar gz google cloud core       tar gz google auth       tar gz google api core       tar gz docutils       tar gz chardet       tar gz certifi         tar gz cachetools       tar gz botocore       tar gz boto        tar gz boto       tar gz edit the full output airflow afragotsis mac pandora_database afragotsis python pandoradatabase py runner dataflowrunner project xxx staging_location gs dataflow template pandoradatabase staging temp_location gs dataflow template pandoradatabase temp template_location gs dataflow template pandoradatabase pandoratemplate requirements_file requirements txt save_main_session true warning apache_beam options pipeline_options region not set will default to us central  future releases of beam will require the user to set region explicitly or else have a default set via the gcloud tool https cloud google com compute docs regions zones info apache_beam internal gcp auth setting socket default timeout to   seconds info apache_beam internal gcp auth socket default timeout is     seconds info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         pipeline pb info oauth client transport attempting refresh to obtain initial access_token info oauth client client refreshing access_token info oauth client transport attempting refresh to obtain initial access_token info oauth client client refreshing access_token info apache_beam runners dataflow internal apiclient completed gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         pipeline pb in   seconds info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         requirements txt info apache_beam runners dataflow internal apiclient completed gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         requirements txt in   seconds info apache_beam runners portability stager executing command users afragotsis opt anaconda  envs airflow bin python m pip download dest var folders zj dqg ks cx lg brll b gn t dataflow requirements cache r requirements txt exists action i no binary all info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         rsa     tar gz info apache_beam runners dataflow internal apiclient completed gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         rsa     tar gz in   seconds info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         urllib        tar gz info apache_beam runners dataflow internal apiclient completed gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         urllib        tar gz in   seconds info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         boto        tar gz info apache_beam runners dataflow internal apiclient completed gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         boto        tar gz in   seconds info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         pyasn  modules       tar gz info apache_beam runners dataflow internal apiclient completed gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         pyasn  modules       tar gz in   seconds info apache_beam runners dataflow internal apiclient starting gcs upload to gs dataflow template pandoradatabase staging beamapp afragotsis         numpy       zip traceback most recent call last file pandoradatabase py line   in module run file pandoradatabase py line   in run write csv beam pardo writecsvfile pandora_options output_bucket pandora_options output_folder file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam pipeline py line   in __exit__ self run wait_until_finish file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam pipeline py line   in run self _options run false file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam pipeline py line   in run return self runner run_pipeline self self _options file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow dataflow_runner py line   in run_pipeline self dataflow_client create_job self job self file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam utils retry py line   in wrapper return fun args kwargs file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in create_job self create_job_description job file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in create_job_description resources self _stage_resources job options file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in _stage_resources staging_location google_cloud_options staging_location file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners portability stager py line   in stage_job_resources pkg filesystems join staging_location os path basename pkg file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in stage_artifact local_path_to_artifact artifact_name file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam utils retry py line   in wrapper return fun args kwargs file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in _gcs_file_copy self stage_file to_folder to_name f total_size total_size file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam runners dataflow internal apiclient py line   in stage_file response self _storage_client objects insert request upload upload file users afragotsis opt anaconda  envs airflow lib python    site packages apache_beam io gcp internal clients storage storage_v _client py line   in insert upload upload upload_config upload_config file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py base_api py line   in _runmethod http_request client self client file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in initializeupload return self streaminchunks file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in streaminchunks additional_headers additional_headers file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in __streammedia response send_func self stream tell file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in callsendchunk start additional_headers additional_headers file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in __sendchunk return self __sendmediarequest request end file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py transfer py line   in __sendmediarequest retries self num_retries check_response_func checkresponse file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in makerequest max_retry_wait total_wait_sec file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in handleexceptionsandrebuildhttpconnections raise retry_args exc file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in makerequest check_response_func check_response_func file users afragotsis opt anaconda  envs airflow lib python    site packages apitools base py http_wrapper py line   in _makerequestnoretry redirections redirections connection_type connection_type file users afragotsis opt anaconda  envs airflow lib python    site packages oauth client transport py line   in new_request redirections connection_type file users afragotsis opt anaconda  envs airflow lib python    site packages oauth client transport py line   in new_request redirections connection_type file users afragotsis opt anaconda  envs airflow lib python    site packages httplib  __init__ py line   in request cachekey file users afragotsis opt anaconda  envs airflow lib python    site packages httplib  __init__ py line   in _request content httplib  redirectmissinglocation redirected but the response is missing a location header the full path of the dataflow requirements cache private var folders zj dqg ks cx lg brll b gn t dataflow requirements cache it always fails when it tries to upload numpy,a quick search turns up this related question gcloud upload httplib  redirectmissinglocation redirected but the response is missing a location header you may be affected by https github com googleapis google api python client issues   a workaround appears to be to adjust the httplib  version,"['python', 'google-cloud-dataflow', 'dataflow', 'requirements']","['so', 'when', 'i', 'try', 'to', 'run', 'dataflow', 'with', 'the', 'dataflowrunner', 'and', 'include', 'the', 'requirements', 'txt', 'which', 'looks', 'like', 'this', 'google', 'cloud', 'storage', 'pandas', 'smart', 'open', 'every', 'time', 'it', 'fails', 'on', 'this', 'line', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'beamapp', 'numpy', 'zip', 'traceback', 'most', 'recent', 'call', 'last', 'file', 'database', 'py', 'line', 'in', 'module', 'run', 'file', 'database', 'py', 'line', 'in', 'run', 'write', 'csv', 'beam', 'pardo', 'writecsvfile', 'options', 'output_bucket', 'pandora_options', 'output_folder', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'pipeline', 'py', 'line', 'in', '__exit__', 'self', 'run', 'wait_until_finish', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'pipeline', 'py', 'line', 'in', 'run', 'self', '_options', 'run', 'false', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'pipeline', 'py', 'line', 'in', 'run', 'return', 'self', 'runner', 'run_pipeline', 'self', 'self', '_options', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'dataflow_runner', 'py', 'line', 'in', 'run_pipeline', 'self', 'dataflow_client', 'create_job', 'self', 'job', 'self', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'utils', 'retry', 'py', 'line', 'in', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'create_job', 'self', 'create_job_description', 'job', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'create_job_description', 'resources', 'self', '_stage_resources', 'job', 'options', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', '_stage_resources', 'staging_location', 'google_cloud_options', 'staging_location', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'portability', 'stager', 'py', 'line', 'in', 'stage_job_resources', 'pkg', 'filesystems', 'join', 'staging_location', 'os', 'path', 'basename', 'pkg', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'stage_artifact', 'local_path_to_artifact', 'artifact_name', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'utils', 'retry', 'py', 'line', 'in', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', '_gcs_file_copy', 'self', 'stage_file', 'to_folder', 'to_name', 'f', 'total_size', 'total_size', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'stage_file', 'response', 'self', '_storage_client', 'objects', 'insert', 'request', 'upload', 'upload', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'io', 'gcp', 'internal', 'clients', 'storage', 'storage_v', '_client', 'py', 'line', 'in', 'insert', 'upload', 'upload', 'upload_config', 'upload_config', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'base_api', 'py', 'line', 'in', '_runmethod', 'http_request', 'client', 'self', 'client', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', 'initializeupload', 'return', 'self', 'streaminchunks', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', 'streaminchunks', 'additional_headers', 'additional_headers', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', '__streammedia', 'response', 'send_func', 'self', 'stream', 'tell', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', 'callsendchunk', 'start', 'additional_headers', 'additional_headers', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', '__sendchunk', 'return', 'self', '__sendmediarequest', 'request', 'end', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', '__sendmediarequest', 'retries', 'self', 'num_retries', 'check_response_func', 'checkresponse', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', 'makerequest', 'max_retry_wait', 'total_wait_sec', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', 'handleexceptionsandrebuildhttpconnections', 'raise', 'retry_args', 'exc', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', 'makerequest', 'check_response_func', 'check_response_func', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', '_makerequestnoretry', 'redirections', 'redirections', 'connection_type', 'connection_type', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'oauth', 'client', 'transport', 'py', 'line', 'in', 'new_request', 'redirections', 'connection_type', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'oauth', 'client', 'transport', 'py', 'line', 'in', 'new_request', 'redirections', 'connection_type', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'httplib', '__init__', 'py', 'line', 'in', 'request', 'cachekey', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'httplib', '__init__', 'py', 'line', 'in', '_request', 'content', 'httplib', 'redirectmissinglocation', 'redirected', 'but', 'the', 'response', 'is', 'missing', 'a', 'location', 'header', 'this', 'is', 'the', 'command', 'i', 'm', 'running', 'python', 'database', 'py', 'runner', 'dataflowrunner', 'project', 'xxx', 'staging_location', 'gs', 'staging', 'temp_location', 'gs', 'temp', 'template_location', 'gs', 'template', 'requirements_file', 'requirements', 'txt', 'if', 'i', 'remove', 'the', 'requirements_file', 'requirements', 'txt', 'it', 'finishes', 'but', 'when', 'i', 'try', 'to', 'run', 'the', 'job', 'it', 'fails', 'because', 'it', 'can', 't', 'find', 'the', 'packages', 'i', 'm', 'using', 'cloud', 'storage', 'to', 'list', 'all', 'the', 'files', 'from', 'a', 'bucket', 'so', 'if', 'you', 'have', 'another', 'solution', 'which', 'doesn', 't', 'involve', 'cloud', 'storage', 'it', 'would', 'be', 'much', 'appreciated', 'this', 'is', 'my', 'dataflow', 'requirements', 'cache', 'folder', 'before', 'cleaning', 'it', 'up', 'i', 'had', 'multiple', 'files', 'with', 'different', 'versions', 'e', 'g', 'botocore', 'tar', 'gz', 'botocore', 'tar', 'gz', 'botocore', 'tar', 'gz', 'after', 'i', 'cleaned', 'it', 'up', 'it', 'looks', 'like', 'this', 'it', 'still', 'failed', 'while', 'trying', 'to', 'upload', 'numpy', 'numpy', 'zip', 'urllib', 'tar', 'gz', 'smart_open', 'tar', 'gz', 'six', 'tar', 'gz', 'setuptools', 'zip', 's', 'transfer', 'tar', 'gz', 'rsa', 'tar', 'gz', 'requests', 'tar', 'gz', 'pytz', 'tar', 'gz', 'python', 'dateutil', 'tar', 'gz', 'pyasn', 'modules', 'tar', 'gz', 'pyasn', 'tar', 'gz', 'protobuf', 'tar', 'gz', 'pandas', 'tar', 'gz', 'jmespath', 'tar', 'gz', 'idna', 'tar', 'gz', 'googleapis', 'common', 'protos', 'tar', 'gz', 'google', 'resumable', 'media', 'tar', 'gz', 'google', 'cloud', 'storage', 'tar', 'gz', 'google', 'cloud', 'core', 'tar', 'gz', 'google', 'auth', 'tar', 'gz', 'google', 'api', 'core', 'tar', 'gz', 'docutils', 'tar', 'gz', 'chardet', 'tar', 'gz', 'certifi', 'tar', 'gz', 'cachetools', 'tar', 'gz', 'botocore', 'tar', 'gz', 'boto', 'tar', 'gz', 'boto', 'tar', 'gz', 'edit', 'the', 'full', 'output', 'airflow', 'afragotsis', 'mac', 'pandora_database', 'afragotsis', 'python', 'pandoradatabase', 'py', 'runner', 'dataflowrunner', 'project', 'xxx', 'staging_location', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'temp_location', 'gs', 'dataflow', 'template', 'pandoradatabase', 'temp', 'template_location', 'gs', 'dataflow', 'template', 'pandoradatabase', 'pandoratemplate', 'requirements_file', 'requirements', 'txt', 'save_main_session', 'true', 'warning', 'apache_beam', 'options', 'pipeline_options', 'region', 'not', 'set', 'will', 'default', 'to', 'us', 'central', 'future', 'releases', 'of', 'beam', 'will', 'require', 'the', 'user', 'to', 'set', 'region', 'explicitly', 'or', 'else', 'have', 'a', 'default', 'set', 'via', 'the', 'gcloud', 'tool', 'https', 'cloud', 'google', 'com', 'compute', 'docs', 'regions', 'zones', 'info', 'apache_beam', 'internal', 'gcp', 'auth', 'setting', 'socket', 'default', 'timeout', 'to', 'seconds', 'info', 'apache_beam', 'internal', 'gcp', 'auth', 'socket', 'default', 'timeout', 'is', 'seconds', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pipeline', 'pb', 'info', 'oauth', 'client', 'transport', 'attempting', 'refresh', 'to', 'obtain', 'initial', 'access_token', 'info', 'oauth', 'client', 'client', 'refreshing', 'access_token', 'info', 'oauth', 'client', 'transport', 'attempting', 'refresh', 'to', 'obtain', 'initial', 'access_token', 'info', 'oauth', 'client', 'client', 'refreshing', 'access_token', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'completed', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pipeline', 'pb', 'in', 'seconds', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'requirements', 'txt', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'completed', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'requirements', 'txt', 'in', 'seconds', 'info', 'apache_beam', 'runners', 'portability', 'stager', 'executing', 'command', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'bin', 'python', 'm', 'pip', 'download', 'dest', 'var', 'folders', 'zj', 'dqg', 'ks', 'cx', 'lg', 'brll', 'b', 'gn', 't', 'dataflow', 'requirements', 'cache', 'r', 'requirements', 'txt', 'exists', 'action', 'i', 'no', 'binary', 'all', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'rsa', 'tar', 'gz', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'completed', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'rsa', 'tar', 'gz', 'in', 'seconds', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'urllib', 'tar', 'gz', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'completed', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'urllib', 'tar', 'gz', 'in', 'seconds', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'boto', 'tar', 'gz', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'completed', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'boto', 'tar', 'gz', 'in', 'seconds', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pyasn', 'modules', 'tar', 'gz', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'completed', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pyasn', 'modules', 'tar', 'gz', 'in', 'seconds', 'info', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'starting', 'gcs', 'upload', 'to', 'gs', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'numpy', 'zip', 'traceback', 'most', 'recent', 'call', 'last', 'file', 'pandoradatabase', 'py', 'line', 'in', 'module', 'run', 'file', 'pandoradatabase', 'py', 'line', 'in', 'run', 'write', 'csv', 'beam', 'pardo', 'writecsvfile', 'pandora_options', 'output_bucket', 'pandora_options', 'output_folder', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'pipeline', 'py', 'line', 'in', '__exit__', 'self', 'run', 'wait_until_finish', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'pipeline', 'py', 'line', 'in', 'run', 'self', '_options', 'run', 'false', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'pipeline', 'py', 'line', 'in', 'run', 'return', 'self', 'runner', 'run_pipeline', 'self', 'self', '_options', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'dataflow_runner', 'py', 'line', 'in', 'run_pipeline', 'self', 'dataflow_client', 'create_job', 'self', 'job', 'self', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'utils', 'retry', 'py', 'line', 'in', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'create_job', 'self', 'create_job_description', 'job', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'create_job_description', 'resources', 'self', '_stage_resources', 'job', 'options', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', '_stage_resources', 'staging_location', 'google_cloud_options', 'staging_location', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'portability', 'stager', 'py', 'line', 'in', 'stage_job_resources', 'pkg', 'filesystems', 'join', 'staging_location', 'os', 'path', 'basename', 'pkg', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'stage_artifact', 'local_path_to_artifact', 'artifact_name', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'utils', 'retry', 'py', 'line', 'in', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', '_gcs_file_copy', 'self', 'stage_file', 'to_folder', 'to_name', 'f', 'total_size', 'total_size', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'runners', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'in', 'stage_file', 'response', 'self', '_storage_client', 'objects', 'insert', 'request', 'upload', 'upload', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apache_beam', 'io', 'gcp', 'internal', 'clients', 'storage', 'storage_v', '_client', 'py', 'line', 'in', 'insert', 'upload', 'upload', 'upload_config', 'upload_config', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'base_api', 'py', 'line', 'in', '_runmethod', 'http_request', 'client', 'self', 'client', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', 'initializeupload', 'return', 'self', 'streaminchunks', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', 'streaminchunks', 'additional_headers', 'additional_headers', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', '__streammedia', 'response', 'send_func', 'self', 'stream', 'tell', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', 'callsendchunk', 'start', 'additional_headers', 'additional_headers', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', '__sendchunk', 'return', 'self', '__sendmediarequest', 'request', 'end', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'in', '__sendmediarequest', 'retries', 'self', 'num_retries', 'check_response_func', 'checkresponse', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', 'makerequest', 'max_retry_wait', 'total_wait_sec', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', 'handleexceptionsandrebuildhttpconnections', 'raise', 'retry_args', 'exc', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', 'makerequest', 'check_response_func', 'check_response_func', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'in', '_makerequestnoretry', 'redirections', 'redirections', 'connection_type', 'connection_type', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'oauth', 'client', 'transport', 'py', 'line', 'in', 'new_request', 'redirections', 'connection_type', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'oauth', 'client', 'transport', 'py', 'line', 'in', 'new_request', 'redirections', 'connection_type', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'httplib', '__init__', 'py', 'line', 'in', 'request', 'cachekey', 'file', 'users', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'packages', 'httplib', '__init__', 'py', 'line', 'in', '_request', 'content', 'httplib', 'redirectmissinglocation', 'redirected', 'but', 'the', 'response', 'is', 'missing', 'a', 'location', 'header', 'the', 'full', 'path', 'of', 'the', 'dataflow', 'requirements', 'cache', 'private', 'var', 'folders', 'zj', 'dqg', 'ks', 'cx', 'lg', 'brll', 'b', 'gn', 't', 'dataflow', 'requirements', 'cache', 'it', 'always', 'fails', 'when', 'it', 'tries', 'to', 'upload', 'numpy']","['a', 'quick', 'search', 'turns', 'up', 'this', 'related', 'question', 'gcloud', 'upload', 'httplib', 'redirectmissinglocation', 'redirected', 'but', 'the', 'response', 'is', 'missing', 'a', 'location', 'header', 'you', 'may', 'be', 'affected', 'by', 'https', 'github', 'com', 'googleapis', 'google', 'api', 'python', 'client', 'issues', 'a', 'workaround', 'appears', 'to', 'be', 'to', 'adjust', 'the', 'httplib', 'version']","['try', 'run', 'dataflow', 'dataflowrunner', 'include', 'requirement', 'txt', 'look', 'like', 'google', 'cloud', 'storage', 'panda', 'smart', 'open', 'every', 'time', 'fails', 'line', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'beamapp', 'numpy', 'zip', 'traceback', 'recent', 'call', 'last', 'file', 'database', 'py', 'line', 'module', 'run', 'file', 'database', 'py', 'line', 'run', 'write', 'csv', 'beam', 'pardo', 'writecsvfile', 'option', 'output_bucket', 'pandora_options', 'output_folder', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'pipeline', 'py', 'line', '__exit__', 'self', 'run', 'wait_until_finish', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'pipeline', 'py', 'line', 'run', 'self', '_options', 'run', 'false', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'pipeline', 'py', 'line', 'run', 'return', 'self', 'runner', 'run_pipeline', 'self', 'self', '_options', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'dataflow_runner', 'py', 'line', 'run_pipeline', 'self', 'dataflow_client', 'create_job', 'self', 'job', 'self', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'utils', 'retry', 'py', 'line', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'create_job', 'self', 'create_job_description', 'job', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'create_job_description', 'resource', 'self', '_stage_resources', 'job', 'option', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', '_stage_resources', 'staging_location', 'google_cloud_options', 'staging_location', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'portability', 'stager', 'py', 'line', 'stage_job_resources', 'pkg', 'filesystems', 'join', 'staging_location', 'path', 'basename', 'pkg', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'stage_artifact', 'local_path_to_artifact', 'artifact_name', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'utils', 'retry', 'py', 'line', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', '_gcs_file_copy', 'self', 'stage_file', 'to_folder', 'to_name', 'f', 'total_size', 'total_size', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'stage_file', 'response', 'self', '_storage_client', 'object', 'insert', 'request', 'upload', 'upload', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'io', 'gcp', 'internal', 'client', 'storage', 'storage_v', '_client', 'py', 'line', 'insert', 'upload', 'upload', 'upload_config', 'upload_config', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'base_api', 'py', 'line', '_runmethod', 'http_request', 'client', 'self', 'client', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'initializeupload', 'return', 'self', 'streaminchunks', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'streaminchunks', 'additional_headers', 'additional_headers', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', '__streammedia', 'response', 'send_func', 'self', 'stream', 'tell', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'callsendchunk', 'start', 'additional_headers', 'additional_headers', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', '__sendchunk', 'return', 'self', '__sendmediarequest', 'request', 'end', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', '__sendmediarequest', 'retries', 'self', 'num_retries', 'check_response_func', 'checkresponse', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'makerequest', 'max_retry_wait', 'total_wait_sec', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'handleexceptionsandrebuildhttpconnections', 'raise', 'retry_args', 'exc', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'makerequest', 'check_response_func', 'check_response_func', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', '_makerequestnoretry', 'redirections', 'redirections', 'connection_type', 'connection_type', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'oauth', 'client', 'transport', 'py', 'line', 'new_request', 'redirections', 'connection_type', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'oauth', 'client', 'transport', 'py', 'line', 'new_request', 'redirections', 'connection_type', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'httplib', '__init__', 'py', 'line', 'request', 'cachekey', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'httplib', '__init__', 'py', 'line', '_request', 'content', 'httplib', 'redirectmissinglocation', 'redirected', 'response', 'missing', 'location', 'header', 'command', 'running', 'python', 'database', 'py', 'runner', 'dataflowrunner', 'project', 'xxx', 'staging_location', 'g', 'staging', 'temp_location', 'g', 'temp', 'template_location', 'g', 'template', 'requirements_file', 'requirement', 'txt', 'remove', 'requirements_file', 'requirement', 'txt', 'finish', 'try', 'run', 'job', 'fails', 'find', 'package', 'using', 'cloud', 'storage', 'list', 'file', 'bucket', 'another', 'solution', 'involve', 'cloud', 'storage', 'would', 'much', 'appreciated', 'dataflow', 'requirement', 'cache', 'folder', 'cleaning', 'multiple', 'file', 'different', 'version', 'e', 'g', 'botocore', 'tar', 'gz', 'botocore', 'tar', 'gz', 'botocore', 'tar', 'gz', 'cleaned', 'look', 'like', 'still', 'failed', 'trying', 'upload', 'numpy', 'numpy', 'zip', 'urllib', 'tar', 'gz', 'smart_open', 'tar', 'gz', 'six', 'tar', 'gz', 'setuptools', 'zip', 'transfer', 'tar', 'gz', 'rsa', 'tar', 'gz', 'request', 'tar', 'gz', 'pytz', 'tar', 'gz', 'python', 'dateutil', 'tar', 'gz', 'pyasn', 'module', 'tar', 'gz', 'pyasn', 'tar', 'gz', 'protobuf', 'tar', 'gz', 'panda', 'tar', 'gz', 'jmespath', 'tar', 'gz', 'idna', 'tar', 'gz', 'googleapis', 'common', 'protos', 'tar', 'gz', 'google', 'resumable', 'medium', 'tar', 'gz', 'google', 'cloud', 'storage', 'tar', 'gz', 'google', 'cloud', 'core', 'tar', 'gz', 'google', 'auth', 'tar', 'gz', 'google', 'api', 'core', 'tar', 'gz', 'docutils', 'tar', 'gz', 'chardet', 'tar', 'gz', 'certifi', 'tar', 'gz', 'cachetools', 'tar', 'gz', 'botocore', 'tar', 'gz', 'boto', 'tar', 'gz', 'boto', 'tar', 'gz', 'edit', 'full', 'output', 'airflow', 'afragotsis', 'mac', 'pandora_database', 'afragotsis', 'python', 'pandoradatabase', 'py', 'runner', 'dataflowrunner', 'project', 'xxx', 'staging_location', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'temp_location', 'g', 'dataflow', 'template', 'pandoradatabase', 'temp', 'template_location', 'g', 'dataflow', 'template', 'pandoradatabase', 'pandoratemplate', 'requirements_file', 'requirement', 'txt', 'save_main_session', 'true', 'warning', 'apache_beam', 'option', 'pipeline_options', 'region', 'set', 'default', 'u', 'central', 'future', 'release', 'beam', 'require', 'user', 'set', 'region', 'explicitly', 'else', 'default', 'set', 'via', 'gcloud', 'tool', 'http', 'cloud', 'google', 'com', 'compute', 'doc', 'region', 'zone', 'info', 'apache_beam', 'internal', 'gcp', 'auth', 'setting', 'socket', 'default', 'timeout', 'second', 'info', 'apache_beam', 'internal', 'gcp', 'auth', 'socket', 'default', 'timeout', 'second', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pipeline', 'pb', 'info', 'oauth', 'client', 'transport', 'attempting', 'refresh', 'obtain', 'initial', 'access_token', 'info', 'oauth', 'client', 'client', 'refreshing', 'access_token', 'info', 'oauth', 'client', 'transport', 'attempting', 'refresh', 'obtain', 'initial', 'access_token', 'info', 'oauth', 'client', 'client', 'refreshing', 'access_token', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'completed', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pipeline', 'pb', 'second', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'requirement', 'txt', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'completed', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'requirement', 'txt', 'second', 'info', 'apache_beam', 'runner', 'portability', 'stager', 'executing', 'command', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'bin', 'python', 'pip', 'download', 'dest', 'var', 'folder', 'zj', 'dqg', 'k', 'cx', 'lg', 'brll', 'b', 'gn', 'dataflow', 'requirement', 'cache', 'r', 'requirement', 'txt', 'exists', 'action', 'binary', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'rsa', 'tar', 'gz', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'completed', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'rsa', 'tar', 'gz', 'second', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'urllib', 'tar', 'gz', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'completed', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'urllib', 'tar', 'gz', 'second', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'boto', 'tar', 'gz', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'completed', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'boto', 'tar', 'gz', 'second', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pyasn', 'module', 'tar', 'gz', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'completed', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'pyasn', 'module', 'tar', 'gz', 'second', 'info', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'starting', 'gc', 'upload', 'g', 'dataflow', 'template', 'pandoradatabase', 'staging', 'beamapp', 'afragotsis', 'numpy', 'zip', 'traceback', 'recent', 'call', 'last', 'file', 'pandoradatabase', 'py', 'line', 'module', 'run', 'file', 'pandoradatabase', 'py', 'line', 'run', 'write', 'csv', 'beam', 'pardo', 'writecsvfile', 'pandora_options', 'output_bucket', 'pandora_options', 'output_folder', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'pipeline', 'py', 'line', '__exit__', 'self', 'run', 'wait_until_finish', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'pipeline', 'py', 'line', 'run', 'self', '_options', 'run', 'false', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'pipeline', 'py', 'line', 'run', 'return', 'self', 'runner', 'run_pipeline', 'self', 'self', '_options', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'dataflow_runner', 'py', 'line', 'run_pipeline', 'self', 'dataflow_client', 'create_job', 'self', 'job', 'self', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'utils', 'retry', 'py', 'line', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'create_job', 'self', 'create_job_description', 'job', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'create_job_description', 'resource', 'self', '_stage_resources', 'job', 'option', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', '_stage_resources', 'staging_location', 'google_cloud_options', 'staging_location', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'portability', 'stager', 'py', 'line', 'stage_job_resources', 'pkg', 'filesystems', 'join', 'staging_location', 'path', 'basename', 'pkg', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'stage_artifact', 'local_path_to_artifact', 'artifact_name', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'utils', 'retry', 'py', 'line', 'wrapper', 'return', 'fun', 'args', 'kwargs', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', '_gcs_file_copy', 'self', 'stage_file', 'to_folder', 'to_name', 'f', 'total_size', 'total_size', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'runner', 'dataflow', 'internal', 'apiclient', 'py', 'line', 'stage_file', 'response', 'self', '_storage_client', 'object', 'insert', 'request', 'upload', 'upload', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apache_beam', 'io', 'gcp', 'internal', 'client', 'storage', 'storage_v', '_client', 'py', 'line', 'insert', 'upload', 'upload', 'upload_config', 'upload_config', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'base_api', 'py', 'line', '_runmethod', 'http_request', 'client', 'self', 'client', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'initializeupload', 'return', 'self', 'streaminchunks', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'streaminchunks', 'additional_headers', 'additional_headers', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', '__streammedia', 'response', 'send_func', 'self', 'stream', 'tell', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', 'callsendchunk', 'start', 'additional_headers', 'additional_headers', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', '__sendchunk', 'return', 'self', '__sendmediarequest', 'request', 'end', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'transfer', 'py', 'line', '__sendmediarequest', 'retries', 'self', 'num_retries', 'check_response_func', 'checkresponse', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'makerequest', 'max_retry_wait', 'total_wait_sec', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'handleexceptionsandrebuildhttpconnections', 'raise', 'retry_args', 'exc', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', 'makerequest', 'check_response_func', 'check_response_func', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'apitools', 'base', 'py', 'http_wrapper', 'py', 'line', '_makerequestnoretry', 'redirections', 'redirections', 'connection_type', 'connection_type', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'oauth', 'client', 'transport', 'py', 'line', 'new_request', 'redirections', 'connection_type', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'oauth', 'client', 'transport', 'py', 'line', 'new_request', 'redirections', 'connection_type', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'httplib', '__init__', 'py', 'line', 'request', 'cachekey', 'file', 'user', 'afragotsis', 'opt', 'anaconda', 'envs', 'airflow', 'lib', 'python', 'site', 'package', 'httplib', '__init__', 'py', 'line', '_request', 'content', 'httplib', 'redirectmissinglocation', 'redirected', 'response', 'missing', 'location', 'header', 'full', 'path', 'dataflow', 'requirement', 'cache', 'private', 'var', 'folder', 'zj', 'dqg', 'k', 'cx', 'lg', 'brll', 'b', 'gn', 'dataflow', 'requirement', 'cache', 'always', 'fails', 'try', 'upload', 'numpy']","['a', 'quick', 'search', 'turn', 'up', 'this', 'related', 'question', 'gcloud', 'upload', 'httplib', 'redirectmissinglocation', 'redirected', 'but', 'the', 'response', 'is', 'missing', 'a', 'location', 'header', 'you', 'may', 'be', 'affected', 'by', 'http', 'github', 'com', 'googleapis', 'google', 'api', 'python', 'client', 'issue', 'a', 'workaround', 'appears', 'to', 'be', 'to', 'adjust', 'the', 'httplib', 'version']",System Requirements and AWS,0,"{'neg': 0.029, 'neu': 0.958, 'pos': 0.013, 'compound': -0.9477}",-0.043478260869565216,0,System Requirements and AWS,3query
61542567,Non-interactive functional requirements software engineering,"<p>I'm having a problem with listing some non-interactive functional requirements for building a project about ""Smart food court system for a university"" with self-service. In that system, customer can order through mobile app or machine, pay by e-wallet, and when ordering by machine, the machine will automatic print a bill after payment. I can't understand clearly what a concept non-interactive functional requirements in software engineering. And with the example that machine print a bill automatically after payment is a non-interactive functional requirements or not? Can anyone give more examples about non-interactive functional requirements to help me understand clearly? Thank you!</p>
",<software-design><use-case><requirements><use-case-diagram>,2020-05-01 12:31:56,193,0,1,63115953,"<p>The concept of <em><strong>non-interactive requirement</strong></em> is not a  common nor well-defined terminology in software engineering.</p>
<p>Interactive requirements are about what the system shall do in response to a user action, or to enable a user action.</p>
<p>Automatically printing a bill is therefore an interactive requirement: even if the printing is by itself not interactive, the sheer fact of enabling the user to pick the bill makes it interactive.</p>
<p>Interactive requirements are captured in the use-cases or in UI requirements. Non-interactive requirements are all the rest, for example:</p>
<ul>
<li>general business rules</li>
<li>requirements about the data objects to be managed, about their consistency, and how they relate to each-other;</li>
<li>non-functional requirements, such as operating constraints, or performance, security or maintainability related requirements.</li>
</ul>
",2020-05,i m having a problem with listing some non interactive functional requirements for building a project about smart food court system for a university with self service in that system customer can order through mobile app or machine pay by e wallet and when ordering by machine the machine will automatic print a bill after payment i can t understand clearly what a concept non interactive functional requirements in software engineering and with the example that machine print a bill automatically after payment is a non interactive functional requirements or not can anyone give more examples about non interactive functional requirements to help me understand clearly thank you,the concept of non interactive requirement is not a common nor well defined terminology in software engineering interactive requirements are about what the system shall do in response to a user action or to enable a user action automatically printing a bill is therefore an interactive requirement even if the printing is by itself not interactive the sheer fact of enabling the user to pick the bill makes it interactive interactive requirements are captured in the use cases or in ui requirements non interactive requirements are all the rest for example general business rules requirements about the data objects to be managed about their consistency and how they relate to each other non functional requirements such as operating constraints or performance security or maintainability related requirements,"['software-design', 'use-case', 'requirements', 'use-case-diagram']","['i', 'm', 'having', 'a', 'problem', 'with', 'listing', 'some', 'non', 'interactive', 'functional', 'requirements', 'for', 'building', 'a', 'project', 'about', 'smart', 'food', 'court', 'system', 'for', 'a', 'university', 'with', 'self', 'service', 'in', 'that', 'system', 'customer', 'can', 'order', 'through', 'mobile', 'app', 'or', 'machine', 'pay', 'by', 'e', 'wallet', 'and', 'when', 'ordering', 'by', 'machine', 'the', 'machine', 'will', 'automatic', 'print', 'a', 'bill', 'after', 'payment', 'i', 'can', 't', 'understand', 'clearly', 'what', 'a', 'concept', 'non', 'interactive', 'functional', 'requirements', 'in', 'software', 'engineering', 'and', 'with', 'the', 'example', 'that', 'machine', 'print', 'a', 'bill', 'automatically', 'after', 'payment', 'is', 'a', 'non', 'interactive', 'functional', 'requirements', 'or', 'not', 'can', 'anyone', 'give', 'more', 'examples', 'about', 'non', 'interactive', 'functional', 'requirements', 'to', 'help', 'me', 'understand', 'clearly', 'thank', 'you']","['the', 'concept', 'of', 'non', 'interactive', 'requirement', 'is', 'not', 'a', 'common', 'nor', 'well', 'defined', 'terminology', 'in', 'software', 'engineering', 'interactive', 'requirements', 'are', 'about', 'what', 'the', 'system', 'shall', 'do', 'in', 'response', 'to', 'a', 'user', 'action', 'or', 'to', 'enable', 'a', 'user', 'action', 'automatically', 'printing', 'a', 'bill', 'is', 'therefore', 'an', 'interactive', 'requirement', 'even', 'if', 'the', 'printing', 'is', 'by', 'itself', 'not', 'interactive', 'the', 'sheer', 'fact', 'of', 'enabling', 'the', 'user', 'to', 'pick', 'the', 'bill', 'makes', 'it', 'interactive', 'interactive', 'requirements', 'are', 'captured', 'in', 'the', 'use', 'cases', 'or', 'in', 'ui', 'requirements', 'non', 'interactive', 'requirements', 'are', 'all', 'the', 'rest', 'for', 'example', 'general', 'business', 'rules', 'requirements', 'about', 'the', 'data', 'objects', 'to', 'be', 'managed', 'about', 'their', 'consistency', 'and', 'how', 'they', 'relate', 'to', 'each', 'other', 'non', 'functional', 'requirements', 'such', 'as', 'operating', 'constraints', 'or', 'performance', 'security', 'or', 'maintainability', 'related', 'requirements']","['problem', 'listing', 'non', 'interactive', 'functional', 'requirement', 'building', 'project', 'smart', 'food', 'court', 'system', 'university', 'self', 'service', 'system', 'customer', 'order', 'mobile', 'app', 'machine', 'pay', 'e', 'wallet', 'ordering', 'machine', 'machine', 'automatic', 'print', 'bill', 'payment', 'understand', 'clearly', 'concept', 'non', 'interactive', 'functional', 'requirement', 'software', 'engineering', 'example', 'machine', 'print', 'bill', 'automatically', 'payment', 'non', 'interactive', 'functional', 'requirement', 'anyone', 'give', 'example', 'non', 'interactive', 'functional', 'requirement', 'help', 'understand', 'clearly', 'thank']","['the', 'concept', 'of', 'non', 'interactive', 'requirement', 'is', 'not', 'a', 'common', 'nor', 'well', 'defined', 'terminology', 'in', 'software', 'engineering', 'interactive', 'requirement', 'are', 'about', 'what', 'the', 'system', 'shall', 'do', 'in', 'response', 'to', 'a', 'user', 'action', 'or', 'to', 'enable', 'a', 'user', 'action', 'automatically', 'printing', 'a', 'bill', 'is', 'therefore', 'an', 'interactive', 'requirement', 'even', 'if', 'the', 'printing', 'is', 'by', 'itself', 'not', 'interactive', 'the', 'sheer', 'fact', 'of', 'enabling', 'the', 'user', 'to', 'pick', 'the', 'bill', 'make', 'it', 'interactive', 'interactive', 'requirement', 'are', 'captured', 'in', 'the', 'use', 'case', 'or', 'in', 'ui', 'requirement', 'non', 'interactive', 'requirement', 'are', 'all', 'the', 'rest', 'for', 'example', 'general', 'business', 'rule', 'requirement', 'about', 'the', 'data', 'object', 'to', 'be', 'managed', 'about', 'their', 'consistency', 'and', 'how', 'they', 'relate', 'to', 'each', 'other', 'non', 'functional', 'requirement', 'such', 'a', 'operating', 'constraint', 'or', 'performance', 'security', 'or', 'maintainability', 'related', 'requirement']",Package Management and File Handling,2,"{'neg': 0.091, 'neu': 0.832, 'pos': 0.077, 'compound': 0.2349}",0.22857142857142856,2,Python Libraries and Environment,3query
61518704,Pip Install python package: cannot find requirements.txt,"<p>I am trying to install the package gamry-parser (<a href=""https://pypi.org/project/gamry-parser/"" rel=""nofollow noreferrer"">https://pypi.org/project/gamry-parser/</a>).</p>

<p>However, the command window is unable to find the requirements.txt in the location it is looking for. I have tried to search the path it is searching in my computer, but it does not seem to exist(<em>c:\users\name\appdata\local\temp\pip-install-rfy1sh\gamry-parser\setup.py</em>). In addition, the requirements.txt does in fact exist, but not in this nonexistant path. I get the following error:</p>

<pre><code>IOError: [Errno 2] No such file or directory: 'requirements.txt'
ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.
</code></pre>

<p>Thanks.</p>
",<python><path><pip><command><requirements>,2020-04-30 08:06:18,19541,0,1,61530333,"<p><code>gamry-parser</code> 0.4.1 <a href=""https://pypi.org/project/gamry-parser/0.4.1/#files"" rel=""nofollow noreferrer"">provides</a> a wheel for Python 3 and a source dist that will be used for Python 2.7. I tested them — the wheel installed with Python 3.7, no problem.</p>

<p>The problem is with Python 2.7 and the source distribution — the sdist lacks <code>requirements.txt</code>. To fix it they need to add file <a href=""https://docs.python.org/3/distutils/sourcedist.html#specifying-the-files-to-distribute"" rel=""nofollow noreferrer""><code>MANIFEST.in</code></a>:</p>

<pre><code>echo include requirements.txt &gt; MANIFEST.in
git add MANIFEST.in
git commit -m ""Add MANIFEST.in for sdist""
</code></pre>

<p>Please <a href=""https://github.com/bcliang/gamry-parser/issues"" rel=""nofollow noreferrer"">report the issue</a> or send a pull request.</p>
",2020-04,i am trying to install the package gamry parser https pypi org project gamry parser however the command window is unable to find the requirements txt in the location it is looking for i have tried to search the path it is searching in my computer but it does not seem to exist c users name appdata local temp pip install rfy sh gamry parser setup py in addition the requirements txt does in fact exist but not in this nonexistant path i get the following error ioerror errno   no such file or directory requirements txt error command errored out with exit status   python setup py egg_info check the logs for full command output thanks,gamry parser       provides a wheel for python   and a source dist that will be used for python     i tested them the wheel installed with python     no problem the problem is with python     and the source distribution the sdist lacks requirements txt to fix it they need to add file manifest in echo include requirements txt manifest in git add manifest in git commit m add manifest in for sdist please report the issue or send a pull request,"['python', 'path', 'pip', 'command', 'requirements']","['i', 'am', 'trying', 'to', 'install', 'the', 'package', 'gamry', 'parser', 'https', 'pypi', 'org', 'project', 'gamry', 'parser', 'however', 'the', 'command', 'window', 'is', 'unable', 'to', 'find', 'the', 'requirements', 'txt', 'in', 'the', 'location', 'it', 'is', 'looking', 'for', 'i', 'have', 'tried', 'to', 'search', 'the', 'path', 'it', 'is', 'searching', 'in', 'my', 'computer', 'but', 'it', 'does', 'not', 'seem', 'to', 'exist', 'c', 'users', 'name', 'appdata', 'local', 'temp', 'pip', 'install', 'rfy', 'sh', 'gamry', 'parser', 'setup', 'py', 'in', 'addition', 'the', 'requirements', 'txt', 'does', 'in', 'fact', 'exist', 'but', 'not', 'in', 'this', 'nonexistant', 'path', 'i', 'get', 'the', 'following', 'error', 'ioerror', 'errno', 'no', 'such', 'file', 'or', 'directory', 'requirements', 'txt', 'error', 'command', 'errored', 'out', 'with', 'exit', 'status', 'python', 'setup', 'py', 'egg_info', 'check', 'the', 'logs', 'for', 'full', 'command', 'output', 'thanks']","['gamry', 'parser', 'provides', 'a', 'wheel', 'for', 'python', 'and', 'a', 'source', 'dist', 'that', 'will', 'be', 'used', 'for', 'python', 'i', 'tested', 'them', 'the', 'wheel', 'installed', 'with', 'python', 'no', 'problem', 'the', 'problem', 'is', 'with', 'python', 'and', 'the', 'source', 'distribution', 'the', 'sdist', 'lacks', 'requirements', 'txt', 'to', 'fix', 'it', 'they', 'need', 'to', 'add', 'file', 'manifest', 'in', 'echo', 'include', 'requirements', 'txt', 'manifest', 'in', 'git', 'add', 'manifest', 'in', 'git', 'commit', 'm', 'add', 'manifest', 'in', 'for', 'sdist', 'please', 'report', 'the', 'issue', 'or', 'send', 'a', 'pull', 'request']","['trying', 'install', 'package', 'gamry', 'parser', 'http', 'pypi', 'org', 'project', 'gamry', 'parser', 'however', 'command', 'window', 'unable', 'find', 'requirement', 'txt', 'location', 'looking', 'tried', 'search', 'path', 'searching', 'computer', 'doe', 'seem', 'exist', 'c', 'user', 'name', 'appdata', 'local', 'temp', 'pip', 'install', 'rfy', 'sh', 'gamry', 'parser', 'setup', 'py', 'addition', 'requirement', 'txt', 'doe', 'fact', 'exist', 'nonexistant', 'path', 'get', 'following', 'error', 'ioerror', 'errno', 'file', 'directory', 'requirement', 'txt', 'error', 'command', 'errored', 'exit', 'status', 'python', 'setup', 'py', 'egg_info', 'check', 'log', 'full', 'command', 'output', 'thanks']","['gamry', 'parser', 'provides', 'a', 'wheel', 'for', 'python', 'and', 'a', 'source', 'dist', 'that', 'will', 'be', 'used', 'for', 'python', 'i', 'tested', 'them', 'the', 'wheel', 'installed', 'with', 'python', 'no', 'problem', 'the', 'problem', 'is', 'with', 'python', 'and', 'the', 'source', 'distribution', 'the', 'sdist', 'lack', 'requirement', 'txt', 'to', 'fix', 'it', 'they', 'need', 'to', 'add', 'file', 'manifest', 'in', 'echo', 'include', 'requirement', 'txt', 'manifest', 'in', 'git', 'add', 'manifest', 'in', 'git', 'commit', 'm', 'add', 'manifest', 'in', 'for', 'sdist', 'please', 'report', 'the', 'issue', 'or', 'send', 'a', 'pull', 'request']",Package Management and File Handling,3,"{'neg': 0.074, 'neu': 0.926, 'pos': 0.0, 'compound': -0.8151}",-0.18,3,Python Package Installation and Management,3query
61480082,"python kivy requests import error,ı have buılozer.spec","<p>I have added the request in the buildozer.spec requirements list but it cannot import at Kivy Launcher ı don't have any issue in terminal
ı am using python 3.7.2 on linux</p>

<pre><code>from kivy.app import App

from kivy.uix.label import Label

import os
import sys

import requests


class FirstKivy(App):

    def build(self):
        return Label(text=""hello"")

FirstKivy().run()

my logs:
[INFO              ] Logger: Record log in/storage/emulated/0/kivy/Project/.kivy/logs/kivy_20-04-28_21.txt
[WARNING           ] [Config      ] Upgrading configuration in progress.
[WARNING           ] [Config      ] Older configuration version detected (21 instead of 14)
[INFO              ] Kivy: v1.9.1
[INFO              ] Python: v2.7.2 (default, Mar 20 2016, 23:30:13) 
[GCC 4.8]
[INFO              ] Factory: 179 symbols loaded
[WARNING           ] stderr: /data/user/0/org.kivy.pygame/files/lib/python2.7/site-packages/kivy/core/image/img_pygame.py:13: RuntimeWarning: import cdrom: No module named cdrom
[WARNING           ] stderr: (ImportError: No module named cdrom)
[INFO              ] Image: Providers: img_tex, img_dds, img_gif, img_pygame, img_pil (img_ffpyplayer ignored)
[INFO              ] Text: Provider: pygame
[WARNING           ] stderr: Traceback (most recent call last):
[WARNING           ] stderr:   File ""main.py"", line 8, in &lt;module&gt;
[WARNING           ] stderr:     import requests
[WARNING           ] stderr: ImportError: No module named requests
</code></pre>
",<python><python-requests><kivy><buildozer><requirements>,2020-04-28 12:22:28,581,0,1,61486188,"<p>Kivy launcher doesn't include requests. Build your own apk using buildozer/python-for-android.</p>
",2020-04,i have added the request in the buildozer spec requirements list but it cannot import at kivy launcher ı don t have any issue in terminal ı am using python       on linux from kivy app import app from kivy uix label import label import os import sys import requests class firstkivy app def build self return label text hello firstkivy run my logs info logger record log in storage emulated   kivy project kivy logs kivy_     _  txt warning config upgrading configuration in progress warning config older configuration version detected   instead of   info kivy v      info python v      default mar           gcc     info factory   symbols loaded warning stderr data user   org kivy pygame files lib python    site packages kivy core image img_pygame py   runtimewarning import cdrom no module named cdrom warning stderr importerror no module named cdrom info image providers img_tex img_dds img_gif img_pygame img_pil img_ffpyplayer ignored info text provider pygame warning stderr traceback most recent call last warning stderr file main py line   in module warning stderr import requests warning stderr importerror no module named requests,kivy launcher doesn t include requests build your own apk using buildozer python for android,"['python', 'python-requests', 'kivy', 'buildozer', 'requirements']","['i', 'have', 'added', 'the', 'request', 'in', 'the', 'buildozer', 'spec', 'requirements', 'list', 'but', 'it', 'can', 'not', 'import', 'at', 'kivy', 'launcher', 'ı', 'don', 't', 'have', 'any', 'issue', 'in', 'terminal', 'ı', 'am', 'using', 'python', 'on', 'linux', 'from', 'kivy', 'app', 'import', 'app', 'from', 'kivy', 'uix', 'label', 'import', 'label', 'import', 'os', 'import', 'sys', 'import', 'requests', 'class', 'firstkivy', 'app', 'def', 'build', 'self', 'return', 'label', 'text', 'hello', 'firstkivy', 'run', 'my', 'logs', 'info', 'logger', 'record', 'log', 'in', 'storage', 'emulated', 'kivy', 'project', 'kivy', 'logs', 'kivy_', '_', 'txt', 'warning', 'config', 'upgrading', 'configuration', 'in', 'progress', 'warning', 'config', 'older', 'configuration', 'version', 'detected', 'instead', 'of', 'info', 'kivy', 'v', 'info', 'python', 'v', 'default', 'mar', 'gcc', 'info', 'factory', 'symbols', 'loaded', 'warning', 'stderr', 'data', 'user', 'org', 'kivy', 'pygame', 'files', 'lib', 'python', 'site', 'packages', 'kivy', 'core', 'image', 'img_pygame', 'py', 'runtimewarning', 'import', 'cdrom', 'no', 'module', 'named', 'cdrom', 'warning', 'stderr', 'importerror', 'no', 'module', 'named', 'cdrom', 'info', 'image', 'providers', 'img_tex', 'img_dds', 'img_gif', 'img_pygame', 'img_pil', 'img_ffpyplayer', 'ignored', 'info', 'text', 'provider', 'pygame', 'warning', 'stderr', 'traceback', 'most', 'recent', 'call', 'last', 'warning', 'stderr', 'file', 'main', 'py', 'line', 'in', 'module', 'warning', 'stderr', 'import', 'requests', 'warning', 'stderr', 'importerror', 'no', 'module', 'named', 'requests']","['kivy', 'launcher', 'doesn', 't', 'include', 'requests', 'build', 'your', 'own', 'apk', 'using', 'buildozer', 'python', 'for', 'android']","['added', 'request', 'buildozer', 'spec', 'requirement', 'list', 'import', 'kivy', 'launcher', 'ı', 'issue', 'terminal', 'ı', 'using', 'python', 'linux', 'kivy', 'app', 'import', 'app', 'kivy', 'uix', 'label', 'import', 'label', 'import', 'import', 'sys', 'import', 'request', 'class', 'firstkivy', 'app', 'def', 'build', 'self', 'return', 'label', 'text', 'hello', 'firstkivy', 'run', 'log', 'info', 'logger', 'record', 'log', 'storage', 'emulated', 'kivy', 'project', 'kivy', 'log', 'kivy_', '_', 'txt', 'warning', 'config', 'upgrading', 'configuration', 'progress', 'warning', 'config', 'older', 'configuration', 'version', 'detected', 'instead', 'info', 'kivy', 'v', 'info', 'python', 'v', 'default', 'mar', 'gcc', 'info', 'factory', 'symbol', 'loaded', 'warning', 'stderr', 'data', 'user', 'org', 'kivy', 'pygame', 'file', 'lib', 'python', 'site', 'package', 'kivy', 'core', 'image', 'img_pygame', 'py', 'runtimewarning', 'import', 'cdrom', 'module', 'named', 'cdrom', 'warning', 'stderr', 'importerror', 'module', 'named', 'cdrom', 'info', 'image', 'provider', 'img_tex', 'img_dds', 'img_gif', 'img_pygame', 'img_pil', 'img_ffpyplayer', 'ignored', 'info', 'text', 'provider', 'pygame', 'warning', 'stderr', 'traceback', 'recent', 'call', 'last', 'warning', 'stderr', 'file', 'main', 'py', 'line', 'module', 'warning', 'stderr', 'import', 'request', 'warning', 'stderr', 'importerror', 'module', 'named', 'request']","['kivy', 'launcher', 'doesn', 't', 'include', 'request', 'build', 'your', 'own', 'apk', 'using', 'buildozer', 'python', 'for', 'android']",System Requirements and AWS,1,"{'neg': 0.053, 'neu': 0.923, 'pos': 0.024, 'compound': -0.5719}",-0.22619047619047622,1,Package Management and File Handling,3query
61405379,Requirements diagram possibilities with use cases and test cases,"<p>I am wondering what is allowed (or at least what is the best practice) in a SysML Requirements diagram regarding the use of satisfy/verify links between use-cases, test-cases and requirements.</p>

<p>As I understand it, generally, a use-case &lt;&lt; satisfy >> a requirement, and a test-case &lt;&lt; verify >> it.</p>

<p>Is-it possible though for a use-case to &lt;&lt; verify >> a requirement?</p>

<p>I found different sources with contradictory statements on the matter.</p>

<p>For the classical Alarm-Clock example, with :</p>

<p>Req1 : To be waken at chosen time. </p>

<p>UseCase1 : Set an alarm time &amp; a radio frequency.</p>

<p>Test1 : Given there is a station at 101.5FM and the time is correctly set, when i set an alarm future time and set the freq to 101.5FM, then I will listen to the station at the given time.</p>

<p>What is then the correct and/or best diagram ?</p>

<p>(UseCase1) -- satisfy --> [Req1] ,  [TestCase1] -- verify --> [Req1]</p>

<p>or</p>

<p>(UseCase1) -- satisfy --> [Req1] ,  [TestCase1] -- verify --> (UseCase1)</p>

<p>or</p>

<p>(UseCase1) -- verify --> [Req1] ,  [TestCase1] -- verify --> [Req1]</p>

<p>Thanks for any clarifications!</p>
",<requirements><sysml>,2020-04-24 09:39:19,159,0,1,62182144,"<p>There is no formal constraint in the specification, that would disallow this. However, the semantics of the elements makes this meaningless.</p>

<p><strong>How would a use case verify a requirement?</strong> </p>

<blockquote>
  <p><strong>SysML:</strong> A Verify relationship is a dependency between a requirement and a test
  case or other model element that can determine whether a system
  fulfills the requirement.</p>
</blockquote>

<p>A use case describes all the ways a system can be used to achieve a certain goal. It describes user actions as well as functions the system must have to be helpful for achieving this goal. It doesn't describe how to test the system functions. You can however derive test cases from a use case description.</p>

<p><strong>How would a use case satisfy a requirement?</strong> </p>

<blockquote>
  <p><strong>SysML:</strong> A Satisfy relationship is a dependency between a requirement and a
  model element that fulfills the requirement.</p>
</blockquote>

<p>A use case is an analysis tool to find the functions, that the system shall support - in other words, the functional requirements. How can an analysis tool that finds requirements satisfy a requirement?</p>

<p><strong>About your example</strong> </p>

<p>What is the goal of the use case ""set an alarm time and radio frequency""? The alarm time and the radio frequency are set? Well, forgive me, but this is not really helpful. </p>

<p>The use case refines the stakeholder requirement ""Be waken at chosen time"" and has the same name. And this use case has a lot of alternative flows, that most clock makers in their blissfull ignorance forget: I awake early and want to prematurly cancel the alarm (without clearing it for the next day). I pressed the snooze button, but now, that I'm awake, decide to get up anyway (and while I'm under the shower, the alarm goes off). I stayed up late, and now need to strike a balance between a minimum sleep requirement and a full to do list (and would like to know, without calculating late at night, how much time would be left). All these alternative flows lead to additional functional requirements.</p>

<p>So the complete list of functional requirements found in this use case would be: </p>

<ul>
<li>set Alarm time</li>
<li>select Radio or Alarm</li>
<li>set Radio Frequency</li>
<li>control clock for alarming (main function)

<ul>
<li>play Radio at predefined time</li>
<li>sound alarm at predefined time</li>
<li>snooze alarm</li>
<li>cancel Alarm for today </li>
<li>clear Alarm time</li>
<li>show time until alarm </li>
</ul></li>
</ul>

<p>It is amazing how many alarm clocks fail to have all these functions, given that a use case analysis would find them quickly.</p>

<p>So the diagram could be:</p>

<p>«stakeholder requirement» <code>be waken at chosen time</code><br>
&lt;-«refine»- «use case» <code>be waken at chosen time</code><br>
&lt;-«trace»- «functional requirement» <code>cancel Alarm for today</code><br>
&lt;-«satisfy»- «operation» <code>cancel Alarm</code> </p>

<p>«functional requirement» <code>cancel Alarm for today</code><br>
&lt;-«verify»- «testcase» <code>cancel Alarm after snooze</code> </p>

<p>You could argue, that the stakeholder requirement, and, thus indirectly the use case could get verified by a test case. However, I think that a stakeholder requirement would get validated, not verified.</p>
",2020-04,i am wondering what is allowed or at least what is the best practice in a sysml requirements diagram regarding the use of satisfy verify links between use cases test cases and requirements as i understand it generally a use case satisfy a requirement and a test case verify it is it possible though for a use case to verify a requirement i found different sources with contradictory statements on the matter for the classical alarm clock example with req  to be waken at chosen time usecase  set an alarm time a radio frequency test  given there is a station at    fm and the time is correctly set when i set an alarm future time and set the freq to    fm then i will listen to the station at the given time what is then the correct and or best diagram usecase  satisfy req  testcase  verify req  or usecase  satisfy req  testcase  verify usecase  or usecase  verify req  testcase  verify req  thanks for any clarifications,there is no formal constraint in the specification that would disallow this however the semantics of the elements makes this meaningless how would a use case verify a requirement sysml a verify relationship is a dependency between a requirement and a test case or other model element that can determine whether a system fulfills the requirement a use case describes all the ways a system can be used to achieve a certain goal it describes user actions as well as functions the system must have to be helpful for achieving this goal it doesn t describe how to test the system functions you can however derive test cases from a use case description how would a use case satisfy a requirement sysml a satisfy relationship is a dependency between a requirement and a model element that fulfills the requirement a use case is an analysis tool to find the functions that the system shall support in other words the functional requirements how can an analysis tool that finds requirements satisfy a requirement about your example what is the goal of the use case set an alarm time and radio frequency the alarm time and the radio frequency are set well forgive me but this is not really helpful the use case refines the stakeholder requirement be waken at chosen time and has the same name and this use case has a lot of alternative flows that most clock makers in their blissfull ignorance forget i awake early and want to prematurly cancel the alarm without clearing it for the next day i pressed the snooze button but now that i m awake decide to get up anyway and while i m under the shower the alarm goes off i stayed up late and now need to strike a balance between a minimum sleep requirement and a full to do list and would like to know without calculating late at night how much time would be left all these alternative flows lead to additional functional requirements so the complete list of functional requirements found in this use case would be set alarm time select radio or alarm set radio frequency control clock for alarming main function play radio at predefined time sound alarm at predefined time snooze alarm cancel alarm for today clear alarm time show time until alarm it is amazing how many alarm clocks fail to have all these functions given that a use case analysis would find them quickly so the diagram could be stakeholder requirement be waken at chosen time refine use case be waken at chosen time trace functional requirement cancel alarm for today satisfy operation cancel alarm functional requirement cancel alarm for today verify testcase cancel alarm after snooze you could argue that the stakeholder requirement and thus indirectly the use case could get verified by a test case however i think that a stakeholder requirement would get validated not verified,"['requirements', 'sysml']","['i', 'am', 'wondering', 'what', 'is', 'allowed', 'or', 'at', 'least', 'what', 'is', 'the', 'best', 'practice', 'in', 'a', 'sysml', 'requirements', 'diagram', 'regarding', 'the', 'use', 'of', 'satisfy', 'verify', 'links', 'between', 'use', 'cases', 'test', 'cases', 'and', 'requirements', 'as', 'i', 'understand', 'it', 'generally', 'a', 'use', 'case', 'satisfy', 'a', 'requirement', 'and', 'a', 'test', 'case', 'verify', 'it', 'is', 'it', 'possible', 'though', 'for', 'a', 'use', 'case', 'to', 'verify', 'a', 'requirement', 'i', 'found', 'different', 'sources', 'with', 'contradictory', 'statements', 'on', 'the', 'matter', 'for', 'the', 'classical', 'alarm', 'clock', 'example', 'with', 'req', 'to', 'be', 'waken', 'at', 'chosen', 'time', 'usecase', 'set', 'an', 'alarm', 'time', 'a', 'radio', 'frequency', 'test', 'given', 'there', 'is', 'a', 'station', 'at', 'fm', 'and', 'the', 'time', 'is', 'correctly', 'set', 'when', 'i', 'set', 'an', 'alarm', 'future', 'time', 'and', 'set', 'the', 'freq', 'to', 'fm', 'then', 'i', 'will', 'listen', 'to', 'the', 'station', 'at', 'the', 'given', 'time', 'what', 'is', 'then', 'the', 'correct', 'and', 'or', 'best', 'diagram', 'usecase', 'satisfy', 'req', 'testcase', 'verify', 'req', 'or', 'usecase', 'satisfy', 'req', 'testcase', 'verify', 'usecase', 'or', 'usecase', 'verify', 'req', 'testcase', 'verify', 'req', 'thanks', 'for', 'any', 'clarifications']","['there', 'is', 'no', 'formal', 'constraint', 'in', 'the', 'specification', 'that', 'would', 'disallow', 'this', 'however', 'the', 'semantics', 'of', 'the', 'elements', 'makes', 'this', 'meaningless', 'how', 'would', 'a', 'use', 'case', 'verify', 'a', 'requirement', 'sysml', 'a', 'verify', 'relationship', 'is', 'a', 'dependency', 'between', 'a', 'requirement', 'and', 'a', 'test', 'case', 'or', 'other', 'model', 'element', 'that', 'can', 'determine', 'whether', 'a', 'system', 'fulfills', 'the', 'requirement', 'a', 'use', 'case', 'describes', 'all', 'the', 'ways', 'a', 'system', 'can', 'be', 'used', 'to', 'achieve', 'a', 'certain', 'goal', 'it', 'describes', 'user', 'actions', 'as', 'well', 'as', 'functions', 'the', 'system', 'must', 'have', 'to', 'be', 'helpful', 'for', 'achieving', 'this', 'goal', 'it', 'doesn', 't', 'describe', 'how', 'to', 'test', 'the', 'system', 'functions', 'you', 'can', 'however', 'derive', 'test', 'cases', 'from', 'a', 'use', 'case', 'description', 'how', 'would', 'a', 'use', 'case', 'satisfy', 'a', 'requirement', 'sysml', 'a', 'satisfy', 'relationship', 'is', 'a', 'dependency', 'between', 'a', 'requirement', 'and', 'a', 'model', 'element', 'that', 'fulfills', 'the', 'requirement', 'a', 'use', 'case', 'is', 'an', 'analysis', 'tool', 'to', 'find', 'the', 'functions', 'that', 'the', 'system', 'shall', 'support', 'in', 'other', 'words', 'the', 'functional', 'requirements', 'how', 'can', 'an', 'analysis', 'tool', 'that', 'finds', 'requirements', 'satisfy', 'a', 'requirement', 'about', 'your', 'example', 'what', 'is', 'the', 'goal', 'of', 'the', 'use', 'case', 'set', 'an', 'alarm', 'time', 'and', 'radio', 'frequency', 'the', 'alarm', 'time', 'and', 'the', 'radio', 'frequency', 'are', 'set', 'well', 'forgive', 'me', 'but', 'this', 'is', 'not', 'really', 'helpful', 'the', 'use', 'case', 'refines', 'the', 'stakeholder', 'requirement', 'be', 'waken', 'at', 'chosen', 'time', 'and', 'has', 'the', 'same', 'name', 'and', 'this', 'use', 'case', 'has', 'a', 'lot', 'of', 'alternative', 'flows', 'that', 'most', 'clock', 'makers', 'in', 'their', 'blissfull', 'ignorance', 'forget', 'i', 'awake', 'early', 'and', 'want', 'to', 'prematurly', 'cancel', 'the', 'alarm', 'without', 'clearing', 'it', 'for', 'the', 'next', 'day', 'i', 'pressed', 'the', 'snooze', 'button', 'but', 'now', 'that', 'i', 'm', 'awake', 'decide', 'to', 'get', 'up', 'anyway', 'and', 'while', 'i', 'm', 'under', 'the', 'shower', 'the', 'alarm', 'goes', 'off', 'i', 'stayed', 'up', 'late', 'and', 'now', 'need', 'to', 'strike', 'a', 'balance', 'between', 'a', 'minimum', 'sleep', 'requirement', 'and', 'a', 'full', 'to', 'do', 'list', 'and', 'would', 'like', 'to', 'know', 'without', 'calculating', 'late', 'at', 'night', 'how', 'much', 'time', 'would', 'be', 'left', 'all', 'these', 'alternative', 'flows', 'lead', 'to', 'additional', 'functional', 'requirements', 'so', 'the', 'complete', 'list', 'of', 'functional', 'requirements', 'found', 'in', 'this', 'use', 'case', 'would', 'be', 'set', 'alarm', 'time', 'select', 'radio', 'or', 'alarm', 'set', 'radio', 'frequency', 'control', 'clock', 'for', 'alarming', 'main', 'function', 'play', 'radio', 'at', 'predefined', 'time', 'sound', 'alarm', 'at', 'predefined', 'time', 'snooze', 'alarm', 'cancel', 'alarm', 'for', 'today', 'clear', 'alarm', 'time', 'show', 'time', 'until', 'alarm', 'it', 'is', 'amazing', 'how', 'many', 'alarm', 'clocks', 'fail', 'to', 'have', 'all', 'these', 'functions', 'given', 'that', 'a', 'use', 'case', 'analysis', 'would', 'find', 'them', 'quickly', 'so', 'the', 'diagram', 'could', 'be', 'stakeholder', 'requirement', 'be', 'waken', 'at', 'chosen', 'time', 'refine', 'use', 'case', 'be', 'waken', 'at', 'chosen', 'time', 'trace', 'functional', 'requirement', 'cancel', 'alarm', 'for', 'today', 'satisfy', 'operation', 'cancel', 'alarm', 'functional', 'requirement', 'cancel', 'alarm', 'for', 'today', 'verify', 'testcase', 'cancel', 'alarm', 'after', 'snooze', 'you', 'could', 'argue', 'that', 'the', 'stakeholder', 'requirement', 'and', 'thus', 'indirectly', 'the', 'use', 'case', 'could', 'get', 'verified', 'by', 'a', 'test', 'case', 'however', 'i', 'think', 'that', 'a', 'stakeholder', 'requirement', 'would', 'get', 'validated', 'not', 'verified']","['wondering', 'allowed', 'least', 'best', 'practice', 'sysml', 'requirement', 'diagram', 'regarding', 'use', 'satisfy', 'verify', 'link', 'use', 'case', 'test', 'case', 'requirement', 'understand', 'generally', 'use', 'case', 'satisfy', 'requirement', 'test', 'case', 'verify', 'possible', 'though', 'use', 'case', 'verify', 'requirement', 'found', 'different', 'source', 'contradictory', 'statement', 'matter', 'classical', 'alarm', 'clock', 'example', 'req', 'waken', 'chosen', 'time', 'usecase', 'set', 'alarm', 'time', 'radio', 'frequency', 'test', 'given', 'station', 'fm', 'time', 'correctly', 'set', 'set', 'alarm', 'future', 'time', 'set', 'freq', 'fm', 'listen', 'station', 'given', 'time', 'correct', 'best', 'diagram', 'usecase', 'satisfy', 'req', 'testcase', 'verify', 'req', 'usecase', 'satisfy', 'req', 'testcase', 'verify', 'usecase', 'usecase', 'verify', 'req', 'testcase', 'verify', 'req', 'thanks', 'clarification']","['there', 'is', 'no', 'formal', 'constraint', 'in', 'the', 'specification', 'that', 'would', 'disallow', 'this', 'however', 'the', 'semantics', 'of', 'the', 'element', 'make', 'this', 'meaningless', 'how', 'would', 'a', 'use', 'case', 'verify', 'a', 'requirement', 'sysml', 'a', 'verify', 'relationship', 'is', 'a', 'dependency', 'between', 'a', 'requirement', 'and', 'a', 'test', 'case', 'or', 'other', 'model', 'element', 'that', 'can', 'determine', 'whether', 'a', 'system', 'fulfills', 'the', 'requirement', 'a', 'use', 'case', 'describes', 'all', 'the', 'way', 'a', 'system', 'can', 'be', 'used', 'to', 'achieve', 'a', 'certain', 'goal', 'it', 'describes', 'user', 'action', 'a', 'well', 'a', 'function', 'the', 'system', 'must', 'have', 'to', 'be', 'helpful', 'for', 'achieving', 'this', 'goal', 'it', 'doesn', 't', 'describe', 'how', 'to', 'test', 'the', 'system', 'function', 'you', 'can', 'however', 'derive', 'test', 'case', 'from', 'a', 'use', 'case', 'description', 'how', 'would', 'a', 'use', 'case', 'satisfy', 'a', 'requirement', 'sysml', 'a', 'satisfy', 'relationship', 'is', 'a', 'dependency', 'between', 'a', 'requirement', 'and', 'a', 'model', 'element', 'that', 'fulfills', 'the', 'requirement', 'a', 'use', 'case', 'is', 'an', 'analysis', 'tool', 'to', 'find', 'the', 'function', 'that', 'the', 'system', 'shall', 'support', 'in', 'other', 'word', 'the', 'functional', 'requirement', 'how', 'can', 'an', 'analysis', 'tool', 'that', 'find', 'requirement', 'satisfy', 'a', 'requirement', 'about', 'your', 'example', 'what', 'is', 'the', 'goal', 'of', 'the', 'use', 'case', 'set', 'an', 'alarm', 'time', 'and', 'radio', 'frequency', 'the', 'alarm', 'time', 'and', 'the', 'radio', 'frequency', 'are', 'set', 'well', 'forgive', 'me', 'but', 'this', 'is', 'not', 'really', 'helpful', 'the', 'use', 'case', 'refines', 'the', 'stakeholder', 'requirement', 'be', 'waken', 'at', 'chosen', 'time', 'and', 'ha', 'the', 'same', 'name', 'and', 'this', 'use', 'case', 'ha', 'a', 'lot', 'of', 'alternative', 'flow', 'that', 'most', 'clock', 'maker', 'in', 'their', 'blissfull', 'ignorance', 'forget', 'i', 'awake', 'early', 'and', 'want', 'to', 'prematurly', 'cancel', 'the', 'alarm', 'without', 'clearing', 'it', 'for', 'the', 'next', 'day', 'i', 'pressed', 'the', 'snooze', 'button', 'but', 'now', 'that', 'i', 'm', 'awake', 'decide', 'to', 'get', 'up', 'anyway', 'and', 'while', 'i', 'm', 'under', 'the', 'shower', 'the', 'alarm', 'go', 'off', 'i', 'stayed', 'up', 'late', 'and', 'now', 'need', 'to', 'strike', 'a', 'balance', 'between', 'a', 'minimum', 'sleep', 'requirement', 'and', 'a', 'full', 'to', 'do', 'list', 'and', 'would', 'like', 'to', 'know', 'without', 'calculating', 'late', 'at', 'night', 'how', 'much', 'time', 'would', 'be', 'left', 'all', 'these', 'alternative', 'flow', 'lead', 'to', 'additional', 'functional', 'requirement', 'so', 'the', 'complete', 'list', 'of', 'functional', 'requirement', 'found', 'in', 'this', 'use', 'case', 'would', 'be', 'set', 'alarm', 'time', 'select', 'radio', 'or', 'alarm', 'set', 'radio', 'frequency', 'control', 'clock', 'for', 'alarming', 'main', 'function', 'play', 'radio', 'at', 'predefined', 'time', 'sound', 'alarm', 'at', 'predefined', 'time', 'snooze', 'alarm', 'cancel', 'alarm', 'for', 'today', 'clear', 'alarm', 'time', 'show', 'time', 'until', 'alarm', 'it', 'is', 'amazing', 'how', 'many', 'alarm', 'clock', 'fail', 'to', 'have', 'all', 'these', 'function', 'given', 'that', 'a', 'use', 'case', 'analysis', 'would', 'find', 'them', 'quickly', 'so', 'the', 'diagram', 'could', 'be', 'stakeholder', 'requirement', 'be', 'waken', 'at', 'chosen', 'time', 'refine', 'use', 'case', 'be', 'waken', 'at', 'chosen', 'time', 'trace', 'functional', 'requirement', 'cancel', 'alarm', 'for', 'today', 'satisfy', 'operation', 'cancel', 'alarm', 'functional', 'requirement', 'cancel', 'alarm', 'for', 'today', 'verify', 'testcase', 'cancel', 'alarm', 'after', 'snooze', 'you', 'could', 'argue', 'that', 'the', 'stakeholder', 'requirement', 'and', 'thus', 'indirectly', 'the', 'use', 'case', 'could', 'get', 'verified', 'by', 'a', 'test', 'case', 'however', 'i', 'think', 'that', 'a', 'stakeholder', 'requirement', 'would', 'get', 'validated', 'not', 'verified']",System Requirements and AWS,0,"{'neg': 0.039, 'neu': 0.863, 'pos': 0.098, 'compound': 0.9161}",0.21875,0,System Requirements and AWS,3query
61356355,Requirement is installed but when I try to run the program it says it doesn't,"<p>Like the title says, I install crispy forms and it's installed, but when I try to migrate, it says crispy forms it's not installed</p>

<pre><code>(env) C:\Users\Dias\Desktop\Soccer_site\aposta_segura&gt;pip3 install django-crispy-forms
Requirement already satisfied: django-crispy-forms in c:\users\dias\desktop\soccer_site\aposta_segura\env\lib\site-packages (1.9.0)

(env) C:\Users\Dias\Desktop\Soccer_site\aposta_segura&gt;python3 manage.py migrate
Traceback (most recent call last):
  File ""manage.py"", line 21, in &lt;module&gt;
    main()
  File ""manage.py"", line 17, in main
    execute_from_command_line(sys.argv)
  File ""C:\Users\Dias\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\django\core\management\__init__.py"", lin
e 401, in execute_from_command_line
    utility.execute()
  File ""C:\Users\Dias\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\django\core\management\__init__.py"", lin
e 377, in execute
    django.setup()
  File ""C:\Users\Dias\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\django\__init__.py"", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File ""C:\Users\Dias\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\django\apps\registry.py"", line 91, in po
pulate
    app_config = AppConfig.create(entry)
  File ""C:\Users\Dias\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\LocalCache\local-packages\Python38\site-packages\django\apps\config.py"", line 90, in crea
te
    module = import_module(entry)
  File ""C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.8_3.8.752.0_x64__qbz5n2kfra8p0\lib\importlib\__init__.py"", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File ""&lt;frozen importlib._bootstrap&gt;"", line 1014, in _gcd_import
  File ""&lt;frozen importlib._bootstrap&gt;"", line 991, in _find_and_load
  File ""&lt;frozen importlib._bootstrap&gt;"", line 973, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'crispy_forms'

(env) C:\Users\Dias\Desktop\Soccer_site\aposta_segura&gt;
</code></pre>

<p>If I install using the requirements.txt, the same thing happens, it says all the requirements are installed but crispy forms is not, i tried using ""--user"" but it doesn't work, don't know if it's a windows thing</p>
",<python><django><migrate><requirements>,2020-04-22 02:36:35,194,0,1,61358761,"<p>As @lain mentioned, it seems that the <code>Requirement is already satisfied</code> in your venv. This could only mean that the interpreter cannot be resolved to the correct venv.</p>

<p>check this in cmd prompt</p>

<pre><code>where python 
</code></pre>

<p>And </p>

<pre><code>where python3
</code></pre>

<p>The output of the first will match to the same directory as your <code>venv</code>.</p>

<p>Most likely its <code>python</code> so just use <code>python manage.py migrate</code> and it should work.</p>
",2020-04,like the title says i install crispy forms and it s installed but when i try to migrate it says crispy forms it s not installed env c users dias desktop soccer_site aposta_segura pip  install django crispy forms requirement already satisfied django crispy forms in c users dias desktop soccer_site aposta_segura env lib site packages       env c users dias desktop soccer_site aposta_segura python  manage py migrate traceback most recent call last file manage py line   in module main file manage py line   in main execute_from_command_line sys argv file c users dias appdata local packages pythonsoftwarefoundation python    _qbz n kfra p  localcache local packages python  site packages django core management __init__ py lin e   in execute_from_command_line utility execute file c users dias appdata local packages pythonsoftwarefoundation python    _qbz n kfra p  localcache local packages python  site packages django core management __init__ py lin e   in execute django setup file c users dias appdata local packages pythonsoftwarefoundation python    _qbz n kfra p  localcache local packages python  site packages django __init__ py line   in setup apps populate settings installed_apps file c users dias appdata local packages pythonsoftwarefoundation python    _qbz n kfra p  localcache local packages python  site packages django apps registry py line   in po pulate app_config appconfig create entry file c users dias appdata local packages pythonsoftwarefoundation python    _qbz n kfra p  localcache local packages python  site packages django apps config py line   in crea te module import_module entry file c program files windowsapps pythonsoftwarefoundation python    _       _x __qbz n kfra p  lib importlib __init__ py line   in import_module return _bootstrap _gcd_import name level package level file frozen importlib _bootstrap line   in _gcd_import file frozen importlib _bootstrap line   in _find_and_load file frozen importlib _bootstrap line   in _find_and_load_unlocked modulenotfounderror no module named crispy_forms env c users dias desktop soccer_site aposta_segura if i install using the requirements txt the same thing happens it says all the requirements are installed but crispy forms is not i tried using user but it doesn t work don t know if it s a windows thing,as lain mentioned it seems that the requirement is already satisfied in your venv this could only mean that the interpreter cannot be resolved to the correct venv check this in cmd prompt where python and where python  the output of the first will match to the same directory as your venv most likely its python so just use python manage py migrate and it should work,"['python', 'django', 'migrate', 'requirements']","['like', 'the', 'title', 'says', 'i', 'install', 'crispy', 'forms', 'and', 'it', 's', 'installed', 'but', 'when', 'i', 'try', 'to', 'migrate', 'it', 'says', 'crispy', 'forms', 'it', 's', 'not', 'installed', 'env', 'c', 'users', 'dias', 'desktop', 'soccer_site', 'aposta_segura', 'pip', 'install', 'django', 'crispy', 'forms', 'requirement', 'already', 'satisfied', 'django', 'crispy', 'forms', 'in', 'c', 'users', 'dias', 'desktop', 'soccer_site', 'aposta_segura', 'env', 'lib', 'site', 'packages', 'env', 'c', 'users', 'dias', 'desktop', 'soccer_site', 'aposta_segura', 'python', 'manage', 'py', 'migrate', 'traceback', 'most', 'recent', 'call', 'last', 'file', 'manage', 'py', 'line', 'in', 'module', 'main', 'file', 'manage', 'py', 'line', 'in', 'main', 'execute_from_command_line', 'sys', 'argv', 'file', 'c', 'users', 'dias', 'appdata', 'local', 'packages', 'pythonsoftwarefoundation', 'python', '_qbz', 'n', 'kfra', 'p', 'localcache', 'local', 'packages', 'python', 'site', 'packages', 'django', 'core', 'management', '__init__', 'py', 'lin', 'e', 'in', 'execute_from_command_line', 'utility', 'execute', 'file', 'c', 'users', 'dias', 'appdata', 'local', 'packages', 'pythonsoftwarefoundation', 'python', '_qbz', 'n', 'kfra', 'p', 'localcache', 'local', 'packages', 'python', 'site', 'packages', 'django', 'core', 'management', '__init__', 'py', 'lin', 'e', 'in', 'execute', 'django', 'setup', 'file', 'c', 'users', 'dias', 'appdata', 'local', 'packages', 'pythonsoftwarefoundation', 'python', '_qbz', 'n', 'kfra', 'p', 'localcache', 'local', 'packages', 'python', 'site', 'packages', 'django', '__init__', 'py', 'line', 'in', 'setup', 'apps', 'populate', 'settings', 'installed_apps', 'file', 'c', 'users', 'dias', 'appdata', 'local', 'packages', 'pythonsoftwarefoundation', 'python', '_qbz', 'n', 'kfra', 'p', 'localcache', 'local', 'packages', 'python', 'site', 'packages', 'django', 'apps', 'registry', 'py', 'line', 'in', 'po', 'pulate', 'app_config', 'appconfig', 'create', 'entry', 'file', 'c', 'users', 'dias', 'appdata', 'local', 'packages', 'pythonsoftwarefoundation', 'python', '_qbz', 'n', 'kfra', 'p', 'localcache', 'local', 'packages', 'python', 'site', 'packages', 'django', 'apps', 'config', 'py', 'line', 'in', 'crea', 'te', 'module', 'import_module', 'entry', 'file', 'c', 'program', 'files', 'windowsapps', 'pythonsoftwarefoundation', 'python', '_', '_x', '__qbz', 'n', 'kfra', 'p', 'lib', 'importlib', '__init__', 'py', 'line', 'in', 'import_module', 'return', '_bootstrap', '_gcd_import', 'name', 'level', 'package', 'level', 'file', 'frozen', 'importlib', '_bootstrap', 'line', 'in', '_gcd_import', 'file', 'frozen', 'importlib', '_bootstrap', 'line', 'in', '_find_and_load', 'file', 'frozen', 'importlib', '_bootstrap', 'line', 'in', '_find_and_load_unlocked', 'modulenotfounderror', 'no', 'module', 'named', 'crispy_forms', 'env', 'c', 'users', 'dias', 'desktop', 'soccer_site', 'aposta_segura', 'if', 'i', 'install', 'using', 'the', 'requirements', 'txt', 'the', 'same', 'thing', 'happens', 'it', 'says', 'all', 'the', 'requirements', 'are', 'installed', 'but', 'crispy', 'forms', 'is', 'not', 'i', 'tried', 'using', 'user', 'but', 'it', 'doesn', 't', 'work', 'don', 't', 'know', 'if', 'it', 's', 'a', 'windows', 'thing']","['as', 'lain', 'mentioned', 'it', 'seems', 'that', 'the', 'requirement', 'is', 'already', 'satisfied', 'in', 'your', 'venv', 'this', 'could', 'only', 'mean', 'that', 'the', 'interpreter', 'can', 'not', 'be', 'resolved', 'to', 'the', 'correct', 'venv', 'check', 'this', 'in', 'cmd', 'prompt', 'where', 'python', 'and', 'where', 'python', 'the', 'output', 'of', 'the', 'first', 'will', 'match', 'to', 'the', 'same', 'directory', 'as', 'your', 'venv', 'most', 'likely', 'its', 'python', 'so', 'just', 'use', 'python', 'manage', 'py', 'migrate', 'and', 'it', 'should', 'work']","['like', 'title', 'say', 'install', 'crispy', 'form', 'installed', 'try', 'migrate', 'say', 'crispy', 'form', 'installed', 'env', 'c', 'user', 'dia', 'desktop', 'soccer_site', 'aposta_segura', 'pip', 'install', 'django', 'crispy', 'form', 'requirement', 'already', 'satisfied', 'django', 'crispy', 'form', 'c', 'user', 'dia', 'desktop', 'soccer_site', 'aposta_segura', 'env', 'lib', 'site', 'package', 'env', 'c', 'user', 'dia', 'desktop', 'soccer_site', 'aposta_segura', 'python', 'manage', 'py', 'migrate', 'traceback', 'recent', 'call', 'last', 'file', 'manage', 'py', 'line', 'module', 'main', 'file', 'manage', 'py', 'line', 'main', 'execute_from_command_line', 'sys', 'argv', 'file', 'c', 'user', 'dia', 'appdata', 'local', 'package', 'pythonsoftwarefoundation', 'python', '_qbz', 'n', 'kfra', 'p', 'localcache', 'local', 'package', 'python', 'site', 'package', 'django', 'core', 'management', '__init__', 'py', 'lin', 'e', 'execute_from_command_line', 'utility', 'execute', 'file', 'c', 'user', 'dia', 'appdata', 'local', 'package', 'pythonsoftwarefoundation', 'python', '_qbz', 'n', 'kfra', 'p', 'localcache', 'local', 'package', 'python', 'site', 'package', 'django', 'core', 'management', '__init__', 'py', 'lin', 'e', 'execute', 'django', 'setup', 'file', 'c', 'user', 'dia', 'appdata', 'local', 'package', 'pythonsoftwarefoundation', 'python', '_qbz', 'n', 'kfra', 'p', 'localcache', 'local', 'package', 'python', 'site', 'package', 'django', '__init__', 'py', 'line', 'setup', 'apps', 'populate', 'setting', 'installed_apps', 'file', 'c', 'user', 'dia', 'appdata', 'local', 'package', 'pythonsoftwarefoundation', 'python', '_qbz', 'n', 'kfra', 'p', 'localcache', 'local', 'package', 'python', 'site', 'package', 'django', 'apps', 'registry', 'py', 'line', 'po', 'pulate', 'app_config', 'appconfig', 'create', 'entry', 'file', 'c', 'user', 'dia', 'appdata', 'local', 'package', 'pythonsoftwarefoundation', 'python', '_qbz', 'n', 'kfra', 'p', 'localcache', 'local', 'package', 'python', 'site', 'package', 'django', 'apps', 'config', 'py', 'line', 'crea', 'te', 'module', 'import_module', 'entry', 'file', 'c', 'program', 'file', 'windowsapps', 'pythonsoftwarefoundation', 'python', '_', '_x', '__qbz', 'n', 'kfra', 'p', 'lib', 'importlib', '__init__', 'py', 'line', 'import_module', 'return', '_bootstrap', '_gcd_import', 'name', 'level', 'package', 'level', 'file', 'frozen', 'importlib', '_bootstrap', 'line', '_gcd_import', 'file', 'frozen', 'importlib', '_bootstrap', 'line', '_find_and_load', 'file', 'frozen', 'importlib', '_bootstrap', 'line', '_find_and_load_unlocked', 'modulenotfounderror', 'module', 'named', 'crispy_forms', 'env', 'c', 'user', 'dia', 'desktop', 'soccer_site', 'aposta_segura', 'install', 'using', 'requirement', 'txt', 'thing', 'happens', 'say', 'requirement', 'installed', 'crispy', 'form', 'tried', 'using', 'user', 'work', 'know', 'window', 'thing']","['a', 'lain', 'mentioned', 'it', 'seems', 'that', 'the', 'requirement', 'is', 'already', 'satisfied', 'in', 'your', 'venv', 'this', 'could', 'only', 'mean', 'that', 'the', 'interpreter', 'can', 'not', 'be', 'resolved', 'to', 'the', 'correct', 'venv', 'check', 'this', 'in', 'cmd', 'prompt', 'where', 'python', 'and', 'where', 'python', 'the', 'output', 'of', 'the', 'first', 'will', 'match', 'to', 'the', 'same', 'directory', 'a', 'your', 'venv', 'most', 'likely', 'it', 'python', 'so', 'just', 'use', 'python', 'manage', 'py', 'migrate', 'and', 'it', 'should', 'work']",System Requirements and AWS,4,"{'neg': 0.043, 'neu': 0.936, 'pos': 0.021, 'compound': -0.6124}",0.22916666666666669,4,Building and Compiling Python Projects,3query
60966929,What can I safely remove in a python lib folder?,"<p>I am using:</p>

<pre><code>mkdir -p build/python/lib/python3.6/site-packages
pipenv run pip install -r requirements.txt --target build/python/lib/python3.6/site-packages
</code></pre>

<p>to create a directory <code>build</code> with everything I need for my python project but I also need to save as much space as possible.</p>

<p>What can I safely remove in order to save space?</p>

<p>Maybe can I do <code>find build -type d -iname ""*.dist-info"" -exec rm -R {} \;</code> ?</p>

<p>Can I remove <code>*.py</code> if I leave <code>*.pyc</code>?</p>

<p>Thanks</p>
",<python><pip><requirements><pyc>,2020-04-01 08:47:43,435,1,1,63119633,"<p>Perhaps platform specific *.exe files, if your project doesn't need to run on Windows:</p>
<p><a href=""https://stackoverflow.com/q/47066676/5156207"">How to prevent *.exe ...</a></p>
<p>Delete *.pyc (byte-compiled files), with an impact to load-time: 100% supported, unlike your trick of the reverse: retain just *.pyc (and delete most *.py sources) in some python versions; not safe IMHO but never tried it.</p>
",2020-04,i am using mkdir p build python lib python    site packages pipenv run pip install r requirements txt target build python lib python    site packages to create a directory build with everything i need for my python project but i also need to save as much space as possible what can i safely remove in order to save space maybe can i do find build type d iname dist info exec rm r can i remove py if i leave pyc thanks,perhaps platform specific exe files if your project doesn t need to run on windows how to prevent exe delete pyc byte compiled files with an impact to load time   supported unlike your trick of the reverse retain just pyc and delete most py sources in some python versions not safe imho but never tried it,"['python', 'pip', 'requirements', 'pyc']","['i', 'am', 'using', 'mkdir', 'p', 'build', 'python', 'lib', 'python', 'site', 'packages', 'pipenv', 'run', 'pip', 'install', 'r', 'requirements', 'txt', 'target', 'build', 'python', 'lib', 'python', 'site', 'packages', 'to', 'create', 'a', 'directory', 'build', 'with', 'everything', 'i', 'need', 'for', 'my', 'python', 'project', 'but', 'i', 'also', 'need', 'to', 'save', 'as', 'much', 'space', 'as', 'possible', 'what', 'can', 'i', 'safely', 'remove', 'in', 'order', 'to', 'save', 'space', 'maybe', 'can', 'i', 'do', 'find', 'build', 'type', 'd', 'iname', 'dist', 'info', 'exec', 'rm', 'r', 'can', 'i', 'remove', 'py', 'if', 'i', 'leave', 'pyc', 'thanks']","['perhaps', 'platform', 'specific', 'exe', 'files', 'if', 'your', 'project', 'doesn', 't', 'need', 'to', 'run', 'on', 'windows', 'how', 'to', 'prevent', 'exe', 'delete', 'pyc', 'byte', 'compiled', 'files', 'with', 'an', 'impact', 'to', 'load', 'time', 'supported', 'unlike', 'your', 'trick', 'of', 'the', 'reverse', 'retain', 'just', 'pyc', 'and', 'delete', 'most', 'py', 'sources', 'in', 'some', 'python', 'versions', 'not', 'safe', 'imho', 'but', 'never', 'tried', 'it']","['using', 'mkdir', 'p', 'build', 'python', 'lib', 'python', 'site', 'package', 'pipenv', 'run', 'pip', 'install', 'r', 'requirement', 'txt', 'target', 'build', 'python', 'lib', 'python', 'site', 'package', 'create', 'directory', 'build', 'everything', 'need', 'python', 'project', 'also', 'need', 'save', 'much', 'space', 'possible', 'safely', 'remove', 'order', 'save', 'space', 'maybe', 'find', 'build', 'type', 'iname', 'dist', 'info', 'exec', 'rm', 'r', 'remove', 'py', 'leave', 'pyc', 'thanks']","['perhaps', 'platform', 'specific', 'exe', 'file', 'if', 'your', 'project', 'doesn', 't', 'need', 'to', 'run', 'on', 'window', 'how', 'to', 'prevent', 'exe', 'delete', 'pyc', 'byte', 'compiled', 'file', 'with', 'an', 'impact', 'to', 'load', 'time', 'supported', 'unlike', 'your', 'trick', 'of', 'the', 'reverse', 'retain', 'just', 'pyc', 'and', 'delete', 'most', 'py', 'source', 'in', 'some', 'python', 'version', 'not', 'safe', 'imho', 'but', 'never', 'tried', 'it']",System Requirements and AWS,1,"{'neg': 0.017, 'neu': 0.789, 'pos': 0.194, 'compound': 0.9402}",0.35,1,Package Management and File Handling,3query
60955493,Building wheel for scipy (setup.py): finished with status 'error',"<p>I am trying to build a Docker Image and install these requirements with a requirements.txt-file:</p>

<pre><code>numpy==1.18.1
scipy==1.2.1
joblib==0.13.2
Cython==0.29.13
pandas==0.25.3
scikit-learn==0.21.3
h5py==2.8.0
Keras==2.3.1
Keras-Applications==1.0.8
Keras-Preprocessing==1.1.0
</code></pre>

<p>This is my dockerfile:</p>

<pre><code>FROM python:3

MAINTAINER author@sample.com

RUN mkdir /test
COPY ./ /test
WORKDIR /test

## Install your dependencies here using apt-get etc.


RUN pip install -r requirements.txt
</code></pre>

<p>When I try to build theThis is the error message I get</p>

<pre><code>ERROR: Command errored out with exit status 1:
   command: /usr/local/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-d0v5nn_0/scipy/setup.py'""'""'; __file__='""'""'/tmp/pip-install-d0v5nn_0/scipy/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' bdist_wheel -d /tmp/pip-wheel-u8mo7l4r
       cwd: /tmp/pip-install-d0v5nn_0/scipy/
  Complete output (9 lines):
  /tmp/pip-install-d0v5nn_0/scipy/setup.py:114: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
    import imp
  Traceback (most recent call last):
    File ""&lt;string&gt;"", line 1, in &lt;module&gt;
    File ""/tmp/pip-install-d0v5nn_0/scipy/setup.py"", line 492, in &lt;module&gt;
      setup_package()
    File ""/tmp/pip-install-d0v5nn_0/scipy/setup.py"", line 468, in setup_package
      from numpy.distutils.core import setup
  ModuleNotFoundError: No module named 'numpy'
  ----------------------------------------
  ERROR: Failed building wheel for scipy
</code></pre>

<p>After this it also tries to run a   </p>

<pre><code>Running setup.py clean for scipy
</code></pre>

<p>but without success</p>
",<python><docker><numpy><scipy><requirements>,2020-03-31 16:36:54,6833,2,1,60957064,"<p>Not sure if it's the reason for the error but considering the <a href=""https://github.com/numpy/numpy/releases/tag/v1.18.1"" rel=""nofollow noreferrer"">release notes of Numpy 1.18.1</a>, you should have Cython ≥ 0.29.14 whereas the <code>requirements.txt</code> specifies <code>Cython==0.29.13</code>.</p>

<p><code>FROM python:3</code> results in getting Python 3.8.</p>

<blockquote>
  <p>The Python versions supported in this release are 3.5-3.8. Downstream
  developers should use Cython >= 0.29.14 for Python 3.8 support and
  OpenBLAS >= 3.7 to avoid errors on the Skylake architecture.</p>
</blockquote>
",2020-03,i am trying to build a docker image and install these requirements with a requirements txt file numpy       scipy       joblib       cython       pandas       scikit learn       h py       keras       keras applications       keras preprocessing       this is my dockerfile from python   maintainer author sample com run mkdir test copy test workdir test install your dependencies here using apt get etc run pip install r requirements txt when i try to build thethis is the error message i get error command errored out with exit status   command usr local bin python u c import sys setuptools tokenize sys argv   tmp pip install d v nn_  scipy setup py __file__ tmp pip install d v nn_  scipy setup py f getattr tokenize open open __file__ code f read replace r n n f close exec compile code __file__ exec bdist_wheel d tmp pip wheel u mo l r cwd tmp pip install d v nn_  scipy complete output   lines tmp pip install d v nn_  scipy setup py   deprecationwarning the imp module is deprecated in favour of importlib see the module s documentation for alternative uses import imp traceback most recent call last file string line   in module file tmp pip install d v nn_  scipy setup py line   in module setup_package file tmp pip install d v nn_  scipy setup py line   in setup_package from numpy distutils core import setup modulenotfounderror no module named numpy error failed building wheel for scipy after this it also tries to run a running setup py clean for scipy but without success,not sure if it s the reason for the error but considering the release notes of numpy       you should have cython       whereas the requirements txt specifies cython       from python   results in getting python     the python versions supported in this release are         downstream developers should use cython       for python     support and openblas     to avoid errors on the skylake architecture,"['python', 'docker', 'numpy', 'scipy', 'requirements']","['i', 'am', 'trying', 'to', 'build', 'a', 'docker', 'image', 'and', 'install', 'these', 'requirements', 'with', 'a', 'requirements', 'txt', 'file', 'numpy', 'scipy', 'joblib', 'cython', 'pandas', 'scikit', 'learn', 'h', 'py', 'keras', 'keras', 'applications', 'keras', 'preprocessing', 'this', 'is', 'my', 'dockerfile', 'from', 'python', 'maintainer', 'author', 'sample', 'com', 'run', 'mkdir', 'test', 'copy', 'test', 'workdir', 'test', 'install', 'your', 'dependencies', 'here', 'using', 'apt', 'get', 'etc', 'run', 'pip', 'install', 'r', 'requirements', 'txt', 'when', 'i', 'try', 'to', 'build', 'thethis', 'is', 'the', 'error', 'message', 'i', 'get', 'error', 'command', 'errored', 'out', 'with', 'exit', 'status', 'command', 'usr', 'local', 'bin', 'python', 'u', 'c', 'import', 'sys', 'setuptools', 'tokenize', 'sys', 'argv', 'tmp', 'pip', 'install', 'd', 'v', 'nn_', 'scipy', 'setup', 'py', '__file__', 'tmp', 'pip', 'install', 'd', 'v', 'nn_', 'scipy', 'setup', 'py', 'f', 'getattr', 'tokenize', 'open', 'open', '__file__', 'code', 'f', 'read', 'replace', 'r', 'n', 'n', 'f', 'close', 'exec', 'compile', 'code', '__file__', 'exec', 'bdist_wheel', 'd', 'tmp', 'pip', 'wheel', 'u', 'mo', 'l', 'r', 'cwd', 'tmp', 'pip', 'install', 'd', 'v', 'nn_', 'scipy', 'complete', 'output', 'lines', 'tmp', 'pip', 'install', 'd', 'v', 'nn_', 'scipy', 'setup', 'py', 'deprecationwarning', 'the', 'imp', 'module', 'is', 'deprecated', 'in', 'favour', 'of', 'importlib', 'see', 'the', 'module', 's', 'documentation', 'for', 'alternative', 'uses', 'import', 'imp', 'traceback', 'most', 'recent', 'call', 'last', 'file', 'string', 'line', 'in', 'module', 'file', 'tmp', 'pip', 'install', 'd', 'v', 'nn_', 'scipy', 'setup', 'py', 'line', 'in', 'module', 'setup_package', 'file', 'tmp', 'pip', 'install', 'd', 'v', 'nn_', 'scipy', 'setup', 'py', 'line', 'in', 'setup_package', 'from', 'numpy', 'distutils', 'core', 'import', 'setup', 'modulenotfounderror', 'no', 'module', 'named', 'numpy', 'error', 'failed', 'building', 'wheel', 'for', 'scipy', 'after', 'this', 'it', 'also', 'tries', 'to', 'run', 'a', 'running', 'setup', 'py', 'clean', 'for', 'scipy', 'but', 'without', 'success']","['not', 'sure', 'if', 'it', 's', 'the', 'reason', 'for', 'the', 'error', 'but', 'considering', 'the', 'release', 'notes', 'of', 'numpy', 'you', 'should', 'have', 'cython', 'whereas', 'the', 'requirements', 'txt', 'specifies', 'cython', 'from', 'python', 'results', 'in', 'getting', 'python', 'the', 'python', 'versions', 'supported', 'in', 'this', 'release', 'are', 'downstream', 'developers', 'should', 'use', 'cython', 'for', 'python', 'support', 'and', 'openblas', 'to', 'avoid', 'errors', 'on', 'the', 'skylake', 'architecture']","['trying', 'build', 'docker', 'image', 'install', 'requirement', 'requirement', 'txt', 'file', 'numpy', 'scipy', 'joblib', 'cython', 'panda', 'scikit', 'learn', 'h', 'py', 'kera', 'kera', 'application', 'kera', 'preprocessing', 'dockerfile', 'python', 'maintainer', 'author', 'sample', 'com', 'run', 'mkdir', 'test', 'copy', 'test', 'workdir', 'test', 'install', 'dependency', 'using', 'apt', 'get', 'etc', 'run', 'pip', 'install', 'r', 'requirement', 'txt', 'try', 'build', 'thethis', 'error', 'message', 'get', 'error', 'command', 'errored', 'exit', 'status', 'command', 'usr', 'local', 'bin', 'python', 'u', 'c', 'import', 'sys', 'setuptools', 'tokenize', 'sys', 'argv', 'tmp', 'pip', 'install', 'v', 'nn_', 'scipy', 'setup', 'py', '__file__', 'tmp', 'pip', 'install', 'v', 'nn_', 'scipy', 'setup', 'py', 'f', 'getattr', 'tokenize', 'open', 'open', '__file__', 'code', 'f', 'read', 'replace', 'r', 'n', 'n', 'f', 'close', 'exec', 'compile', 'code', '__file__', 'exec', 'bdist_wheel', 'tmp', 'pip', 'wheel', 'u', 'mo', 'l', 'r', 'cwd', 'tmp', 'pip', 'install', 'v', 'nn_', 'scipy', 'complete', 'output', 'line', 'tmp', 'pip', 'install', 'v', 'nn_', 'scipy', 'setup', 'py', 'deprecationwarning', 'imp', 'module', 'deprecated', 'favour', 'importlib', 'see', 'module', 'documentation', 'alternative', 'us', 'import', 'imp', 'traceback', 'recent', 'call', 'last', 'file', 'string', 'line', 'module', 'file', 'tmp', 'pip', 'install', 'v', 'nn_', 'scipy', 'setup', 'py', 'line', 'module', 'setup_package', 'file', 'tmp', 'pip', 'install', 'v', 'nn_', 'scipy', 'setup', 'py', 'line', 'setup_package', 'numpy', 'distutils', 'core', 'import', 'setup', 'modulenotfounderror', 'module', 'named', 'numpy', 'error', 'failed', 'building', 'wheel', 'scipy', 'also', 'try', 'run', 'running', 'setup', 'py', 'clean', 'scipy', 'without', 'success']","['not', 'sure', 'if', 'it', 's', 'the', 'reason', 'for', 'the', 'error', 'but', 'considering', 'the', 'release', 'note', 'of', 'numpy', 'you', 'should', 'have', 'cython', 'whereas', 'the', 'requirement', 'txt', 'specifies', 'cython', 'from', 'python', 'result', 'in', 'getting', 'python', 'the', 'python', 'version', 'supported', 'in', 'this', 'release', 'are', 'downstream', 'developer', 'should', 'use', 'cython', 'for', 'python', 'support', 'and', 'openblas', 'to', 'avoid', 'error', 'on', 'the', 'skylake', 'architecture']",System Requirements and AWS,1,"{'neg': 0.062, 'neu': 0.907, 'pos': 0.03, 'compound': -0.7213}",0.04583333333333334,1,Package Management and File Handling,3query
60714415,How do i design a UML use case diagram,"<p>I am trying to design a use case diagram for the following scenario.</p>

<p>I have a society that is distributing goods to clients based on their orders. These clients can be administrations, companies, or private individuals.
Depending on what the client is I want to know more or less of their info (name, number etc)</p>

<p>The use cases are different depending on whether the client is:</p>

<ol>
<li>English</li>
<li>English and have used this service for more than 3 years</li>
<li>Foreign</li>
</ol>

<p>For example:</p>

<ul>
<li><p>The 1) English clients' orders are accepted only if they pay a small fee in advance.</p></li>
<li><p>The 2) English clients that have used the service for 3 years don't have to pay this fee but need to get approbation from a different actor (an Agent in this case)</p></li>
<li><p>The 3) Foreign clients' orders are always accepted no matter what.</p></li>
</ul>

<p>This right here is where I run into trouble and need help with. </p>

<p>The orders from nglish clients that have a criminal record are always denied UNLESS they are an administration.</p>

<p>What are the most optimal actor choices here? I thought of going with <code>English client</code>, and <code>Foreign clients</code> but I don't know how to include the ""Unless the client is an administration"" in the use case.</p>
",<uml><actor><use-case><requirements>,2020-03-16 23:18:50,201,-1,2,60790466,"<p>Actors in UML use-cases are classifiers.  To decide about which actors to create requires to understand the actors their goals and behaviours and how they differ in the interaction with the system.      </p>

<p>First of all, you need to clarify the super-ambiguous requirements:  </p>

<ul>
<li>""<em>English client</em>"":  is this a client with English nationality?  Is it a client that lives permanently in the UK?  Is this a client with an address in the UK? Is it a client with a +44 phone number?  </li>
<li>""<em>Foreign client</em>"": same kind of questions + can you define for sure the difference between Ensglish and Foreign?  For example: what with bi-nationals? what with people having two addresses one being abroad?  </li>
<li>""<em>Using this service more than three years</em>"":  what with a foreign customer who uses the service for 3 years and then settles in the UK?  </li>
<li>Since you deliver goods, you might also need to consider a delivery address.  What with an English client ordering on a foreign address or vis-versa ? </li>
<li>""<em>criminal record</em>"":  the criminal record might change over time:  is it provided at each purchase? or is it part of the customer registration process ?  In the latter case,  is there a need to periodically renew this information ?  </li>
</ul>

<p>Use-cases should in principle be goal oriented.  So a use-case represents a goal for a user who is going to interact with the system to achieve the goal.  Use-cases are not meant to describe the detailed sequence of your process (if client is this, do that, etc...) and neither are actors meant for that purpose.  </p>

<p>You should therefore consider reformulating the use-cases to represent how the actors would perceive them. If needed you may consider the status of the actor that could explain that an actor behaves very differently. Typically in your case, I could imagine :  </p>

<ul>
<li>New client: a new client may want to provide details (address, identification) or evidence that they are entitled to buy (criminal record - I suppose your activity is regulated if you request such details)</li>
<li>Public administration:  behavior of administration in purchase is anyway different because of public procurement and legal constraints. </li>
<li>Privately owned company:  behavior is different since it can involve several persons,  </li>
<li>Private individual </li>
</ul>

<p>The need to pay an advance fee seem to depend on the address, nationality, history.  It's more related to the process (it's a part of it) than an independent goal for an actor. So I would neither show this as a use-case nor make different actors for this purpose.   </p>

<p>The reason to deny an order is not something that is not relevant for the customer (no customer has a goal go get  a purchase denied!).  It's relevant to you and your system and is a consequence of the registration process.  So no need to have a dedicated actor for that.    </p>
",2020-03,i am trying to design a use case diagram for the following scenario i have a society that is distributing goods to clients based on their orders these clients can be administrations companies or private individuals depending on what the client is i want to know more or less of their info name number etc the use cases are different depending on whether the client is english english and have used this service for more than   years foreign for example the   english clients orders are accepted only if they pay a small fee in advance the   english clients that have used the service for   years don t have to pay this fee but need to get approbation from a different actor an agent in this case the   foreign clients orders are always accepted no matter what this right here is where i run into trouble and need help with the orders from nglish clients that have a criminal record are always denied unless they are an administration what are the most optimal actor choices here i thought of going with english client and foreign clients but i don t know how to include the unless the client is an administration in the use case,actors in uml use cases are classifiers to decide about which actors to create requires to understand the actors their goals and behaviours and how they differ in the interaction with the system first of all you need to clarify the super ambiguous requirements english client is this a client with english nationality is it a client that lives permanently in the uk is this a client with an address in the uk is it a client with a   phone number foreign client same kind of questions can you define for sure the difference between ensglish and foreign for example what with bi nationals what with people having two addresses one being abroad using this service more than three years what with a foreign customer who uses the service for   years and then settles in the uk since you deliver goods you might also need to consider a delivery address what with an english client ordering on a foreign address or vis versa criminal record the criminal record might change over time is it provided at each purchase or is it part of the customer registration process in the latter case is there a need to periodically renew this information use cases should in principle be goal oriented so a use case represents a goal for a user who is going to interact with the system to achieve the goal use cases are not meant to describe the detailed sequence of your process if client is this do that etc and neither are actors meant for that purpose you should therefore consider reformulating the use cases to represent how the actors would perceive them if needed you may consider the status of the actor that could explain that an actor behaves very differently typically in your case i could imagine new client a new client may want to provide details address identification or evidence that they are entitled to buy criminal record i suppose your activity is regulated if you request such details public administration behavior of administration in purchase is anyway different because of public procurement and legal constraints privately owned company behavior is different since it can involve several persons private individual the need to pay an advance fee seem to depend on the address nationality history it s more related to the process it s a part of it than an independent goal for an actor so i would neither show this as a use case nor make different actors for this purpose the reason to deny an order is not something that is not relevant for the customer no customer has a goal go get a purchase denied it s relevant to you and your system and is a consequence of the registration process so no need to have a dedicated actor for that,"['uml', 'actor', 'use-case', 'requirements']","['i', 'am', 'trying', 'to', 'design', 'a', 'use', 'case', 'diagram', 'for', 'the', 'following', 'scenario', 'i', 'have', 'a', 'society', 'that', 'is', 'distributing', 'goods', 'to', 'clients', 'based', 'on', 'their', 'orders', 'these', 'clients', 'can', 'be', 'administrations', 'companies', 'or', 'private', 'individuals', 'depending', 'on', 'what', 'the', 'client', 'is', 'i', 'want', 'to', 'know', 'more', 'or', 'less', 'of', 'their', 'info', 'name', 'number', 'etc', 'the', 'use', 'cases', 'are', 'different', 'depending', 'on', 'whether', 'the', 'client', 'is', 'english', 'english', 'and', 'have', 'used', 'this', 'service', 'for', 'more', 'than', 'years', 'foreign', 'for', 'example', 'the', 'english', 'clients', 'orders', 'are', 'accepted', 'only', 'if', 'they', 'pay', 'a', 'small', 'fee', 'in', 'advance', 'the', 'english', 'clients', 'that', 'have', 'used', 'the', 'service', 'for', 'years', 'don', 't', 'have', 'to', 'pay', 'this', 'fee', 'but', 'need', 'to', 'get', 'approbation', 'from', 'a', 'different', 'actor', 'an', 'agent', 'in', 'this', 'case', 'the', 'foreign', 'clients', 'orders', 'are', 'always', 'accepted', 'no', 'matter', 'what', 'this', 'right', 'here', 'is', 'where', 'i', 'run', 'into', 'trouble', 'and', 'need', 'help', 'with', 'the', 'orders', 'from', 'nglish', 'clients', 'that', 'have', 'a', 'criminal', 'record', 'are', 'always', 'denied', 'unless', 'they', 'are', 'an', 'administration', 'what', 'are', 'the', 'most', 'optimal', 'actor', 'choices', 'here', 'i', 'thought', 'of', 'going', 'with', 'english', 'client', 'and', 'foreign', 'clients', 'but', 'i', 'don', 't', 'know', 'how', 'to', 'include', 'the', 'unless', 'the', 'client', 'is', 'an', 'administration', 'in', 'the', 'use', 'case']","['actors', 'in', 'uml', 'use', 'cases', 'are', 'classifiers', 'to', 'decide', 'about', 'which', 'actors', 'to', 'create', 'requires', 'to', 'understand', 'the', 'actors', 'their', 'goals', 'and', 'behaviours', 'and', 'how', 'they', 'differ', 'in', 'the', 'interaction', 'with', 'the', 'system', 'first', 'of', 'all', 'you', 'need', 'to', 'clarify', 'the', 'super', 'ambiguous', 'requirements', 'english', 'client', 'is', 'this', 'a', 'client', 'with', 'english', 'nationality', 'is', 'it', 'a', 'client', 'that', 'lives', 'permanently', 'in', 'the', 'uk', 'is', 'this', 'a', 'client', 'with', 'an', 'address', 'in', 'the', 'uk', 'is', 'it', 'a', 'client', 'with', 'a', 'phone', 'number', 'foreign', 'client', 'same', 'kind', 'of', 'questions', 'can', 'you', 'define', 'for', 'sure', 'the', 'difference', 'between', 'ensglish', 'and', 'foreign', 'for', 'example', 'what', 'with', 'bi', 'nationals', 'what', 'with', 'people', 'having', 'two', 'addresses', 'one', 'being', 'abroad', 'using', 'this', 'service', 'more', 'than', 'three', 'years', 'what', 'with', 'a', 'foreign', 'customer', 'who', 'uses', 'the', 'service', 'for', 'years', 'and', 'then', 'settles', 'in', 'the', 'uk', 'since', 'you', 'deliver', 'goods', 'you', 'might', 'also', 'need', 'to', 'consider', 'a', 'delivery', 'address', 'what', 'with', 'an', 'english', 'client', 'ordering', 'on', 'a', 'foreign', 'address', 'or', 'vis', 'versa', 'criminal', 'record', 'the', 'criminal', 'record', 'might', 'change', 'over', 'time', 'is', 'it', 'provided', 'at', 'each', 'purchase', 'or', 'is', 'it', 'part', 'of', 'the', 'customer', 'registration', 'process', 'in', 'the', 'latter', 'case', 'is', 'there', 'a', 'need', 'to', 'periodically', 'renew', 'this', 'information', 'use', 'cases', 'should', 'in', 'principle', 'be', 'goal', 'oriented', 'so', 'a', 'use', 'case', 'represents', 'a', 'goal', 'for', 'a', 'user', 'who', 'is', 'going', 'to', 'interact', 'with', 'the', 'system', 'to', 'achieve', 'the', 'goal', 'use', 'cases', 'are', 'not', 'meant', 'to', 'describe', 'the', 'detailed', 'sequence', 'of', 'your', 'process', 'if', 'client', 'is', 'this', 'do', 'that', 'etc', 'and', 'neither', 'are', 'actors', 'meant', 'for', 'that', 'purpose', 'you', 'should', 'therefore', 'consider', 'reformulating', 'the', 'use', 'cases', 'to', 'represent', 'how', 'the', 'actors', 'would', 'perceive', 'them', 'if', 'needed', 'you', 'may', 'consider', 'the', 'status', 'of', 'the', 'actor', 'that', 'could', 'explain', 'that', 'an', 'actor', 'behaves', 'very', 'differently', 'typically', 'in', 'your', 'case', 'i', 'could', 'imagine', 'new', 'client', 'a', 'new', 'client', 'may', 'want', 'to', 'provide', 'details', 'address', 'identification', 'or', 'evidence', 'that', 'they', 'are', 'entitled', 'to', 'buy', 'criminal', 'record', 'i', 'suppose', 'your', 'activity', 'is', 'regulated', 'if', 'you', 'request', 'such', 'details', 'public', 'administration', 'behavior', 'of', 'administration', 'in', 'purchase', 'is', 'anyway', 'different', 'because', 'of', 'public', 'procurement', 'and', 'legal', 'constraints', 'privately', 'owned', 'company', 'behavior', 'is', 'different', 'since', 'it', 'can', 'involve', 'several', 'persons', 'private', 'individual', 'the', 'need', 'to', 'pay', 'an', 'advance', 'fee', 'seem', 'to', 'depend', 'on', 'the', 'address', 'nationality', 'history', 'it', 's', 'more', 'related', 'to', 'the', 'process', 'it', 's', 'a', 'part', 'of', 'it', 'than', 'an', 'independent', 'goal', 'for', 'an', 'actor', 'so', 'i', 'would', 'neither', 'show', 'this', 'as', 'a', 'use', 'case', 'nor', 'make', 'different', 'actors', 'for', 'this', 'purpose', 'the', 'reason', 'to', 'deny', 'an', 'order', 'is', 'not', 'something', 'that', 'is', 'not', 'relevant', 'for', 'the', 'customer', 'no', 'customer', 'has', 'a', 'goal', 'go', 'get', 'a', 'purchase', 'denied', 'it', 's', 'relevant', 'to', 'you', 'and', 'your', 'system', 'and', 'is', 'a', 'consequence', 'of', 'the', 'registration', 'process', 'so', 'no', 'need', 'to', 'have', 'a', 'dedicated', 'actor', 'for', 'that']","['trying', 'design', 'use', 'case', 'diagram', 'following', 'scenario', 'society', 'distributing', 'good', 'client', 'based', 'order', 'client', 'administration', 'company', 'private', 'individual', 'depending', 'client', 'want', 'know', 'le', 'info', 'name', 'number', 'etc', 'use', 'case', 'different', 'depending', 'whether', 'client', 'english', 'english', 'used', 'service', 'year', 'foreign', 'example', 'english', 'client', 'order', 'accepted', 'pay', 'small', 'fee', 'advance', 'english', 'client', 'used', 'service', 'year', 'pay', 'fee', 'need', 'get', 'approbation', 'different', 'actor', 'agent', 'case', 'foreign', 'client', 'order', 'always', 'accepted', 'matter', 'right', 'run', 'trouble', 'need', 'help', 'order', 'nglish', 'client', 'criminal', 'record', 'always', 'denied', 'unless', 'administration', 'optimal', 'actor', 'choice', 'thought', 'going', 'english', 'client', 'foreign', 'client', 'know', 'include', 'unless', 'client', 'administration', 'use', 'case']","['actor', 'in', 'uml', 'use', 'case', 'are', 'classifier', 'to', 'decide', 'about', 'which', 'actor', 'to', 'create', 'requires', 'to', 'understand', 'the', 'actor', 'their', 'goal', 'and', 'behaviour', 'and', 'how', 'they', 'differ', 'in', 'the', 'interaction', 'with', 'the', 'system', 'first', 'of', 'all', 'you', 'need', 'to', 'clarify', 'the', 'super', 'ambiguous', 'requirement', 'english', 'client', 'is', 'this', 'a', 'client', 'with', 'english', 'nationality', 'is', 'it', 'a', 'client', 'that', 'life', 'permanently', 'in', 'the', 'uk', 'is', 'this', 'a', 'client', 'with', 'an', 'address', 'in', 'the', 'uk', 'is', 'it', 'a', 'client', 'with', 'a', 'phone', 'number', 'foreign', 'client', 'same', 'kind', 'of', 'question', 'can', 'you', 'define', 'for', 'sure', 'the', 'difference', 'between', 'ensglish', 'and', 'foreign', 'for', 'example', 'what', 'with', 'bi', 'national', 'what', 'with', 'people', 'having', 'two', 'address', 'one', 'being', 'abroad', 'using', 'this', 'service', 'more', 'than', 'three', 'year', 'what', 'with', 'a', 'foreign', 'customer', 'who', 'us', 'the', 'service', 'for', 'year', 'and', 'then', 'settle', 'in', 'the', 'uk', 'since', 'you', 'deliver', 'good', 'you', 'might', 'also', 'need', 'to', 'consider', 'a', 'delivery', 'address', 'what', 'with', 'an', 'english', 'client', 'ordering', 'on', 'a', 'foreign', 'address', 'or', 'vi', 'versa', 'criminal', 'record', 'the', 'criminal', 'record', 'might', 'change', 'over', 'time', 'is', 'it', 'provided', 'at', 'each', 'purchase', 'or', 'is', 'it', 'part', 'of', 'the', 'customer', 'registration', 'process', 'in', 'the', 'latter', 'case', 'is', 'there', 'a', 'need', 'to', 'periodically', 'renew', 'this', 'information', 'use', 'case', 'should', 'in', 'principle', 'be', 'goal', 'oriented', 'so', 'a', 'use', 'case', 'represents', 'a', 'goal', 'for', 'a', 'user', 'who', 'is', 'going', 'to', 'interact', 'with', 'the', 'system', 'to', 'achieve', 'the', 'goal', 'use', 'case', 'are', 'not', 'meant', 'to', 'describe', 'the', 'detailed', 'sequence', 'of', 'your', 'process', 'if', 'client', 'is', 'this', 'do', 'that', 'etc', 'and', 'neither', 'are', 'actor', 'meant', 'for', 'that', 'purpose', 'you', 'should', 'therefore', 'consider', 'reformulating', 'the', 'use', 'case', 'to', 'represent', 'how', 'the', 'actor', 'would', 'perceive', 'them', 'if', 'needed', 'you', 'may', 'consider', 'the', 'status', 'of', 'the', 'actor', 'that', 'could', 'explain', 'that', 'an', 'actor', 'behaves', 'very', 'differently', 'typically', 'in', 'your', 'case', 'i', 'could', 'imagine', 'new', 'client', 'a', 'new', 'client', 'may', 'want', 'to', 'provide', 'detail', 'address', 'identification', 'or', 'evidence', 'that', 'they', 'are', 'entitled', 'to', 'buy', 'criminal', 'record', 'i', 'suppose', 'your', 'activity', 'is', 'regulated', 'if', 'you', 'request', 'such', 'detail', 'public', 'administration', 'behavior', 'of', 'administration', 'in', 'purchase', 'is', 'anyway', 'different', 'because', 'of', 'public', 'procurement', 'and', 'legal', 'constraint', 'privately', 'owned', 'company', 'behavior', 'is', 'different', 'since', 'it', 'can', 'involve', 'several', 'person', 'private', 'individual', 'the', 'need', 'to', 'pay', 'an', 'advance', 'fee', 'seem', 'to', 'depend', 'on', 'the', 'address', 'nationality', 'history', 'it', 's', 'more', 'related', 'to', 'the', 'process', 'it', 's', 'a', 'part', 'of', 'it', 'than', 'an', 'independent', 'goal', 'for', 'an', 'actor', 'so', 'i', 'would', 'neither', 'show', 'this', 'a', 'a', 'use', 'case', 'nor', 'make', 'different', 'actor', 'for', 'this', 'purpose', 'the', 'reason', 'to', 'deny', 'an', 'order', 'is', 'not', 'something', 'that', 'is', 'not', 'relevant', 'for', 'the', 'customer', 'no', 'customer', 'ha', 'a', 'goal', 'go', 'get', 'a', 'purchase', 'denied', 'it', 's', 'relevant', 'to', 'you', 'and', 'your', 'system', 'and', 'is', 'a', 'consequence', 'of', 'the', 'registration', 'process', 'so', 'no', 'need', 'to', 'have', 'a', 'dedicated', 'actor', 'for', 'that']",System Requirements and AWS,4,"{'neg': 0.078, 'neu': 0.854, 'pos': 0.068, 'compound': -0.6497}",0.04025297619047619,4,Building and Compiling Python Projects,3query
60714415,How do i design a UML use case diagram,"<p>I am trying to design a use case diagram for the following scenario.</p>

<p>I have a society that is distributing goods to clients based on their orders. These clients can be administrations, companies, or private individuals.
Depending on what the client is I want to know more or less of their info (name, number etc)</p>

<p>The use cases are different depending on whether the client is:</p>

<ol>
<li>English</li>
<li>English and have used this service for more than 3 years</li>
<li>Foreign</li>
</ol>

<p>For example:</p>

<ul>
<li><p>The 1) English clients' orders are accepted only if they pay a small fee in advance.</p></li>
<li><p>The 2) English clients that have used the service for 3 years don't have to pay this fee but need to get approbation from a different actor (an Agent in this case)</p></li>
<li><p>The 3) Foreign clients' orders are always accepted no matter what.</p></li>
</ul>

<p>This right here is where I run into trouble and need help with. </p>

<p>The orders from nglish clients that have a criminal record are always denied UNLESS they are an administration.</p>

<p>What are the most optimal actor choices here? I thought of going with <code>English client</code>, and <code>Foreign clients</code> but I don't know how to include the ""Unless the client is an administration"" in the use case.</p>
",<uml><actor><use-case><requirements>,2020-03-16 23:18:50,201,-1,2,60826461,"<p>The use case <em>diagram</em> is not the right place to put this information. As correctly pointed out by @Christophe, <em>a use-case represents a goal for a user who is going to interact with the system to achieve the goal</em>.</p>

<p>This means that <strong>there is only one single use case in your scenario: ""Order Goods""</strong>. However, it has a set of <em>preconditions</em>. You could list them as structured plain text. Since there is quite some complexity behind each of them, I recommend to put them into a separate decision chart. Then you have a nice clean separation of the diagram scopes, and they remain easily readable.</p>

<p>Sidenote: There could be a second one ""distribute ordered goods"" executed by a 2nd actor who is an employee who does fulfillment / routing / dispatching.</p>
",2020-03,i am trying to design a use case diagram for the following scenario i have a society that is distributing goods to clients based on their orders these clients can be administrations companies or private individuals depending on what the client is i want to know more or less of their info name number etc the use cases are different depending on whether the client is english english and have used this service for more than   years foreign for example the   english clients orders are accepted only if they pay a small fee in advance the   english clients that have used the service for   years don t have to pay this fee but need to get approbation from a different actor an agent in this case the   foreign clients orders are always accepted no matter what this right here is where i run into trouble and need help with the orders from nglish clients that have a criminal record are always denied unless they are an administration what are the most optimal actor choices here i thought of going with english client and foreign clients but i don t know how to include the unless the client is an administration in the use case,the use case diagram is not the right place to put this information as correctly pointed out by christophe a use case represents a goal for a user who is going to interact with the system to achieve the goal this means that there is only one single use case in your scenario order goods however it has a set of preconditions you could list them as structured plain text since there is quite some complexity behind each of them i recommend to put them into a separate decision chart then you have a nice clean separation of the diagram scopes and they remain easily readable sidenote there could be a second one distribute ordered goods executed by a  nd actor who is an employee who does fulfillment routing dispatching,"['uml', 'actor', 'use-case', 'requirements']","['i', 'am', 'trying', 'to', 'design', 'a', 'use', 'case', 'diagram', 'for', 'the', 'following', 'scenario', 'i', 'have', 'a', 'society', 'that', 'is', 'distributing', 'goods', 'to', 'clients', 'based', 'on', 'their', 'orders', 'these', 'clients', 'can', 'be', 'administrations', 'companies', 'or', 'private', 'individuals', 'depending', 'on', 'what', 'the', 'client', 'is', 'i', 'want', 'to', 'know', 'more', 'or', 'less', 'of', 'their', 'info', 'name', 'number', 'etc', 'the', 'use', 'cases', 'are', 'different', 'depending', 'on', 'whether', 'the', 'client', 'is', 'english', 'english', 'and', 'have', 'used', 'this', 'service', 'for', 'more', 'than', 'years', 'foreign', 'for', 'example', 'the', 'english', 'clients', 'orders', 'are', 'accepted', 'only', 'if', 'they', 'pay', 'a', 'small', 'fee', 'in', 'advance', 'the', 'english', 'clients', 'that', 'have', 'used', 'the', 'service', 'for', 'years', 'don', 't', 'have', 'to', 'pay', 'this', 'fee', 'but', 'need', 'to', 'get', 'approbation', 'from', 'a', 'different', 'actor', 'an', 'agent', 'in', 'this', 'case', 'the', 'foreign', 'clients', 'orders', 'are', 'always', 'accepted', 'no', 'matter', 'what', 'this', 'right', 'here', 'is', 'where', 'i', 'run', 'into', 'trouble', 'and', 'need', 'help', 'with', 'the', 'orders', 'from', 'nglish', 'clients', 'that', 'have', 'a', 'criminal', 'record', 'are', 'always', 'denied', 'unless', 'they', 'are', 'an', 'administration', 'what', 'are', 'the', 'most', 'optimal', 'actor', 'choices', 'here', 'i', 'thought', 'of', 'going', 'with', 'english', 'client', 'and', 'foreign', 'clients', 'but', 'i', 'don', 't', 'know', 'how', 'to', 'include', 'the', 'unless', 'the', 'client', 'is', 'an', 'administration', 'in', 'the', 'use', 'case']","['the', 'use', 'case', 'diagram', 'is', 'not', 'the', 'right', 'place', 'to', 'put', 'this', 'information', 'as', 'correctly', 'pointed', 'out', 'by', 'christophe', 'a', 'use', 'case', 'represents', 'a', 'goal', 'for', 'a', 'user', 'who', 'is', 'going', 'to', 'interact', 'with', 'the', 'system', 'to', 'achieve', 'the', 'goal', 'this', 'means', 'that', 'there', 'is', 'only', 'one', 'single', 'use', 'case', 'in', 'your', 'scenario', 'order', 'goods', 'however', 'it', 'has', 'a', 'set', 'of', 'preconditions', 'you', 'could', 'list', 'them', 'as', 'structured', 'plain', 'text', 'since', 'there', 'is', 'quite', 'some', 'complexity', 'behind', 'each', 'of', 'them', 'i', 'recommend', 'to', 'put', 'them', 'into', 'a', 'separate', 'decision', 'chart', 'then', 'you', 'have', 'a', 'nice', 'clean', 'separation', 'of', 'the', 'diagram', 'scopes', 'and', 'they', 'remain', 'easily', 'readable', 'sidenote', 'there', 'could', 'be', 'a', 'second', 'one', 'distribute', 'ordered', 'goods', 'executed', 'by', 'a', 'nd', 'actor', 'who', 'is', 'an', 'employee', 'who', 'does', 'fulfillment', 'routing', 'dispatching']","['trying', 'design', 'use', 'case', 'diagram', 'following', 'scenario', 'society', 'distributing', 'good', 'client', 'based', 'order', 'client', 'administration', 'company', 'private', 'individual', 'depending', 'client', 'want', 'know', 'le', 'info', 'name', 'number', 'etc', 'use', 'case', 'different', 'depending', 'whether', 'client', 'english', 'english', 'used', 'service', 'year', 'foreign', 'example', 'english', 'client', 'order', 'accepted', 'pay', 'small', 'fee', 'advance', 'english', 'client', 'used', 'service', 'year', 'pay', 'fee', 'need', 'get', 'approbation', 'different', 'actor', 'agent', 'case', 'foreign', 'client', 'order', 'always', 'accepted', 'matter', 'right', 'run', 'trouble', 'need', 'help', 'order', 'nglish', 'client', 'criminal', 'record', 'always', 'denied', 'unless', 'administration', 'optimal', 'actor', 'choice', 'thought', 'going', 'english', 'client', 'foreign', 'client', 'know', 'include', 'unless', 'client', 'administration', 'use', 'case']","['the', 'use', 'case', 'diagram', 'is', 'not', 'the', 'right', 'place', 'to', 'put', 'this', 'information', 'a', 'correctly', 'pointed', 'out', 'by', 'christophe', 'a', 'use', 'case', 'represents', 'a', 'goal', 'for', 'a', 'user', 'who', 'is', 'going', 'to', 'interact', 'with', 'the', 'system', 'to', 'achieve', 'the', 'goal', 'this', 'mean', 'that', 'there', 'is', 'only', 'one', 'single', 'use', 'case', 'in', 'your', 'scenario', 'order', 'good', 'however', 'it', 'ha', 'a', 'set', 'of', 'precondition', 'you', 'could', 'list', 'them', 'a', 'structured', 'plain', 'text', 'since', 'there', 'is', 'quite', 'some', 'complexity', 'behind', 'each', 'of', 'them', 'i', 'recommend', 'to', 'put', 'them', 'into', 'a', 'separate', 'decision', 'chart', 'then', 'you', 'have', 'a', 'nice', 'clean', 'separation', 'of', 'the', 'diagram', 'scope', 'and', 'they', 'remain', 'easily', 'readable', 'sidenote', 'there', 'could', 'be', 'a', 'second', 'one', 'distribute', 'ordered', 'good', 'executed', 'by', 'a', 'nd', 'actor', 'who', 'is', 'an', 'employee', 'who', 'doe', 'fulfillment', 'routing', 'dispatching']",System Requirements and AWS,4,"{'neg': 0.078, 'neu': 0.854, 'pos': 0.068, 'compound': -0.6497}",0.04025297619047619,4,Building and Compiling Python Projects,3query
60160359,Error code when installing psycopg2 in requirements.txt in django,"<p>I've tried to manually install only the psycopg2 module. As well as with a pip3 install -r requirements.txt. If anybody has encountered this error before, please provide appreciated guidance! </p>

<pre><code>ERROR: Failed building wheel for psycopg2
  Running setup.py clean for psycopg2
Failed to build psycopg2
Installing collected packages: psycopg2
    Running setup.py install for psycopg2 ... error
    ERROR: Command errored out with exit status 1:
     command: /Users/DavidKronish/dev/citram/MyCampus-Backend/citramenv/bin/python3.8 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/private/var/folders/8x/lls1w4m94l90p8qszpnrvzgw0000gp/T/pip-install-c2yxmbq8/psycopg2/setup.py'""'""'; __file__='""'""'/private/var/folders/8x/lls1w4m94l90p8qszpnrvzgw0000gp/T/pip-install-c2yxmbq8/psycopg2/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /private/var/folders/8x/lls1w4m94l90p8qszpnrvzgw0000gp/T/pip-record-3aciztvp/install-record.txt --single-version-externally-managed --compile --install-headers /Users/DavidKronish/dev/citram/MyCampus-Backend/citramenv/bin/../include/site/python3.8/psycopg2
         cwd: /private/var/folders/8x/lls1w4m94l90p8qszpnrvzgw0000gp/T/pip-install-c2yxmbq8/psycopg2/
    Complete output (144 lines):
    running install
    running build
    running build_py
    creating build
    creating build/lib.macosx-10.9-x86_64-3.8
    creating build/lib.macosx-10.9-x86_64-3.8/psycopg2
    copying lib/_json.py -&gt; build/lib.macosx-10.9-x86_64-3.8/psycopg2
    copying lib/extras.py -&gt; build/lib.macosx-10.9-x86_64-3.8/psycopg2
    copying lib/compat.py -&gt; build/lib.macosx-10.9-x86_64-3.8/psycopg2
    copying lib/errorcodes.py -&gt; build/lib.macosx-10.9-x86_64-3.8/psycopg2
    copying lib/tz.py -&gt; build/lib.macosx-10.9-x86_64-3.8/psycopg2
    copying lib/_range.py -&gt; build/lib.macosx-10.9-x86_64-3.8/psycopg2
    copying lib/_ipaddress.py -&gt; build/lib.macosx-10.9-x86_64-3.8/psycopg2
    copying lib/_lru_cache.py -&gt; build/lib.macosx-10.9-x86_64-3.8/psycopg2
    copying lib/__init__.py -&gt; build/lib.macosx-10.9-x86_64-3.8/psycopg2
    copying lib/extensions.py -&gt; build/lib.macosx-10.9-x86_64-3.8/psycopg2
    copying lib/errors.py -&gt; build/lib.macosx-10.9-x86_64-3.8/psycopg2
    copying lib/sql.py -&gt; build/lib.macosx-10.9-x86_64-3.8/psycopg2
    copying lib/pool.py -&gt; build/lib.macosx-10.9-x86_64-3.8/psycopg2
    running build_ext
    building 'psycopg2._psycopg' extension
    creating build/temp.macosx-10.9-x86_64-3.8
    creating build/temp.macosx-10.9-x86_64-3.8/psycopg
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/psycopgmodule.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/psycopgmodule.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/green.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/green.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/pqpath.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/pqpath.o
    psycopg/pqpath.c:135:17: warning: implicit conversion from enumeration type 'ConnStatusType' to different enumeration type 'ExecStatusType' [-Wenum-conversion]
                    PQstatus(conn-&gt;pgconn) : PQresultStatus(*pgres)));
                    ^~~~~~~~~~~~~~~~~~~~~~
    psycopg/pqpath.c:1714:11: warning: code will never be executed [-Wunreachable-code]
        ret = 1;
              ^
    psycopg/pqpath.c:1819:17: warning: implicit conversion from enumeration type 'ConnStatusType' to different enumeration type 'ExecStatusType' [-Wenum-conversion]
                    PQstatus(curs-&gt;conn-&gt;pgconn) : PQresultStatus(curs-&gt;pgres)));
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    3 warnings generated.
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/utils.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/utils.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/bytes_format.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/bytes_format.o
    In file included from psycopg/bytes_format.c:81:
    In file included from ./psycopg/psycopg.h:37:
    ./psycopg/config.h:81:13: warning: unused function 'Dprintf' [-Wunused-function]
    static void Dprintf(const char *fmt, ...) {}
                ^
    1 warning generated.
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/libpq_support.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/libpq_support.o
    In file included from psycopg/libpq_support.c:29:
    In file included from ./psycopg/psycopg.h:37:
    ./psycopg/config.h:81:13: warning: unused function 'Dprintf' [-Wunused-function]
    static void Dprintf(const char *fmt, ...) {}
                ^
    1 warning generated.
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/win32_support.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/win32_support.o
    In file included from psycopg/win32_support.c:27:
    In file included from ./psycopg/psycopg.h:37:
    ./psycopg/config.h:81:13: warning: unused function 'Dprintf' [-Wunused-function]
    static void Dprintf(const char *fmt, ...) {}
                ^
    1 warning generated.
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/solaris_support.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/solaris_support.o
    In file included from psycopg/solaris_support.c:28:
    In file included from ./psycopg/psycopg.h:37:
    ./psycopg/config.h:81:13: warning: unused function 'Dprintf' [-Wunused-function]
    static void Dprintf(const char *fmt, ...) {}
                ^
    1 warning generated.
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/connection_int.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/connection_int.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/connection_type.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/connection_type.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/cursor_int.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/cursor_int.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/cursor_type.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/cursor_type.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/column_type.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/column_type.o
    In file included from psycopg/column_type.c:27:
    In file included from ./psycopg/psycopg.h:37:
    ./psycopg/config.h:81:13: warning: unused function 'Dprintf' [-Wunused-function]
    static void Dprintf(const char *fmt, ...) {}
                ^
    1 warning generated.
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/replication_connection_type.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/replication_connection_type.o
    In file included from psycopg/replication_connection_type.c:27:
    In file included from ./psycopg/psycopg.h:37:
    ./psycopg/config.h:81:13: warning: unused function 'Dprintf' [-Wunused-function]
    static void Dprintf(const char *fmt, ...) {}
                ^
    1 warning generated.
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/replication_cursor_type.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/replication_cursor_type.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/replication_message_type.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/replication_message_type.o
    In file included from psycopg/replication_message_type.c:27:
    In file included from ./psycopg/psycopg.h:37:
    ./psycopg/config.h:81:13: warning: unused function 'Dprintf' [-Wunused-function]
    static void Dprintf(const char *fmt, ...) {}
                ^
    1 warning generated.
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/diagnostics_type.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/diagnostics_type.o
    In file included from psycopg/diagnostics_type.c:27:
    In file included from ./psycopg/psycopg.h:37:
    ./psycopg/config.h:81:13: warning: unused function 'Dprintf' [-Wunused-function]
    static void Dprintf(const char *fmt, ...) {}
                ^
    1 warning generated.
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/error_type.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/error_type.o
    In file included from psycopg/error_type.c:27:
    In file included from ./psycopg/psycopg.h:37:
    ./psycopg/config.h:81:13: warning: unused function 'Dprintf' [-Wunused-function]
    static void Dprintf(const char *fmt, ...) {}
                ^
    1 warning generated.
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/conninfo_type.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/conninfo_type.o
    In file included from psycopg/conninfo_type.c:27:
    In file included from ./psycopg/psycopg.h:37:
    ./psycopg/config.h:81:13: warning: unused function 'Dprintf' [-Wunused-function]
    static void Dprintf(const char *fmt, ...) {}
                ^
    1 warning generated.
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/lobject_int.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/lobject_int.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/lobject_type.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/lobject_type.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/notify_type.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/notify_type.o
    In file included from psycopg/notify_type.c:27:
    In file included from ./psycopg/psycopg.h:37:
    ./psycopg/config.h:81:13: warning: unused function 'Dprintf' [-Wunused-function]
    static void Dprintf(const char *fmt, ...) {}
                ^
    1 warning generated.
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/xid_type.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/xid_type.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/adapter_asis.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_asis.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/adapter_binary.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_binary.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/adapter_datetime.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_datetime.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/adapter_list.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_list.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/adapter_pboolean.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_pboolean.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/adapter_pdecimal.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_pdecimal.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/adapter_pint.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_pint.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/adapter_pfloat.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_pfloat.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/adapter_qstring.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_qstring.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/microprotocols.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/microprotocols.o
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/microprotocols_proto.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/microprotocols_proto.o
    In file included from psycopg/microprotocols_proto.c:27:
    In file included from ./psycopg/psycopg.h:37:
    ./psycopg/config.h:81:13: warning: unused function 'Dprintf' [-Wunused-function]
    static void Dprintf(const char *fmt, ...) {}
                ^
    1 warning generated.
    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -DPSYCOPG_VERSION=2.8.4 (dt dec pq3 ext lo64) -DPG_VERSION_NUM=120001 -DHAVE_LO64=1 -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -I. -I/usr/local/include -I/usr/local/include/postgresql/server -c psycopg/typecast.c -o build/temp.macosx-10.9-x86_64-3.8/psycopg/typecast.o
    gcc -bundle -undefined dynamic_lookup -arch x86_64 -g build/temp.macosx-10.9-x86_64-3.8/psycopg/psycopgmodule.o build/temp.macosx-10.9-x86_64-3.8/psycopg/green.o build/temp.macosx-10.9-x86_64-3.8/psycopg/pqpath.o build/temp.macosx-10.9-x86_64-3.8/psycopg/utils.o build/temp.macosx-10.9-x86_64-3.8/psycopg/bytes_format.o build/temp.macosx-10.9-x86_64-3.8/psycopg/libpq_support.o build/temp.macosx-10.9-x86_64-3.8/psycopg/win32_support.o build/temp.macosx-10.9-x86_64-3.8/psycopg/solaris_support.o build/temp.macosx-10.9-x86_64-3.8/psycopg/connection_int.o build/temp.macosx-10.9-x86_64-3.8/psycopg/connection_type.o build/temp.macosx-10.9-x86_64-3.8/psycopg/cursor_int.o build/temp.macosx-10.9-x86_64-3.8/psycopg/cursor_type.o build/temp.macosx-10.9-x86_64-3.8/psycopg/column_type.o build/temp.macosx-10.9-x86_64-3.8/psycopg/replication_connection_type.o build/temp.macosx-10.9-x86_64-3.8/psycopg/replication_cursor_type.o build/temp.macosx-10.9-x86_64-3.8/psycopg/replication_message_type.o build/temp.macosx-10.9-x86_64-3.8/psycopg/diagnostics_type.o build/temp.macosx-10.9-x86_64-3.8/psycopg/error_type.o build/temp.macosx-10.9-x86_64-3.8/psycopg/conninfo_type.o build/temp.macosx-10.9-x86_64-3.8/psycopg/lobject_int.o build/temp.macosx-10.9-x86_64-3.8/psycopg/lobject_type.o build/temp.macosx-10.9-x86_64-3.8/psycopg/notify_type.o build/temp.macosx-10.9-x86_64-3.8/psycopg/xid_type.o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_asis.o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_binary.o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_datetime.o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_list.o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_pboolean.o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_pdecimal.o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_pint.o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_pfloat.o build/temp.macosx-10.9-x86_64-3.8/psycopg/adapter_qstring.o build/temp.macosx-10.9-x86_64-3.8/psycopg/microprotocols.o build/temp.macosx-10.9-x86_64-3.8/psycopg/microprotocols_proto.o build/temp.macosx-10.9-x86_64-3.8/psycopg/typecast.o -L/usr/local/lib -lpq -lssl -lcrypto -o build/lib.macosx-10.9-x86_64-3.8/psycopg2/_psycopg.cpython-38-darwin.so
    ld: library not found for -lssl
    clang: error: linker command failed with exit code 1 (use -v to see invocation)
    error: command 'gcc' failed with exit status 1
    ----------------------------------------
ERROR: Command errored out with exit status 1: /Users/DavidKronish/dev/citram/MyCampus-Backend/citramenv/bin/python3.8 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/private/var/folders/8x/lls1w4m94l90p8qszpnrvzgw0000gp/T/pip-install-c2yxmbq8/psycopg2/setup.py'""'""'; __file__='""'""'/private/var/folders/8x/lls1w4m94l90p8qszpnrvzgw0000gp/T/pip-install-c2yxmbq8/psycopg2/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /private/var/folders/8x/lls1w4m94l90p8qszpnrvzgw0000gp/T/pip-record-3aciztvp/install-record.txt --single-version-externally-managed --compile --install-headers /Users/DavidKronish/dev/citram/MyCampus-Backend/citramenv/bin/../include/site/python3.8/psycopg2 Check the logs for full command output.
</code></pre>
",<django><python-3.x><psycopg2><requirements>,2020-02-11 00:22:26,1832,2,1,60160523,"<p>gcc cannot use -lssl flag by default so you should install openssl     </p>

<pre><code>brew install openssl
export LDFLAGS=""-L/usr/local/opt/openssl@1.1/lib""
export CPPFLAGS=""-I/usr/local/opt/openssl@1.1/include""
</code></pre>

<p>or install precompiled binary</p>

<pre><code>   pip install psycopg2-binary
</code></pre>
",2020-02,i ve tried to manually install only the psycopg  module as well as with a pip  install r requirements txt if anybody has encountered this error before please provide appreciated guidance error failed building wheel for psycopg  running setup py clean for psycopg  failed to build psycopg  installing collected packages psycopg  running setup py install for psycopg  error error command errored out with exit status   command users davidkronish dev citram mycampus backend citramenv bin python    u c import sys setuptools tokenize sys argv   private var folders  x lls w m l p qszpnrvzgw gp t pip install c yxmbq  psycopg  setup py __file__ private var folders  x lls w m l p qszpnrvzgw gp t pip install c yxmbq  psycopg  setup py f getattr tokenize open open __file__ code f read replace r n n f close exec compile code __file__ exec install record private var folders  x lls w m l p qszpnrvzgw gp t pip record  aciztvp install record txt single version externally managed compile install headers users davidkronish dev citram mycampus backend citramenv bin include site python    psycopg  cwd private var folders  x lls w m l p qszpnrvzgw gp t pip install c yxmbq  psycopg  complete output   lines running install running build running build_py creating build creating build lib macosx     x _      creating build lib macosx     x _      psycopg  copying lib _json py build lib macosx     x _      psycopg  copying lib extras py build lib macosx     x _      psycopg  copying lib compat py build lib macosx     x _      psycopg  copying lib errorcodes py build lib macosx     x _      psycopg  copying lib tz py build lib macosx     x _      psycopg  copying lib _range py build lib macosx     x _      psycopg  copying lib _ipaddress py build lib macosx     x _      psycopg  copying lib _lru_cache py build lib macosx     x _      psycopg  copying lib __init__ py build lib macosx     x _      psycopg  copying lib extensions py build lib macosx     x _      psycopg  copying lib errors py build lib macosx     x _      psycopg  copying lib sql py build lib macosx     x _      psycopg  copying lib pool py build lib macosx     x _      psycopg  running build_ext building psycopg  _psycopg extension creating build temp macosx     x _      creating build temp macosx     x _      psycopg gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg psycopgmodule c o build temp macosx     x _      psycopg psycopgmodule o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg green c o build temp macosx     x _      psycopg green o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg pqpath c o build temp macosx     x _      psycopg pqpath o psycopg pqpath c     warning implicit conversion from enumeration type connstatustype to different enumeration type execstatustype wenum conversion pqstatus conn pgconn pqresultstatus pgres psycopg pqpath c     warning code will never be executed wunreachable code ret   psycopg pqpath c     warning implicit conversion from enumeration type connstatustype to different enumeration type execstatustype wenum conversion pqstatus curs conn pgconn pqresultstatus curs pgres   warnings generated gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg utils c o build temp macosx     x _      psycopg utils o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg bytes_format c o build temp macosx     x _      psycopg bytes_format o in file included from psycopg bytes_format c   in file included from psycopg psycopg h   psycopg config h     warning unused function dprintf wunused function static void dprintf const char fmt   warning generated gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg libpq_support c o build temp macosx     x _      psycopg libpq_support o in file included from psycopg libpq_support c   in file included from psycopg psycopg h   psycopg config h     warning unused function dprintf wunused function static void dprintf const char fmt   warning generated gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg win _support c o build temp macosx     x _      psycopg win _support o in file included from psycopg win _support c   in file included from psycopg psycopg h   psycopg config h     warning unused function dprintf wunused function static void dprintf const char fmt   warning generated gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg solaris_support c o build temp macosx     x _      psycopg solaris_support o in file included from psycopg solaris_support c   in file included from psycopg psycopg h   psycopg config h     warning unused function dprintf wunused function static void dprintf const char fmt   warning generated gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg connection_int c o build temp macosx     x _      psycopg connection_int o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg connection_type c o build temp macosx     x _      psycopg connection_type o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg cursor_int c o build temp macosx     x _      psycopg cursor_int o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg cursor_type c o build temp macosx     x _      psycopg cursor_type o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg column_type c o build temp macosx     x _      psycopg column_type o in file included from psycopg column_type c   in file included from psycopg psycopg h   psycopg config h     warning unused function dprintf wunused function static void dprintf const char fmt   warning generated gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg replication_connection_type c o build temp macosx     x _      psycopg replication_connection_type o in file included from psycopg replication_connection_type c   in file included from psycopg psycopg h   psycopg config h     warning unused function dprintf wunused function static void dprintf const char fmt   warning generated gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg replication_cursor_type c o build temp macosx     x _      psycopg replication_cursor_type o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg replication_message_type c o build temp macosx     x _      psycopg replication_message_type o in file included from psycopg replication_message_type c   in file included from psycopg psycopg h   psycopg config h     warning unused function dprintf wunused function static void dprintf const char fmt   warning generated gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg diagnostics_type c o build temp macosx     x _      psycopg diagnostics_type o in file included from psycopg diagnostics_type c   in file included from psycopg psycopg h   psycopg config h     warning unused function dprintf wunused function static void dprintf const char fmt   warning generated gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg error_type c o build temp macosx     x _      psycopg error_type o in file included from psycopg error_type c   in file included from psycopg psycopg h   psycopg config h     warning unused function dprintf wunused function static void dprintf const char fmt   warning generated gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg conninfo_type c o build temp macosx     x _      psycopg conninfo_type o in file included from psycopg conninfo_type c   in file included from psycopg psycopg h   psycopg config h     warning unused function dprintf wunused function static void dprintf const char fmt   warning generated gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg lobject_int c o build temp macosx     x _      psycopg lobject_int o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg lobject_type c o build temp macosx     x _      psycopg lobject_type o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg notify_type c o build temp macosx     x _      psycopg notify_type o in file included from psycopg notify_type c   in file included from psycopg psycopg h   psycopg config h     warning unused function dprintf wunused function static void dprintf const char fmt   warning generated gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg xid_type c o build temp macosx     x _      psycopg xid_type o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg adapter_asis c o build temp macosx     x _      psycopg adapter_asis o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg adapter_binary c o build temp macosx     x _      psycopg adapter_binary o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg adapter_datetime c o build temp macosx     x _      psycopg adapter_datetime o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg adapter_list c o build temp macosx     x _      psycopg adapter_list o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg adapter_pboolean c o build temp macosx     x _      psycopg adapter_pboolean o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg adapter_pdecimal c o build temp macosx     x _      psycopg adapter_pdecimal o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg adapter_pint c o build temp macosx     x _      psycopg adapter_pint o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg adapter_pfloat c o build temp macosx     x _      psycopg adapter_pfloat o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg adapter_qstring c o build temp macosx     x _      psycopg adapter_qstring o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg microprotocols c o build temp macosx     x _      psycopg microprotocols o gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg microprotocols_proto c o build temp macosx     x _      psycopg microprotocols_proto o in file included from psycopg microprotocols_proto c   in file included from psycopg psycopg h   psycopg config h     warning unused function dprintf wunused function static void dprintf const char fmt   warning generated gcc wno unused result wsign compare wunreachable code fno common dynamic dndebug g fwrapv o  wall arch x _  g dpsycopg_version       dt dec pq  ext lo  dpg_version_num   dhave_lo    i library frameworks python framework versions     include python    i i usr local include i usr local include postgresql server c psycopg typecast c o build temp macosx     x _      psycopg typecast o gcc bundle undefined dynamic_lookup arch x _  g build temp macosx     x _      psycopg psycopgmodule o build temp macosx     x _      psycopg green o build temp macosx     x _      psycopg pqpath o build temp macosx     x _      psycopg utils o build temp macosx     x _      psycopg bytes_format o build temp macosx     x _      psycopg libpq_support o build temp macosx     x _      psycopg win _support o build temp macosx     x _      psycopg solaris_support o build temp macosx     x _      psycopg connection_int o build temp macosx     x _      psycopg connection_type o build temp macosx     x _      psycopg cursor_int o build temp macosx     x _      psycopg cursor_type o build temp macosx     x _      psycopg column_type o build temp macosx     x _      psycopg replication_connection_type o build temp macosx     x _      psycopg replication_cursor_type o build temp macosx     x _      psycopg replication_message_type o build temp macosx     x _      psycopg diagnostics_type o build temp macosx     x _      psycopg error_type o build temp macosx     x _      psycopg conninfo_type o build temp macosx     x _      psycopg lobject_int o build temp macosx     x _      psycopg lobject_type o build temp macosx     x _      psycopg notify_type o build temp macosx     x _      psycopg xid_type o build temp macosx     x _      psycopg adapter_asis o build temp macosx     x _      psycopg adapter_binary o build temp macosx     x _      psycopg adapter_datetime o build temp macosx     x _      psycopg adapter_list o build temp macosx     x _      psycopg adapter_pboolean o build temp macosx     x _      psycopg adapter_pdecimal o build temp macosx     x _      psycopg adapter_pint o build temp macosx     x _      psycopg adapter_pfloat o build temp macosx     x _      psycopg adapter_qstring o build temp macosx     x _      psycopg microprotocols o build temp macosx     x _      psycopg microprotocols_proto o build temp macosx     x _      psycopg typecast o l usr local lib lpq lssl lcrypto o build lib macosx     x _      psycopg  _psycopg cpython   darwin so ld library not found for lssl clang error linker command failed with exit code   use v to see invocation error command gcc failed with exit status   error command errored out with exit status   users davidkronish dev citram mycampus backend citramenv bin python    u c import sys setuptools tokenize sys argv   private var folders  x lls w m l p qszpnrvzgw gp t pip install c yxmbq  psycopg  setup py __file__ private var folders  x lls w m l p qszpnrvzgw gp t pip install c yxmbq  psycopg  setup py f getattr tokenize open open __file__ code f read replace r n n f close exec compile code __file__ exec install record private var folders  x lls w m l p qszpnrvzgw gp t pip record  aciztvp install record txt single version externally managed compile install headers users davidkronish dev citram mycampus backend citramenv bin include site python    psycopg  check the logs for full command output,gcc cannot use lssl flag by default so you should install openssl brew install openssl export ldflags l usr local opt openssl     lib export cppflags i usr local opt openssl     include or install precompiled binary pip install psycopg  binary,"['django', 'python-3.x', 'psycopg2', 'requirements']","['i', 've', 'tried', 'to', 'manually', 'install', 'only', 'the', 'psycopg', 'module', 'as', 'well', 'as', 'with', 'a', 'pip', 'install', 'r', 'requirements', 'txt', 'if', 'anybody', 'has', 'encountered', 'this', 'error', 'before', 'please', 'provide', 'appreciated', 'guidance', 'error', 'failed', 'building', 'wheel', 'for', 'psycopg', 'running', 'setup', 'py', 'clean', 'for', 'psycopg', 'failed', 'to', 'build', 'psycopg', 'installing', 'collected', 'packages', 'psycopg', 'running', 'setup', 'py', 'install', 'for', 'psycopg', 'error', 'error', 'command', 'errored', 'out', 'with', 'exit', 'status', 'command', 'users', 'davidkronish', 'dev', 'citram', 'mycampus', 'backend', 'citramenv', 'bin', 'python', 'u', 'c', 'import', 'sys', 'setuptools', 'tokenize', 'sys', 'argv', 'private', 'var', 'folders', 'x', 'lls', 'w', 'm', 'l', 'p', 'qszpnrvzgw', 'gp', 't', 'pip', 'install', 'c', 'yxmbq', 'psycopg', 'setup', 'py', '__file__', 'private', 'var', 'folders', 'x', 'lls', 'w', 'm', 'l', 'p', 'qszpnrvzgw', 'gp', 't', 'pip', 'install', 'c', 'yxmbq', 'psycopg', 'setup', 'py', 'f', 'getattr', 'tokenize', 'open', 'open', '__file__', 'code', 'f', 'read', 'replace', 'r', 'n', 'n', 'f', 'close', 'exec', 'compile', 'code', '__file__', 'exec', 'install', 'record', 'private', 'var', 'folders', 'x', 'lls', 'w', 'm', 'l', 'p', 'qszpnrvzgw', 'gp', 't', 'pip', 'record', 'aciztvp', 'install', 'record', 'txt', 'single', 'version', 'externally', 'managed', 'compile', 'install', 'headers', 'users', 'davidkronish', 'dev', 'citram', 'mycampus', 'backend', 'citramenv', 'bin', 'include', 'site', 'python', 'psycopg', 'cwd', 'private', 'var', 'folders', 'x', 'lls', 'w', 'm', 'l', 'p', 'qszpnrvzgw', 'gp', 't', 'pip', 'install', 'c', 'yxmbq', 'psycopg', 'complete', 'output', 'lines', 'running', 'install', 'running', 'build', 'running', 'build_py', 'creating', 'build', 'creating', 'build', 'lib', 'macosx', 'x', '_', 'creating', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', '_json', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'extras', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'compat', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'errorcodes', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'tz', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', '_range', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', '_ipaddress', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', '_lru_cache', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', '__init__', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'extensions', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'errors', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'sql', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'pool', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'running', 'build_ext', 'building', 'psycopg', '_psycopg', 'extension', 'creating', 'build', 'temp', 'macosx', 'x', '_', 'creating', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'psycopgmodule', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'psycopgmodule', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'green', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'green', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'pqpath', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'pqpath', 'o', 'psycopg', 'pqpath', 'c', 'warning', 'implicit', 'conversion', 'from', 'enumeration', 'type', 'connstatustype', 'to', 'different', 'enumeration', 'type', 'execstatustype', 'wenum', 'conversion', 'pqstatus', 'conn', 'pgconn', 'pqresultstatus', 'pgres', 'psycopg', 'pqpath', 'c', 'warning', 'code', 'will', 'never', 'be', 'executed', 'wunreachable', 'code', 'ret', 'psycopg', 'pqpath', 'c', 'warning', 'implicit', 'conversion', 'from', 'enumeration', 'type', 'connstatustype', 'to', 'different', 'enumeration', 'type', 'execstatustype', 'wenum', 'conversion', 'pqstatus', 'curs', 'conn', 'pgconn', 'pqresultstatus', 'curs', 'pgres', 'warnings', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'utils', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'utils', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'bytes_format', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'bytes_format', 'o', 'in', 'file', 'included', 'from', 'psycopg', 'bytes_format', 'c', 'in', 'file', 'included', 'from', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'libpq_support', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'libpq_support', 'o', 'in', 'file', 'included', 'from', 'psycopg', 'libpq_support', 'c', 'in', 'file', 'included', 'from', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'win', '_support', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'win', '_support', 'o', 'in', 'file', 'included', 'from', 'psycopg', 'win', '_support', 'c', 'in', 'file', 'included', 'from', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'solaris_support', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'solaris_support', 'o', 'in', 'file', 'included', 'from', 'psycopg', 'solaris_support', 'c', 'in', 'file', 'included', 'from', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'connection_int', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'connection_int', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'connection_type', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'connection_type', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'cursor_int', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'cursor_int', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'cursor_type', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'cursor_type', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'column_type', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'column_type', 'o', 'in', 'file', 'included', 'from', 'psycopg', 'column_type', 'c', 'in', 'file', 'included', 'from', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'replication_connection_type', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'replication_connection_type', 'o', 'in', 'file', 'included', 'from', 'psycopg', 'replication_connection_type', 'c', 'in', 'file', 'included', 'from', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'replication_cursor_type', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'replication_cursor_type', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'replication_message_type', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'replication_message_type', 'o', 'in', 'file', 'included', 'from', 'psycopg', 'replication_message_type', 'c', 'in', 'file', 'included', 'from', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'diagnostics_type', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'diagnostics_type', 'o', 'in', 'file', 'included', 'from', 'psycopg', 'diagnostics_type', 'c', 'in', 'file', 'included', 'from', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'error_type', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'error_type', 'o', 'in', 'file', 'included', 'from', 'psycopg', 'error_type', 'c', 'in', 'file', 'included', 'from', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'conninfo_type', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'conninfo_type', 'o', 'in', 'file', 'included', 'from', 'psycopg', 'conninfo_type', 'c', 'in', 'file', 'included', 'from', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'lobject_int', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'lobject_int', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'lobject_type', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'lobject_type', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'notify_type', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'notify_type', 'o', 'in', 'file', 'included', 'from', 'psycopg', 'notify_type', 'c', 'in', 'file', 'included', 'from', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'xid_type', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'xid_type', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_asis', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_asis', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_binary', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_binary', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_datetime', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_datetime', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_list', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_list', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_pboolean', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pboolean', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_pdecimal', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pdecimal', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_pint', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pint', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_pfloat', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pfloat', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_qstring', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_qstring', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'microprotocols', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'microprotocols', 'o', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'microprotocols_proto', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'microprotocols_proto', 'o', 'in', 'file', 'included', 'from', 'psycopg', 'microprotocols_proto', 'c', 'in', 'file', 'included', 'from', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'o', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'i', 'library', 'frameworks', 'python', 'framework', 'versions', 'include', 'python', 'i', 'i', 'usr', 'local', 'include', 'i', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'typecast', 'c', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'typecast', 'o', 'gcc', 'bundle', 'undefined', 'dynamic_lookup', 'arch', 'x', '_', 'g', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'psycopgmodule', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'green', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'pqpath', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'utils', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'bytes_format', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'libpq_support', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'win', '_support', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'solaris_support', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'connection_int', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'connection_type', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'cursor_int', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'cursor_type', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'column_type', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'replication_connection_type', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'replication_cursor_type', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'replication_message_type', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'diagnostics_type', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'error_type', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'conninfo_type', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'lobject_int', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'lobject_type', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'notify_type', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'xid_type', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_asis', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_binary', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_datetime', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_list', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pboolean', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pdecimal', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pint', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pfloat', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_qstring', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'microprotocols', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'microprotocols_proto', 'o', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'typecast', 'o', 'l', 'usr', 'local', 'lib', 'lpq', 'lssl', 'lcrypto', 'o', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', '_psycopg', 'cpython', 'darwin', 'so', 'ld', 'library', 'not', 'found', 'for', 'lssl', 'clang', 'error', 'linker', 'command', 'failed', 'with', 'exit', 'code', 'use', 'v', 'to', 'see', 'invocation', 'error', 'command', 'gcc', 'failed', 'with', 'exit', 'status', 'error', 'command', 'errored', 'out', 'with', 'exit', 'status', 'users', 'davidkronish', 'dev', 'citram', 'mycampus', 'backend', 'citramenv', 'bin', 'python', 'u', 'c', 'import', 'sys', 'setuptools', 'tokenize', 'sys', 'argv', 'private', 'var', 'folders', 'x', 'lls', 'w', 'm', 'l', 'p', 'qszpnrvzgw', 'gp', 't', 'pip', 'install', 'c', 'yxmbq', 'psycopg', 'setup', 'py', '__file__', 'private', 'var', 'folders', 'x', 'lls', 'w', 'm', 'l', 'p', 'qszpnrvzgw', 'gp', 't', 'pip', 'install', 'c', 'yxmbq', 'psycopg', 'setup', 'py', 'f', 'getattr', 'tokenize', 'open', 'open', '__file__', 'code', 'f', 'read', 'replace', 'r', 'n', 'n', 'f', 'close', 'exec', 'compile', 'code', '__file__', 'exec', 'install', 'record', 'private', 'var', 'folders', 'x', 'lls', 'w', 'm', 'l', 'p', 'qszpnrvzgw', 'gp', 't', 'pip', 'record', 'aciztvp', 'install', 'record', 'txt', 'single', 'version', 'externally', 'managed', 'compile', 'install', 'headers', 'users', 'davidkronish', 'dev', 'citram', 'mycampus', 'backend', 'citramenv', 'bin', 'include', 'site', 'python', 'psycopg', 'check', 'the', 'logs', 'for', 'full', 'command', 'output']","['gcc', 'can', 'not', 'use', 'lssl', 'flag', 'by', 'default', 'so', 'you', 'should', 'install', 'openssl', 'brew', 'install', 'openssl', 'export', 'ldflags', 'l', 'usr', 'local', 'opt', 'openssl', 'lib', 'export', 'cppflags', 'i', 'usr', 'local', 'opt', 'openssl', 'include', 'or', 'install', 'precompiled', 'binary', 'pip', 'install', 'psycopg', 'binary']","['tried', 'manually', 'install', 'psycopg', 'module', 'well', 'pip', 'install', 'r', 'requirement', 'txt', 'anybody', 'ha', 'encountered', 'error', 'please', 'provide', 'appreciated', 'guidance', 'error', 'failed', 'building', 'wheel', 'psycopg', 'running', 'setup', 'py', 'clean', 'psycopg', 'failed', 'build', 'psycopg', 'installing', 'collected', 'package', 'psycopg', 'running', 'setup', 'py', 'install', 'psycopg', 'error', 'error', 'command', 'errored', 'exit', 'status', 'command', 'user', 'davidkronish', 'dev', 'citram', 'mycampus', 'backend', 'citramenv', 'bin', 'python', 'u', 'c', 'import', 'sys', 'setuptools', 'tokenize', 'sys', 'argv', 'private', 'var', 'folder', 'x', 'lls', 'w', 'l', 'p', 'qszpnrvzgw', 'gp', 'pip', 'install', 'c', 'yxmbq', 'psycopg', 'setup', 'py', '__file__', 'private', 'var', 'folder', 'x', 'lls', 'w', 'l', 'p', 'qszpnrvzgw', 'gp', 'pip', 'install', 'c', 'yxmbq', 'psycopg', 'setup', 'py', 'f', 'getattr', 'tokenize', 'open', 'open', '__file__', 'code', 'f', 'read', 'replace', 'r', 'n', 'n', 'f', 'close', 'exec', 'compile', 'code', '__file__', 'exec', 'install', 'record', 'private', 'var', 'folder', 'x', 'lls', 'w', 'l', 'p', 'qszpnrvzgw', 'gp', 'pip', 'record', 'aciztvp', 'install', 'record', 'txt', 'single', 'version', 'externally', 'managed', 'compile', 'install', 'header', 'user', 'davidkronish', 'dev', 'citram', 'mycampus', 'backend', 'citramenv', 'bin', 'include', 'site', 'python', 'psycopg', 'cwd', 'private', 'var', 'folder', 'x', 'lls', 'w', 'l', 'p', 'qszpnrvzgw', 'gp', 'pip', 'install', 'c', 'yxmbq', 'psycopg', 'complete', 'output', 'line', 'running', 'install', 'running', 'build', 'running', 'build_py', 'creating', 'build', 'creating', 'build', 'lib', 'macosx', 'x', '_', 'creating', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', '_json', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'extra', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'compat', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'errorcodes', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'tz', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', '_range', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', '_ipaddress', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', '_lru_cache', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', '__init__', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'extension', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'error', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'sql', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'copying', 'lib', 'pool', 'py', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', 'running', 'build_ext', 'building', 'psycopg', '_psycopg', 'extension', 'creating', 'build', 'temp', 'macosx', 'x', '_', 'creating', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'psycopgmodule', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'psycopgmodule', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'green', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'green', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'pqpath', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'pqpath', 'psycopg', 'pqpath', 'c', 'warning', 'implicit', 'conversion', 'enumeration', 'type', 'connstatustype', 'different', 'enumeration', 'type', 'execstatustype', 'wenum', 'conversion', 'pqstatus', 'conn', 'pgconn', 'pqresultstatus', 'pgres', 'psycopg', 'pqpath', 'c', 'warning', 'code', 'never', 'executed', 'wunreachable', 'code', 'ret', 'psycopg', 'pqpath', 'c', 'warning', 'implicit', 'conversion', 'enumeration', 'type', 'connstatustype', 'different', 'enumeration', 'type', 'execstatustype', 'wenum', 'conversion', 'pqstatus', 'cur', 'conn', 'pgconn', 'pqresultstatus', 'cur', 'pgres', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'utils', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'utils', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'bytes_format', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'bytes_format', 'file', 'included', 'psycopg', 'bytes_format', 'c', 'file', 'included', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'libpq_support', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'libpq_support', 'file', 'included', 'psycopg', 'libpq_support', 'c', 'file', 'included', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'win', '_support', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'win', '_support', 'file', 'included', 'psycopg', 'win', '_support', 'c', 'file', 'included', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'solaris_support', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'solaris_support', 'file', 'included', 'psycopg', 'solaris_support', 'c', 'file', 'included', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'connection_int', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'connection_int', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'connection_type', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'connection_type', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'cursor_int', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'cursor_int', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'cursor_type', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'cursor_type', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'column_type', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'column_type', 'file', 'included', 'psycopg', 'column_type', 'c', 'file', 'included', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'replication_connection_type', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'replication_connection_type', 'file', 'included', 'psycopg', 'replication_connection_type', 'c', 'file', 'included', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'replication_cursor_type', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'replication_cursor_type', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'replication_message_type', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'replication_message_type', 'file', 'included', 'psycopg', 'replication_message_type', 'c', 'file', 'included', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'diagnostics_type', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'diagnostics_type', 'file', 'included', 'psycopg', 'diagnostics_type', 'c', 'file', 'included', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'error_type', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'error_type', 'file', 'included', 'psycopg', 'error_type', 'c', 'file', 'included', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'conninfo_type', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'conninfo_type', 'file', 'included', 'psycopg', 'conninfo_type', 'c', 'file', 'included', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'lobject_int', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'lobject_int', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'lobject_type', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'lobject_type', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'notify_type', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'notify_type', 'file', 'included', 'psycopg', 'notify_type', 'c', 'file', 'included', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'xid_type', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'xid_type', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_asis', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_asis', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_binary', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_binary', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_datetime', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_datetime', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_list', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_list', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_pboolean', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pboolean', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_pdecimal', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pdecimal', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_pint', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pint', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_pfloat', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pfloat', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'adapter_qstring', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_qstring', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'microprotocols', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'microprotocols', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'microprotocols_proto', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'microprotocols_proto', 'file', 'included', 'psycopg', 'microprotocols_proto', 'c', 'file', 'included', 'psycopg', 'psycopg', 'h', 'psycopg', 'config', 'h', 'warning', 'unused', 'function', 'dprintf', 'wunused', 'function', 'static', 'void', 'dprintf', 'const', 'char', 'fmt', 'warning', 'generated', 'gcc', 'wno', 'unused', 'result', 'wsign', 'compare', 'wunreachable', 'code', 'fno', 'common', 'dynamic', 'dndebug', 'g', 'fwrapv', 'wall', 'arch', 'x', '_', 'g', 'dpsycopg_version', 'dt', 'dec', 'pq', 'ext', 'lo', 'dpg_version_num', 'dhave_lo', 'library', 'framework', 'python', 'framework', 'version', 'include', 'python', 'usr', 'local', 'include', 'usr', 'local', 'include', 'postgresql', 'server', 'c', 'psycopg', 'typecast', 'c', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'typecast', 'gcc', 'bundle', 'undefined', 'dynamic_lookup', 'arch', 'x', '_', 'g', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'psycopgmodule', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'green', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'pqpath', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'utils', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'bytes_format', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'libpq_support', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'win', '_support', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'solaris_support', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'connection_int', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'connection_type', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'cursor_int', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'cursor_type', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'column_type', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'replication_connection_type', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'replication_cursor_type', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'replication_message_type', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'diagnostics_type', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'error_type', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'conninfo_type', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'lobject_int', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'lobject_type', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'notify_type', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'xid_type', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_asis', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_binary', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_datetime', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_list', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pboolean', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pdecimal', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pint', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_pfloat', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'adapter_qstring', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'microprotocols', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'microprotocols_proto', 'build', 'temp', 'macosx', 'x', '_', 'psycopg', 'typecast', 'l', 'usr', 'local', 'lib', 'lpq', 'lssl', 'lcrypto', 'build', 'lib', 'macosx', 'x', '_', 'psycopg', '_psycopg', 'cpython', 'darwin', 'ld', 'library', 'found', 'lssl', 'clang', 'error', 'linker', 'command', 'failed', 'exit', 'code', 'use', 'v', 'see', 'invocation', 'error', 'command', 'gcc', 'failed', 'exit', 'status', 'error', 'command', 'errored', 'exit', 'status', 'user', 'davidkronish', 'dev', 'citram', 'mycampus', 'backend', 'citramenv', 'bin', 'python', 'u', 'c', 'import', 'sys', 'setuptools', 'tokenize', 'sys', 'argv', 'private', 'var', 'folder', 'x', 'lls', 'w', 'l', 'p', 'qszpnrvzgw', 'gp', 'pip', 'install', 'c', 'yxmbq', 'psycopg', 'setup', 'py', '__file__', 'private', 'var', 'folder', 'x', 'lls', 'w', 'l', 'p', 'qszpnrvzgw', 'gp', 'pip', 'install', 'c', 'yxmbq', 'psycopg', 'setup', 'py', 'f', 'getattr', 'tokenize', 'open', 'open', '__file__', 'code', 'f', 'read', 'replace', 'r', 'n', 'n', 'f', 'close', 'exec', 'compile', 'code', '__file__', 'exec', 'install', 'record', 'private', 'var', 'folder', 'x', 'lls', 'w', 'l', 'p', 'qszpnrvzgw', 'gp', 'pip', 'record', 'aciztvp', 'install', 'record', 'txt', 'single', 'version', 'externally', 'managed', 'compile', 'install', 'header', 'user', 'davidkronish', 'dev', 'citram', 'mycampus', 'backend', 'citramenv', 'bin', 'include', 'site', 'python', 'psycopg', 'check', 'log', 'full', 'command', 'output']","['gcc', 'can', 'not', 'use', 'lssl', 'flag', 'by', 'default', 'so', 'you', 'should', 'install', 'openssl', 'brew', 'install', 'openssl', 'export', 'ldflags', 'l', 'usr', 'local', 'opt', 'openssl', 'lib', 'export', 'cppflags', 'i', 'usr', 'local', 'opt', 'openssl', 'include', 'or', 'install', 'precompiled', 'binary', 'pip', 'install', 'psycopg', 'binary']",System Requirements and AWS,2,"{'neg': 0.055, 'neu': 0.882, 'pos': 0.062, 'compound': 0.8786}",0.08444444444444445,2,Python Libraries and Environment,3query
60151207,"How to build a conda environment with pytorch=0.3.1, since I keep getting conflicts","<p>I need to get an environment working with the following requirements, but it just won't do.
I have tried many things and always end up with something like below. Does anyone know how I can get an environment with the things that I need?</p>

<pre><code>conda create -n myenv python=3.5 pytorch=0.3.1
Collecting package metadata (repodata.json): done
Solving environment: - 
Found conflicts! Looking for incompatible packages.
This can take several minutes.  Press CTRL-C to abort.
failed                                                                                               

UnsatisfiableError: The following specifications were found to be incompatible with each other:



Package libffi conflicts for:
python=3.5 -&gt; libffi[version='3.2.*|&gt;=3.2.1,&lt;4.0a0']
Package numpy conflicts for:
pytorch=0.3.1 -&gt; numpy[version='&gt;=1.11.3,&lt;2.0a0']
Package openssl conflicts for:
python=3.5 -&gt; openssl[version='1.0.*|1.0.*,&gt;=1.0.2l,&lt;1.0.3a|&gt;=1.0.2m,&lt;1.0.3a|&gt;=1.0.2n,&lt;1.0.3a|&gt;=1.0.2o,&lt;1.0.3a|&gt;=1.0.2p,&lt;1.0.3a']
Package libstdcxx-ng conflicts for:
pytorch=0.3.1 -&gt; libstdcxx-ng[version='&gt;=5.4.0']
python=3.5 -&gt; libstdcxx-ng[version='&gt;=7.2.0|&gt;=7.3.0']
Package nccl conflicts for:
pytorch=0.3.1 -&gt; nccl[version='&lt;2']
Package libgcc-ng conflicts for:
pytorch=0.3.1 -&gt; libgcc-ng[version='&gt;=5.4.0']
python=3.5 -&gt; libgcc-ng[version='&gt;=7.2.0|&gt;=7.3.0']
Package readline conflicts for:
python=3.5 -&gt; readline[version='7.*|&gt;=7.0,&lt;8.0a0']
Package cudatoolkit conflicts for:
pytorch=0.3.1 -&gt; cudatoolkit=8.0
Package cudnn conflicts for:
pytorch=0.3.1 -&gt; cudnn[version='&gt;=7.0.5,&lt;=8.0a0']
Package cffi conflicts for:
pytorch=0.3.1 -&gt; cffi
Package tk conflicts for:
python=3.5 -&gt; tk[version='8.6.*|&gt;=8.6.7,&lt;8.7.0a0']
Package xz conflicts for:
python=3.5 -&gt; xz[version='&gt;=5.2.3,&lt;6.0a0|&gt;=5.2.4,&lt;6.0a0']
Package zlib conflicts for:
python=3.5 -&gt; zlib[version='&gt;=1.2.11,&lt;1.3.0a0']
Package python conflicts for:
pytorch=0.3.1 -&gt; python[version='&gt;=2.7,&lt;2.8.0a0|&gt;=3.5,&lt;3.6.0a0|&gt;=3.6,&lt;3.7.0a0']
Package sqlite conflicts for:
python=3.5 -&gt; sqlite[version='&gt;=3.20.1,&lt;4.0a0|&gt;=3.22.0,&lt;4.0a0|&gt;=3.23.1,&lt;4.0a0|&gt;=3.24.0,&lt;4.0a0']
Package pip conflicts for:
python=3.5 -&gt; pip
Package mkl conflicts for:
pytorch=0.3.1 -&gt; mkl[version='&gt;=2018.0.2,&lt;2019.0a0']
Package ncurses conflicts for:
python=3.5 -&gt; ncurses[version='6.0.*|&gt;=6.0,&lt;7.0a0|&gt;=6.1,&lt;7.0a0']
</code></pre>
",<python><pytorch><requirements><faster-rcnn><conflicting-libraries>,2020-02-10 13:12:53,1165,0,2,60162333,"<p>I'm afraid you need to reinstall your dependencies firstly which should be corresponding to pytorch version with 0.3.1 in your vitual environment. First step, install python-3.5, and then each dependency with specified version, and finally pytorch-0.3.1.</p>
",2020-02,i need to get an environment working with the following requirements but it just won t do i have tried many things and always end up with something like below does anyone know how i can get an environment with the things that i need conda create n myenv python     pytorch       collecting package metadata repodata json done solving environment found conflicts looking for incompatible packages this can take several minutes press ctrl c to abort failed unsatisfiableerror the following specifications were found to be incompatible with each other package libffi conflicts for python     libffi version              a  package numpy conflicts for pytorch       numpy version          a  package openssl conflicts for python     openssl version              l      a      m      a      n      a      o      a      p      a package libstdcxx ng conflicts for pytorch       libstdcxx ng version       python     libstdcxx ng version             package nccl conflicts for pytorch       nccl version   package libgcc ng conflicts for pytorch       libgcc ng version       python     libgcc ng version             package readline conflicts for python     readline version          a  package cudatoolkit conflicts for pytorch       cudatoolkit     package cudnn conflicts for pytorch       cudnn version          a  package cffi conflicts for pytorch       cffi package tk conflicts for python     tk version                a  package xz conflicts for python     xz version          a           a  package zlib conflicts for python     zlib version            a  package python conflicts for pytorch       python version          a           a           a  package sqlite conflicts for python     sqlite version          a           a           a           a  package pip conflicts for python     pip package mkl conflicts for pytorch       mkl version          a  package ncurses conflicts for python     ncurses version            a         a,i m afraid you need to reinstall your dependencies firstly which should be corresponding to pytorch version with       in your vitual environment first step install python     and then each dependency with specified version and finally pytorch,"['python', 'pytorch', 'requirements', 'faster-rcnn', 'conflicting-libraries']","['i', 'need', 'to', 'get', 'an', 'environment', 'working', 'with', 'the', 'following', 'requirements', 'but', 'it', 'just', 'won', 't', 'do', 'i', 'have', 'tried', 'many', 'things', 'and', 'always', 'end', 'up', 'with', 'something', 'like', 'below', 'does', 'anyone', 'know', 'how', 'i', 'can', 'get', 'an', 'environment', 'with', 'the', 'things', 'that', 'i', 'need', 'conda', 'create', 'n', 'myenv', 'python', 'pytorch', 'collecting', 'package', 'metadata', 'repodata', 'json', 'done', 'solving', 'environment', 'found', 'conflicts', 'looking', 'for', 'incompatible', 'packages', 'this', 'can', 'take', 'several', 'minutes', 'press', 'ctrl', 'c', 'to', 'abort', 'failed', 'unsatisfiableerror', 'the', 'following', 'specifications', 'were', 'found', 'to', 'be', 'incompatible', 'with', 'each', 'other', 'package', 'libffi', 'conflicts', 'for', 'python', 'libffi', 'version', 'a', 'package', 'numpy', 'conflicts', 'for', 'pytorch', 'numpy', 'version', 'a', 'package', 'openssl', 'conflicts', 'for', 'python', 'openssl', 'version', 'l', 'a', 'm', 'a', 'n', 'a', 'o', 'a', 'p', 'a', 'package', 'libstdcxx', 'ng', 'conflicts', 'for', 'pytorch', 'libstdcxx', 'ng', 'version', 'python', 'libstdcxx', 'ng', 'version', 'package', 'nccl', 'conflicts', 'for', 'pytorch', 'nccl', 'version', 'package', 'libgcc', 'ng', 'conflicts', 'for', 'pytorch', 'libgcc', 'ng', 'version', 'python', 'libgcc', 'ng', 'version', 'package', 'readline', 'conflicts', 'for', 'python', 'readline', 'version', 'a', 'package', 'cudatoolkit', 'conflicts', 'for', 'pytorch', 'cudatoolkit', 'package', 'cudnn', 'conflicts', 'for', 'pytorch', 'cudnn', 'version', 'a', 'package', 'cffi', 'conflicts', 'for', 'pytorch', 'cffi', 'package', 'tk', 'conflicts', 'for', 'python', 'tk', 'version', 'a', 'package', 'xz', 'conflicts', 'for', 'python', 'xz', 'version', 'a', 'a', 'package', 'zlib', 'conflicts', 'for', 'python', 'zlib', 'version', 'a', 'package', 'python', 'conflicts', 'for', 'pytorch', 'python', 'version', 'a', 'a', 'a', 'package', 'sqlite', 'conflicts', 'for', 'python', 'sqlite', 'version', 'a', 'a', 'a', 'a', 'package', 'pip', 'conflicts', 'for', 'python', 'pip', 'package', 'mkl', 'conflicts', 'for', 'pytorch', 'mkl', 'version', 'a', 'package', 'ncurses', 'conflicts', 'for', 'python', 'ncurses', 'version', 'a', 'a']","['i', 'm', 'afraid', 'you', 'need', 'to', 'reinstall', 'your', 'dependencies', 'firstly', 'which', 'should', 'be', 'corresponding', 'to', 'pytorch', 'version', 'with', 'in', 'your', 'vitual', 'environment', 'first', 'step', 'install', 'python', 'and', 'then', 'each', 'dependency', 'with', 'specified', 'version', 'and', 'finally', 'pytorch']","['need', 'get', 'environment', 'working', 'following', 'requirement', 'tried', 'many', 'thing', 'always', 'end', 'something', 'like', 'doe', 'anyone', 'know', 'get', 'environment', 'thing', 'need', 'conda', 'create', 'n', 'myenv', 'python', 'pytorch', 'collecting', 'package', 'metadata', 'repodata', 'json', 'done', 'solving', 'environment', 'found', 'conflict', 'looking', 'incompatible', 'package', 'take', 'several', 'minute', 'press', 'ctrl', 'c', 'abort', 'failed', 'unsatisfiableerror', 'following', 'specification', 'found', 'incompatible', 'package', 'libffi', 'conflict', 'python', 'libffi', 'version', 'package', 'numpy', 'conflict', 'pytorch', 'numpy', 'version', 'package', 'openssl', 'conflict', 'python', 'openssl', 'version', 'l', 'n', 'p', 'package', 'libstdcxx', 'ng', 'conflict', 'pytorch', 'libstdcxx', 'ng', 'version', 'python', 'libstdcxx', 'ng', 'version', 'package', 'nccl', 'conflict', 'pytorch', 'nccl', 'version', 'package', 'libgcc', 'ng', 'conflict', 'pytorch', 'libgcc', 'ng', 'version', 'python', 'libgcc', 'ng', 'version', 'package', 'readline', 'conflict', 'python', 'readline', 'version', 'package', 'cudatoolkit', 'conflict', 'pytorch', 'cudatoolkit', 'package', 'cudnn', 'conflict', 'pytorch', 'cudnn', 'version', 'package', 'cffi', 'conflict', 'pytorch', 'cffi', 'package', 'tk', 'conflict', 'python', 'tk', 'version', 'package', 'xz', 'conflict', 'python', 'xz', 'version', 'package', 'zlib', 'conflict', 'python', 'zlib', 'version', 'package', 'python', 'conflict', 'pytorch', 'python', 'version', 'package', 'sqlite', 'conflict', 'python', 'sqlite', 'version', 'package', 'pip', 'conflict', 'python', 'pip', 'package', 'mkl', 'conflict', 'pytorch', 'mkl', 'version', 'package', 'ncurses', 'conflict', 'python', 'ncurses', 'version']","['i', 'm', 'afraid', 'you', 'need', 'to', 'reinstall', 'your', 'dependency', 'firstly', 'which', 'should', 'be', 'corresponding', 'to', 'pytorch', 'version', 'with', 'in', 'your', 'vitual', 'environment', 'first', 'step', 'install', 'python', 'and', 'then', 'each', 'dependency', 'with', 'specified', 'version', 'and', 'finally', 'pytorch']",System Requirements and AWS,0,"{'neg': 0.256, 'neu': 0.71, 'pos': 0.033, 'compound': -0.996}",0.0,0,System Requirements and AWS,3query
60151207,"How to build a conda environment with pytorch=0.3.1, since I keep getting conflicts","<p>I need to get an environment working with the following requirements, but it just won't do.
I have tried many things and always end up with something like below. Does anyone know how I can get an environment with the things that I need?</p>

<pre><code>conda create -n myenv python=3.5 pytorch=0.3.1
Collecting package metadata (repodata.json): done
Solving environment: - 
Found conflicts! Looking for incompatible packages.
This can take several minutes.  Press CTRL-C to abort.
failed                                                                                               

UnsatisfiableError: The following specifications were found to be incompatible with each other:



Package libffi conflicts for:
python=3.5 -&gt; libffi[version='3.2.*|&gt;=3.2.1,&lt;4.0a0']
Package numpy conflicts for:
pytorch=0.3.1 -&gt; numpy[version='&gt;=1.11.3,&lt;2.0a0']
Package openssl conflicts for:
python=3.5 -&gt; openssl[version='1.0.*|1.0.*,&gt;=1.0.2l,&lt;1.0.3a|&gt;=1.0.2m,&lt;1.0.3a|&gt;=1.0.2n,&lt;1.0.3a|&gt;=1.0.2o,&lt;1.0.3a|&gt;=1.0.2p,&lt;1.0.3a']
Package libstdcxx-ng conflicts for:
pytorch=0.3.1 -&gt; libstdcxx-ng[version='&gt;=5.4.0']
python=3.5 -&gt; libstdcxx-ng[version='&gt;=7.2.0|&gt;=7.3.0']
Package nccl conflicts for:
pytorch=0.3.1 -&gt; nccl[version='&lt;2']
Package libgcc-ng conflicts for:
pytorch=0.3.1 -&gt; libgcc-ng[version='&gt;=5.4.0']
python=3.5 -&gt; libgcc-ng[version='&gt;=7.2.0|&gt;=7.3.0']
Package readline conflicts for:
python=3.5 -&gt; readline[version='7.*|&gt;=7.0,&lt;8.0a0']
Package cudatoolkit conflicts for:
pytorch=0.3.1 -&gt; cudatoolkit=8.0
Package cudnn conflicts for:
pytorch=0.3.1 -&gt; cudnn[version='&gt;=7.0.5,&lt;=8.0a0']
Package cffi conflicts for:
pytorch=0.3.1 -&gt; cffi
Package tk conflicts for:
python=3.5 -&gt; tk[version='8.6.*|&gt;=8.6.7,&lt;8.7.0a0']
Package xz conflicts for:
python=3.5 -&gt; xz[version='&gt;=5.2.3,&lt;6.0a0|&gt;=5.2.4,&lt;6.0a0']
Package zlib conflicts for:
python=3.5 -&gt; zlib[version='&gt;=1.2.11,&lt;1.3.0a0']
Package python conflicts for:
pytorch=0.3.1 -&gt; python[version='&gt;=2.7,&lt;2.8.0a0|&gt;=3.5,&lt;3.6.0a0|&gt;=3.6,&lt;3.7.0a0']
Package sqlite conflicts for:
python=3.5 -&gt; sqlite[version='&gt;=3.20.1,&lt;4.0a0|&gt;=3.22.0,&lt;4.0a0|&gt;=3.23.1,&lt;4.0a0|&gt;=3.24.0,&lt;4.0a0']
Package pip conflicts for:
python=3.5 -&gt; pip
Package mkl conflicts for:
pytorch=0.3.1 -&gt; mkl[version='&gt;=2018.0.2,&lt;2019.0a0']
Package ncurses conflicts for:
python=3.5 -&gt; ncurses[version='6.0.*|&gt;=6.0,&lt;7.0a0|&gt;=6.1,&lt;7.0a0']
</code></pre>
",<python><pytorch><requirements><faster-rcnn><conflicting-libraries>,2020-02-10 13:12:53,1165,0,2,70571299,"<p>You would first fire up a <a href=""https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html"" rel=""nofollow noreferrer"">conda environment</a> like so:</p>
<pre><code>conda create -n myenv python=3.6
</code></pre>
<p>You can then specify a specific pytorch version like so:</p>
<pre><code>conda install pytorch=0.4.1 cuda75 -c pytorch
</code></pre>
",2020-02,i need to get an environment working with the following requirements but it just won t do i have tried many things and always end up with something like below does anyone know how i can get an environment with the things that i need conda create n myenv python     pytorch       collecting package metadata repodata json done solving environment found conflicts looking for incompatible packages this can take several minutes press ctrl c to abort failed unsatisfiableerror the following specifications were found to be incompatible with each other package libffi conflicts for python     libffi version              a  package numpy conflicts for pytorch       numpy version          a  package openssl conflicts for python     openssl version              l      a      m      a      n      a      o      a      p      a package libstdcxx ng conflicts for pytorch       libstdcxx ng version       python     libstdcxx ng version             package nccl conflicts for pytorch       nccl version   package libgcc ng conflicts for pytorch       libgcc ng version       python     libgcc ng version             package readline conflicts for python     readline version          a  package cudatoolkit conflicts for pytorch       cudatoolkit     package cudnn conflicts for pytorch       cudnn version          a  package cffi conflicts for pytorch       cffi package tk conflicts for python     tk version                a  package xz conflicts for python     xz version          a           a  package zlib conflicts for python     zlib version            a  package python conflicts for pytorch       python version          a           a           a  package sqlite conflicts for python     sqlite version          a           a           a           a  package pip conflicts for python     pip package mkl conflicts for pytorch       mkl version          a  package ncurses conflicts for python     ncurses version            a         a,you would first fire up a conda environment like so conda create n myenv python     you can then specify a specific pytorch version like so conda install pytorch       cuda  c pytorch,"['python', 'pytorch', 'requirements', 'faster-rcnn', 'conflicting-libraries']","['i', 'need', 'to', 'get', 'an', 'environment', 'working', 'with', 'the', 'following', 'requirements', 'but', 'it', 'just', 'won', 't', 'do', 'i', 'have', 'tried', 'many', 'things', 'and', 'always', 'end', 'up', 'with', 'something', 'like', 'below', 'does', 'anyone', 'know', 'how', 'i', 'can', 'get', 'an', 'environment', 'with', 'the', 'things', 'that', 'i', 'need', 'conda', 'create', 'n', 'myenv', 'python', 'pytorch', 'collecting', 'package', 'metadata', 'repodata', 'json', 'done', 'solving', 'environment', 'found', 'conflicts', 'looking', 'for', 'incompatible', 'packages', 'this', 'can', 'take', 'several', 'minutes', 'press', 'ctrl', 'c', 'to', 'abort', 'failed', 'unsatisfiableerror', 'the', 'following', 'specifications', 'were', 'found', 'to', 'be', 'incompatible', 'with', 'each', 'other', 'package', 'libffi', 'conflicts', 'for', 'python', 'libffi', 'version', 'a', 'package', 'numpy', 'conflicts', 'for', 'pytorch', 'numpy', 'version', 'a', 'package', 'openssl', 'conflicts', 'for', 'python', 'openssl', 'version', 'l', 'a', 'm', 'a', 'n', 'a', 'o', 'a', 'p', 'a', 'package', 'libstdcxx', 'ng', 'conflicts', 'for', 'pytorch', 'libstdcxx', 'ng', 'version', 'python', 'libstdcxx', 'ng', 'version', 'package', 'nccl', 'conflicts', 'for', 'pytorch', 'nccl', 'version', 'package', 'libgcc', 'ng', 'conflicts', 'for', 'pytorch', 'libgcc', 'ng', 'version', 'python', 'libgcc', 'ng', 'version', 'package', 'readline', 'conflicts', 'for', 'python', 'readline', 'version', 'a', 'package', 'cudatoolkit', 'conflicts', 'for', 'pytorch', 'cudatoolkit', 'package', 'cudnn', 'conflicts', 'for', 'pytorch', 'cudnn', 'version', 'a', 'package', 'cffi', 'conflicts', 'for', 'pytorch', 'cffi', 'package', 'tk', 'conflicts', 'for', 'python', 'tk', 'version', 'a', 'package', 'xz', 'conflicts', 'for', 'python', 'xz', 'version', 'a', 'a', 'package', 'zlib', 'conflicts', 'for', 'python', 'zlib', 'version', 'a', 'package', 'python', 'conflicts', 'for', 'pytorch', 'python', 'version', 'a', 'a', 'a', 'package', 'sqlite', 'conflicts', 'for', 'python', 'sqlite', 'version', 'a', 'a', 'a', 'a', 'package', 'pip', 'conflicts', 'for', 'python', 'pip', 'package', 'mkl', 'conflicts', 'for', 'pytorch', 'mkl', 'version', 'a', 'package', 'ncurses', 'conflicts', 'for', 'python', 'ncurses', 'version', 'a', 'a']","['you', 'would', 'first', 'fire', 'up', 'a', 'conda', 'environment', 'like', 'so', 'conda', 'create', 'n', 'myenv', 'python', 'you', 'can', 'then', 'specify', 'a', 'specific', 'pytorch', 'version', 'like', 'so', 'conda', 'install', 'pytorch', 'cuda', 'c', 'pytorch']","['need', 'get', 'environment', 'working', 'following', 'requirement', 'tried', 'many', 'thing', 'always', 'end', 'something', 'like', 'doe', 'anyone', 'know', 'get', 'environment', 'thing', 'need', 'conda', 'create', 'n', 'myenv', 'python', 'pytorch', 'collecting', 'package', 'metadata', 'repodata', 'json', 'done', 'solving', 'environment', 'found', 'conflict', 'looking', 'incompatible', 'package', 'take', 'several', 'minute', 'press', 'ctrl', 'c', 'abort', 'failed', 'unsatisfiableerror', 'following', 'specification', 'found', 'incompatible', 'package', 'libffi', 'conflict', 'python', 'libffi', 'version', 'package', 'numpy', 'conflict', 'pytorch', 'numpy', 'version', 'package', 'openssl', 'conflict', 'python', 'openssl', 'version', 'l', 'n', 'p', 'package', 'libstdcxx', 'ng', 'conflict', 'pytorch', 'libstdcxx', 'ng', 'version', 'python', 'libstdcxx', 'ng', 'version', 'package', 'nccl', 'conflict', 'pytorch', 'nccl', 'version', 'package', 'libgcc', 'ng', 'conflict', 'pytorch', 'libgcc', 'ng', 'version', 'python', 'libgcc', 'ng', 'version', 'package', 'readline', 'conflict', 'python', 'readline', 'version', 'package', 'cudatoolkit', 'conflict', 'pytorch', 'cudatoolkit', 'package', 'cudnn', 'conflict', 'pytorch', 'cudnn', 'version', 'package', 'cffi', 'conflict', 'pytorch', 'cffi', 'package', 'tk', 'conflict', 'python', 'tk', 'version', 'package', 'xz', 'conflict', 'python', 'xz', 'version', 'package', 'zlib', 'conflict', 'python', 'zlib', 'version', 'package', 'python', 'conflict', 'pytorch', 'python', 'version', 'package', 'sqlite', 'conflict', 'python', 'sqlite', 'version', 'package', 'pip', 'conflict', 'python', 'pip', 'package', 'mkl', 'conflict', 'pytorch', 'mkl', 'version', 'package', 'ncurses', 'conflict', 'python', 'ncurses', 'version']","['you', 'would', 'first', 'fire', 'up', 'a', 'conda', 'environment', 'like', 'so', 'conda', 'create', 'n', 'myenv', 'python', 'you', 'can', 'then', 'specify', 'a', 'specific', 'pytorch', 'version', 'like', 'so', 'conda', 'install', 'pytorch', 'cuda', 'c', 'pytorch']",System Requirements and AWS,0,"{'neg': 0.256, 'neu': 0.71, 'pos': 0.033, 'compound': -0.996}",0.0,0,System Requirements and AWS,3query
60105569,Minimum hardware and software requirements to run mobile apps built with React Native,"<p>I am looking to source some testing Android and iOS devices for React Native apps. I've looked at the <a href=""https://facebook.github.io/react-native/docs/getting-started"" rel=""nofollow noreferrer"">official docs</a>, but there isn't a specific section for it.</p>
",<android><ios><react-native>,2020-02-07 00:31:05,4062,0,2,60106020,"<p>I don't think there is a set of 'minimum requirements' per se. React-native applications should work on most modern smartphones, and even some very old ones.</p>

<p>The caveat I would raise here is that it's more about how the app is written, there are many things you can do inside react-native that will kill performance on older devices, such as avoiding unnecessary UI element frame updates. (This can happen if you are hooking into the state changes non optimally)</p>

<p>I suggest having a look at some common anti-patterns when it comes to RN, a good place to start would be here: <a href=""https://facebook.github.io/react-native/docs/performance"" rel=""nofollow noreferrer"">https://facebook.github.io/react-native/docs/performance</a> (this page goes over common reasons why apps will be performing slowly.)</p>
",2020-02,i am looking to source some testing android and ios devices for react native apps i ve looked at the official docs but there isn t a specific section for it,i don t think there is a set of minimum requirements per se react native applications should work on most modern smartphones and even some very old ones the caveat i would raise here is that it s more about how the app is written there are many things you can do inside react native that will kill performance on older devices such as avoiding unnecessary ui element frame updates this can happen if you are hooking into the state changes non optimally i suggest having a look at some common anti patterns when it comes to rn a good place to start would be here https facebook github io react native docs performance this page goes over common reasons why apps will be performing slowly,"['android', 'ios', 'react-native']","['i', 'am', 'looking', 'to', 'source', 'some', 'testing', 'android', 'and', 'ios', 'devices', 'for', 'react', 'native', 'apps', 'i', 've', 'looked', 'at', 'the', 'official', 'docs', 'but', 'there', 'isn', 't', 'a', 'specific', 'section', 'for', 'it']","['i', 'don', 't', 'think', 'there', 'is', 'a', 'set', 'of', 'minimum', 'requirements', 'per', 'se', 'react', 'native', 'applications', 'should', 'work', 'on', 'most', 'modern', 'smartphones', 'and', 'even', 'some', 'very', 'old', 'ones', 'the', 'caveat', 'i', 'would', 'raise', 'here', 'is', 'that', 'it', 's', 'more', 'about', 'how', 'the', 'app', 'is', 'written', 'there', 'are', 'many', 'things', 'you', 'can', 'do', 'inside', 'react', 'native', 'that', 'will', 'kill', 'performance', 'on', 'older', 'devices', 'such', 'as', 'avoiding', 'unnecessary', 'ui', 'element', 'frame', 'updates', 'this', 'can', 'happen', 'if', 'you', 'are', 'hooking', 'into', 'the', 'state', 'changes', 'non', 'optimally', 'i', 'suggest', 'having', 'a', 'look', 'at', 'some', 'common', 'anti', 'patterns', 'when', 'it', 'comes', 'to', 'rn', 'a', 'good', 'place', 'to', 'start', 'would', 'be', 'here', 'https', 'facebook', 'github', 'io', 'react', 'native', 'docs', 'performance', 'this', 'page', 'goes', 'over', 'common', 'reasons', 'why', 'apps', 'will', 'be', 'performing', 'slowly']","['looking', 'source', 'testing', 'android', 'io', 'device', 'react', 'native', 'apps', 'looked', 'official', 'doc', 'specific', 'section']","['i', 'don', 't', 'think', 'there', 'is', 'a', 'set', 'of', 'minimum', 'requirement', 'per', 'se', 'react', 'native', 'application', 'should', 'work', 'on', 'most', 'modern', 'smartphones', 'and', 'even', 'some', 'very', 'old', 'one', 'the', 'caveat', 'i', 'would', 'raise', 'here', 'is', 'that', 'it', 's', 'more', 'about', 'how', 'the', 'app', 'is', 'written', 'there', 'are', 'many', 'thing', 'you', 'can', 'do', 'inside', 'react', 'native', 'that', 'will', 'kill', 'performance', 'on', 'older', 'device', 'such', 'a', 'avoiding', 'unnecessary', 'ui', 'element', 'frame', 'update', 'this', 'can', 'happen', 'if', 'you', 'are', 'hooking', 'into', 'the', 'state', 'change', 'non', 'optimally', 'i', 'suggest', 'having', 'a', 'look', 'at', 'some', 'common', 'anti', 'pattern', 'when', 'it', 'come', 'to', 'rn', 'a', 'good', 'place', 'to', 'start', 'would', 'be', 'here', 'http', 'facebook', 'github', 'io', 'react', 'native', 'doc', 'performance', 'this', 'page', 'go', 'over', 'common', 'reason', 'why', 'apps', 'will', 'be', 'performing', 'slowly']",Python Libraries and Environment,2,"{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}",0.0,2,Python Libraries and Environment,3query
60105569,Minimum hardware and software requirements to run mobile apps built with React Native,"<p>I am looking to source some testing Android and iOS devices for React Native apps. I've looked at the <a href=""https://facebook.github.io/react-native/docs/getting-started"" rel=""nofollow noreferrer"">official docs</a>, but there isn't a specific section for it.</p>
",<android><ios><react-native>,2020-02-07 00:31:05,4062,0,2,60107137,"<p>For your scenario there is no any official smart devices which are recommended to use to test React Native applications. </p>

<p>You can use any of smart devices of both Android and iOS to test your applications.</p>

<p><strong>For testing your applications on Android :</strong></p>

<ul>
<li>Android 4.1 (API 16) or newer. ( You can find minSDKVersion from android studio app gradle file)</li>
</ul>

<p>So you can run your application any smart device on or above Android OS 4.1</p>

<p><strong>For testing your applications on iOS :</strong></p>

<ul>
<li>iOS 9.0 or newer ( You can find Target min OS version from Deployment Info on XCODE )</li>
</ul>

<p>So you can run your application any smart device on or above iOS 9.0</p>

<p><strong>Note :</strong></p>

<ul>
<li>My solution is to find devices with different screen sizes.</li>
<li>If you are going to test iOS application try to use different screen sizes and different os Apple devices like -> iPhone SE , iPhone 6s , iPhone 8 Plus , iPhone X</li>
<li>For iPhones try to test both notch devices and normal old devices because you need to avoid notch issues with height and width.</li>
<li>For Android try to use different android os running devices which have different screen sizes with different brands.</li>
<li>As example try to use both low end budget and high end flagship models.</li>
</ul>

<p><strong><em>You can find requirements from official git repo <a href=""https://github.com/facebook/react-native#-requirements"" rel=""nofollow noreferrer"">here</a></em></strong></p>
",2020-02,i am looking to source some testing android and ios devices for react native apps i ve looked at the official docs but there isn t a specific section for it,for your scenario there is no any official smart devices which are recommended to use to test react native applications you can use any of smart devices of both android and ios to test your applications for testing your applications on android android     api   or newer you can find minsdkversion from android studio app gradle file so you can run your application any smart device on or above android os     for testing your applications on ios ios     or newer you can find target min os version from deployment info on xcode so you can run your application any smart device on or above ios     note my solution is to find devices with different screen sizes if you are going to test ios application try to use different screen sizes and different os apple devices like iphone se iphone  s iphone   plus iphone x for iphones try to test both notch devices and normal old devices because you need to avoid notch issues with height and width for android try to use different android os running devices which have different screen sizes with different brands as example try to use both low end budget and high end flagship models you can find requirements from official git repo here,"['android', 'ios', 'react-native']","['i', 'am', 'looking', 'to', 'source', 'some', 'testing', 'android', 'and', 'ios', 'devices', 'for', 'react', 'native', 'apps', 'i', 've', 'looked', 'at', 'the', 'official', 'docs', 'but', 'there', 'isn', 't', 'a', 'specific', 'section', 'for', 'it']","['for', 'your', 'scenario', 'there', 'is', 'no', 'any', 'official', 'smart', 'devices', 'which', 'are', 'recommended', 'to', 'use', 'to', 'test', 'react', 'native', 'applications', 'you', 'can', 'use', 'any', 'of', 'smart', 'devices', 'of', 'both', 'android', 'and', 'ios', 'to', 'test', 'your', 'applications', 'for', 'testing', 'your', 'applications', 'on', 'android', 'android', 'api', 'or', 'newer', 'you', 'can', 'find', 'minsdkversion', 'from', 'android', 'studio', 'app', 'gradle', 'file', 'so', 'you', 'can', 'run', 'your', 'application', 'any', 'smart', 'device', 'on', 'or', 'above', 'android', 'os', 'for', 'testing', 'your', 'applications', 'on', 'ios', 'ios', 'or', 'newer', 'you', 'can', 'find', 'target', 'min', 'os', 'version', 'from', 'deployment', 'info', 'on', 'xcode', 'so', 'you', 'can', 'run', 'your', 'application', 'any', 'smart', 'device', 'on', 'or', 'above', 'ios', 'note', 'my', 'solution', 'is', 'to', 'find', 'devices', 'with', 'different', 'screen', 'sizes', 'if', 'you', 'are', 'going', 'to', 'test', 'ios', 'application', 'try', 'to', 'use', 'different', 'screen', 'sizes', 'and', 'different', 'os', 'apple', 'devices', 'like', 'iphone', 'se', 'iphone', 's', 'iphone', 'plus', 'iphone', 'x', 'for', 'iphones', 'try', 'to', 'test', 'both', 'notch', 'devices', 'and', 'normal', 'old', 'devices', 'because', 'you', 'need', 'to', 'avoid', 'notch', 'issues', 'with', 'height', 'and', 'width', 'for', 'android', 'try', 'to', 'use', 'different', 'android', 'os', 'running', 'devices', 'which', 'have', 'different', 'screen', 'sizes', 'with', 'different', 'brands', 'as', 'example', 'try', 'to', 'use', 'both', 'low', 'end', 'budget', 'and', 'high', 'end', 'flagship', 'models', 'you', 'can', 'find', 'requirements', 'from', 'official', 'git', 'repo', 'here']","['looking', 'source', 'testing', 'android', 'io', 'device', 'react', 'native', 'apps', 'looked', 'official', 'doc', 'specific', 'section']","['for', 'your', 'scenario', 'there', 'is', 'no', 'any', 'official', 'smart', 'device', 'which', 'are', 'recommended', 'to', 'use', 'to', 'test', 'react', 'native', 'application', 'you', 'can', 'use', 'any', 'of', 'smart', 'device', 'of', 'both', 'android', 'and', 'io', 'to', 'test', 'your', 'application', 'for', 'testing', 'your', 'application', 'on', 'android', 'android', 'api', 'or', 'newer', 'you', 'can', 'find', 'minsdkversion', 'from', 'android', 'studio', 'app', 'gradle', 'file', 'so', 'you', 'can', 'run', 'your', 'application', 'any', 'smart', 'device', 'on', 'or', 'above', 'android', 'o', 'for', 'testing', 'your', 'application', 'on', 'io', 'io', 'or', 'newer', 'you', 'can', 'find', 'target', 'min', 'o', 'version', 'from', 'deployment', 'info', 'on', 'xcode', 'so', 'you', 'can', 'run', 'your', 'application', 'any', 'smart', 'device', 'on', 'or', 'above', 'io', 'note', 'my', 'solution', 'is', 'to', 'find', 'device', 'with', 'different', 'screen', 'size', 'if', 'you', 'are', 'going', 'to', 'test', 'io', 'application', 'try', 'to', 'use', 'different', 'screen', 'size', 'and', 'different', 'o', 'apple', 'device', 'like', 'iphone', 'se', 'iphone', 's', 'iphone', 'plus', 'iphone', 'x', 'for', 'iphones', 'try', 'to', 'test', 'both', 'notch', 'device', 'and', 'normal', 'old', 'device', 'because', 'you', 'need', 'to', 'avoid', 'notch', 'issue', 'with', 'height', 'and', 'width', 'for', 'android', 'try', 'to', 'use', 'different', 'android', 'o', 'running', 'device', 'which', 'have', 'different', 'screen', 'size', 'with', 'different', 'brand', 'a', 'example', 'try', 'to', 'use', 'both', 'low', 'end', 'budget', 'and', 'high', 'end', 'flagship', 'model', 'you', 'can', 'find', 'requirement', 'from', 'official', 'git', 'repo', 'here']",Python Libraries and Environment,2,"{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}",0.0,2,Python Libraries and Environment,3query
59739151,NP Hard's relation to Requirements Engineering,"<p>I want to know about NP-Hard from a requirements engineering point of view and not mathematical. Any input is appreciated.</p>
",<requirements><np><np-hard><requirements-management>,2020-01-14 17:44:17,40,0,1,59740361,"<p><a href=""https://en.wikipedia.org/wiki/Requirements_engineering"" rel=""nofollow noreferrer"">Requirements engineering</a> is the process of defining, documenting and maintaining requirements in the engineering design process.The only connection to NP-hard problems I can imagine is the following:<br>
If a problem should be solved by an algorithm, require that an algorithm is used that is not NP-hard.<br>
NP-hard means essentially (not mathematically) that one has to compute all possible solutions to a problem, and than select the best one.<br>
The typical example is the <a href=""https://en.wikipedia.org/wiki/Travelling_salesman_problem"" rel=""nofollow noreferrer"">Traveling Salesman Problem</a>:<br>
Given a number of cities to visit, find the shortest visit that visited each city once.<br>
To find the shortest route, all possible routes have to be constructed, and the shortest one has then to be selected. The time to find this best solution grows exponentially with the number of cities, i.e. for a larger number of cities it is not solvable.<br>
PS: Of course, there are algorithms that solve this particular problem pretty well in reasonable time.</p>
",2020-01,i want to know about np hard from a requirements engineering point of view and not mathematical any input is appreciated,requirements engineering is the process of defining documenting and maintaining requirements in the engineering design process the only connection to np hard problems i can imagine is the following if a problem should be solved by an algorithm require that an algorithm is used that is not np hard np hard means essentially not mathematically that one has to compute all possible solutions to a problem and than select the best one the typical example is the traveling salesman problem given a number of cities to visit find the shortest visit that visited each city once to find the shortest route all possible routes have to be constructed and the shortest one has then to be selected the time to find this best solution grows exponentially with the number of cities i e for a larger number of cities it is not solvable ps of course there are algorithms that solve this particular problem pretty well in reasonable time,"['requirements', 'np', 'np-hard', 'requirements-management']","['i', 'want', 'to', 'know', 'about', 'np', 'hard', 'from', 'a', 'requirements', 'engineering', 'point', 'of', 'view', 'and', 'not', 'mathematical', 'any', 'input', 'is', 'appreciated']","['requirements', 'engineering', 'is', 'the', 'process', 'of', 'defining', 'documenting', 'and', 'maintaining', 'requirements', 'in', 'the', 'engineering', 'design', 'process', 'the', 'only', 'connection', 'to', 'np', 'hard', 'problems', 'i', 'can', 'imagine', 'is', 'the', 'following', 'if', 'a', 'problem', 'should', 'be', 'solved', 'by', 'an', 'algorithm', 'require', 'that', 'an', 'algorithm', 'is', 'used', 'that', 'is', 'not', 'np', 'hard', 'np', 'hard', 'means', 'essentially', 'not', 'mathematically', 'that', 'one', 'has', 'to', 'compute', 'all', 'possible', 'solutions', 'to', 'a', 'problem', 'and', 'than', 'select', 'the', 'best', 'one', 'the', 'typical', 'example', 'is', 'the', 'traveling', 'salesman', 'problem', 'given', 'a', 'number', 'of', 'cities', 'to', 'visit', 'find', 'the', 'shortest', 'visit', 'that', 'visited', 'each', 'city', 'once', 'to', 'find', 'the', 'shortest', 'route', 'all', 'possible', 'routes', 'have', 'to', 'be', 'constructed', 'and', 'the', 'shortest', 'one', 'has', 'then', 'to', 'be', 'selected', 'the', 'time', 'to', 'find', 'this', 'best', 'solution', 'grows', 'exponentially', 'with', 'the', 'number', 'of', 'cities', 'i', 'e', 'for', 'a', 'larger', 'number', 'of', 'cities', 'it', 'is', 'not', 'solvable', 'ps', 'of', 'course', 'there', 'are', 'algorithms', 'that', 'solve', 'this', 'particular', 'problem', 'pretty', 'well', 'in', 'reasonable', 'time']","['want', 'know', 'np', 'hard', 'requirement', 'engineering', 'point', 'view', 'mathematical', 'input', 'appreciated']","['requirement', 'engineering', 'is', 'the', 'process', 'of', 'defining', 'documenting', 'and', 'maintaining', 'requirement', 'in', 'the', 'engineering', 'design', 'process', 'the', 'only', 'connection', 'to', 'np', 'hard', 'problem', 'i', 'can', 'imagine', 'is', 'the', 'following', 'if', 'a', 'problem', 'should', 'be', 'solved', 'by', 'an', 'algorithm', 'require', 'that', 'an', 'algorithm', 'is', 'used', 'that', 'is', 'not', 'np', 'hard', 'np', 'hard', 'mean', 'essentially', 'not', 'mathematically', 'that', 'one', 'ha', 'to', 'compute', 'all', 'possible', 'solution', 'to', 'a', 'problem', 'and', 'than', 'select', 'the', 'best', 'one', 'the', 'typical', 'example', 'is', 'the', 'traveling', 'salesman', 'problem', 'given', 'a', 'number', 'of', 'city', 'to', 'visit', 'find', 'the', 'shortest', 'visit', 'that', 'visited', 'each', 'city', 'once', 'to', 'find', 'the', 'shortest', 'route', 'all', 'possible', 'route', 'have', 'to', 'be', 'constructed', 'and', 'the', 'shortest', 'one', 'ha', 'then', 'to', 'be', 'selected', 'the', 'time', 'to', 'find', 'this', 'best', 'solution', 'grows', 'exponentially', 'with', 'the', 'number', 'of', 'city', 'i', 'e', 'for', 'a', 'larger', 'number', 'of', 'city', 'it', 'is', 'not', 'solvable', 'p', 'of', 'course', 'there', 'are', 'algorithm', 'that', 'solve', 'this', 'particular', 'problem', 'pretty', 'well', 'in', 'reasonable', 'time']",Python Package Installation and Management,3,"{'neg': 0.0, 'neu': 0.933, 'pos': 0.067, 'compound': 0.0772}",0.0,3,Python Package Installation and Management,3query
59734348,Is this Use Case correct?,"<p>Its my first time making a use case and this is for my coursework.
I had to follow the case study below.</p>

<blockquote>
  <p><strong>Case Study 8:</strong> Warehouse Control System (WCS)<br/>
  A warehouse distributes health food and related products. Customers order a particular
  product and quantity from the warehouse. The Warehouse Control System WCS saves the
  order and provides to the customer the order number. The WCS generates a pick list and
  shopping label, which tells the order-picker person how many of each item to pick to fulfil
  the order. The order-picker picks the items, places them in the box, and places the shipping
  label on it. The order-picker then uses the WCS to specify whether the order is ready or
  not. Then the manager sends the order number, address, and the payment data to the
  shipping company. At the end of the day, the shipping company arrives to pick up all the
  orders. The inventory of the product in stock is carried out by the staff, but in others, it is
  outsourced to an external company. Each staff has a specific function which is either to
  raise an order or check the re-order level of the products in stock.<br/>
  The company wants to create a computer system that allows employees and external
  companies to access the application system on desktop. Model, design and implement a
  GUI client that can access the database using Visual Studio or any other software
  development package. The database must be designed from the class model and the entity
  data model using MS Access or Oracle database.</p>
</blockquote>

<p>I'm not sure:  should the Warehouse Control System (WCS) be an actor ? If not how to make the use case without it? </p>

<p>Here the use case I made:</p>

<p><a href=""https://i.stack.imgur.com/w9AAT.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/w9AAT.png"" alt=""enter image description here""></a></p>
",<uml><modeling><use-case><requirements><use-case-diagram>,2020-01-14 13:03:45,62,1,1,59734483,"<p>The WCS is the system under consideration (the blue boundary).</p>

<p>Some observations:</p>

<ul>
<li>Use verb-subject(-object) to name use cases</li>
<li><code>Order ready</code> and the like are no use cases</li>
<li>Try to not start  functional decomposition (like it seems you did with that <code>Order ready</code></li>
</ul>

<p>I recommend to read Bittner/Spence about use cases as usual.</p>
",2020-01,its my first time making a use case and this is for my coursework i had to follow the case study below case study   warehouse control system wcs a warehouse distributes health food and related products customers order a particular product and quantity from the warehouse the warehouse control system wcs saves the order and provides to the customer the order number the wcs generates a pick list and shopping label which tells the order picker person how many of each item to pick to fulfil the order the order picker picks the items places them in the box and places the shipping label on it the order picker then uses the wcs to specify whether the order is ready or not then the manager sends the order number address and the payment data to the shipping company at the end of the day the shipping company arrives to pick up all the orders the inventory of the product in stock is carried out by the staff but in others it is outsourced to an external company each staff has a specific function which is either to raise an order or check the re order level of the products in stock the company wants to create a computer system that allows employees and external companies to access the application system on desktop model design and implement a gui client that can access the database using visual studio or any other software development package the database must be designed from the class model and the entity data model using ms access or oracle database i m not sure should the warehouse control system wcs be an actor if not how to make the use case without it here the use case i made,the wcs is the system under consideration the blue boundary some observations use verb subject object to name use cases order ready and the like are no use cases try to not start functional decomposition like it seems you did with that order ready i recommend to read bittner spence about use cases as usual,"['uml', 'modeling', 'use-case', 'requirements', 'use-case-diagram']","['its', 'my', 'first', 'time', 'making', 'a', 'use', 'case', 'and', 'this', 'is', 'for', 'my', 'coursework', 'i', 'had', 'to', 'follow', 'the', 'case', 'study', 'below', 'case', 'study', 'warehouse', 'control', 'system', 'wcs', 'a', 'warehouse', 'distributes', 'health', 'food', 'and', 'related', 'products', 'customers', 'order', 'a', 'particular', 'product', 'and', 'quantity', 'from', 'the', 'warehouse', 'the', 'warehouse', 'control', 'system', 'wcs', 'saves', 'the', 'order', 'and', 'provides', 'to', 'the', 'customer', 'the', 'order', 'number', 'the', 'wcs', 'generates', 'a', 'pick', 'list', 'and', 'shopping', 'label', 'which', 'tells', 'the', 'order', 'picker', 'person', 'how', 'many', 'of', 'each', 'item', 'to', 'pick', 'to', 'fulfil', 'the', 'order', 'the', 'order', 'picker', 'picks', 'the', 'items', 'places', 'them', 'in', 'the', 'box', 'and', 'places', 'the', 'shipping', 'label', 'on', 'it', 'the', 'order', 'picker', 'then', 'uses', 'the', 'wcs', 'to', 'specify', 'whether', 'the', 'order', 'is', 'ready', 'or', 'not', 'then', 'the', 'manager', 'sends', 'the', 'order', 'number', 'address', 'and', 'the', 'payment', 'data', 'to', 'the', 'shipping', 'company', 'at', 'the', 'end', 'of', 'the', 'day', 'the', 'shipping', 'company', 'arrives', 'to', 'pick', 'up', 'all', 'the', 'orders', 'the', 'inventory', 'of', 'the', 'product', 'in', 'stock', 'is', 'carried', 'out', 'by', 'the', 'staff', 'but', 'in', 'others', 'it', 'is', 'outsourced', 'to', 'an', 'external', 'company', 'each', 'staff', 'has', 'a', 'specific', 'function', 'which', 'is', 'either', 'to', 'raise', 'an', 'order', 'or', 'check', 'the', 're', 'order', 'level', 'of', 'the', 'products', 'in', 'stock', 'the', 'company', 'wants', 'to', 'create', 'a', 'computer', 'system', 'that', 'allows', 'employees', 'and', 'external', 'companies', 'to', 'access', 'the', 'application', 'system', 'on', 'desktop', 'model', 'design', 'and', 'implement', 'a', 'gui', 'client', 'that', 'can', 'access', 'the', 'database', 'using', 'visual', 'studio', 'or', 'any', 'other', 'software', 'development', 'package', 'the', 'database', 'must', 'be', 'designed', 'from', 'the', 'class', 'model', 'and', 'the', 'entity', 'data', 'model', 'using', 'ms', 'access', 'or', 'oracle', 'database', 'i', 'm', 'not', 'sure', 'should', 'the', 'warehouse', 'control', 'system', 'wcs', 'be', 'an', 'actor', 'if', 'not', 'how', 'to', 'make', 'the', 'use', 'case', 'without', 'it', 'here', 'the', 'use', 'case', 'i', 'made']","['the', 'wcs', 'is', 'the', 'system', 'under', 'consideration', 'the', 'blue', 'boundary', 'some', 'observations', 'use', 'verb', 'subject', 'object', 'to', 'name', 'use', 'cases', 'order', 'ready', 'and', 'the', 'like', 'are', 'no', 'use', 'cases', 'try', 'to', 'not', 'start', 'functional', 'decomposition', 'like', 'it', 'seems', 'you', 'did', 'with', 'that', 'order', 'ready', 'i', 'recommend', 'to', 'read', 'bittner', 'spence', 'about', 'use', 'cases', 'as', 'usual']","['first', 'time', 'making', 'use', 'case', 'coursework', 'follow', 'case', 'study', 'case', 'study', 'warehouse', 'control', 'system', 'wcs', 'warehouse', 'distributes', 'health', 'food', 'related', 'product', 'customer', 'order', 'particular', 'product', 'quantity', 'warehouse', 'warehouse', 'control', 'system', 'wcs', 'save', 'order', 'provides', 'customer', 'order', 'number', 'wcs', 'generates', 'pick', 'list', 'shopping', 'label', 'tell', 'order', 'picker', 'person', 'many', 'item', 'pick', 'fulfil', 'order', 'order', 'picker', 'pick', 'item', 'place', 'box', 'place', 'shipping', 'label', 'order', 'picker', 'us', 'wcs', 'specify', 'whether', 'order', 'ready', 'manager', 'sends', 'order', 'number', 'address', 'payment', 'data', 'shipping', 'company', 'end', 'day', 'shipping', 'company', 'arrives', 'pick', 'order', 'inventory', 'product', 'stock', 'carried', 'staff', 'others', 'outsourced', 'external', 'company', 'staff', 'ha', 'specific', 'function', 'either', 'raise', 'order', 'check', 'order', 'level', 'product', 'stock', 'company', 'want', 'create', 'computer', 'system', 'allows', 'employee', 'external', 'company', 'access', 'application', 'system', 'desktop', 'model', 'design', 'implement', 'gui', 'client', 'access', 'database', 'using', 'visual', 'studio', 'software', 'development', 'package', 'database', 'must', 'designed', 'class', 'model', 'entity', 'data', 'model', 'using', 'access', 'oracle', 'database', 'sure', 'warehouse', 'control', 'system', 'wcs', 'actor', 'make', 'use', 'case', 'without', 'use', 'case', 'made']","['the', 'wcs', 'is', 'the', 'system', 'under', 'consideration', 'the', 'blue', 'boundary', 'some', 'observation', 'use', 'verb', 'subject', 'object', 'to', 'name', 'use', 'case', 'order', 'ready', 'and', 'the', 'like', 'are', 'no', 'use', 'case', 'try', 'to', 'not', 'start', 'functional', 'decomposition', 'like', 'it', 'seems', 'you', 'did', 'with', 'that', 'order', 'ready', 'i', 'recommend', 'to', 'read', 'bittner', 'spence', 'about', 'use', 'case', 'a', 'usual']",Python Libraries and Environment,4,"{'neg': 0.008, 'neu': 0.968, 'pos': 0.024, 'compound': 0.3853}",0.07847222222222222,4,Building and Compiling Python Projects,3query
59585038,Best practice on mocdeling threshold (T) and objective (O) requirements in SysML?,"<p>I have considered making a new requirement stereotype for which I can make threshold and objective attributes.  That is fine as far as capturing the requirement goes, but then becomes ugly when trying to do verification.  I'm starting to think they must be captured as separate requirements, which may also be ugly when doing traceability, satisfactions and verifications.  </p>

<p>For example, my requirement says ""The system shall be no more than 100kg. (T)"" and ""The system shall be no more than 80kg. (O)"" </p>

<p>Tracing this (or a similarly stated requirement) becomes ""ugly"" when making a test plan and showing which requirement has been satisfied.  If (O) is satisfied, then clearly (T) is also. However, the system will still pass test even though it may fail the verification for (O).  Perhaps it is standard to carry some requirements (O) that are not met.  I am new to this modeling method-so just curious. I wanted to know if there is already a best practice out there. I have been looking and haven't found anything that addresses this.</p>
",<uml><requirements><sysml><requirements-management>,2020-01-03 20:35:55,592,0,1,59757684,"<p>From what I understood, you want to model, that a certain performance requirement has two values, a threshold and an objective. Meeting the objective is optional, but meeting the threshold is mandatory. In the test plan, the requirement will be shown as satisfied, if the design meets the threshold. Whether it also meets the objective could be evaluated with a model report, but that is only informative and doesn’t have any effect on the test outcome.</p>

<p>I would create a new stereotype «performance requirement» specializing «abstractRequirement» and «ConstraintBlock» (as described in the SysML specification Annex E.8.2). When you use this Stereotype, you need to add three parameters: <code>actualMass</code>, <code>thresholdMass</code> and <code>objectiveMass</code>. The constraint will be <code>{actualMass&lt;thresholdMass}</code>. The <code>objectiveMass</code> is then just informative (I have to think it through, how this could get used for reporting).</p>

<p>Another possibility would be to add a <code>mandatory/optional</code> field to the performance stereotype and use <code>optional</code> for objectives.</p>
",2020-01,i have considered making a new requirement stereotype for which i can make threshold and objective attributes that is fine as far as capturing the requirement goes but then becomes ugly when trying to do verification i m starting to think they must be captured as separate requirements which may also be ugly when doing traceability satisfactions and verifications for example my requirement says the system shall be no more than  kg t and the system shall be no more than  kg o tracing this or a similarly stated requirement becomes ugly when making a test plan and showing which requirement has been satisfied if o is satisfied then clearly t is also however the system will still pass test even though it may fail the verification for o perhaps it is standard to carry some requirements o that are not met i am new to this modeling method so just curious i wanted to know if there is already a best practice out there i have been looking and haven t found anything that addresses this,from what i understood you want to model that a certain performance requirement has two values a threshold and an objective meeting the objective is optional but meeting the threshold is mandatory in the test plan the requirement will be shown as satisfied if the design meets the threshold whether it also meets the objective could be evaluated with a model report but that is only informative and doesn t have any effect on the test outcome i would create a new stereotype performance requirement specializing abstractrequirement and constraintblock as described in the sysml specification annex e     when you use this stereotype you need to add three parameters actualmass thresholdmass and objectivemass the constraint will be actualmass thresholdmass the objectivemass is then just informative i have to think it through how this could get used for reporting another possibility would be to add a mandatory optional field to the performance stereotype and use optional for objectives,"['uml', 'requirements', 'sysml', 'requirements-management']","['i', 'have', 'considered', 'making', 'a', 'new', 'requirement', 'stereotype', 'for', 'which', 'i', 'can', 'make', 'threshold', 'and', 'objective', 'attributes', 'that', 'is', 'fine', 'as', 'far', 'as', 'capturing', 'the', 'requirement', 'goes', 'but', 'then', 'becomes', 'ugly', 'when', 'trying', 'to', 'do', 'verification', 'i', 'm', 'starting', 'to', 'think', 'they', 'must', 'be', 'captured', 'as', 'separate', 'requirements', 'which', 'may', 'also', 'be', 'ugly', 'when', 'doing', 'traceability', 'satisfactions', 'and', 'verifications', 'for', 'example', 'my', 'requirement', 'says', 'the', 'system', 'shall', 'be', 'no', 'more', 'than', 'kg', 't', 'and', 'the', 'system', 'shall', 'be', 'no', 'more', 'than', 'kg', 'o', 'tracing', 'this', 'or', 'a', 'similarly', 'stated', 'requirement', 'becomes', 'ugly', 'when', 'making', 'a', 'test', 'plan', 'and', 'showing', 'which', 'requirement', 'has', 'been', 'satisfied', 'if', 'o', 'is', 'satisfied', 'then', 'clearly', 't', 'is', 'also', 'however', 'the', 'system', 'will', 'still', 'pass', 'test', 'even', 'though', 'it', 'may', 'fail', 'the', 'verification', 'for', 'o', 'perhaps', 'it', 'is', 'standard', 'to', 'carry', 'some', 'requirements', 'o', 'that', 'are', 'not', 'met', 'i', 'am', 'new', 'to', 'this', 'modeling', 'method', 'so', 'just', 'curious', 'i', 'wanted', 'to', 'know', 'if', 'there', 'is', 'already', 'a', 'best', 'practice', 'out', 'there', 'i', 'have', 'been', 'looking', 'and', 'haven', 't', 'found', 'anything', 'that', 'addresses', 'this']","['from', 'what', 'i', 'understood', 'you', 'want', 'to', 'model', 'that', 'a', 'certain', 'performance', 'requirement', 'has', 'two', 'values', 'a', 'threshold', 'and', 'an', 'objective', 'meeting', 'the', 'objective', 'is', 'optional', 'but', 'meeting', 'the', 'threshold', 'is', 'mandatory', 'in', 'the', 'test', 'plan', 'the', 'requirement', 'will', 'be', 'shown', 'as', 'satisfied', 'if', 'the', 'design', 'meets', 'the', 'threshold', 'whether', 'it', 'also', 'meets', 'the', 'objective', 'could', 'be', 'evaluated', 'with', 'a', 'model', 'report', 'but', 'that', 'is', 'only', 'informative', 'and', 'doesn', 't', 'have', 'any', 'effect', 'on', 'the', 'test', 'outcome', 'i', 'would', 'create', 'a', 'new', 'stereotype', 'performance', 'requirement', 'specializing', 'abstractrequirement', 'and', 'constraintblock', 'as', 'described', 'in', 'the', 'sysml', 'specification', 'annex', 'e', 'when', 'you', 'use', 'this', 'stereotype', 'you', 'need', 'to', 'add', 'three', 'parameters', 'actualmass', 'thresholdmass', 'and', 'objectivemass', 'the', 'constraint', 'will', 'be', 'actualmass', 'thresholdmass', 'the', 'objectivemass', 'is', 'then', 'just', 'informative', 'i', 'have', 'to', 'think', 'it', 'through', 'how', 'this', 'could', 'get', 'used', 'for', 'reporting', 'another', 'possibility', 'would', 'be', 'to', 'add', 'a', 'mandatory', 'optional', 'field', 'to', 'the', 'performance', 'stereotype', 'and', 'use', 'optional', 'for', 'objectives']","['considered', 'making', 'new', 'requirement', 'stereotype', 'make', 'threshold', 'objective', 'attribute', 'fine', 'far', 'capturing', 'requirement', 'go', 'becomes', 'ugly', 'trying', 'verification', 'starting', 'think', 'must', 'captured', 'separate', 'requirement', 'may', 'also', 'ugly', 'traceability', 'satisfaction', 'verification', 'example', 'requirement', 'say', 'system', 'shall', 'kg', 'system', 'shall', 'kg', 'tracing', 'similarly', 'stated', 'requirement', 'becomes', 'ugly', 'making', 'test', 'plan', 'showing', 'requirement', 'ha', 'satisfied', 'satisfied', 'clearly', 'also', 'however', 'system', 'still', 'pas', 'test', 'even', 'though', 'may', 'fail', 'verification', 'perhaps', 'standard', 'carry', 'requirement', 'met', 'new', 'modeling', 'method', 'curious', 'wanted', 'know', 'already', 'best', 'practice', 'looking', 'found', 'anything', 'address']","['from', 'what', 'i', 'understood', 'you', 'want', 'to', 'model', 'that', 'a', 'certain', 'performance', 'requirement', 'ha', 'two', 'value', 'a', 'threshold', 'and', 'an', 'objective', 'meeting', 'the', 'objective', 'is', 'optional', 'but', 'meeting', 'the', 'threshold', 'is', 'mandatory', 'in', 'the', 'test', 'plan', 'the', 'requirement', 'will', 'be', 'shown', 'a', 'satisfied', 'if', 'the', 'design', 'meet', 'the', 'threshold', 'whether', 'it', 'also', 'meet', 'the', 'objective', 'could', 'be', 'evaluated', 'with', 'a', 'model', 'report', 'but', 'that', 'is', 'only', 'informative', 'and', 'doesn', 't', 'have', 'any', 'effect', 'on', 'the', 'test', 'outcome', 'i', 'would', 'create', 'a', 'new', 'stereotype', 'performance', 'requirement', 'specializing', 'abstractrequirement', 'and', 'constraintblock', 'a', 'described', 'in', 'the', 'sysml', 'specification', 'annex', 'e', 'when', 'you', 'use', 'this', 'stereotype', 'you', 'need', 'to', 'add', 'three', 'parameter', 'actualmass', 'thresholdmass', 'and', 'objectivemass', 'the', 'constraint', 'will', 'be', 'actualmass', 'thresholdmass', 'the', 'objectivemass', 'is', 'then', 'just', 'informative', 'i', 'have', 'to', 'think', 'it', 'through', 'how', 'this', 'could', 'get', 'used', 'for', 'reporting', 'another', 'possibility', 'would', 'be', 'to', 'add', 'a', 'mandatory', 'optional', 'field', 'to', 'the', 'performance', 'stereotype', 'and', 'use', 'optional', 'for', 'objective']",System Requirements and AWS,3,"{'neg': 0.104, 'neu': 0.771, 'pos': 0.126, 'compound': 0.6542}",-0.016347687400319,3,Python Package Installation and Management,3query
59430910,What is the difference between Architectural drivers/factors and architectural significant requirements,"<p>I need to be able to explain the terms: architectural factor, architectural driver and architectural significant requirement. i found out that an architectural factor/driver are the same (correct me if i'm wrong).
but when i look up their definitions i get the following explanation:</p>

<p><strong>architectural driver:</strong>
Architectural drivers are formally defined as the set of requirements that have significant influence over your architecture.</p>

<p><strong>architecturally significant requirements:</strong>
architecturally significant requirements are those requirements that play an important role in determining the architecture of the system.</p>

<p>it seems to me both of them are requirements that have influence your architecture, however in the book of larman they are clearly introduced as 2 different things.</p>

<p>so can anyone tell me the exact difference between Architectural drivers/factors and architectural significant requirements </p>
",<architecture><requirements>,2019-12-20 20:17:14,174,1,1,60328053,"<p>Good question! They are indeed confusing. I can add this: the way I see it is that among all requirements gathered for a project, only certain ones will achieve status of ASR once the develop-part-of-the-architecture-then-test cycle goes a few rounds and the picture becomes clearer.</p>

<p>Edit: On slide 18 <a href=""https://cs.gmu.edu/~rpettit/files/lectures/443-ASRs.pdf"" rel=""nofollow noreferrer"">here</a>, it says the following: </p>

<pre><code>Architecture drivers presentation
– Briefing by the architect on the driving business and quality attribute requirements: the ASRs.
</code></pre>

<p>To me that indicates that they could be seen as equivalent.</p>
",2019-12,i need to be able to explain the terms architectural factor architectural driver and architectural significant requirement i found out that an architectural factor driver are the same correct me if i m wrong but when i look up their definitions i get the following explanation architectural driver architectural drivers are formally defined as the set of requirements that have significant influence over your architecture architecturally significant requirements architecturally significant requirements are those requirements that play an important role in determining the architecture of the system it seems to me both of them are requirements that have influence your architecture however in the book of larman they are clearly introduced as   different things so can anyone tell me the exact difference between architectural drivers factors and architectural significant requirements,good question they are indeed confusing i can add this the way i see it is that among all requirements gathered for a project only certain ones will achieve status of asr once the develop part of the architecture then test cycle goes a few rounds and the picture becomes clearer edit on slide   here it says the following architecture drivers presentation briefing by the architect on the driving business and quality attribute requirements the asrs to me that indicates that they could be seen as equivalent,"['architecture', 'requirements']","['i', 'need', 'to', 'be', 'able', 'to', 'explain', 'the', 'terms', 'architectural', 'factor', 'architectural', 'driver', 'and', 'architectural', 'significant', 'requirement', 'i', 'found', 'out', 'that', 'an', 'architectural', 'factor', 'driver', 'are', 'the', 'same', 'correct', 'me', 'if', 'i', 'm', 'wrong', 'but', 'when', 'i', 'look', 'up', 'their', 'definitions', 'i', 'get', 'the', 'following', 'explanation', 'architectural', 'driver', 'architectural', 'drivers', 'are', 'formally', 'defined', 'as', 'the', 'set', 'of', 'requirements', 'that', 'have', 'significant', 'influence', 'over', 'your', 'architecture', 'architecturally', 'significant', 'requirements', 'architecturally', 'significant', 'requirements', 'are', 'those', 'requirements', 'that', 'play', 'an', 'important', 'role', 'in', 'determining', 'the', 'architecture', 'of', 'the', 'system', 'it', 'seems', 'to', 'me', 'both', 'of', 'them', 'are', 'requirements', 'that', 'have', 'influence', 'your', 'architecture', 'however', 'in', 'the', 'book', 'of', 'larman', 'they', 'are', 'clearly', 'introduced', 'as', 'different', 'things', 'so', 'can', 'anyone', 'tell', 'me', 'the', 'exact', 'difference', 'between', 'architectural', 'drivers', 'factors', 'and', 'architectural', 'significant', 'requirements']","['good', 'question', 'they', 'are', 'indeed', 'confusing', 'i', 'can', 'add', 'this', 'the', 'way', 'i', 'see', 'it', 'is', 'that', 'among', 'all', 'requirements', 'gathered', 'for', 'a', 'project', 'only', 'certain', 'ones', 'will', 'achieve', 'status', 'of', 'asr', 'once', 'the', 'develop', 'part', 'of', 'the', 'architecture', 'then', 'test', 'cycle', 'goes', 'a', 'few', 'rounds', 'and', 'the', 'picture', 'becomes', 'clearer', 'edit', 'on', 'slide', 'here', 'it', 'says', 'the', 'following', 'architecture', 'drivers', 'presentation', 'briefing', 'by', 'the', 'architect', 'on', 'the', 'driving', 'business', 'and', 'quality', 'attribute', 'requirements', 'the', 'asrs', 'to', 'me', 'that', 'indicates', 'that', 'they', 'could', 'be', 'seen', 'as', 'equivalent']","['need', 'able', 'explain', 'term', 'architectural', 'factor', 'architectural', 'driver', 'architectural', 'significant', 'requirement', 'found', 'architectural', 'factor', 'driver', 'correct', 'wrong', 'look', 'definition', 'get', 'following', 'explanation', 'architectural', 'driver', 'architectural', 'driver', 'formally', 'defined', 'set', 'requirement', 'significant', 'influence', 'architecture', 'architecturally', 'significant', 'requirement', 'architecturally', 'significant', 'requirement', 'requirement', 'play', 'important', 'role', 'determining', 'architecture', 'system', 'seems', 'requirement', 'influence', 'architecture', 'however', 'book', 'larman', 'clearly', 'introduced', 'different', 'thing', 'anyone', 'tell', 'exact', 'difference', 'architectural', 'driver', 'factor', 'architectural', 'significant', 'requirement']","['good', 'question', 'they', 'are', 'indeed', 'confusing', 'i', 'can', 'add', 'this', 'the', 'way', 'i', 'see', 'it', 'is', 'that', 'among', 'all', 'requirement', 'gathered', 'for', 'a', 'project', 'only', 'certain', 'one', 'will', 'achieve', 'status', 'of', 'asr', 'once', 'the', 'develop', 'part', 'of', 'the', 'architecture', 'then', 'test', 'cycle', 'go', 'a', 'few', 'round', 'and', 'the', 'picture', 'becomes', 'clearer', 'edit', 'on', 'slide', 'here', 'it', 'say', 'the', 'following', 'architecture', 'driver', 'presentation', 'briefing', 'by', 'the', 'architect', 'on', 'the', 'driving', 'business', 'and', 'quality', 'attribute', 'requirement', 'the', 'asrs', 'to', 'me', 'that', 'indicates', 'that', 'they', 'could', 'be', 'seen', 'a', 'equivalent']",System Requirements and AWS,2,"{'neg': 0.0, 'neu': 0.859, 'pos': 0.141, 'compound': 0.9437}",0.20192307692307693,2,Python Libraries and Environment,3query
59083510,Insert an empty column in IBM (Telelogic) DOORS,"<p>As a reviewer, I've to add an empty REVIEW column in a DOORS module. Actually I can add columns easily but they're associated to other attributes and there is no ""emtpty"" option to choose.</p>

<p>Thanks in advance!</p>
",<requirements><ibm-doors>,2019-11-28 07:17:08,470,1,1,59092624,"<p>I'm sure you want to add content to the column as a result of your review, like ""OK"" or ""not OK"".
Content is stored in attributes. So, you first have to add a new <em>attribute</em> on object level to the module with the desired data type (like predefined values, boolean, string or text), and then add a <em>column</em> to your review view which shows the new attribute.</p>
",2019-11,as a reviewer i ve to add an empty review column in a doors module actually i can add columns easily but they re associated to other attributes and there is no emtpty option to choose thanks in advance,i m sure you want to add content to the column as a result of your review like ok or not ok content is stored in attributes so you first have to add a new attribute on object level to the module with the desired data type like predefined values boolean string or text and then add a column to your review view which shows the new attribute,"['requirements', 'ibm-doors']","['as', 'a', 'reviewer', 'i', 've', 'to', 'add', 'an', 'empty', 'review', 'column', 'in', 'a', 'doors', 'module', 'actually', 'i', 'can', 'add', 'columns', 'easily', 'but', 'they', 're', 'associated', 'to', 'other', 'attributes', 'and', 'there', 'is', 'no', 'emtpty', 'option', 'to', 'choose', 'thanks', 'in', 'advance']","['i', 'm', 'sure', 'you', 'want', 'to', 'add', 'content', 'to', 'the', 'column', 'as', 'a', 'result', 'of', 'your', 'review', 'like', 'ok', 'or', 'not', 'ok', 'content', 'is', 'stored', 'in', 'attributes', 'so', 'you', 'first', 'have', 'to', 'add', 'a', 'new', 'attribute', 'on', 'object', 'level', 'to', 'the', 'module', 'with', 'the', 'desired', 'data', 'type', 'like', 'predefined', 'values', 'boolean', 'string', 'or', 'text', 'and', 'then', 'add', 'a', 'column', 'to', 'your', 'review', 'view', 'which', 'shows', 'the', 'new', 'attribute']","['reviewer', 'add', 'empty', 'review', 'column', 'door', 'module', 'actually', 'add', 'column', 'easily', 'associated', 'attribute', 'emtpty', 'option', 'choose', 'thanks', 'advance']","['i', 'm', 'sure', 'you', 'want', 'to', 'add', 'content', 'to', 'the', 'column', 'a', 'a', 'result', 'of', 'your', 'review', 'like', 'ok', 'or', 'not', 'ok', 'content', 'is', 'stored', 'in', 'attribute', 'so', 'you', 'first', 'have', 'to', 'add', 'a', 'new', 'attribute', 'on', 'object', 'level', 'to', 'the', 'module', 'with', 'the', 'desired', 'data', 'type', 'like', 'predefined', 'value', 'boolean', 'string', 'or', 'text', 'and', 'then', 'add', 'a', 'column', 'to', 'your', 'review', 'view', 'which', 'show', 'the', 'new', 'attribute']",Python Package Installation and Management,3,"{'neg': 0.121, 'neu': 0.834, 'pos': 0.046, 'compound': -0.4199}",0.05208333333333334,3,Python Package Installation and Management,3query
58836485,Sparx Enterprise Architect EA 15 - how to sort requirements of an element within a report,"<p>While I run the publish to RTF functionality, the requirements in the generated report for an element are printed in an order I would like to influence.</p>

<p>Consider I have two requirements for an element, one requirement of type functional, one of type performance. The report first shows the performance and then the functional. I would prefer having all functional requirements listed before the performance ones.
How can this be influenced?</p>
",<report><enterprise-architect><requirements>,2019-11-13 11:50:03,301,2,1,58873571,"<p>EA offers only 4 options to sort items in a template:</p>

<ul>
<li>Name </li>
<li>Tree Order</li>
<li>Modified date</li>
<li>Creation date</li>
</ul>

<p>You can set these options per template, or when generating a document
<a href=""https://i.stack.imgur.com/PcSbG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PcSbG.png"" alt=""enter image description here""></a></p>

<p>The trick is to getting this done is to use <strong>template fragments</strong>.</p>

<p>If the linked requirement type would be in the list of possible template filters this would have been rather easy.
You could simply create two template fragments, and set their filter to include only functional or technical requirements. Unfortunately the linked requirement type is not included in the available filters.</p>

<p>Alternative is to create two <a href=""https://www.sparxsystems.com/enterprise_architect_user_guide/15.0/model_publishing/custom_sql_fragments.html"" rel=""nofollow noreferrer"">SQL fragments</a>, one of the functional requirements, and another for the technical requirements.</p>

<p>Then add those to your main template in the order you need them to be.</p>
",2019-11,while i run the publish to rtf functionality the requirements in the generated report for an element are printed in an order i would like to influence consider i have two requirements for an element one requirement of type functional one of type performance the report first shows the performance and then the functional i would prefer having all functional requirements listed before the performance ones how can this be influenced,ea offers only   options to sort items in a template name tree order modified date creation date you can set these options per template or when generating a document the trick is to getting this done is to use template fragments if the linked requirement type would be in the list of possible template filters this would have been rather easy you could simply create two template fragments and set their filter to include only functional or technical requirements unfortunately the linked requirement type is not included in the available filters alternative is to create two sql fragments one of the functional requirements and another for the technical requirements then add those to your main template in the order you need them to be,"['report', 'enterprise-architect', 'requirements']","['while', 'i', 'run', 'the', 'publish', 'to', 'rtf', 'functionality', 'the', 'requirements', 'in', 'the', 'generated', 'report', 'for', 'an', 'element', 'are', 'printed', 'in', 'an', 'order', 'i', 'would', 'like', 'to', 'influence', 'consider', 'i', 'have', 'two', 'requirements', 'for', 'an', 'element', 'one', 'requirement', 'of', 'type', 'functional', 'one', 'of', 'type', 'performance', 'the', 'report', 'first', 'shows', 'the', 'performance', 'and', 'then', 'the', 'functional', 'i', 'would', 'prefer', 'having', 'all', 'functional', 'requirements', 'listed', 'before', 'the', 'performance', 'ones', 'how', 'can', 'this', 'be', 'influenced']","['ea', 'offers', 'only', 'options', 'to', 'sort', 'items', 'in', 'a', 'template', 'name', 'tree', 'order', 'modified', 'date', 'creation', 'date', 'you', 'can', 'set', 'these', 'options', 'per', 'template', 'or', 'when', 'generating', 'a', 'document', 'the', 'trick', 'is', 'to', 'getting', 'this', 'done', 'is', 'to', 'use', 'template', 'fragments', 'if', 'the', 'linked', 'requirement', 'type', 'would', 'be', 'in', 'the', 'list', 'of', 'possible', 'template', 'filters', 'this', 'would', 'have', 'been', 'rather', 'easy', 'you', 'could', 'simply', 'create', 'two', 'template', 'fragments', 'and', 'set', 'their', 'filter', 'to', 'include', 'only', 'functional', 'or', 'technical', 'requirements', 'unfortunately', 'the', 'linked', 'requirement', 'type', 'is', 'not', 'included', 'in', 'the', 'available', 'filters', 'alternative', 'is', 'to', 'create', 'two', 'sql', 'fragments', 'one', 'of', 'the', 'functional', 'requirements', 'and', 'another', 'for', 'the', 'technical', 'requirements', 'then', 'add', 'those', 'to', 'your', 'main', 'template', 'in', 'the', 'order', 'you', 'need', 'them', 'to', 'be']","['run', 'publish', 'rtf', 'functionality', 'requirement', 'generated', 'report', 'element', 'printed', 'order', 'would', 'like', 'influence', 'consider', 'two', 'requirement', 'element', 'one', 'requirement', 'type', 'functional', 'one', 'type', 'performance', 'report', 'first', 'show', 'performance', 'functional', 'would', 'prefer', 'functional', 'requirement', 'listed', 'performance', 'one', 'influenced']","['ea', 'offer', 'only', 'option', 'to', 'sort', 'item', 'in', 'a', 'template', 'name', 'tree', 'order', 'modified', 'date', 'creation', 'date', 'you', 'can', 'set', 'these', 'option', 'per', 'template', 'or', 'when', 'generating', 'a', 'document', 'the', 'trick', 'is', 'to', 'getting', 'this', 'done', 'is', 'to', 'use', 'template', 'fragment', 'if', 'the', 'linked', 'requirement', 'type', 'would', 'be', 'in', 'the', 'list', 'of', 'possible', 'template', 'filter', 'this', 'would', 'have', 'been', 'rather', 'easy', 'you', 'could', 'simply', 'create', 'two', 'template', 'fragment', 'and', 'set', 'their', 'filter', 'to', 'include', 'only', 'functional', 'or', 'technical', 'requirement', 'unfortunately', 'the', 'linked', 'requirement', 'type', 'is', 'not', 'included', 'in', 'the', 'available', 'filter', 'alternative', 'is', 'to', 'create', 'two', 'sql', 'fragment', 'one', 'of', 'the', 'functional', 'requirement', 'and', 'another', 'for', 'the', 'technical', 'requirement', 'then', 'add', 'those', 'to', 'your', 'main', 'template', 'in', 'the', 'order', 'you', 'need', 'them', 'to', 'be']",System Requirements and AWS,2,"{'neg': 0.0, 'neu': 0.964, 'pos': 0.036, 'compound': 0.3612}",0.25,2,Python Libraries and Environment,3query
58727347,What counts as functional requirement and what doesnt in the following example?,"<p>For my homework, I have to write functional requirement of a game called downfall (<a href=""https://en.wikipedia.org/wiki/Downfall_(game)"" rel=""nofollow noreferrer"">see Wikipedia</a>).
We have to make this game, but with not two sides but n (any number of) sides.</p>

<p>In an example solution (another game), the teacher writes the functional requirements, then writes what use case they belong to.</p>

<p>I have created a use case diagram in which I have the player as an actor, and <code>ChooseDial</code>, <code>RotateDial</code> and <code>EndTurn</code> as use cases:</p>

<p><a href=""https://i.stack.imgur.com/PwUKy.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PwUKy.png"" alt=""enter image description here""></a></p>

<p>What I dont understand are the following:
Is the number of players functional requirement?
Is the table having two sides a functional requirement?
Is the goal of the game (getting coins from top to bottom) a functional requirement?
Is a rule like coins must reach bottom in order a functional requirement?</p>

<p>If they are, what use case could they belong to? Is my use case diagram wrong?</p>

<p>I have no idea where to put these functional requirements, because I feel like they arent part of any of my use cases.</p>
",<uml><modeling><use-case><requirements><use-case-diagram>,2019-11-06 09:54:36,309,1,2,58729608,"<p>Requirements management (RM) can be tricky indeed. A requirement like <em>The board must have two sides</em> seems to be more involved in the design, rather than the use case. In such cases you could relate that to the boundary rather than a single use case. That will indicate it's some ""global"" requirement (similar to a non-functional requirement). Usually in a project you start with a more or less strange mix of requirements mixed in user stories. The business analyst (BA) has to comb that information and come up with decent use cases (synthesize the added values). The system architect (with the BA) will then go through requirements and use cases to come up with a (business) class model.</p>

<p>There are tons of books and procedures describing RM. Lots of seminars too. I think if you grasp the condensed idea above you're ready to start. It's a marathon to start...</p>
",2019-11,for my homework i have to write functional requirement of a game called downfall see wikipedia we have to make this game but with not two sides but n any number of sides in an example solution another game the teacher writes the functional requirements then writes what use case they belong to i have created a use case diagram in which i have the player as an actor and choosedial rotatedial and endturn as use cases what i dont understand are the following is the number of players functional requirement is the table having two sides a functional requirement is the goal of the game getting coins from top to bottom a functional requirement is a rule like coins must reach bottom in order a functional requirement if they are what use case could they belong to is my use case diagram wrong i have no idea where to put these functional requirements because i feel like they arent part of any of my use cases,requirements management rm can be tricky indeed a requirement like the board must have two sides seems to be more involved in the design rather than the use case in such cases you could relate that to the boundary rather than a single use case that will indicate it s some global requirement similar to a non functional requirement usually in a project you start with a more or less strange mix of requirements mixed in user stories the business analyst ba has to comb that information and come up with decent use cases synthesize the added values the system architect with the ba will then go through requirements and use cases to come up with a business class model there are tons of books and procedures describing rm lots of seminars too i think if you grasp the condensed idea above you re ready to start it s a marathon to start,"['uml', 'modeling', 'use-case', 'requirements', 'use-case-diagram']","['for', 'my', 'homework', 'i', 'have', 'to', 'write', 'functional', 'requirement', 'of', 'a', 'game', 'called', 'downfall', 'see', 'wikipedia', 'we', 'have', 'to', 'make', 'this', 'game', 'but', 'with', 'not', 'two', 'sides', 'but', 'n', 'any', 'number', 'of', 'sides', 'in', 'an', 'example', 'solution', 'another', 'game', 'the', 'teacher', 'writes', 'the', 'functional', 'requirements', 'then', 'writes', 'what', 'use', 'case', 'they', 'belong', 'to', 'i', 'have', 'created', 'a', 'use', 'case', 'diagram', 'in', 'which', 'i', 'have', 'the', 'player', 'as', 'an', 'actor', 'and', 'choosedial', 'rotatedial', 'and', 'endturn', 'as', 'use', 'cases', 'what', 'i', 'dont', 'understand', 'are', 'the', 'following', 'is', 'the', 'number', 'of', 'players', 'functional', 'requirement', 'is', 'the', 'table', 'having', 'two', 'sides', 'a', 'functional', 'requirement', 'is', 'the', 'goal', 'of', 'the', 'game', 'getting', 'coins', 'from', 'top', 'to', 'bottom', 'a', 'functional', 'requirement', 'is', 'a', 'rule', 'like', 'coins', 'must', 'reach', 'bottom', 'in', 'order', 'a', 'functional', 'requirement', 'if', 'they', 'are', 'what', 'use', 'case', 'could', 'they', 'belong', 'to', 'is', 'my', 'use', 'case', 'diagram', 'wrong', 'i', 'have', 'no', 'idea', 'where', 'to', 'put', 'these', 'functional', 'requirements', 'because', 'i', 'feel', 'like', 'they', 'arent', 'part', 'of', 'any', 'of', 'my', 'use', 'cases']","['requirements', 'management', 'rm', 'can', 'be', 'tricky', 'indeed', 'a', 'requirement', 'like', 'the', 'board', 'must', 'have', 'two', 'sides', 'seems', 'to', 'be', 'more', 'involved', 'in', 'the', 'design', 'rather', 'than', 'the', 'use', 'case', 'in', 'such', 'cases', 'you', 'could', 'relate', 'that', 'to', 'the', 'boundary', 'rather', 'than', 'a', 'single', 'use', 'case', 'that', 'will', 'indicate', 'it', 's', 'some', 'global', 'requirement', 'similar', 'to', 'a', 'non', 'functional', 'requirement', 'usually', 'in', 'a', 'project', 'you', 'start', 'with', 'a', 'more', 'or', 'less', 'strange', 'mix', 'of', 'requirements', 'mixed', 'in', 'user', 'stories', 'the', 'business', 'analyst', 'ba', 'has', 'to', 'comb', 'that', 'information', 'and', 'come', 'up', 'with', 'decent', 'use', 'cases', 'synthesize', 'the', 'added', 'values', 'the', 'system', 'architect', 'with', 'the', 'ba', 'will', 'then', 'go', 'through', 'requirements', 'and', 'use', 'cases', 'to', 'come', 'up', 'with', 'a', 'business', 'class', 'model', 'there', 'are', 'tons', 'of', 'books', 'and', 'procedures', 'describing', 'rm', 'lots', 'of', 'seminars', 'too', 'i', 'think', 'if', 'you', 'grasp', 'the', 'condensed', 'idea', 'above', 'you', 're', 'ready', 'to', 'start', 'it', 's', 'a', 'marathon', 'to', 'start']","['homework', 'write', 'functional', 'requirement', 'game', 'called', 'downfall', 'see', 'wikipedia', 'make', 'game', 'two', 'side', 'n', 'number', 'side', 'example', 'solution', 'another', 'game', 'teacher', 'writes', 'functional', 'requirement', 'writes', 'use', 'case', 'belong', 'created', 'use', 'case', 'diagram', 'player', 'actor', 'choosedial', 'rotatedial', 'endturn', 'use', 'case', 'dont', 'understand', 'following', 'number', 'player', 'functional', 'requirement', 'table', 'two', 'side', 'functional', 'requirement', 'goal', 'game', 'getting', 'coin', 'top', 'bottom', 'functional', 'requirement', 'rule', 'like', 'coin', 'must', 'reach', 'bottom', 'order', 'functional', 'requirement', 'use', 'case', 'could', 'belong', 'use', 'case', 'diagram', 'wrong', 'idea', 'put', 'functional', 'requirement', 'feel', 'like', 'arent', 'part', 'use', 'case']","['requirement', 'management', 'rm', 'can', 'be', 'tricky', 'indeed', 'a', 'requirement', 'like', 'the', 'board', 'must', 'have', 'two', 'side', 'seems', 'to', 'be', 'more', 'involved', 'in', 'the', 'design', 'rather', 'than', 'the', 'use', 'case', 'in', 'such', 'case', 'you', 'could', 'relate', 'that', 'to', 'the', 'boundary', 'rather', 'than', 'a', 'single', 'use', 'case', 'that', 'will', 'indicate', 'it', 's', 'some', 'global', 'requirement', 'similar', 'to', 'a', 'non', 'functional', 'requirement', 'usually', 'in', 'a', 'project', 'you', 'start', 'with', 'a', 'more', 'or', 'le', 'strange', 'mix', 'of', 'requirement', 'mixed', 'in', 'user', 'story', 'the', 'business', 'analyst', 'ba', 'ha', 'to', 'comb', 'that', 'information', 'and', 'come', 'up', 'with', 'decent', 'use', 'case', 'synthesize', 'the', 'added', 'value', 'the', 'system', 'architect', 'with', 'the', 'ba', 'will', 'then', 'go', 'through', 'requirement', 'and', 'use', 'case', 'to', 'come', 'up', 'with', 'a', 'business', 'class', 'model', 'there', 'are', 'ton', 'of', 'book', 'and', 'procedure', 'describing', 'rm', 'lot', 'of', 'seminar', 'too', 'i', 'think', 'if', 'you', 'grasp', 'the', 'condensed', 'idea', 'above', 'you', 're', 'ready', 'to', 'start', 'it', 's', 'a', 'marathon', 'to', 'start']",System Requirements and AWS,0,"{'neg': 0.015, 'neu': 0.879, 'pos': 0.106, 'compound': 0.924}",-0.18333333333333335,0,System Requirements and AWS,3query
58727347,What counts as functional requirement and what doesnt in the following example?,"<p>For my homework, I have to write functional requirement of a game called downfall (<a href=""https://en.wikipedia.org/wiki/Downfall_(game)"" rel=""nofollow noreferrer"">see Wikipedia</a>).
We have to make this game, but with not two sides but n (any number of) sides.</p>

<p>In an example solution (another game), the teacher writes the functional requirements, then writes what use case they belong to.</p>

<p>I have created a use case diagram in which I have the player as an actor, and <code>ChooseDial</code>, <code>RotateDial</code> and <code>EndTurn</code> as use cases:</p>

<p><a href=""https://i.stack.imgur.com/PwUKy.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PwUKy.png"" alt=""enter image description here""></a></p>

<p>What I dont understand are the following:
Is the number of players functional requirement?
Is the table having two sides a functional requirement?
Is the goal of the game (getting coins from top to bottom) a functional requirement?
Is a rule like coins must reach bottom in order a functional requirement?</p>

<p>If they are, what use case could they belong to? Is my use case diagram wrong?</p>

<p>I have no idea where to put these functional requirements, because I feel like they arent part of any of my use cases.</p>
",<uml><modeling><use-case><requirements><use-case-diagram>,2019-11-06 09:54:36,309,1,2,58735870,"<h3>About requirements</h3>

<p>First, let's handle the requirement question: </p>

<ul>
<li>A <a href=""https://en.wikipedia.org/wiki/Functional_requirement"" rel=""nofollow noreferrer"">functional requirement</a> tells something about what a software shall do. Everything related to goal, the gameplay or the rules of the game, is a functional requirement.</li>
<li>A <a href=""https://en.wikipedia.org/wiki/Non-functional_requirement"" rel=""nofollow noreferrer"">non functional requirement</a> tells something about how the software shall be, for example how accurate, how performant, how easy to use, how easy to maintain. Your narrative shows no such requirements.  </li>
</ul>

<h2>About use-cases</h2>

<p>Use case driven software development methods start with the high-level user's goals that are captured in use-cases. Personally, I see only one such goal:  </p>

<p><a href=""https://i.stack.imgur.com/QkPWW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/QkPWW.png"" alt=""enter image description here""></a></p>

<p><strong>Very rare usage</strong>:  a <a href=""https://www.uml-diagrams.org/use-case-actor-association.html"" rel=""nofollow noreferrer"">multiplicity on the actor side</a> of the use case.  This says that 2 or more instances of players are involved in an instance of the use case.  Of course, this makes sense only for the game as a whole, not for individual actions (like you have in your diagram). </p>

<p>In your diagram, you have shown 3 use cases: </p>

<ul>
<li>is <code>EndTurn</code> an independent goal that the user may freely decide to chose ?  No ! It's what always follows a player action.  So this is definitely not a use case.  </li>
<li>you say that <code>RotateDials</code> <a href=""https://www.uml-diagrams.org/use-case-extend.html"" rel=""nofollow noreferrer"">extends</a> <code>ChooseDials</code>. This means that a player could <code>ChooseDials</code> but not rorate it.  Is this a valid scenario ?    </li>
<li>if on the other hand you'd say that <code>ChooseDials</code> <a href=""https://www.uml-diagrams.org/use-case-include.html"" rel=""nofollow noreferrer"">includes</a> <code>RotateDials</code>, the latter would always happen. But then, wouldn't <code>ChooseDial</code> not be more than just choosing a dial ?  Shouldn't it then be called <code>PlayTurn</code> ?  </li>
</ul>

<p>I could understand that for learning purpose, you'd want to decompose the <code>Play game</code> in more detailed use-cases.  Typically, once the players try to reach their goal <code>Play game</code>, this might include sub-goals of <code>Play  turn</code>.  As long as it is goal-oriented, and not too detailed, this is ok.  But do <a href=""https://sce.uhcl.edu/helm/RationalUnifiedProcess/process/modguide/md_ucmod.htm#Avoiding%20Functional%20Decomposition"" rel=""nofollow noreferrer"">avoid simple functional decomposition</a> (it doesn't help for being more user-driven, and use-cases are not functions ). And, above all, do not misuse a use-case diagram for trying to show a sequence of <a href=""https://www.uml-diagrams.org/activity-diagrams.html"" rel=""nofollow noreferrer"">activities</a>.       </p>

<h2>Requirement traceability</h2>

<p>The use cases do not capture the full requirements.  It captures the most enssential thing:  the purpose of the system and the user goals.  </p>

<p>When writing down the requirements, it's then useful to get guided by the use-cases and their narrative, and to trace-back every use-case specific requirement.    </p>

<p>But of course, there are some general requirements as well.  These are not specific to a particular use-case. Some are even common to all use case. Mark these as general requirements (e.g. use case <code>*</code>).    </p>
",2019-11,for my homework i have to write functional requirement of a game called downfall see wikipedia we have to make this game but with not two sides but n any number of sides in an example solution another game the teacher writes the functional requirements then writes what use case they belong to i have created a use case diagram in which i have the player as an actor and choosedial rotatedial and endturn as use cases what i dont understand are the following is the number of players functional requirement is the table having two sides a functional requirement is the goal of the game getting coins from top to bottom a functional requirement is a rule like coins must reach bottom in order a functional requirement if they are what use case could they belong to is my use case diagram wrong i have no idea where to put these functional requirements because i feel like they arent part of any of my use cases,about requirements first let s handle the requirement question a functional requirement tells something about what a software shall do everything related to goal the gameplay or the rules of the game is a functional requirement a non functional requirement tells something about how the software shall be for example how accurate how performant how easy to use how easy to maintain your narrative shows no such requirements about use cases use case driven software development methods start with the high level user s goals that are captured in use cases personally i see only one such goal very rare usage a multiplicity on the actor side of the use case this says that   or more instances of players are involved in an instance of the use case of course this makes sense only for the game as a whole not for individual actions like you have in your diagram in your diagram you have shown   use cases is endturn an independent goal that the user may freely decide to chose no it s what always follows a player action so this is definitely not a use case you say that rotatedials extends choosedials this means that a player could choosedials but not rorate it is this a valid scenario if on the other hand you d say that choosedials includes rotatedials the latter would always happen but then wouldn t choosedial not be more than just choosing a dial shouldn t it then be called playturn i could understand that for learning purpose you d want to decompose the play game in more detailed use cases typically once the players try to reach their goal play game this might include sub goals of play turn as long as it is goal oriented and not too detailed this is ok but do avoid simple functional decomposition it doesn t help for being more user driven and use cases are not functions and above all do not misuse a use case diagram for trying to show a sequence of activities requirement traceability the use cases do not capture the full requirements it captures the most enssential thing the purpose of the system and the user goals when writing down the requirements it s then useful to get guided by the use cases and their narrative and to trace back every use case specific requirement but of course there are some general requirements as well these are not specific to a particular use case some are even common to all use case mark these as general requirements e g use case,"['uml', 'modeling', 'use-case', 'requirements', 'use-case-diagram']","['for', 'my', 'homework', 'i', 'have', 'to', 'write', 'functional', 'requirement', 'of', 'a', 'game', 'called', 'downfall', 'see', 'wikipedia', 'we', 'have', 'to', 'make', 'this', 'game', 'but', 'with', 'not', 'two', 'sides', 'but', 'n', 'any', 'number', 'of', 'sides', 'in', 'an', 'example', 'solution', 'another', 'game', 'the', 'teacher', 'writes', 'the', 'functional', 'requirements', 'then', 'writes', 'what', 'use', 'case', 'they', 'belong', 'to', 'i', 'have', 'created', 'a', 'use', 'case', 'diagram', 'in', 'which', 'i', 'have', 'the', 'player', 'as', 'an', 'actor', 'and', 'choosedial', 'rotatedial', 'and', 'endturn', 'as', 'use', 'cases', 'what', 'i', 'dont', 'understand', 'are', 'the', 'following', 'is', 'the', 'number', 'of', 'players', 'functional', 'requirement', 'is', 'the', 'table', 'having', 'two', 'sides', 'a', 'functional', 'requirement', 'is', 'the', 'goal', 'of', 'the', 'game', 'getting', 'coins', 'from', 'top', 'to', 'bottom', 'a', 'functional', 'requirement', 'is', 'a', 'rule', 'like', 'coins', 'must', 'reach', 'bottom', 'in', 'order', 'a', 'functional', 'requirement', 'if', 'they', 'are', 'what', 'use', 'case', 'could', 'they', 'belong', 'to', 'is', 'my', 'use', 'case', 'diagram', 'wrong', 'i', 'have', 'no', 'idea', 'where', 'to', 'put', 'these', 'functional', 'requirements', 'because', 'i', 'feel', 'like', 'they', 'arent', 'part', 'of', 'any', 'of', 'my', 'use', 'cases']","['about', 'requirements', 'first', 'let', 's', 'handle', 'the', 'requirement', 'question', 'a', 'functional', 'requirement', 'tells', 'something', 'about', 'what', 'a', 'software', 'shall', 'do', 'everything', 'related', 'to', 'goal', 'the', 'gameplay', 'or', 'the', 'rules', 'of', 'the', 'game', 'is', 'a', 'functional', 'requirement', 'a', 'non', 'functional', 'requirement', 'tells', 'something', 'about', 'how', 'the', 'software', 'shall', 'be', 'for', 'example', 'how', 'accurate', 'how', 'performant', 'how', 'easy', 'to', 'use', 'how', 'easy', 'to', 'maintain', 'your', 'narrative', 'shows', 'no', 'such', 'requirements', 'about', 'use', 'cases', 'use', 'case', 'driven', 'software', 'development', 'methods', 'start', 'with', 'the', 'high', 'level', 'user', 's', 'goals', 'that', 'are', 'captured', 'in', 'use', 'cases', 'personally', 'i', 'see', 'only', 'one', 'such', 'goal', 'very', 'rare', 'usage', 'a', 'multiplicity', 'on', 'the', 'actor', 'side', 'of', 'the', 'use', 'case', 'this', 'says', 'that', 'or', 'more', 'instances', 'of', 'players', 'are', 'involved', 'in', 'an', 'instance', 'of', 'the', 'use', 'case', 'of', 'course', 'this', 'makes', 'sense', 'only', 'for', 'the', 'game', 'as', 'a', 'whole', 'not', 'for', 'individual', 'actions', 'like', 'you', 'have', 'in', 'your', 'diagram', 'in', 'your', 'diagram', 'you', 'have', 'shown', 'use', 'cases', 'is', 'endturn', 'an', 'independent', 'goal', 'that', 'the', 'user', 'may', 'freely', 'decide', 'to', 'chose', 'no', 'it', 's', 'what', 'always', 'follows', 'a', 'player', 'action', 'so', 'this', 'is', 'definitely', 'not', 'a', 'use', 'case', 'you', 'say', 'that', 'rotatedials', 'extends', 'choosedials', 'this', 'means', 'that', 'a', 'player', 'could', 'choosedials', 'but', 'not', 'rorate', 'it', 'is', 'this', 'a', 'valid', 'scenario', 'if', 'on', 'the', 'other', 'hand', 'you', 'd', 'say', 'that', 'choosedials', 'includes', 'rotatedials', 'the', 'latter', 'would', 'always', 'happen', 'but', 'then', 'wouldn', 't', 'choosedial', 'not', 'be', 'more', 'than', 'just', 'choosing', 'a', 'dial', 'shouldn', 't', 'it', 'then', 'be', 'called', 'playturn', 'i', 'could', 'understand', 'that', 'for', 'learning', 'purpose', 'you', 'd', 'want', 'to', 'decompose', 'the', 'play', 'game', 'in', 'more', 'detailed', 'use', 'cases', 'typically', 'once', 'the', 'players', 'try', 'to', 'reach', 'their', 'goal', 'play', 'game', 'this', 'might', 'include', 'sub', 'goals', 'of', 'play', 'turn', 'as', 'long', 'as', 'it', 'is', 'goal', 'oriented', 'and', 'not', 'too', 'detailed', 'this', 'is', 'ok', 'but', 'do', 'avoid', 'simple', 'functional', 'decomposition', 'it', 'doesn', 't', 'help', 'for', 'being', 'more', 'user', 'driven', 'and', 'use', 'cases', 'are', 'not', 'functions', 'and', 'above', 'all', 'do', 'not', 'misuse', 'a', 'use', 'case', 'diagram', 'for', 'trying', 'to', 'show', 'a', 'sequence', 'of', 'activities', 'requirement', 'traceability', 'the', 'use', 'cases', 'do', 'not', 'capture', 'the', 'full', 'requirements', 'it', 'captures', 'the', 'most', 'enssential', 'thing', 'the', 'purpose', 'of', 'the', 'system', 'and', 'the', 'user', 'goals', 'when', 'writing', 'down', 'the', 'requirements', 'it', 's', 'then', 'useful', 'to', 'get', 'guided', 'by', 'the', 'use', 'cases', 'and', 'their', 'narrative', 'and', 'to', 'trace', 'back', 'every', 'use', 'case', 'specific', 'requirement', 'but', 'of', 'course', 'there', 'are', 'some', 'general', 'requirements', 'as', 'well', 'these', 'are', 'not', 'specific', 'to', 'a', 'particular', 'use', 'case', 'some', 'are', 'even', 'common', 'to', 'all', 'use', 'case', 'mark', 'these', 'as', 'general', 'requirements', 'e', 'g', 'use', 'case']","['homework', 'write', 'functional', 'requirement', 'game', 'called', 'downfall', 'see', 'wikipedia', 'make', 'game', 'two', 'side', 'n', 'number', 'side', 'example', 'solution', 'another', 'game', 'teacher', 'writes', 'functional', 'requirement', 'writes', 'use', 'case', 'belong', 'created', 'use', 'case', 'diagram', 'player', 'actor', 'choosedial', 'rotatedial', 'endturn', 'use', 'case', 'dont', 'understand', 'following', 'number', 'player', 'functional', 'requirement', 'table', 'two', 'side', 'functional', 'requirement', 'goal', 'game', 'getting', 'coin', 'top', 'bottom', 'functional', 'requirement', 'rule', 'like', 'coin', 'must', 'reach', 'bottom', 'order', 'functional', 'requirement', 'use', 'case', 'could', 'belong', 'use', 'case', 'diagram', 'wrong', 'idea', 'put', 'functional', 'requirement', 'feel', 'like', 'arent', 'part', 'use', 'case']","['about', 'requirement', 'first', 'let', 's', 'handle', 'the', 'requirement', 'question', 'a', 'functional', 'requirement', 'tell', 'something', 'about', 'what', 'a', 'software', 'shall', 'do', 'everything', 'related', 'to', 'goal', 'the', 'gameplay', 'or', 'the', 'rule', 'of', 'the', 'game', 'is', 'a', 'functional', 'requirement', 'a', 'non', 'functional', 'requirement', 'tell', 'something', 'about', 'how', 'the', 'software', 'shall', 'be', 'for', 'example', 'how', 'accurate', 'how', 'performant', 'how', 'easy', 'to', 'use', 'how', 'easy', 'to', 'maintain', 'your', 'narrative', 'show', 'no', 'such', 'requirement', 'about', 'use', 'case', 'use', 'case', 'driven', 'software', 'development', 'method', 'start', 'with', 'the', 'high', 'level', 'user', 's', 'goal', 'that', 'are', 'captured', 'in', 'use', 'case', 'personally', 'i', 'see', 'only', 'one', 'such', 'goal', 'very', 'rare', 'usage', 'a', 'multiplicity', 'on', 'the', 'actor', 'side', 'of', 'the', 'use', 'case', 'this', 'say', 'that', 'or', 'more', 'instance', 'of', 'player', 'are', 'involved', 'in', 'an', 'instance', 'of', 'the', 'use', 'case', 'of', 'course', 'this', 'make', 'sense', 'only', 'for', 'the', 'game', 'a', 'a', 'whole', 'not', 'for', 'individual', 'action', 'like', 'you', 'have', 'in', 'your', 'diagram', 'in', 'your', 'diagram', 'you', 'have', 'shown', 'use', 'case', 'is', 'endturn', 'an', 'independent', 'goal', 'that', 'the', 'user', 'may', 'freely', 'decide', 'to', 'chose', 'no', 'it', 's', 'what', 'always', 'follows', 'a', 'player', 'action', 'so', 'this', 'is', 'definitely', 'not', 'a', 'use', 'case', 'you', 'say', 'that', 'rotatedials', 'extends', 'choosedials', 'this', 'mean', 'that', 'a', 'player', 'could', 'choosedials', 'but', 'not', 'rorate', 'it', 'is', 'this', 'a', 'valid', 'scenario', 'if', 'on', 'the', 'other', 'hand', 'you', 'd', 'say', 'that', 'choosedials', 'includes', 'rotatedials', 'the', 'latter', 'would', 'always', 'happen', 'but', 'then', 'wouldn', 't', 'choosedial', 'not', 'be', 'more', 'than', 'just', 'choosing', 'a', 'dial', 'shouldn', 't', 'it', 'then', 'be', 'called', 'playturn', 'i', 'could', 'understand', 'that', 'for', 'learning', 'purpose', 'you', 'd', 'want', 'to', 'decompose', 'the', 'play', 'game', 'in', 'more', 'detailed', 'use', 'case', 'typically', 'once', 'the', 'player', 'try', 'to', 'reach', 'their', 'goal', 'play', 'game', 'this', 'might', 'include', 'sub', 'goal', 'of', 'play', 'turn', 'a', 'long', 'a', 'it', 'is', 'goal', 'oriented', 'and', 'not', 'too', 'detailed', 'this', 'is', 'ok', 'but', 'do', 'avoid', 'simple', 'functional', 'decomposition', 'it', 'doesn', 't', 'help', 'for', 'being', 'more', 'user', 'driven', 'and', 'use', 'case', 'are', 'not', 'function', 'and', 'above', 'all', 'do', 'not', 'misuse', 'a', 'use', 'case', 'diagram', 'for', 'trying', 'to', 'show', 'a', 'sequence', 'of', 'activity', 'requirement', 'traceability', 'the', 'use', 'case', 'do', 'not', 'capture', 'the', 'full', 'requirement', 'it', 'capture', 'the', 'most', 'enssential', 'thing', 'the', 'purpose', 'of', 'the', 'system', 'and', 'the', 'user', 'goal', 'when', 'writing', 'down', 'the', 'requirement', 'it', 's', 'then', 'useful', 'to', 'get', 'guided', 'by', 'the', 'use', 'case', 'and', 'their', 'narrative', 'and', 'to', 'trace', 'back', 'every', 'use', 'case', 'specific', 'requirement', 'but', 'of', 'course', 'there', 'are', 'some', 'general', 'requirement', 'a', 'well', 'these', 'are', 'not', 'specific', 'to', 'a', 'particular', 'use', 'case', 'some', 'are', 'even', 'common', 'to', 'all', 'use', 'case', 'mark', 'these', 'a', 'general', 'requirement', 'e', 'g', 'use', 'case']",System Requirements and AWS,0,"{'neg': 0.015, 'neu': 0.879, 'pos': 0.106, 'compound': 0.924}",-0.18333333333333335,0,System Requirements and AWS,3query
58718076,I am having difficulty importing code from a server?,"<p>I'm working on a project for a client and his code is running on his server. I've tried to download the code so that I can run a local version on my computer. The project is at least 5 years old and runs on Python 2.7. </p>

<p>The problem is I can't run <code>python install -r requirements.txt</code> without running into errors, because some of the files are no longer available. Specifically something called ""sorl"", ""django-page-cms"", ""mercurial"", and a few files the developer hosted on other sites.</p>

<p>If his website is working &amp; the code is functioning on his server, that means there is a working version of these packages stored on the server? How could I find them?</p>
",<python><python-2.7><server><package><requirements>,2019-11-05 19:21:26,21,0,1,58718130,"<p>You can try starting <code>python</code> while <code>ssh</code>ed into the server and doing an import like:</p>

<pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; import sorl
&gt;&gt;&gt; sorl.__file__
'/home/jmunsch/PycharmProjects/projectname/venv_ok/lib/python3.6/sorl/__init__.py'
</code></pre>

<p>And if the os is the same then <code>rsync</code> the files over.</p>

<p>see:
 - <a href=""https://stackoverflow.com/questions/9090817/copying-files-using-rsync-from-remote-server-to-local-machine"">Copying files using rsync from remote server to local machine</a></p>
",2019-11,i m working on a project for a client and his code is running on his server i ve tried to download the code so that i can run a local version on my computer the project is at least   years old and runs on python     the problem is i can t run python install r requirements txt without running into errors because some of the files are no longer available specifically something called sorl django page cms mercurial and a few files the developer hosted on other sites if his website is working the code is functioning on his server that means there is a working version of these packages stored on the server how could i find them,you can try starting python while sshed into the server and doing an import like import sorl sorl __file__ home jmunsch pycharmprojects projectname venv_ok lib python    sorl __init__ py and if the os is the same then rsync the files over see copying files using rsync from remote server to local machine,"['python', 'python-2.7', 'server', 'package', 'requirements']","['i', 'm', 'working', 'on', 'a', 'project', 'for', 'a', 'client', 'and', 'his', 'code', 'is', 'running', 'on', 'his', 'server', 'i', 've', 'tried', 'to', 'download', 'the', 'code', 'so', 'that', 'i', 'can', 'run', 'a', 'local', 'version', 'on', 'my', 'computer', 'the', 'project', 'is', 'at', 'least', 'years', 'old', 'and', 'runs', 'on', 'python', 'the', 'problem', 'is', 'i', 'can', 't', 'run', 'python', 'install', 'r', 'requirements', 'txt', 'without', 'running', 'into', 'errors', 'because', 'some', 'of', 'the', 'files', 'are', 'no', 'longer', 'available', 'specifically', 'something', 'called', 'sorl', 'django', 'page', 'cms', 'mercurial', 'and', 'a', 'few', 'files', 'the', 'developer', 'hosted', 'on', 'other', 'sites', 'if', 'his', 'website', 'is', 'working', 'the', 'code', 'is', 'functioning', 'on', 'his', 'server', 'that', 'means', 'there', 'is', 'a', 'working', 'version', 'of', 'these', 'packages', 'stored', 'on', 'the', 'server', 'how', 'could', 'i', 'find', 'them']","['you', 'can', 'try', 'starting', 'python', 'while', 'sshed', 'into', 'the', 'server', 'and', 'doing', 'an', 'import', 'like', 'import', 'sorl', 'sorl', '__file__', 'home', 'jmunsch', 'pycharmprojects', 'projectname', 'venv_ok', 'lib', 'python', 'sorl', '__init__', 'py', 'and', 'if', 'the', 'os', 'is', 'the', 'same', 'then', 'rsync', 'the', 'files', 'over', 'see', 'copying', 'files', 'using', 'rsync', 'from', 'remote', 'server', 'to', 'local', 'machine']","['working', 'project', 'client', 'code', 'running', 'server', 'tried', 'download', 'code', 'run', 'local', 'version', 'computer', 'project', 'least', 'year', 'old', 'run', 'python', 'problem', 'run', 'python', 'install', 'r', 'requirement', 'txt', 'without', 'running', 'error', 'file', 'longer', 'available', 'specifically', 'something', 'called', 'sorl', 'django', 'page', 'cm', 'mercurial', 'file', 'developer', 'hosted', 'site', 'website', 'working', 'code', 'functioning', 'server', 'mean', 'working', 'version', 'package', 'stored', 'server', 'could', 'find']","['you', 'can', 'try', 'starting', 'python', 'while', 'sshed', 'into', 'the', 'server', 'and', 'doing', 'an', 'import', 'like', 'import', 'sorl', 'sorl', '__file__', 'home', 'jmunsch', 'pycharmprojects', 'projectname', 'venv_ok', 'lib', 'python', 'sorl', '__init__', 'py', 'and', 'if', 'the', 'o', 'is', 'the', 'same', 'then', 'rsync', 'the', 'file', 'over', 'see', 'copying', 'file', 'using', 'rsync', 'from', 'remote', 'server', 'to', 'local', 'machine']",System Requirements and AWS,1,"{'neg': 0.046, 'neu': 0.936, 'pos': 0.018, 'compound': -0.498}",-0.02083333333333333,1,Package Management and File Handling,3query
58533074,BDD script for performance of text showing up on summary pane as I type,"<p>I want to write a BDD for performance requirements but am not too sure how to separate out the UI details from the requirement itself in this case. I have got a summary plane in my application where text that I enter in my main form as I type appears in the summary plane. The requirement I wrote is below: </p>

<pre><code>Given as a User
When I fill in ""Bob"" as ""Customer Name""
Then ""Bob"" appears as ""Customer Name"" in the summary plane
</code></pre>

<p>I got two questions. Is this advisable and how would I add details that the name ""Bob"" should appear in the summary plane as I type and not appear later ?</p>
",<testing><bdd><requirements>,2019-10-24 01:53:07,34,0,1,58674428,"<p>I can think of two ways to do this. You could spawn another thread that does the typing and the test thread checks the auto complete for the given text. The other way would be to type each letter individually and check after each character to see if the expected text shows up.</p>

<p>I think the easiest way is to check after each character has been typed. As long as you see the expected text at least once in between typing each character, then the step passes.</p>
",2019-10,i want to write a bdd for performance requirements but am not too sure how to separate out the ui details from the requirement itself in this case i have got a summary plane in my application where text that i enter in my main form as i type appears in the summary plane the requirement i wrote is below given as a user when i fill in bob as customer name then bob appears as customer name in the summary plane i got two questions is this advisable and how would i add details that the name bob should appear in the summary plane as i type and not appear later,i can think of two ways to do this you could spawn another thread that does the typing and the test thread checks the auto complete for the given text the other way would be to type each letter individually and check after each character to see if the expected text shows up i think the easiest way is to check after each character has been typed as long as you see the expected text at least once in between typing each character then the step passes,"['testing', 'bdd', 'requirements']","['i', 'want', 'to', 'write', 'a', 'bdd', 'for', 'performance', 'requirements', 'but', 'am', 'not', 'too', 'sure', 'how', 'to', 'separate', 'out', 'the', 'ui', 'details', 'from', 'the', 'requirement', 'itself', 'in', 'this', 'case', 'i', 'have', 'got', 'a', 'summary', 'plane', 'in', 'my', 'application', 'where', 'text', 'that', 'i', 'enter', 'in', 'my', 'main', 'form', 'as', 'i', 'type', 'appears', 'in', 'the', 'summary', 'plane', 'the', 'requirement', 'i', 'wrote', 'is', 'below', 'given', 'as', 'a', 'user', 'when', 'i', 'fill', 'in', 'bob', 'as', 'customer', 'name', 'then', 'bob', 'appears', 'as', 'customer', 'name', 'in', 'the', 'summary', 'plane', 'i', 'got', 'two', 'questions', 'is', 'this', 'advisable', 'and', 'how', 'would', 'i', 'add', 'details', 'that', 'the', 'name', 'bob', 'should', 'appear', 'in', 'the', 'summary', 'plane', 'as', 'i', 'type', 'and', 'not', 'appear', 'later']","['i', 'can', 'think', 'of', 'two', 'ways', 'to', 'do', 'this', 'you', 'could', 'spawn', 'another', 'thread', 'that', 'does', 'the', 'typing', 'and', 'the', 'test', 'thread', 'checks', 'the', 'auto', 'complete', 'for', 'the', 'given', 'text', 'the', 'other', 'way', 'would', 'be', 'to', 'type', 'each', 'letter', 'individually', 'and', 'check', 'after', 'each', 'character', 'to', 'see', 'if', 'the', 'expected', 'text', 'shows', 'up', 'i', 'think', 'the', 'easiest', 'way', 'is', 'to', 'check', 'after', 'each', 'character', 'has', 'been', 'typed', 'as', 'long', 'as', 'you', 'see', 'the', 'expected', 'text', 'at', 'least', 'once', 'in', 'between', 'typing', 'each', 'character', 'then', 'the', 'step', 'passes']","['want', 'write', 'bdd', 'performance', 'requirement', 'sure', 'separate', 'ui', 'detail', 'requirement', 'case', 'got', 'summary', 'plane', 'application', 'text', 'enter', 'main', 'form', 'type', 'appears', 'summary', 'plane', 'requirement', 'wrote', 'given', 'user', 'fill', 'bob', 'customer', 'name', 'bob', 'appears', 'customer', 'name', 'summary', 'plane', 'got', 'two', 'question', 'advisable', 'would', 'add', 'detail', 'name', 'bob', 'appear', 'summary', 'plane', 'type', 'appear', 'later']","['i', 'can', 'think', 'of', 'two', 'way', 'to', 'do', 'this', 'you', 'could', 'spawn', 'another', 'thread', 'that', 'doe', 'the', 'typing', 'and', 'the', 'test', 'thread', 'check', 'the', 'auto', 'complete', 'for', 'the', 'given', 'text', 'the', 'other', 'way', 'would', 'be', 'to', 'type', 'each', 'letter', 'individually', 'and', 'check', 'after', 'each', 'character', 'to', 'see', 'if', 'the', 'expected', 'text', 'show', 'up', 'i', 'think', 'the', 'easiest', 'way', 'is', 'to', 'check', 'after', 'each', 'character', 'ha', 'been', 'typed', 'a', 'long', 'a', 'you', 'see', 'the', 'expected', 'text', 'at', 'least', 'once', 'in', 'between', 'typing', 'each', 'character', 'then', 'the', 'step', 'pass']",System Requirements and AWS,1,"{'neg': 0.023, 'neu': 0.966, 'pos': 0.011, 'compound': -0.3167}",0.2222222222222222,1,Package Management and File Handling,3query
58466332,"Is""always"" a workable term to describe the uptime of a server?","<p>since me and my colleagues had a discussion about this, I wanted to ask, if you would use the term ""always"" to describe the uptime of a server in a requirement.</p>

<p>Example:
The server should be always reachable.</p>

<p>Since, in my opinion, alsways can't be measured, I would rather write the requirement like this:</p>

<p>The uptime of the Server should be >= 99%.</p>

<p>Thanks in advance!</p>
",<requirements><uptime><service-level-agreement>,2019-10-19 17:39:26,41,-1,1,58466423,"<p>Do not use always, it isn't possible to achieve. Uptime is discussed in terms of nines: <a href=""https://en.wikipedia.org/wiki/High_availability#%22Nines%22"" rel=""nofollow noreferrer"">https://en.wikipedia.org/wiki/High_availability#%22Nines%22</a></p>

<p>Amazon S3 for example, offers <a href=""https://docs.aws.amazon.com/AmazonS3/latest/dev/DataDurability.html"" rel=""nofollow noreferrer"">4 nines of availability</a> (99.99%).</p>

<p>Look at: <a href=""https://uptime.is/"" rel=""nofollow noreferrer"">https://uptime.is/</a> to fully understand how much downtime you are allowed for a given sla.</p>
",2019-10,since me and my colleagues had a discussion about this i wanted to ask if you would use the term always to describe the uptime of a server in a requirement example the server should be always reachable since in my opinion alsways can t be measured i would rather write the requirement like this the uptime of the server should be   thanks in advance,do not use always it isn t possible to achieve uptime is discussed in terms of nines https en wikipedia org wiki high_availability  nines   amazon s  for example offers   nines of availability     look at https uptime is to fully understand how much downtime you are allowed for a given sla,"['requirements', 'uptime', 'service-level-agreement']","['since', 'me', 'and', 'my', 'colleagues', 'had', 'a', 'discussion', 'about', 'this', 'i', 'wanted', 'to', 'ask', 'if', 'you', 'would', 'use', 'the', 'term', 'always', 'to', 'describe', 'the', 'uptime', 'of', 'a', 'server', 'in', 'a', 'requirement', 'example', 'the', 'server', 'should', 'be', 'always', 'reachable', 'since', 'in', 'my', 'opinion', 'alsways', 'can', 't', 'be', 'measured', 'i', 'would', 'rather', 'write', 'the', 'requirement', 'like', 'this', 'the', 'uptime', 'of', 'the', 'server', 'should', 'be', 'thanks', 'in', 'advance']","['do', 'not', 'use', 'always', 'it', 'isn', 't', 'possible', 'to', 'achieve', 'uptime', 'is', 'discussed', 'in', 'terms', 'of', 'nines', 'https', 'en', 'wikipedia', 'org', 'wiki', 'high_availability', 'nines', 'amazon', 's', 'for', 'example', 'offers', 'nines', 'of', 'availability', 'look', 'at', 'https', 'uptime', 'is', 'to', 'fully', 'understand', 'how', 'much', 'downtime', 'you', 'are', 'allowed', 'for', 'a', 'given', 'sla']","['since', 'colleague', 'discussion', 'wanted', 'ask', 'would', 'use', 'term', 'always', 'describe', 'uptime', 'server', 'requirement', 'example', 'server', 'always', 'reachable', 'since', 'opinion', 'alsways', 'measured', 'would', 'rather', 'write', 'requirement', 'like', 'uptime', 'server', 'thanks', 'advance']","['do', 'not', 'use', 'always', 'it', 'isn', 't', 'possible', 'to', 'achieve', 'uptime', 'is', 'discussed', 'in', 'term', 'of', 'nine', 'http', 'en', 'wikipedia', 'org', 'wiki', 'high_availability', 'nine', 'amazon', 's', 'for', 'example', 'offer', 'nine', 'of', 'availability', 'look', 'at', 'http', 'uptime', 'is', 'to', 'fully', 'understand', 'how', 'much', 'downtime', 'you', 'are', 'allowed', 'for', 'a', 'given', 'sla']",System Requirements and AWS,4,"{'neg': 0.0, 'neu': 0.956, 'pos': 0.044, 'compound': 0.4199}",0.0,4,Building and Compiling Python Projects,3query
58442527,How do I write this BDD script?,"<p>I have an exit button in my application which I want to write a story for. It behaves this way: </p>

<ol>
<li>If I have content filled in the form I am editing and I click on the exit button, it will pop up with a confirmation message letting me know there are unsaved content and if I am sure I want to exit from the page. </li>
<li>If I do not have any content filled in the form I am editing and I click on the exit button, the confirmation message will not show up and I am instantly exited from the form. </li>
</ol>

<p>What I have so far is something like this: </p>

<pre><code>Given as a User on New Profile page
And I fill in the customer name = ""Bob""
When I click on the Exit button
And I click on the ""Ok"" in the confirmation dialog
Then I will be redirected to the landing page.
</code></pre>

<p>My question is the part on <code>And when I fill in the customer name = ""Bob""</code> only covers one of the fields. How do I write the story in a succinct way that if any of the fields are filled or chosen (drop downs), the confirmation dialog will show up ? Secondly, is my story correct ?</p>
",<testing><automation><bdd><requirements>,2019-10-18 00:51:38,78,0,2,58447135,"<p>you can use datatable in that particular step as below </p>

<pre><code>Given as a User on New Profile page
And I fill in the customer details
|name|address1|adress2|pincode| //can be accessed with DataTable datatype in SD*
When I click on the Exit button
And I click on the ""Ok"" in the confirmation dialog
Then I will be redirected to the landing page.
</code></pre>

<p>*SD-Stepdefinitions</p>
",2019-10,i have an exit button in my application which i want to write a story for it behaves this way if i have content filled in the form i am editing and i click on the exit button it will pop up with a confirmation message letting me know there are unsaved content and if i am sure i want to exit from the page if i do not have any content filled in the form i am editing and i click on the exit button the confirmation message will not show up and i am instantly exited from the form what i have so far is something like this given as a user on new profile page and i fill in the customer name bob when i click on the exit button and i click on the ok in the confirmation dialog then i will be redirected to the landing page my question is the part on and when i fill in the customer name bob only covers one of the fields how do i write the story in a succinct way that if any of the fields are filled or chosen drop downs the confirmation dialog will show up secondly is my story correct,you can use datatable in that particular step as below given as a user on new profile page and i fill in the customer details name address  adress  pincode can be accessed with datatable datatype in sd when i click on the exit button and i click on the ok in the confirmation dialog then i will be redirected to the landing page sd stepdefinitions,"['testing', 'automation', 'bdd', 'requirements']","['i', 'have', 'an', 'exit', 'button', 'in', 'my', 'application', 'which', 'i', 'want', 'to', 'write', 'a', 'story', 'for', 'it', 'behaves', 'this', 'way', 'if', 'i', 'have', 'content', 'filled', 'in', 'the', 'form', 'i', 'am', 'editing', 'and', 'i', 'click', 'on', 'the', 'exit', 'button', 'it', 'will', 'pop', 'up', 'with', 'a', 'confirmation', 'message', 'letting', 'me', 'know', 'there', 'are', 'unsaved', 'content', 'and', 'if', 'i', 'am', 'sure', 'i', 'want', 'to', 'exit', 'from', 'the', 'page', 'if', 'i', 'do', 'not', 'have', 'any', 'content', 'filled', 'in', 'the', 'form', 'i', 'am', 'editing', 'and', 'i', 'click', 'on', 'the', 'exit', 'button', 'the', 'confirmation', 'message', 'will', 'not', 'show', 'up', 'and', 'i', 'am', 'instantly', 'exited', 'from', 'the', 'form', 'what', 'i', 'have', 'so', 'far', 'is', 'something', 'like', 'this', 'given', 'as', 'a', 'user', 'on', 'new', 'profile', 'page', 'and', 'i', 'fill', 'in', 'the', 'customer', 'name', 'bob', 'when', 'i', 'click', 'on', 'the', 'exit', 'button', 'and', 'i', 'click', 'on', 'the', 'ok', 'in', 'the', 'confirmation', 'dialog', 'then', 'i', 'will', 'be', 'redirected', 'to', 'the', 'landing', 'page', 'my', 'question', 'is', 'the', 'part', 'on', 'and', 'when', 'i', 'fill', 'in', 'the', 'customer', 'name', 'bob', 'only', 'covers', 'one', 'of', 'the', 'fields', 'how', 'do', 'i', 'write', 'the', 'story', 'in', 'a', 'succinct', 'way', 'that', 'if', 'any', 'of', 'the', 'fields', 'are', 'filled', 'or', 'chosen', 'drop', 'downs', 'the', 'confirmation', 'dialog', 'will', 'show', 'up', 'secondly', 'is', 'my', 'story', 'correct']","['you', 'can', 'use', 'datatable', 'in', 'that', 'particular', 'step', 'as', 'below', 'given', 'as', 'a', 'user', 'on', 'new', 'profile', 'page', 'and', 'i', 'fill', 'in', 'the', 'customer', 'details', 'name', 'address', 'adress', 'pincode', 'can', 'be', 'accessed', 'with', 'datatable', 'datatype', 'in', 'sd', 'when', 'i', 'click', 'on', 'the', 'exit', 'button', 'and', 'i', 'click', 'on', 'the', 'ok', 'in', 'the', 'confirmation', 'dialog', 'then', 'i', 'will', 'be', 'redirected', 'to', 'the', 'landing', 'page', 'sd', 'stepdefinitions']","['exit', 'button', 'application', 'want', 'write', 'story', 'behaves', 'way', 'content', 'filled', 'form', 'editing', 'click', 'exit', 'button', 'pop', 'confirmation', 'message', 'letting', 'know', 'unsaved', 'content', 'sure', 'want', 'exit', 'page', 'content', 'filled', 'form', 'editing', 'click', 'exit', 'button', 'confirmation', 'message', 'show', 'instantly', 'exited', 'form', 'far', 'something', 'like', 'given', 'user', 'new', 'profile', 'page', 'fill', 'customer', 'name', 'bob', 'click', 'exit', 'button', 'click', 'ok', 'confirmation', 'dialog', 'redirected', 'landing', 'page', 'question', 'part', 'fill', 'customer', 'name', 'bob', 'cover', 'one', 'field', 'write', 'story', 'succinct', 'way', 'field', 'filled', 'chosen', 'drop', 'confirmation', 'dialog', 'show', 'secondly', 'story', 'correct']","['you', 'can', 'use', 'datatable', 'in', 'that', 'particular', 'step', 'a', 'below', 'given', 'a', 'a', 'user', 'on', 'new', 'profile', 'page', 'and', 'i', 'fill', 'in', 'the', 'customer', 'detail', 'name', 'address', 'adress', 'pincode', 'can', 'be', 'accessed', 'with', 'datatable', 'datatype', 'in', 'sd', 'when', 'i', 'click', 'on', 'the', 'exit', 'button', 'and', 'i', 'click', 'on', 'the', 'ok', 'in', 'the', 'confirmation', 'dialog', 'then', 'i', 'will', 'be', 'redirected', 'to', 'the', 'landing', 'page', 'sd', 'stepdefinitions']",System Requirements and AWS,1,"{'neg': 0.0, 'neu': 0.961, 'pos': 0.039, 'compound': 0.6966}",0.24363636363636365,1,Package Management and File Handling,3query
58442527,How do I write this BDD script?,"<p>I have an exit button in my application which I want to write a story for. It behaves this way: </p>

<ol>
<li>If I have content filled in the form I am editing and I click on the exit button, it will pop up with a confirmation message letting me know there are unsaved content and if I am sure I want to exit from the page. </li>
<li>If I do not have any content filled in the form I am editing and I click on the exit button, the confirmation message will not show up and I am instantly exited from the form. </li>
</ol>

<p>What I have so far is something like this: </p>

<pre><code>Given as a User on New Profile page
And I fill in the customer name = ""Bob""
When I click on the Exit button
And I click on the ""Ok"" in the confirmation dialog
Then I will be redirected to the landing page.
</code></pre>

<p>My question is the part on <code>And when I fill in the customer name = ""Bob""</code> only covers one of the fields. How do I write the story in a succinct way that if any of the fields are filled or chosen (drop downs), the confirmation dialog will show up ? Secondly, is my story correct ?</p>
",<testing><automation><bdd><requirements>,2019-10-18 00:51:38,78,0,2,58486603,"<p>You can use a scenario outline in conjunction with parameterizing the step that fills in a field with a dummy value.</p>

<pre><code>Scenario Outline: The user is taken to the landing page after exiting new user profile
    Given I am registering as a new user
    And I have filled in the ""&lt;Profile Field&gt;"" field
    And I have chosen to exit the current page
    When I confirm I want to abandon my unsaved changes
    Then I should be redirected to the landing page

Examples:
    | Profile Field |
    | Name          |
    | Phone Number  |
    | ...           |
</code></pre>

<p>You didn't post the scenario title, which is just as important as the wording for each step, so I made on up. The important thing is to focus on the behavior:</p>

<blockquote>
  <p>Scenario Outline: The user is taken to the landing page after exiting new user profile</p>
</blockquote>

<p>The step <code>Given I am registering as a new user</code> should navigate to the new user profile page.</p>

<p>The step <code>Given I have filled in the ""&lt;Profile Field&gt;"" field</code> should accept an argument where you name the field you want filled in. The definition for this step should fill in the field with dummy information, or blindly chose an option in a dropdown.</p>

<p>The step <code>Given I have chosen to exit the current page</code> should click the exit button. Notice there is no mention of ""clicking"" on anything. You should avoid language in your steps the sound like instructions on how to use the user interface, and instead focus on the behavior of the application using business terms.</p>

<p>Same thing for <code>When I confirm I want to abandon my unsaved changes</code>. It does not mention clicking on anything. It just focuses on the behavior (choosing to abandon your changes). The step definition should know how to click the ""OK"" button in the confirmation dialog. The fact a confirmation dialog even exists should only be known by the step definition.</p>

<p>Finally, <code>Then I should be redirected to the landing page</code> makes your assertion about where the user ends up. I like to include the word ""should"" in my <code>Then</code> steps. If find it easier to pinpoint the test failure when a <code>Then</code> step fails. The condition that comes after the ""should"" in my step is usually the thing that fails.</p>
",2019-10,i have an exit button in my application which i want to write a story for it behaves this way if i have content filled in the form i am editing and i click on the exit button it will pop up with a confirmation message letting me know there are unsaved content and if i am sure i want to exit from the page if i do not have any content filled in the form i am editing and i click on the exit button the confirmation message will not show up and i am instantly exited from the form what i have so far is something like this given as a user on new profile page and i fill in the customer name bob when i click on the exit button and i click on the ok in the confirmation dialog then i will be redirected to the landing page my question is the part on and when i fill in the customer name bob only covers one of the fields how do i write the story in a succinct way that if any of the fields are filled or chosen drop downs the confirmation dialog will show up secondly is my story correct,you can use a scenario outline in conjunction with parameterizing the step that fills in a field with a dummy value scenario outline the user is taken to the landing page after exiting new user profile given i am registering as a new user and i have filled in the profile field field and i have chosen to exit the current page when i confirm i want to abandon my unsaved changes then i should be redirected to the landing page examples profile field name phone number you didn t post the scenario title which is just as important as the wording for each step so i made on up the important thing is to focus on the behavior scenario outline the user is taken to the landing page after exiting new user profile the step given i am registering as a new user should navigate to the new user profile page the step given i have filled in the profile field field should accept an argument where you name the field you want filled in the definition for this step should fill in the field with dummy information or blindly chose an option in a dropdown the step given i have chosen to exit the current page should click the exit button notice there is no mention of clicking on anything you should avoid language in your steps the sound like instructions on how to use the user interface and instead focus on the behavior of the application using business terms same thing for when i confirm i want to abandon my unsaved changes it does not mention clicking on anything it just focuses on the behavior choosing to abandon your changes the step definition should know how to click the ok button in the confirmation dialog the fact a confirmation dialog even exists should only be known by the step definition finally then i should be redirected to the landing page makes your assertion about where the user ends up i like to include the word should in my then steps if find it easier to pinpoint the test failure when a then step fails the condition that comes after the should in my step is usually the thing that fails,"['testing', 'automation', 'bdd', 'requirements']","['i', 'have', 'an', 'exit', 'button', 'in', 'my', 'application', 'which', 'i', 'want', 'to', 'write', 'a', 'story', 'for', 'it', 'behaves', 'this', 'way', 'if', 'i', 'have', 'content', 'filled', 'in', 'the', 'form', 'i', 'am', 'editing', 'and', 'i', 'click', 'on', 'the', 'exit', 'button', 'it', 'will', 'pop', 'up', 'with', 'a', 'confirmation', 'message', 'letting', 'me', 'know', 'there', 'are', 'unsaved', 'content', 'and', 'if', 'i', 'am', 'sure', 'i', 'want', 'to', 'exit', 'from', 'the', 'page', 'if', 'i', 'do', 'not', 'have', 'any', 'content', 'filled', 'in', 'the', 'form', 'i', 'am', 'editing', 'and', 'i', 'click', 'on', 'the', 'exit', 'button', 'the', 'confirmation', 'message', 'will', 'not', 'show', 'up', 'and', 'i', 'am', 'instantly', 'exited', 'from', 'the', 'form', 'what', 'i', 'have', 'so', 'far', 'is', 'something', 'like', 'this', 'given', 'as', 'a', 'user', 'on', 'new', 'profile', 'page', 'and', 'i', 'fill', 'in', 'the', 'customer', 'name', 'bob', 'when', 'i', 'click', 'on', 'the', 'exit', 'button', 'and', 'i', 'click', 'on', 'the', 'ok', 'in', 'the', 'confirmation', 'dialog', 'then', 'i', 'will', 'be', 'redirected', 'to', 'the', 'landing', 'page', 'my', 'question', 'is', 'the', 'part', 'on', 'and', 'when', 'i', 'fill', 'in', 'the', 'customer', 'name', 'bob', 'only', 'covers', 'one', 'of', 'the', 'fields', 'how', 'do', 'i', 'write', 'the', 'story', 'in', 'a', 'succinct', 'way', 'that', 'if', 'any', 'of', 'the', 'fields', 'are', 'filled', 'or', 'chosen', 'drop', 'downs', 'the', 'confirmation', 'dialog', 'will', 'show', 'up', 'secondly', 'is', 'my', 'story', 'correct']","['you', 'can', 'use', 'a', 'scenario', 'outline', 'in', 'conjunction', 'with', 'parameterizing', 'the', 'step', 'that', 'fills', 'in', 'a', 'field', 'with', 'a', 'dummy', 'value', 'scenario', 'outline', 'the', 'user', 'is', 'taken', 'to', 'the', 'landing', 'page', 'after', 'exiting', 'new', 'user', 'profile', 'given', 'i', 'am', 'registering', 'as', 'a', 'new', 'user', 'and', 'i', 'have', 'filled', 'in', 'the', 'profile', 'field', 'field', 'and', 'i', 'have', 'chosen', 'to', 'exit', 'the', 'current', 'page', 'when', 'i', 'confirm', 'i', 'want', 'to', 'abandon', 'my', 'unsaved', 'changes', 'then', 'i', 'should', 'be', 'redirected', 'to', 'the', 'landing', 'page', 'examples', 'profile', 'field', 'name', 'phone', 'number', 'you', 'didn', 't', 'post', 'the', 'scenario', 'title', 'which', 'is', 'just', 'as', 'important', 'as', 'the', 'wording', 'for', 'each', 'step', 'so', 'i', 'made', 'on', 'up', 'the', 'important', 'thing', 'is', 'to', 'focus', 'on', 'the', 'behavior', 'scenario', 'outline', 'the', 'user', 'is', 'taken', 'to', 'the', 'landing', 'page', 'after', 'exiting', 'new', 'user', 'profile', 'the', 'step', 'given', 'i', 'am', 'registering', 'as', 'a', 'new', 'user', 'should', 'navigate', 'to', 'the', 'new', 'user', 'profile', 'page', 'the', 'step', 'given', 'i', 'have', 'filled', 'in', 'the', 'profile', 'field', 'field', 'should', 'accept', 'an', 'argument', 'where', 'you', 'name', 'the', 'field', 'you', 'want', 'filled', 'in', 'the', 'definition', 'for', 'this', 'step', 'should', 'fill', 'in', 'the', 'field', 'with', 'dummy', 'information', 'or', 'blindly', 'chose', 'an', 'option', 'in', 'a', 'dropdown', 'the', 'step', 'given', 'i', 'have', 'chosen', 'to', 'exit', 'the', 'current', 'page', 'should', 'click', 'the', 'exit', 'button', 'notice', 'there', 'is', 'no', 'mention', 'of', 'clicking', 'on', 'anything', 'you', 'should', 'avoid', 'language', 'in', 'your', 'steps', 'the', 'sound', 'like', 'instructions', 'on', 'how', 'to', 'use', 'the', 'user', 'interface', 'and', 'instead', 'focus', 'on', 'the', 'behavior', 'of', 'the', 'application', 'using', 'business', 'terms', 'same', 'thing', 'for', 'when', 'i', 'confirm', 'i', 'want', 'to', 'abandon', 'my', 'unsaved', 'changes', 'it', 'does', 'not', 'mention', 'clicking', 'on', 'anything', 'it', 'just', 'focuses', 'on', 'the', 'behavior', 'choosing', 'to', 'abandon', 'your', 'changes', 'the', 'step', 'definition', 'should', 'know', 'how', 'to', 'click', 'the', 'ok', 'button', 'in', 'the', 'confirmation', 'dialog', 'the', 'fact', 'a', 'confirmation', 'dialog', 'even', 'exists', 'should', 'only', 'be', 'known', 'by', 'the', 'step', 'definition', 'finally', 'then', 'i', 'should', 'be', 'redirected', 'to', 'the', 'landing', 'page', 'makes', 'your', 'assertion', 'about', 'where', 'the', 'user', 'ends', 'up', 'i', 'like', 'to', 'include', 'the', 'word', 'should', 'in', 'my', 'then', 'steps', 'if', 'find', 'it', 'easier', 'to', 'pinpoint', 'the', 'test', 'failure', 'when', 'a', 'then', 'step', 'fails', 'the', 'condition', 'that', 'comes', 'after', 'the', 'should', 'in', 'my', 'step', 'is', 'usually', 'the', 'thing', 'that', 'fails']","['exit', 'button', 'application', 'want', 'write', 'story', 'behaves', 'way', 'content', 'filled', 'form', 'editing', 'click', 'exit', 'button', 'pop', 'confirmation', 'message', 'letting', 'know', 'unsaved', 'content', 'sure', 'want', 'exit', 'page', 'content', 'filled', 'form', 'editing', 'click', 'exit', 'button', 'confirmation', 'message', 'show', 'instantly', 'exited', 'form', 'far', 'something', 'like', 'given', 'user', 'new', 'profile', 'page', 'fill', 'customer', 'name', 'bob', 'click', 'exit', 'button', 'click', 'ok', 'confirmation', 'dialog', 'redirected', 'landing', 'page', 'question', 'part', 'fill', 'customer', 'name', 'bob', 'cover', 'one', 'field', 'write', 'story', 'succinct', 'way', 'field', 'filled', 'chosen', 'drop', 'confirmation', 'dialog', 'show', 'secondly', 'story', 'correct']","['you', 'can', 'use', 'a', 'scenario', 'outline', 'in', 'conjunction', 'with', 'parameterizing', 'the', 'step', 'that', 'fill', 'in', 'a', 'field', 'with', 'a', 'dummy', 'value', 'scenario', 'outline', 'the', 'user', 'is', 'taken', 'to', 'the', 'landing', 'page', 'after', 'exiting', 'new', 'user', 'profile', 'given', 'i', 'am', 'registering', 'a', 'a', 'new', 'user', 'and', 'i', 'have', 'filled', 'in', 'the', 'profile', 'field', 'field', 'and', 'i', 'have', 'chosen', 'to', 'exit', 'the', 'current', 'page', 'when', 'i', 'confirm', 'i', 'want', 'to', 'abandon', 'my', 'unsaved', 'change', 'then', 'i', 'should', 'be', 'redirected', 'to', 'the', 'landing', 'page', 'example', 'profile', 'field', 'name', 'phone', 'number', 'you', 'didn', 't', 'post', 'the', 'scenario', 'title', 'which', 'is', 'just', 'a', 'important', 'a', 'the', 'wording', 'for', 'each', 'step', 'so', 'i', 'made', 'on', 'up', 'the', 'important', 'thing', 'is', 'to', 'focus', 'on', 'the', 'behavior', 'scenario', 'outline', 'the', 'user', 'is', 'taken', 'to', 'the', 'landing', 'page', 'after', 'exiting', 'new', 'user', 'profile', 'the', 'step', 'given', 'i', 'am', 'registering', 'a', 'a', 'new', 'user', 'should', 'navigate', 'to', 'the', 'new', 'user', 'profile', 'page', 'the', 'step', 'given', 'i', 'have', 'filled', 'in', 'the', 'profile', 'field', 'field', 'should', 'accept', 'an', 'argument', 'where', 'you', 'name', 'the', 'field', 'you', 'want', 'filled', 'in', 'the', 'definition', 'for', 'this', 'step', 'should', 'fill', 'in', 'the', 'field', 'with', 'dummy', 'information', 'or', 'blindly', 'chose', 'an', 'option', 'in', 'a', 'dropdown', 'the', 'step', 'given', 'i', 'have', 'chosen', 'to', 'exit', 'the', 'current', 'page', 'should', 'click', 'the', 'exit', 'button', 'notice', 'there', 'is', 'no', 'mention', 'of', 'clicking', 'on', 'anything', 'you', 'should', 'avoid', 'language', 'in', 'your', 'step', 'the', 'sound', 'like', 'instruction', 'on', 'how', 'to', 'use', 'the', 'user', 'interface', 'and', 'instead', 'focus', 'on', 'the', 'behavior', 'of', 'the', 'application', 'using', 'business', 'term', 'same', 'thing', 'for', 'when', 'i', 'confirm', 'i', 'want', 'to', 'abandon', 'my', 'unsaved', 'change', 'it', 'doe', 'not', 'mention', 'clicking', 'on', 'anything', 'it', 'just', 'focus', 'on', 'the', 'behavior', 'choosing', 'to', 'abandon', 'your', 'change', 'the', 'step', 'definition', 'should', 'know', 'how', 'to', 'click', 'the', 'ok', 'button', 'in', 'the', 'confirmation', 'dialog', 'the', 'fact', 'a', 'confirmation', 'dialog', 'even', 'exists', 'should', 'only', 'be', 'known', 'by', 'the', 'step', 'definition', 'finally', 'then', 'i', 'should', 'be', 'redirected', 'to', 'the', 'landing', 'page', 'make', 'your', 'assertion', 'about', 'where', 'the', 'user', 'end', 'up', 'i', 'like', 'to', 'include', 'the', 'word', 'should', 'in', 'my', 'then', 'step', 'if', 'find', 'it', 'easier', 'to', 'pinpoint', 'the', 'test', 'failure', 'when', 'a', 'then', 'step', 'fails', 'the', 'condition', 'that', 'come', 'after', 'the', 'should', 'in', 'my', 'step', 'is', 'usually', 'the', 'thing', 'that', 'fails']",System Requirements and AWS,1,"{'neg': 0.0, 'neu': 0.961, 'pos': 0.039, 'compound': 0.6966}",0.24363636363636365,1,Package Management and File Handling,3query
58344997,Batch tag creation in enterprise architect with javascript,"<p>I've created a EA project with a bunch of requirements, that needs to be imported into Redmine. Instead of doing it by hand, We want to use a tool
This tool needs to use some specific tag for sync data, so I need to create five tags for every requirement, and I simply cannot do it for every requirement since I've hundreds of them.</p>

<p>I've starting to check the javascript scripting, and I've noticed a function like this one in one example:</p>

<pre><code>/**
 * Sets the specified TaggedValue on the provided element. If the provided element does not already
 * contain a TaggedValue with the specified name, a new TaggedValue is created with the requested
 * name and value. If a TaggedValue already exists with the specified name then action to take is
 * determined by the replaceExisting variable. If replaceExisting is set to true, the existing value
 * is replaced with the specified value, if not, a new TaggedValue is created with the new value.
 *
 * @param[in] theElement (EA.Element) The element to set the TaggedValue value on
 * @param[in] taggedValueName (String) The name of the TaggedValue to set
 * @param[in] taggedValueValue (variant) The value of the TaggedValue to set
 * @param[in] replaceExisting (boolean) If a TaggedValue of the same name already exists, specifies 
 * whether to replace it, or create a new TaggedValue.
 */
function TVSetElementTaggedValue( theElement /* : EA.Element */, taggedValueName /* : String */, taggedValueValue /* : variant */, replaceExisting /* : boolean */ ) /* : void */
{
    if ( theElement != null &amp;&amp; taggedValueName.length &gt; 0 )
    {
        var taggedValue as EA.TaggedValue;
        taggedValue = null;

        // If replace existing was specified then attempt to get a tagged value from the element
        // with the provided name
        if ( replaceExisting )
            taggedValue = theElement.TaggedValues.GetByName( taggedValueName );

        if ( taggedValue == null )
        {
            taggedValue = theElement.TaggedValues.AddNew( taggedValueName, taggedValueValue );
        }
        else
        {
            taggedValue.Value = taggedValueValue;
        }

        taggedValue.Update();
    }
}
</code></pre>

<p>What I need to do is how to retrieve a list of requirements that are stored in a specific package, and how to cycle them in order to apply this function.</p>

<p>Any help would be appreciated.</p>
",<javascript><enterprise-architect><requirements>,2019-10-11 16:10:26,131,0,1,58347630,"<p>Basically:</p>

<pre><code>for e in myPackage.elements:
    if e.type == 9: #code for Requirement
        print(e.name)
        for t in e.taggedValues:
            print(t.name, t.value, t.notes)
</code></pre>

<p>will list the element of the package and all their tagged values.</p>

<p>This it Python, but it's not difficult to translate to any other language.</p>
",2019-10,i ve created a ea project with a bunch of requirements that needs to be imported into redmine instead of doing it by hand we want to use a tool this tool needs to use some specific tag for sync data so i need to create five tags for every requirement and i simply cannot do it for every requirement since i ve hundreds of them i ve starting to check the javascript scripting and i ve noticed a function like this one in one example sets the specified taggedvalue on the provided element if the provided element does not already contain a taggedvalue with the specified name a new taggedvalue is created with the requested name and value if a taggedvalue already exists with the specified name then action to take is determined by the replaceexisting variable if replaceexisting is set to true the existing value is replaced with the specified value if not a new taggedvalue is created with the new value param in theelement ea element the element to set the taggedvalue value on param in taggedvaluename string the name of the taggedvalue to set param in taggedvaluevalue variant the value of the taggedvalue to set param in replaceexisting boolean if a taggedvalue of the same name already exists specifies whether to replace it or create a new taggedvalue function tvsetelementtaggedvalue theelement ea element taggedvaluename string taggedvaluevalue variant replaceexisting boolean void if theelement null taggedvaluename length   var taggedvalue as ea taggedvalue taggedvalue null if replace existing was specified then attempt to get a tagged value from the element with the provided name if replaceexisting taggedvalue theelement taggedvalues getbyname taggedvaluename if taggedvalue null taggedvalue theelement taggedvalues addnew taggedvaluename taggedvaluevalue else taggedvalue value taggedvaluevalue taggedvalue update what i need to do is how to retrieve a list of requirements that are stored in a specific package and how to cycle them in order to apply this function any help would be appreciated,basically for e in mypackage elements if e type   code for requirement print e name for t in e taggedvalues print t name t value t notes will list the element of the package and all their tagged values this it python but it s not difficult to translate to any other language,"['javascript', 'enterprise-architect', 'requirements']","['i', 've', 'created', 'a', 'ea', 'project', 'with', 'a', 'bunch', 'of', 'requirements', 'that', 'needs', 'to', 'be', 'imported', 'into', 'redmine', 'instead', 'of', 'doing', 'it', 'by', 'hand', 'we', 'want', 'to', 'use', 'a', 'tool', 'this', 'tool', 'needs', 'to', 'use', 'some', 'specific', 'tag', 'for', 'sync', 'data', 'so', 'i', 'need', 'to', 'create', 'five', 'tags', 'for', 'every', 'requirement', 'and', 'i', 'simply', 'can', 'not', 'do', 'it', 'for', 'every', 'requirement', 'since', 'i', 've', 'hundreds', 'of', 'them', 'i', 've', 'starting', 'to', 'check', 'the', 'javascript', 'scripting', 'and', 'i', 've', 'noticed', 'a', 'function', 'like', 'this', 'one', 'in', 'one', 'example', 'sets', 'the', 'specified', 'taggedvalue', 'on', 'the', 'provided', 'element', 'if', 'the', 'provided', 'element', 'does', 'not', 'already', 'contain', 'a', 'taggedvalue', 'with', 'the', 'specified', 'name', 'a', 'new', 'taggedvalue', 'is', 'created', 'with', 'the', 'requested', 'name', 'and', 'value', 'if', 'a', 'taggedvalue', 'already', 'exists', 'with', 'the', 'specified', 'name', 'then', 'action', 'to', 'take', 'is', 'determined', 'by', 'the', 'replaceexisting', 'variable', 'if', 'replaceexisting', 'is', 'set', 'to', 'true', 'the', 'existing', 'value', 'is', 'replaced', 'with', 'the', 'specified', 'value', 'if', 'not', 'a', 'new', 'taggedvalue', 'is', 'created', 'with', 'the', 'new', 'value', 'param', 'in', 'theelement', 'ea', 'element', 'the', 'element', 'to', 'set', 'the', 'taggedvalue', 'value', 'on', 'param', 'in', 'taggedvaluename', 'string', 'the', 'name', 'of', 'the', 'taggedvalue', 'to', 'set', 'param', 'in', 'taggedvaluevalue', 'variant', 'the', 'value', 'of', 'the', 'taggedvalue', 'to', 'set', 'param', 'in', 'replaceexisting', 'boolean', 'if', 'a', 'taggedvalue', 'of', 'the', 'same', 'name', 'already', 'exists', 'specifies', 'whether', 'to', 'replace', 'it', 'or', 'create', 'a', 'new', 'taggedvalue', 'function', 'tvsetelementtaggedvalue', 'theelement', 'ea', 'element', 'taggedvaluename', 'string', 'taggedvaluevalue', 'variant', 'replaceexisting', 'boolean', 'void', 'if', 'theelement', 'null', 'taggedvaluename', 'length', 'var', 'taggedvalue', 'as', 'ea', 'taggedvalue', 'taggedvalue', 'null', 'if', 'replace', 'existing', 'was', 'specified', 'then', 'attempt', 'to', 'get', 'a', 'tagged', 'value', 'from', 'the', 'element', 'with', 'the', 'provided', 'name', 'if', 'replaceexisting', 'taggedvalue', 'theelement', 'taggedvalues', 'getbyname', 'taggedvaluename', 'if', 'taggedvalue', 'null', 'taggedvalue', 'theelement', 'taggedvalues', 'addnew', 'taggedvaluename', 'taggedvaluevalue', 'else', 'taggedvalue', 'value', 'taggedvaluevalue', 'taggedvalue', 'update', 'what', 'i', 'need', 'to', 'do', 'is', 'how', 'to', 'retrieve', 'a', 'list', 'of', 'requirements', 'that', 'are', 'stored', 'in', 'a', 'specific', 'package', 'and', 'how', 'to', 'cycle', 'them', 'in', 'order', 'to', 'apply', 'this', 'function', 'any', 'help', 'would', 'be', 'appreciated']","['basically', 'for', 'e', 'in', 'mypackage', 'elements', 'if', 'e', 'type', 'code', 'for', 'requirement', 'print', 'e', 'name', 'for', 't', 'in', 'e', 'taggedvalues', 'print', 't', 'name', 't', 'value', 't', 'notes', 'will', 'list', 'the', 'element', 'of', 'the', 'package', 'and', 'all', 'their', 'tagged', 'values', 'this', 'it', 'python', 'but', 'it', 's', 'not', 'difficult', 'to', 'translate', 'to', 'any', 'other', 'language']","['created', 'ea', 'project', 'bunch', 'requirement', 'need', 'imported', 'redmine', 'instead', 'hand', 'want', 'use', 'tool', 'tool', 'need', 'use', 'specific', 'tag', 'sync', 'data', 'need', 'create', 'five', 'tag', 'every', 'requirement', 'simply', 'every', 'requirement', 'since', 'hundred', 'starting', 'check', 'javascript', 'scripting', 'noticed', 'function', 'like', 'one', 'one', 'example', 'set', 'specified', 'taggedvalue', 'provided', 'element', 'provided', 'element', 'doe', 'already', 'contain', 'taggedvalue', 'specified', 'name', 'new', 'taggedvalue', 'created', 'requested', 'name', 'value', 'taggedvalue', 'already', 'exists', 'specified', 'name', 'action', 'take', 'determined', 'replaceexisting', 'variable', 'replaceexisting', 'set', 'true', 'existing', 'value', 'replaced', 'specified', 'value', 'new', 'taggedvalue', 'created', 'new', 'value', 'param', 'theelement', 'ea', 'element', 'element', 'set', 'taggedvalue', 'value', 'param', 'taggedvaluename', 'string', 'name', 'taggedvalue', 'set', 'param', 'taggedvaluevalue', 'variant', 'value', 'taggedvalue', 'set', 'param', 'replaceexisting', 'boolean', 'taggedvalue', 'name', 'already', 'exists', 'specifies', 'whether', 'replace', 'create', 'new', 'taggedvalue', 'function', 'tvsetelementtaggedvalue', 'theelement', 'ea', 'element', 'taggedvaluename', 'string', 'taggedvaluevalue', 'variant', 'replaceexisting', 'boolean', 'void', 'theelement', 'null', 'taggedvaluename', 'length', 'var', 'taggedvalue', 'ea', 'taggedvalue', 'taggedvalue', 'null', 'replace', 'existing', 'wa', 'specified', 'attempt', 'get', 'tagged', 'value', 'element', 'provided', 'name', 'replaceexisting', 'taggedvalue', 'theelement', 'taggedvalues', 'getbyname', 'taggedvaluename', 'taggedvalue', 'null', 'taggedvalue', 'theelement', 'taggedvalues', 'addnew', 'taggedvaluename', 'taggedvaluevalue', 'else', 'taggedvalue', 'value', 'taggedvaluevalue', 'taggedvalue', 'update', 'need', 'retrieve', 'list', 'requirement', 'stored', 'specific', 'package', 'cycle', 'order', 'apply', 'function', 'help', 'would', 'appreciated']","['basically', 'for', 'e', 'in', 'mypackage', 'element', 'if', 'e', 'type', 'code', 'for', 'requirement', 'print', 'e', 'name', 'for', 't', 'in', 'e', 'taggedvalues', 'print', 't', 'name', 't', 'value', 't', 'note', 'will', 'list', 'the', 'element', 'of', 'the', 'package', 'and', 'all', 'their', 'tagged', 'value', 'this', 'it', 'python', 'but', 'it', 's', 'not', 'difficult', 'to', 'translate', 'to', 'any', 'other', 'language']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 0.872, 'pos': 0.128, 'compound': 0.9879}",0.07499999999999998,0,System Requirements and AWS,3query
58141835,Map a mocha test to jira id,"<p>I have a bunch of mocha tests, is there a way to map every test to a jira ticket? The intention behind it is, when I have the test report, I click on any test, and it takes me back to the actual jira page. (Tests to Requirements mapping)</p>

<p>NOTE: We do not have a test management tool yet. So will be using JIRA ticket as the source of truth.</p>

<p>Any pointers around this would be really helpful.</p>
",<javascript><automation><mocha.js><jira><requirements>,2019-09-27 22:17:28,545,1,1,58348990,"<p>I have the below implementation for cypress tests:</p>

<ol>
<li>I include the JIRA issue number in the test title. </li>
<li>There are cypress events, at the end of every test, I grab the title and strip off the JIRA id and pass it to the mochawesome context.
cypress/support/index.js</li>
</ol>

<pre><code>Cypress.on('test:after:run', (test, runnable) =&gt; {
  const { parent } = runnable;

  const jiraId = test.title;
  jiraId.replace(/\w+-\w+/, match =&gt; {
    const name = match;
    addContext(
      { test },
      {
        title: 'JIRA',
        value: `https://jira.sendgrid.net/browse/${name}`,
      }
    );
  });
});
</code></pre>

<ol start=""3"">
<li>Then in the test reports it looks like this.</li>
</ol>

<p><a href=""https://i.stack.imgur.com/oQu4a.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/oQu4a.png"" alt=""enter image description here""></a></p>

<ol start=""4"">
<li>Click on the jira link and you can navigate to your actual jira ticket.</li>
</ol>
",2019-09,i have a bunch of mocha tests is there a way to map every test to a jira ticket the intention behind it is when i have the test report i click on any test and it takes me back to the actual jira page tests to requirements mapping note we do not have a test management tool yet so will be using jira ticket as the source of truth any pointers around this would be really helpful,i have the below implementation for cypress tests i include the jira issue number in the test title there are cypress events at the end of every test i grab the title and strip off the jira id and pass it to the mochawesome context cypress support index js cypress on test after run test runnable const parent runnable const jiraid test title jiraid replace w w match const name match addcontext test title jira value https jira sendgrid net browse name then in the test reports it looks like this click on the jira link and you can navigate to your actual jira ticket,"['javascript', 'automation', 'mocha.js', 'jira', 'requirements']","['i', 'have', 'a', 'bunch', 'of', 'mocha', 'tests', 'is', 'there', 'a', 'way', 'to', 'map', 'every', 'test', 'to', 'a', 'jira', 'ticket', 'the', 'intention', 'behind', 'it', 'is', 'when', 'i', 'have', 'the', 'test', 'report', 'i', 'click', 'on', 'any', 'test', 'and', 'it', 'takes', 'me', 'back', 'to', 'the', 'actual', 'jira', 'page', 'tests', 'to', 'requirements', 'mapping', 'note', 'we', 'do', 'not', 'have', 'a', 'test', 'management', 'tool', 'yet', 'so', 'will', 'be', 'using', 'jira', 'ticket', 'as', 'the', 'source', 'of', 'truth', 'any', 'pointers', 'around', 'this', 'would', 'be', 'really', 'helpful']","['i', 'have', 'the', 'below', 'implementation', 'for', 'cypress', 'tests', 'i', 'include', 'the', 'jira', 'issue', 'number', 'in', 'the', 'test', 'title', 'there', 'are', 'cypress', 'events', 'at', 'the', 'end', 'of', 'every', 'test', 'i', 'grab', 'the', 'title', 'and', 'strip', 'off', 'the', 'jira', 'id', 'and', 'pass', 'it', 'to', 'the', 'mochawesome', 'context', 'cypress', 'support', 'index', 'js', 'cypress', 'on', 'test', 'after', 'run', 'test', 'runnable', 'const', 'parent', 'runnable', 'const', 'jiraid', 'test', 'title', 'jiraid', 'replace', 'w', 'w', 'match', 'const', 'name', 'match', 'addcontext', 'test', 'title', 'jira', 'value', 'https', 'jira', 'sendgrid', 'net', 'browse', 'name', 'then', 'in', 'the', 'test', 'reports', 'it', 'looks', 'like', 'this', 'click', 'on', 'the', 'jira', 'link', 'and', 'you', 'can', 'navigate', 'to', 'your', 'actual', 'jira', 'ticket']","['bunch', 'mocha', 'test', 'way', 'map', 'every', 'test', 'jira', 'ticket', 'intention', 'behind', 'test', 'report', 'click', 'test', 'take', 'back', 'actual', 'jira', 'page', 'test', 'requirement', 'mapping', 'note', 'test', 'management', 'tool', 'yet', 'using', 'jira', 'ticket', 'source', 'truth', 'pointer', 'around', 'would', 'really', 'helpful']","['i', 'have', 'the', 'below', 'implementation', 'for', 'cypress', 'test', 'i', 'include', 'the', 'jira', 'issue', 'number', 'in', 'the', 'test', 'title', 'there', 'are', 'cypress', 'event', 'at', 'the', 'end', 'of', 'every', 'test', 'i', 'grab', 'the', 'title', 'and', 'strip', 'off', 'the', 'jira', 'id', 'and', 'pas', 'it', 'to', 'the', 'mochawesome', 'context', 'cypress', 'support', 'index', 'j', 'cypress', 'on', 'test', 'after', 'run', 'test', 'runnable', 'const', 'parent', 'runnable', 'const', 'jiraid', 'test', 'title', 'jiraid', 'replace', 'w', 'w', 'match', 'const', 'name', 'match', 'addcontext', 'test', 'title', 'jira', 'value', 'http', 'jira', 'sendgrid', 'net', 'browse', 'name', 'then', 'in', 'the', 'test', 'report', 'it', 'look', 'like', 'this', 'click', 'on', 'the', 'jira', 'link', 'and', 'you', 'can', 'navigate', 'to', 'your', 'actual', 'jira', 'ticket']",System Requirements and AWS,1,"{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}",-0.05,1,Package Management and File Handling,3query
58049762,Does jquery $.get or cordova-plugin-media use or incorporate cryptography?,"<p>When submitting an app (created with Cordova and XCode) for iTunes, I'm asked ""Is your app designed to use cryptography or does it contain or incorporate cryptography?"" My app uses the jquery $.get statement to pull files from a https URL and also uses the cordova-plugin-media plugin to access files with an https URL. If it is only accessing files on a secure site, I'm not sure if this applies to export compliance and cryptography.</p>

<p>Apple gives this link, but it doesn't clarify my question.
<a href=""https://www.bis.doc.gov/index.php/policy-guidance/encryption/4-reports-and-reviews/a-annual-self-classification"" rel=""nofollow noreferrer"">https://www.bis.doc.gov/index.php/policy-guidance/encryption/4-reports-and-reviews/a-annual-self-classification</a></p>

<p>I'm still not sure if encryption is built in to the plugin or Cordova app automatically since I am accessing an external https resource, or if simply accessing a URL that is https through the app qualifies as use of encryption.</p>

<p>Related article: <a href=""https://www.cocoanetics.com/2017/02/itunes-connect-encryption-info/"" rel=""nofollow noreferrer"">iTunes connect encryption info</a></p>

<p>If I select ""Yes"" to ""Only makes calls over HTTS"" I get this statement, which appears to indicate I still need to submit a year-end self classification report because I'm getting a file on an https website?</p>

<blockquote>
  <p>""If you are making use of ATS or making a call to HTTPS, you are required to submit a year-end self classification report to the US government.""</p>
</blockquote>

<p>Should I just change my calls to be http instead? But the website redirects to https.</p>

<p>Another related link which I can't understand completely: <a href=""https://stackoverflow.com/questions/2135081/does-my-application-contain-encryption/40919650#40919650"">Does my application &quot;contain encryption&quot;?</a></p>
",<jquery><ios><cordova><itunes><requirements>,2019-09-22 13:40:39,74,1,1,58404864,"<p>Apple support wouldn't answer the question. I never heard back from biz.doc.gov.</p>

<p>The best help I've seen so far is this:
<a href=""https://kitefaster.com/2017/08/10/encryption-export-compliance-ios-apps/"" rel=""nofollow noreferrer"">https://kitefaster.com/2017/08/10/encryption-export-compliance-ios-apps/</a>
which seems to say that if I am using https to get an external resource, then I need to submit an annual report. </p>

<p>I think to be safe I will just say it utilizes encryption and submit the year-end self classification report. Info on the report is here, with a sample document provided: <a href=""https://www.bis.doc.gov/index.php/policy-guidance/encryption/4-reports-and-reviews/a-annual-self-classification"" rel=""nofollow noreferrer"">https://www.bis.doc.gov/index.php/policy-guidance/encryption/4-reports-and-reviews/a-annual-self-classification</a></p>

<p>This link also gives good direction:
<a href=""https://stackoverflow.com/questions/2135081/does-my-application-contain-encryption/40919650#40919650"">Does my application &quot;contain encryption&quot;?</a></p>
",2019-09,when submitting an app created with cordova and xcode for itunes i m asked is your app designed to use cryptography or does it contain or incorporate cryptography my app uses the jquery get statement to pull files from a https url and also uses the cordova plugin media plugin to access files with an https url if it is only accessing files on a secure site i m not sure if this applies to export compliance and cryptography apple gives this link but it doesn t clarify my question https www bis doc gov index php policy guidance encryption   reports and reviews a annual self classification i m still not sure if encryption is built in to the plugin or cordova app automatically since i am accessing an external https resource or if simply accessing a url that is https through the app qualifies as use of encryption related article itunes connect encryption info if i select yes to only makes calls over htts i get this statement which appears to indicate i still need to submit a year end self classification report because i m getting a file on an https website if you are making use of ats or making a call to https you are required to submit a year end self classification report to the us government should i just change my calls to be http instead but the website redirects to https another related link which i can t understand completely does my application contain encryption,apple support wouldn t answer the question i never heard back from biz doc gov the best help i ve seen so far is this https kitefaster com       encryption export compliance ios apps which seems to say that if i am using https to get an external resource then i need to submit an annual report i think to be safe i will just say it utilizes encryption and submit the year end self classification report info on the report is here with a sample document provided https www bis doc gov index php policy guidance encryption   reports and reviews a annual self classification this link also gives good direction does my application contain encryption,"['jquery', 'ios', 'cordova', 'itunes', 'requirements']","['when', 'submitting', 'an', 'app', 'created', 'with', 'cordova', 'and', 'xcode', 'for', 'itunes', 'i', 'm', 'asked', 'is', 'your', 'app', 'designed', 'to', 'use', 'cryptography', 'or', 'does', 'it', 'contain', 'or', 'incorporate', 'cryptography', 'my', 'app', 'uses', 'the', 'jquery', 'get', 'statement', 'to', 'pull', 'files', 'from', 'a', 'https', 'url', 'and', 'also', 'uses', 'the', 'cordova', 'plugin', 'media', 'plugin', 'to', 'access', 'files', 'with', 'an', 'https', 'url', 'if', 'it', 'is', 'only', 'accessing', 'files', 'on', 'a', 'secure', 'site', 'i', 'm', 'not', 'sure', 'if', 'this', 'applies', 'to', 'export', 'compliance', 'and', 'cryptography', 'apple', 'gives', 'this', 'link', 'but', 'it', 'doesn', 't', 'clarify', 'my', 'question', 'https', 'www', 'bis', 'doc', 'gov', 'index', 'php', 'policy', 'guidance', 'encryption', 'reports', 'and', 'reviews', 'a', 'annual', 'self', 'classification', 'i', 'm', 'still', 'not', 'sure', 'if', 'encryption', 'is', 'built', 'in', 'to', 'the', 'plugin', 'or', 'cordova', 'app', 'automatically', 'since', 'i', 'am', 'accessing', 'an', 'external', 'https', 'resource', 'or', 'if', 'simply', 'accessing', 'a', 'url', 'that', 'is', 'https', 'through', 'the', 'app', 'qualifies', 'as', 'use', 'of', 'encryption', 'related', 'article', 'itunes', 'connect', 'encryption', 'info', 'if', 'i', 'select', 'yes', 'to', 'only', 'makes', 'calls', 'over', 'htts', 'i', 'get', 'this', 'statement', 'which', 'appears', 'to', 'indicate', 'i', 'still', 'need', 'to', 'submit', 'a', 'year', 'end', 'self', 'classification', 'report', 'because', 'i', 'm', 'getting', 'a', 'file', 'on', 'an', 'https', 'website', 'if', 'you', 'are', 'making', 'use', 'of', 'ats', 'or', 'making', 'a', 'call', 'to', 'https', 'you', 'are', 'required', 'to', 'submit', 'a', 'year', 'end', 'self', 'classification', 'report', 'to', 'the', 'us', 'government', 'should', 'i', 'just', 'change', 'my', 'calls', 'to', 'be', 'http', 'instead', 'but', 'the', 'website', 'redirects', 'to', 'https', 'another', 'related', 'link', 'which', 'i', 'can', 't', 'understand', 'completely', 'does', 'my', 'application', 'contain', 'encryption']","['apple', 'support', 'wouldn', 't', 'answer', 'the', 'question', 'i', 'never', 'heard', 'back', 'from', 'biz', 'doc', 'gov', 'the', 'best', 'help', 'i', 've', 'seen', 'so', 'far', 'is', 'this', 'https', 'kitefaster', 'com', 'encryption', 'export', 'compliance', 'ios', 'apps', 'which', 'seems', 'to', 'say', 'that', 'if', 'i', 'am', 'using', 'https', 'to', 'get', 'an', 'external', 'resource', 'then', 'i', 'need', 'to', 'submit', 'an', 'annual', 'report', 'i', 'think', 'to', 'be', 'safe', 'i', 'will', 'just', 'say', 'it', 'utilizes', 'encryption', 'and', 'submit', 'the', 'year', 'end', 'self', 'classification', 'report', 'info', 'on', 'the', 'report', 'is', 'here', 'with', 'a', 'sample', 'document', 'provided', 'https', 'www', 'bis', 'doc', 'gov', 'index', 'php', 'policy', 'guidance', 'encryption', 'reports', 'and', 'reviews', 'a', 'annual', 'self', 'classification', 'this', 'link', 'also', 'gives', 'good', 'direction', 'does', 'my', 'application', 'contain', 'encryption']","['submitting', 'app', 'created', 'cordova', 'xcode', 'itunes', 'asked', 'app', 'designed', 'use', 'cryptography', 'doe', 'contain', 'incorporate', 'cryptography', 'app', 'us', 'jquery', 'get', 'statement', 'pull', 'file', 'http', 'url', 'also', 'us', 'cordova', 'plugin', 'medium', 'plugin', 'access', 'file', 'http', 'url', 'accessing', 'file', 'secure', 'site', 'sure', 'applies', 'export', 'compliance', 'cryptography', 'apple', 'give', 'link', 'clarify', 'question', 'http', 'www', 'bi', 'doc', 'gov', 'index', 'php', 'policy', 'guidance', 'encryption', 'report', 'review', 'annual', 'self', 'classification', 'still', 'sure', 'encryption', 'built', 'plugin', 'cordova', 'app', 'automatically', 'since', 'accessing', 'external', 'http', 'resource', 'simply', 'accessing', 'url', 'http', 'app', 'qualifies', 'use', 'encryption', 'related', 'article', 'itunes', 'connect', 'encryption', 'info', 'select', 'yes', 'make', 'call', 'htts', 'get', 'statement', 'appears', 'indicate', 'still', 'need', 'submit', 'year', 'end', 'self', 'classification', 'report', 'getting', 'file', 'http', 'website', 'making', 'use', 'making', 'call', 'http', 'required', 'submit', 'year', 'end', 'self', 'classification', 'report', 'u', 'government', 'change', 'call', 'http', 'instead', 'website', 'redirects', 'http', 'another', 'related', 'link', 'understand', 'completely', 'doe', 'application', 'contain', 'encryption']","['apple', 'support', 'wouldn', 't', 'answer', 'the', 'question', 'i', 'never', 'heard', 'back', 'from', 'biz', 'doc', 'gov', 'the', 'best', 'help', 'i', 've', 'seen', 'so', 'far', 'is', 'this', 'http', 'kitefaster', 'com', 'encryption', 'export', 'compliance', 'io', 'apps', 'which', 'seems', 'to', 'say', 'that', 'if', 'i', 'am', 'using', 'http', 'to', 'get', 'an', 'external', 'resource', 'then', 'i', 'need', 'to', 'submit', 'an', 'annual', 'report', 'i', 'think', 'to', 'be', 'safe', 'i', 'will', 'just', 'say', 'it', 'utilizes', 'encryption', 'and', 'submit', 'the', 'year', 'end', 'self', 'classification', 'report', 'info', 'on', 'the', 'report', 'is', 'here', 'with', 'a', 'sample', 'document', 'provided', 'http', 'www', 'bi', 'doc', 'gov', 'index', 'php', 'policy', 'guidance', 'encryption', 'report', 'and', 'review', 'a', 'annual', 'self', 'classification', 'this', 'link', 'also', 'give', 'good', 'direction', 'doe', 'my', 'application', 'contain', 'encryption']",System Requirements and AWS,3,"{'neg': 0.022, 'neu': 0.971, 'pos': 0.008, 'compound': -0.4912}",3.0839528461809902e-18,3,Python Package Installation and Management,3query
57994129,Is OfficeOpenXML required or not,"<p>I am confused by the statement 
""EPPlus is a .NET library that reads and writes Excel files using the Office Open XML format (xlsx). EPPlus has no dependencies other than .NET. ""</p>

<p>then the following statement:</p>

<p>""The first thing you do is to create an instance to the ExcelPackage class. To do that you first need to add a using directive to OfficeOpenXml namespace in the top of your file. This is the top namespace in EPPlus;
using OfficeOpenXml;""</p>

<p>so, should I always import OfficeOpenXml?  The datatable to spreadsheet code works fine without it...</p>

<p>Thanks</p>
",<requirements>,2019-09-18 13:39:13,683,0,1,58018075,"<p>Those two statements aren't contradictory.  EPPlus doesn't require anything other than .NET to run.  And the ""OfficeOpenXml"" namespace is part of EPPlus.  </p>

<p>""ExcelPackage"" is a class in the ""OfficeOpenXml"" namespace, so you could use a ""using OfficeOpenXml"" or you could fully qualify it as ""OfficeOpenXml.ExcelPackage"".</p>
",2019-09,i am confused by the statement epplus is a net library that reads and writes excel files using the office open xml format xlsx epplus has no dependencies other than net then the following statement the first thing you do is to create an instance to the excelpackage class to do that you first need to add a using directive to officeopenxml namespace in the top of your file this is the top namespace in epplus using officeopenxml so should i always import officeopenxml the datatable to spreadsheet code works fine without it thanks,those two statements aren t contradictory epplus doesn t require anything other than net to run and the officeopenxml namespace is part of epplus excelpackage is a class in the officeopenxml namespace so you could use a using officeopenxml or you could fully qualify it as officeopenxml excelpackage,['requirements'],"['i', 'am', 'confused', 'by', 'the', 'statement', 'epplus', 'is', 'a', 'net', 'library', 'that', 'reads', 'and', 'writes', 'excel', 'files', 'using', 'the', 'office', 'open', 'xml', 'format', 'xlsx', 'epplus', 'has', 'no', 'dependencies', 'other', 'than', 'net', 'then', 'the', 'following', 'statement', 'the', 'first', 'thing', 'you', 'do', 'is', 'to', 'create', 'an', 'instance', 'to', 'the', 'excelpackage', 'class', 'to', 'do', 'that', 'you', 'first', 'need', 'to', 'add', 'a', 'using', 'directive', 'to', 'officeopenxml', 'namespace', 'in', 'the', 'top', 'of', 'your', 'file', 'this', 'is', 'the', 'top', 'namespace', 'in', 'epplus', 'using', 'officeopenxml', 'so', 'should', 'i', 'always', 'import', 'officeopenxml', 'the', 'datatable', 'to', 'spreadsheet', 'code', 'works', 'fine', 'without', 'it', 'thanks']","['those', 'two', 'statements', 'aren', 't', 'contradictory', 'epplus', 'doesn', 't', 'require', 'anything', 'other', 'than', 'net', 'to', 'run', 'and', 'the', 'officeopenxml', 'namespace', 'is', 'part', 'of', 'epplus', 'excelpackage', 'is', 'a', 'class', 'in', 'the', 'officeopenxml', 'namespace', 'so', 'you', 'could', 'use', 'a', 'using', 'officeopenxml', 'or', 'you', 'could', 'fully', 'qualify', 'it', 'as', 'officeopenxml', 'excelpackage']","['confused', 'statement', 'epplus', 'net', 'library', 'read', 'writes', 'excel', 'file', 'using', 'office', 'open', 'xml', 'format', 'xlsx', 'epplus', 'ha', 'dependency', 'net', 'following', 'statement', 'first', 'thing', 'create', 'instance', 'excelpackage', 'class', 'first', 'need', 'add', 'using', 'directive', 'officeopenxml', 'namespace', 'top', 'file', 'top', 'namespace', 'epplus', 'using', 'officeopenxml', 'always', 'import', 'officeopenxml', 'datatable', 'spreadsheet', 'code', 'work', 'fine', 'without', 'thanks']","['those', 'two', 'statement', 'aren', 't', 'contradictory', 'epplus', 'doesn', 't', 'require', 'anything', 'other', 'than', 'net', 'to', 'run', 'and', 'the', 'officeopenxml', 'namespace', 'is', 'part', 'of', 'epplus', 'excelpackage', 'is', 'a', 'class', 'in', 'the', 'officeopenxml', 'namespace', 'so', 'you', 'could', 'use', 'a', 'using', 'officeopenxml', 'or', 'you', 'could', 'fully', 'qualify', 'it', 'a', 'officeopenxml', 'excelpackage']",System Requirements and AWS,0,"{'neg': 0.045, 'neu': 0.85, 'pos': 0.105, 'compound': 0.6124}",0.15462962962962962,0,System Requirements and AWS,3query
57746951,Function description vs possible implementation on C++ reference,"<p>In both the reference pages of <a href=""https://en.cppreference.com/w/cpp/algorithm/lower_bound"" rel=""nofollow noreferrer""><code>std::lower_bound</code></a> and <a href=""https://en.cppreference.com/w/cpp/algorithm/upper_bound"" rel=""nofollow noreferrer""><code>std::upper_bound</code></a> from <a href=""https://en.cppreference.com/w/"" rel=""nofollow noreferrer"">C++ reference</a> I read</p>

<blockquote>
  <p>[...] uses <code>operator&lt;</code> to compare the elements, [...]</p>
</blockquote>

<p>This is very useful to me, because with this information I know that, even if the latter function</p>

<blockquote>
  <p>Returns an iterator pointing to the first element in the range <code>[first, last)</code> that is <em>greater</em> than <code>value</code></p>
</blockquote>

<p>it still uses the <code>operator&lt;</code> to do so, and not the <code>operator&gt;</code>, so the former has to be defined for the class/type of the objects stored in the container. The <strong>Possible implementation</strong> section, with the line <code>if (!(value &lt; *it)) {</code>, just confirms this.</p>

<p>However, for instance, the reference page for <a href=""https://en.cppreference.com/w/cpp/algorithm/remove"" rel=""nofollow noreferrer""><code>std::remove</code></a>, for which I read that</p>

<blockquote>
  <p>Removes all elements that are <em>equal to</em> <code>value</code></p>
</blockquote>

<p>does not mention any <code>oparator</code> at all, so in principle I would not know which one/ones is/are assumed to be defined in the class of the objects stored in the container. The <strong>Possible implementation</strong> uses <code>operator==</code> (see the line <code>if (!(*i == value))</code>).</p>

<p>Hence my question: is it intentional that the documentation pages of some functions don't specify the ""requirements"" that the classes on which the function is called must satisfy?</p>
",<c++><standards><requirements>,2019-09-01 14:44:36,90,2,1,57747037,"<p>While cppreference is generally quite good, it is a community-maintained project; not official documentation.  It also sometimes uses slightly ambiguous wording to make the text more understandable.</p>

<p>For the official requirements, we must turn to the standard.  There, all of these requirements are explicitly spelled out:</p>

<p>From <a href=""http://eel.is/c++draft/lower.bound"" rel=""nofollow noreferrer"">[lower.bound]</a></p>

<blockquote>
  <p>Let <code>comp</code> be <code>less{}</code> and <code>proj</code> be <code>identity{}</code> for overloads with no parameters by those names.<br>
  ...<br>
  <em>Returns</em>: The furthermost iterator <code>i</code> in the range <code>[first, last]</code> such that for every iterator <code>j</code> in the range <code>[first, i)</code>, <code>bool(invoke(comp, invoke(proj, *j), value))</code> is <code>true</code>.</p>
</blockquote>

<p>From <a href=""http://eel.is/c++draft/upper.bound"" rel=""nofollow noreferrer"">[upper.bound]</a></p>

<blockquote>
  <p>Let <code>comp</code> be <code>less{}</code> and <code>proj</code> be <code>identity{}</code> for overloads with no parameters by those names.<br>
  ...<br>
  <em>Returns</em>: The furthermost iterator <code>i</code> in the range <code>[first, last]</code> such that for every iterator <code>j</code> in the range <code>[first, i)</code>, <code>!bool(invoke(comp, invoke(proj, *j), value))</code> is <code>true</code>.</p>
</blockquote>

<p>From <a href=""http://eel.is/c++draft/alg.remove"" rel=""nofollow noreferrer"">[alg.remove]</a></p>

<blockquote>
  <p>Let <em>E</em> be<br>
  -- <code>bool(*i == value)</code> for <code>remove</code>,<br>
  ...<br>
  <em>Effects</em>: Eliminates all the elements referred to by iterator <code>i</code> in the range <code>[first, last)</code> for which <em>E</em> holds.</p>
</blockquote>

<p>There is no ambiguity in these descriptions.  <code>std::lower_bound</code> and <code>std::upper_bound</code> use <code>std::less</code> to do their comparisons by default, and <code>std::remove</code> uses <code>operator==</code>.</p>
",2019-09,in both the reference pages of std lower_bound and std upper_bound from c reference i read uses operator to compare the elements this is very useful to me because with this information i know that even if the latter function returns an iterator pointing to the first element in the range first last that is greater than value it still uses the operator to do so and not the operator so the former has to be defined for the class type of the objects stored in the container the possible implementation section with the line if value it just confirms this however for instance the reference page for std remove for which i read that removes all elements that are equal to value does not mention any oparator at all so in principle i would not know which one ones is are assumed to be defined in the class of the objects stored in the container the possible implementation uses operator see the line if i value hence my question is it intentional that the documentation pages of some functions don t specify the requirements that the classes on which the function is called must satisfy,while cppreference is generally quite good it is a community maintained project not official documentation it also sometimes uses slightly ambiguous wording to make the text more understandable for the official requirements we must turn to the standard there all of these requirements are explicitly spelled out from lower bound let comp be less and proj be identity for overloads with no parameters by those names returns the furthermost iterator i in the range first last such that for every iterator j in the range first i bool invoke comp invoke proj j value is true from upper bound let comp be less and proj be identity for overloads with no parameters by those names returns the furthermost iterator i in the range first last such that for every iterator j in the range first i bool invoke comp invoke proj j value is true from alg remove let e be bool i value for remove effects eliminates all the elements referred to by iterator i in the range first last for which e holds there is no ambiguity in these descriptions std lower_bound and std upper_bound use std less to do their comparisons by default and std remove uses operator,"['c++', 'standards', 'requirements']","['in', 'both', 'the', 'reference', 'pages', 'of', 'std', 'lower_bound', 'and', 'std', 'upper_bound', 'from', 'c', 'reference', 'i', 'read', 'uses', 'operator', 'to', 'compare', 'the', 'elements', 'this', 'is', 'very', 'useful', 'to', 'me', 'because', 'with', 'this', 'information', 'i', 'know', 'that', 'even', 'if', 'the', 'latter', 'function', 'returns', 'an', 'iterator', 'pointing', 'to', 'the', 'first', 'element', 'in', 'the', 'range', 'first', 'last', 'that', 'is', 'greater', 'than', 'value', 'it', 'still', 'uses', 'the', 'operator', 'to', 'do', 'so', 'and', 'not', 'the', 'operator', 'so', 'the', 'former', 'has', 'to', 'be', 'defined', 'for', 'the', 'class', 'type', 'of', 'the', 'objects', 'stored', 'in', 'the', 'container', 'the', 'possible', 'implementation', 'section', 'with', 'the', 'line', 'if', 'value', 'it', 'just', 'confirms', 'this', 'however', 'for', 'instance', 'the', 'reference', 'page', 'for', 'std', 'remove', 'for', 'which', 'i', 'read', 'that', 'removes', 'all', 'elements', 'that', 'are', 'equal', 'to', 'value', 'does', 'not', 'mention', 'any', 'oparator', 'at', 'all', 'so', 'in', 'principle', 'i', 'would', 'not', 'know', 'which', 'one', 'ones', 'is', 'are', 'assumed', 'to', 'be', 'defined', 'in', 'the', 'class', 'of', 'the', 'objects', 'stored', 'in', 'the', 'container', 'the', 'possible', 'implementation', 'uses', 'operator', 'see', 'the', 'line', 'if', 'i', 'value', 'hence', 'my', 'question', 'is', 'it', 'intentional', 'that', 'the', 'documentation', 'pages', 'of', 'some', 'functions', 'don', 't', 'specify', 'the', 'requirements', 'that', 'the', 'classes', 'on', 'which', 'the', 'function', 'is', 'called', 'must', 'satisfy']","['while', 'cppreference', 'is', 'generally', 'quite', 'good', 'it', 'is', 'a', 'community', 'maintained', 'project', 'not', 'official', 'documentation', 'it', 'also', 'sometimes', 'uses', 'slightly', 'ambiguous', 'wording', 'to', 'make', 'the', 'text', 'more', 'understandable', 'for', 'the', 'official', 'requirements', 'we', 'must', 'turn', 'to', 'the', 'standard', 'there', 'all', 'of', 'these', 'requirements', 'are', 'explicitly', 'spelled', 'out', 'from', 'lower', 'bound', 'let', 'comp', 'be', 'less', 'and', 'proj', 'be', 'identity', 'for', 'overloads', 'with', 'no', 'parameters', 'by', 'those', 'names', 'returns', 'the', 'furthermost', 'iterator', 'i', 'in', 'the', 'range', 'first', 'last', 'such', 'that', 'for', 'every', 'iterator', 'j', 'in', 'the', 'range', 'first', 'i', 'bool', 'invoke', 'comp', 'invoke', 'proj', 'j', 'value', 'is', 'true', 'from', 'upper', 'bound', 'let', 'comp', 'be', 'less', 'and', 'proj', 'be', 'identity', 'for', 'overloads', 'with', 'no', 'parameters', 'by', 'those', 'names', 'returns', 'the', 'furthermost', 'iterator', 'i', 'in', 'the', 'range', 'first', 'last', 'such', 'that', 'for', 'every', 'iterator', 'j', 'in', 'the', 'range', 'first', 'i', 'bool', 'invoke', 'comp', 'invoke', 'proj', 'j', 'value', 'is', 'true', 'from', 'alg', 'remove', 'let', 'e', 'be', 'bool', 'i', 'value', 'for', 'remove', 'effects', 'eliminates', 'all', 'the', 'elements', 'referred', 'to', 'by', 'iterator', 'i', 'in', 'the', 'range', 'first', 'last', 'for', 'which', 'e', 'holds', 'there', 'is', 'no', 'ambiguity', 'in', 'these', 'descriptions', 'std', 'lower_bound', 'and', 'std', 'upper_bound', 'use', 'std', 'less', 'to', 'do', 'their', 'comparisons', 'by', 'default', 'and', 'std', 'remove', 'uses', 'operator']","['reference', 'page', 'std', 'lower_bound', 'std', 'upper_bound', 'c', 'reference', 'read', 'us', 'operator', 'compare', 'element', 'useful', 'information', 'know', 'even', 'latter', 'function', 'return', 'iterator', 'pointing', 'first', 'element', 'range', 'first', 'last', 'greater', 'value', 'still', 'us', 'operator', 'operator', 'former', 'ha', 'defined', 'class', 'type', 'object', 'stored', 'container', 'possible', 'implementation', 'section', 'line', 'value', 'confirms', 'however', 'instance', 'reference', 'page', 'std', 'remove', 'read', 'remove', 'element', 'equal', 'value', 'doe', 'mention', 'oparator', 'principle', 'would', 'know', 'one', 'one', 'assumed', 'defined', 'class', 'object', 'stored', 'container', 'possible', 'implementation', 'us', 'operator', 'see', 'line', 'value', 'hence', 'question', 'intentional', 'documentation', 'page', 'function', 'specify', 'requirement', 'class', 'function', 'called', 'must', 'satisfy']","['while', 'cppreference', 'is', 'generally', 'quite', 'good', 'it', 'is', 'a', 'community', 'maintained', 'project', 'not', 'official', 'documentation', 'it', 'also', 'sometimes', 'us', 'slightly', 'ambiguous', 'wording', 'to', 'make', 'the', 'text', 'more', 'understandable', 'for', 'the', 'official', 'requirement', 'we', 'must', 'turn', 'to', 'the', 'standard', 'there', 'all', 'of', 'these', 'requirement', 'are', 'explicitly', 'spelled', 'out', 'from', 'lower', 'bound', 'let', 'comp', 'be', 'le', 'and', 'proj', 'be', 'identity', 'for', 'overload', 'with', 'no', 'parameter', 'by', 'those', 'name', 'return', 'the', 'furthermost', 'iterator', 'i', 'in', 'the', 'range', 'first', 'last', 'such', 'that', 'for', 'every', 'iterator', 'j', 'in', 'the', 'range', 'first', 'i', 'bool', 'invoke', 'comp', 'invoke', 'proj', 'j', 'value', 'is', 'true', 'from', 'upper', 'bound', 'let', 'comp', 'be', 'le', 'and', 'proj', 'be', 'identity', 'for', 'overload', 'with', 'no', 'parameter', 'by', 'those', 'name', 'return', 'the', 'furthermost', 'iterator', 'i', 'in', 'the', 'range', 'first', 'last', 'such', 'that', 'for', 'every', 'iterator', 'j', 'in', 'the', 'range', 'first', 'i', 'bool', 'invoke', 'comp', 'invoke', 'proj', 'j', 'value', 'is', 'true', 'from', 'alg', 'remove', 'let', 'e', 'be', 'bool', 'i', 'value', 'for', 'remove', 'effect', 'eliminates', 'all', 'the', 'element', 'referred', 'to', 'by', 'iterator', 'i', 'in', 'the', 'range', 'first', 'last', 'for', 'which', 'e', 'hold', 'there', 'is', 'no', 'ambiguity', 'in', 'these', 'description', 'std', 'lower_bound', 'and', 'std', 'upper_bound', 'use', 'std', 'le', 'to', 'do', 'their', 'comparison', 'by', 'default', 'and', 'std', 'remove', 'us', 'operator']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.982, 'pos': 0.018, 'compound': 0.5827}",0.16,3,Python Package Installation and Management,3query
57414686,OSGi: What's the difference between Import-Package/Export-Package and Require-Capability/Provide Capability?,"<p>I am currently working with the OSGi framework but I have a question about some concepts that are not 100% clear to me. I have searching for it myself but I could not find a decent answer that clearly explains it.</p>

<p>In a bundle his manifest header 2 of the headers that get used are <code>Import-Package</code> and <code>Export-Package</code>. The names speak for themselves: a demand for a certain package and a offering of a certain package. In order to get that package (or give that package), the complete bundle must be installed in the framework where the <em>Import</em> is needed.</p>

<p>But then we get to the part of the <code>Requirements-Capabilities</code> model. This can practically do the same as the <code>Import-Package</code> and <code>Export-Package</code> headers. There are also headers for this <code>Requirements-Capability</code> model: <code>Require-Capability</code> and <code>Provide-Capability</code>. Again these stand for demanding something and for providing something.</p>

<p>I know that <code>Requirements-Capability</code> model was only introduced later on in the development of the OSGi specification(s). Can't exactly find at what year and version it was presented. </p>

<p>But,</p>

<ul>
<li><p>Why has this been added to the specification? I don't see what it has more to offer than what the <code>Import</code>/<code>Export-package</code> already offered: creating dependencies on other packages/bundles?</p></li>
<li><p>Could someone give me a better understanding in the difference (pro's and con's) between these 2 sets of concepts?</p></li>
</ul>
",<java><osgi><requirements><capability>,2019-08-08 14:15:21,1648,13,2,57415720,"<p>When we started with OSGi in 1998 we had some clear requirements but of course, no clear view of what would come out of it. So we started to explicitly model the requirements and capabilities we had: packages. The Import-Package requires a capability and that capability is provided by an Export-Package. </p>

<p>In 2003 Eclipse wanted to start using OSGi but they need a facility to require another bundle, they did not like the idea of exporting and importing all their packages. Actually, at that time they failed to see the benefit of packages. To satisfy them we added Require-Bundle and Fragment-Host (another one of their desires that turned out not to be so good.) </p>

<p>After we specified OSGi 4.x with these extensions we starting thinking about a repository, Richard had developed the Oscar Bundle Repository. Analyzing the situation with the new headers in OSGi 4.0 it became clear that the implementation of Import-Package looked a lot like Require-Bundle, and even resembled Fragment-Host processing. </p>

<p>In 2006 Richard S. Hall and I wrote <a href=""https://raw.githubusercontent.com/wiki/barchart/barchart-service/OBR-RFC-112.pdf"" rel=""noreferrer"">RFC 112</a> proposing a more generic model that captured the semantics of the existing dependency model but was not specific for each <em>type</em> of requirement. I.e. for the Framework <em>resolver</em> the Import-Package and Require-Bundle only differ in their <em>namespace</em>. Thinking of Import-Package as a generic requirement and Export-Package as a generic capability made the repository model extremely simple. Even better, it was extendable since we could always add more namespaces. This made the resolver completely independent of the actual namespaces used.</p>

<p>After some very heated discussions, the OSGi Core Platform Expert Group decided to accept the basic idea and developed the Requirements and Capabilities specifications. Although this was originally a model for the repository, it turned out to be highly useful for the Framework itself. We decided therefore to adapt the existing specifications to this model. OSGi 4.3 internally models the Import-Package, Export-Package, Require-Bundle, etc. as requirements and capabilities of a <em>resource</em> (the bundle). For backward compatibility, we kept the existing headers but they are internally translated to requirements and capabilities.</p>

<p>Then finally to the answer to your question. Over time the OSGi specifications added more and more <em>namespaces</em>. A namespace is like a <em>type</em> for a Requirement and a Capability. It defines the semantics of a set of properties of a Capability in that namespace. A Requirement is a filter expression that is asserted on those properties. A <em>Resource</em> has a set of Capabilities that are provided to the runtime when all its Requirements are satisfied. It is the task of the <em>Resolver</em> to find a set of resources that are all satisfied with each other's capabilities and capabilities provided by the runtime.</p>

<p>For example, we added the <code>osgi.ee</code> namespace that defines exactly on what VM's the bundle can run. We added the <code>osgi.extender</code> namespace that models a dependency on an external program like the Service Component Runtime (SCR). Most SCR components do not require any package from the SCR itself, we tried hard to make them as independent as possible. However, a SCR component will sit useless unless some bundle in the runtime provides the SCR functionality. Notice that this cannot use Require-Bundle because there are multiple implementations of SCR. I think there are about 20 namespaces. Each namespace is defined in a <code>Namespace</code> class.</p>

<p>This model has given the OSGi a number of advantages:</p>

<ul>
<li><strong>Cohesion</strong> Although the specification has added many namespaces the resolver implementations never had to change since they worked on the generic model.</li>
<li><strong>Fine-Grained</strong> OSGi bundles are unique in how they describe their dependencies in a very fine-grained way. All module systems I know tend to use the simple module-to-module dependency that does not allow substitution.</li>
<li><strong>Flexible</strong> Since the Framework reifies the dependencies between bundles it is possible in runtime to leverage these dependencies. For example, in OSGi enRoute I linked a bundle to its web page traversing these runtime wirings. </li>
</ul>

<p>I personally consider the Requirements and Capability model of OSGi one of its best kept secrets. As far as I can see it could be used in a lot of areas to improve many development projects into the world of software engineering.</p>

<p>The only disappointing part in this question is that I thought we'd described this pretty well in the <a href=""https://osgi.org/specification/osgi.core/7.0.0/framework.module.html#framework.module.dependencies"" rel=""noreferrer"">Core specification</a>? :-)</p>
",2019-08,i am currently working with the osgi framework but i have a question about some concepts that are not   clear to me i have searching for it myself but i could not find a decent answer that clearly explains it in a bundle his manifest header   of the headers that get used are import package and export package the names speak for themselves a demand for a certain package and a offering of a certain package in order to get that package or give that package the complete bundle must be installed in the framework where the import is needed but then we get to the part of the requirements capabilities model this can practically do the same as the import package and export package headers there are also headers for this requirements capability model require capability and provide capability again these stand for demanding something and for providing something i know that requirements capability model was only introduced later on in the development of the osgi specification s can t exactly find at what year and version it was presented but why has this been added to the specification i don t see what it has more to offer than what the import export package already offered creating dependencies on other packages bundles could someone give me a better understanding in the difference pro s and con s between these   sets of concepts,when we started with osgi in   we had some clear requirements but of course no clear view of what would come out of it so we started to explicitly model the requirements and capabilities we had packages the import package requires a capability and that capability is provided by an export package in   eclipse wanted to start using osgi but they need a facility to require another bundle they did not like the idea of exporting and importing all their packages actually at that time they failed to see the benefit of packages to satisfy them we added require bundle and fragment host another one of their desires that turned out not to be so good after we specified osgi   x with these extensions we starting thinking about a repository richard had developed the oscar bundle repository analyzing the situation with the new headers in osgi     it became clear that the implementation of import package looked a lot like require bundle and even resembled fragment host processing in   richard s hall and i wrote rfc   proposing a more generic model that captured the semantics of the existing dependency model but was not specific for each type of requirement i e for the framework resolver the import package and require bundle only differ in their namespace thinking of import package as a generic requirement and export package as a generic capability made the repository model extremely simple even better it was extendable since we could always add more namespaces this made the resolver completely independent of the actual namespaces used after some very heated discussions the osgi core platform expert group decided to accept the basic idea and developed the requirements and capabilities specifications although this was originally a model for the repository it turned out to be highly useful for the framework itself we decided therefore to adapt the existing specifications to this model osgi     internally models the import package export package require bundle etc as requirements and capabilities of a resource the bundle for backward compatibility we kept the existing headers but they are internally translated to requirements and capabilities then finally to the answer to your question over time the osgi specifications added more and more namespaces a namespace is like a type for a requirement and a capability it defines the semantics of a set of properties of a capability in that namespace a requirement is a filter expression that is asserted on those properties a resource has a set of capabilities that are provided to the runtime when all its requirements are satisfied it is the task of the resolver to find a set of resources that are all satisfied with each other s capabilities and capabilities provided by the runtime for example we added the osgi ee namespace that defines exactly on what vm s the bundle can run we added the osgi extender namespace that models a dependency on an external program like the service component runtime scr most scr components do not require any package from the scr itself we tried hard to make them as independent as possible however a scr component will sit useless unless some bundle in the runtime provides the scr functionality notice that this cannot use require bundle because there are multiple implementations of scr i think there are about   namespaces each namespace is defined in a namespace class this model has given the osgi a number of advantages cohesion although the specification has added many namespaces the resolver implementations never had to change since they worked on the generic model fine grained osgi bundles are unique in how they describe their dependencies in a very fine grained way all module systems i know tend to use the simple module to module dependency that does not allow substitution flexible since the framework reifies the dependencies between bundles it is possible in runtime to leverage these dependencies for example in osgi enroute i linked a bundle to its web page traversing these runtime wirings i personally consider the requirements and capability model of osgi one of its best kept secrets as far as i can see it could be used in a lot of areas to improve many development projects into the world of software engineering the only disappointing part in this question is that i thought we d described this pretty well in the core specification,"['java', 'osgi', 'requirements', 'capability']","['i', 'am', 'currently', 'working', 'with', 'the', 'osgi', 'framework', 'but', 'i', 'have', 'a', 'question', 'about', 'some', 'concepts', 'that', 'are', 'not', 'clear', 'to', 'me', 'i', 'have', 'searching', 'for', 'it', 'myself', 'but', 'i', 'could', 'not', 'find', 'a', 'decent', 'answer', 'that', 'clearly', 'explains', 'it', 'in', 'a', 'bundle', 'his', 'manifest', 'header', 'of', 'the', 'headers', 'that', 'get', 'used', 'are', 'import', 'package', 'and', 'export', 'package', 'the', 'names', 'speak', 'for', 'themselves', 'a', 'demand', 'for', 'a', 'certain', 'package', 'and', 'a', 'offering', 'of', 'a', 'certain', 'package', 'in', 'order', 'to', 'get', 'that', 'package', 'or', 'give', 'that', 'package', 'the', 'complete', 'bundle', 'must', 'be', 'installed', 'in', 'the', 'framework', 'where', 'the', 'import', 'is', 'needed', 'but', 'then', 'we', 'get', 'to', 'the', 'part', 'of', 'the', 'requirements', 'capabilities', 'model', 'this', 'can', 'practically', 'do', 'the', 'same', 'as', 'the', 'import', 'package', 'and', 'export', 'package', 'headers', 'there', 'are', 'also', 'headers', 'for', 'this', 'requirements', 'capability', 'model', 'require', 'capability', 'and', 'provide', 'capability', 'again', 'these', 'stand', 'for', 'demanding', 'something', 'and', 'for', 'providing', 'something', 'i', 'know', 'that', 'requirements', 'capability', 'model', 'was', 'only', 'introduced', 'later', 'on', 'in', 'the', 'development', 'of', 'the', 'osgi', 'specification', 's', 'can', 't', 'exactly', 'find', 'at', 'what', 'year', 'and', 'version', 'it', 'was', 'presented', 'but', 'why', 'has', 'this', 'been', 'added', 'to', 'the', 'specification', 'i', 'don', 't', 'see', 'what', 'it', 'has', 'more', 'to', 'offer', 'than', 'what', 'the', 'import', 'export', 'package', 'already', 'offered', 'creating', 'dependencies', 'on', 'other', 'packages', 'bundles', 'could', 'someone', 'give', 'me', 'a', 'better', 'understanding', 'in', 'the', 'difference', 'pro', 's', 'and', 'con', 's', 'between', 'these', 'sets', 'of', 'concepts']","['when', 'we', 'started', 'with', 'osgi', 'in', 'we', 'had', 'some', 'clear', 'requirements', 'but', 'of', 'course', 'no', 'clear', 'view', 'of', 'what', 'would', 'come', 'out', 'of', 'it', 'so', 'we', 'started', 'to', 'explicitly', 'model', 'the', 'requirements', 'and', 'capabilities', 'we', 'had', 'packages', 'the', 'import', 'package', 'requires', 'a', 'capability', 'and', 'that', 'capability', 'is', 'provided', 'by', 'an', 'export', 'package', 'in', 'eclipse', 'wanted', 'to', 'start', 'using', 'osgi', 'but', 'they', 'need', 'a', 'facility', 'to', 'require', 'another', 'bundle', 'they', 'did', 'not', 'like', 'the', 'idea', 'of', 'exporting', 'and', 'importing', 'all', 'their', 'packages', 'actually', 'at', 'that', 'time', 'they', 'failed', 'to', 'see', 'the', 'benefit', 'of', 'packages', 'to', 'satisfy', 'them', 'we', 'added', 'require', 'bundle', 'and', 'fragment', 'host', 'another', 'one', 'of', 'their', 'desires', 'that', 'turned', 'out', 'not', 'to', 'be', 'so', 'good', 'after', 'we', 'specified', 'osgi', 'x', 'with', 'these', 'extensions', 'we', 'starting', 'thinking', 'about', 'a', 'repository', 'richard', 'had', 'developed', 'the', 'oscar', 'bundle', 'repository', 'analyzing', 'the', 'situation', 'with', 'the', 'new', 'headers', 'in', 'osgi', 'it', 'became', 'clear', 'that', 'the', 'implementation', 'of', 'import', 'package', 'looked', 'a', 'lot', 'like', 'require', 'bundle', 'and', 'even', 'resembled', 'fragment', 'host', 'processing', 'in', 'richard', 's', 'hall', 'and', 'i', 'wrote', 'rfc', 'proposing', 'a', 'more', 'generic', 'model', 'that', 'captured', 'the', 'semantics', 'of', 'the', 'existing', 'dependency', 'model', 'but', 'was', 'not', 'specific', 'for', 'each', 'type', 'of', 'requirement', 'i', 'e', 'for', 'the', 'framework', 'resolver', 'the', 'import', 'package', 'and', 'require', 'bundle', 'only', 'differ', 'in', 'their', 'namespace', 'thinking', 'of', 'import', 'package', 'as', 'a', 'generic', 'requirement', 'and', 'export', 'package', 'as', 'a', 'generic', 'capability', 'made', 'the', 'repository', 'model', 'extremely', 'simple', 'even', 'better', 'it', 'was', 'extendable', 'since', 'we', 'could', 'always', 'add', 'more', 'namespaces', 'this', 'made', 'the', 'resolver', 'completely', 'independent', 'of', 'the', 'actual', 'namespaces', 'used', 'after', 'some', 'very', 'heated', 'discussions', 'the', 'osgi', 'core', 'platform', 'expert', 'group', 'decided', 'to', 'accept', 'the', 'basic', 'idea', 'and', 'developed', 'the', 'requirements', 'and', 'capabilities', 'specifications', 'although', 'this', 'was', 'originally', 'a', 'model', 'for', 'the', 'repository', 'it', 'turned', 'out', 'to', 'be', 'highly', 'useful', 'for', 'the', 'framework', 'itself', 'we', 'decided', 'therefore', 'to', 'adapt', 'the', 'existing', 'specifications', 'to', 'this', 'model', 'osgi', 'internally', 'models', 'the', 'import', 'package', 'export', 'package', 'require', 'bundle', 'etc', 'as', 'requirements', 'and', 'capabilities', 'of', 'a', 'resource', 'the', 'bundle', 'for', 'backward', 'compatibility', 'we', 'kept', 'the', 'existing', 'headers', 'but', 'they', 'are', 'internally', 'translated', 'to', 'requirements', 'and', 'capabilities', 'then', 'finally', 'to', 'the', 'answer', 'to', 'your', 'question', 'over', 'time', 'the', 'osgi', 'specifications', 'added', 'more', 'and', 'more', 'namespaces', 'a', 'namespace', 'is', 'like', 'a', 'type', 'for', 'a', 'requirement', 'and', 'a', 'capability', 'it', 'defines', 'the', 'semantics', 'of', 'a', 'set', 'of', 'properties', 'of', 'a', 'capability', 'in', 'that', 'namespace', 'a', 'requirement', 'is', 'a', 'filter', 'expression', 'that', 'is', 'asserted', 'on', 'those', 'properties', 'a', 'resource', 'has', 'a', 'set', 'of', 'capabilities', 'that', 'are', 'provided', 'to', 'the', 'runtime', 'when', 'all', 'its', 'requirements', 'are', 'satisfied', 'it', 'is', 'the', 'task', 'of', 'the', 'resolver', 'to', 'find', 'a', 'set', 'of', 'resources', 'that', 'are', 'all', 'satisfied', 'with', 'each', 'other', 's', 'capabilities', 'and', 'capabilities', 'provided', 'by', 'the', 'runtime', 'for', 'example', 'we', 'added', 'the', 'osgi', 'ee', 'namespace', 'that', 'defines', 'exactly', 'on', 'what', 'vm', 's', 'the', 'bundle', 'can', 'run', 'we', 'added', 'the', 'osgi', 'extender', 'namespace', 'that', 'models', 'a', 'dependency', 'on', 'an', 'external', 'program', 'like', 'the', 'service', 'component', 'runtime', 'scr', 'most', 'scr', 'components', 'do', 'not', 'require', 'any', 'package', 'from', 'the', 'scr', 'itself', 'we', 'tried', 'hard', 'to', 'make', 'them', 'as', 'independent', 'as', 'possible', 'however', 'a', 'scr', 'component', 'will', 'sit', 'useless', 'unless', 'some', 'bundle', 'in', 'the', 'runtime', 'provides', 'the', 'scr', 'functionality', 'notice', 'that', 'this', 'can', 'not', 'use', 'require', 'bundle', 'because', 'there', 'are', 'multiple', 'implementations', 'of', 'scr', 'i', 'think', 'there', 'are', 'about', 'namespaces', 'each', 'namespace', 'is', 'defined', 'in', 'a', 'namespace', 'class', 'this', 'model', 'has', 'given', 'the', 'osgi', 'a', 'number', 'of', 'advantages', 'cohesion', 'although', 'the', 'specification', 'has', 'added', 'many', 'namespaces', 'the', 'resolver', 'implementations', 'never', 'had', 'to', 'change', 'since', 'they', 'worked', 'on', 'the', 'generic', 'model', 'fine', 'grained', 'osgi', 'bundles', 'are', 'unique', 'in', 'how', 'they', 'describe', 'their', 'dependencies', 'in', 'a', 'very', 'fine', 'grained', 'way', 'all', 'module', 'systems', 'i', 'know', 'tend', 'to', 'use', 'the', 'simple', 'module', 'to', 'module', 'dependency', 'that', 'does', 'not', 'allow', 'substitution', 'flexible', 'since', 'the', 'framework', 'reifies', 'the', 'dependencies', 'between', 'bundles', 'it', 'is', 'possible', 'in', 'runtime', 'to', 'leverage', 'these', 'dependencies', 'for', 'example', 'in', 'osgi', 'enroute', 'i', 'linked', 'a', 'bundle', 'to', 'its', 'web', 'page', 'traversing', 'these', 'runtime', 'wirings', 'i', 'personally', 'consider', 'the', 'requirements', 'and', 'capability', 'model', 'of', 'osgi', 'one', 'of', 'its', 'best', 'kept', 'secrets', 'as', 'far', 'as', 'i', 'can', 'see', 'it', 'could', 'be', 'used', 'in', 'a', 'lot', 'of', 'areas', 'to', 'improve', 'many', 'development', 'projects', 'into', 'the', 'world', 'of', 'software', 'engineering', 'the', 'only', 'disappointing', 'part', 'in', 'this', 'question', 'is', 'that', 'i', 'thought', 'we', 'd', 'described', 'this', 'pretty', 'well', 'in', 'the', 'core', 'specification']","['currently', 'working', 'osgi', 'framework', 'question', 'concept', 'clear', 'searching', 'could', 'find', 'decent', 'answer', 'clearly', 'explains', 'bundle', 'manifest', 'header', 'header', 'get', 'used', 'import', 'package', 'export', 'package', 'name', 'speak', 'demand', 'certain', 'package', 'offering', 'certain', 'package', 'order', 'get', 'package', 'give', 'package', 'complete', 'bundle', 'must', 'installed', 'framework', 'import', 'needed', 'get', 'part', 'requirement', 'capability', 'model', 'practically', 'import', 'package', 'export', 'package', 'header', 'also', 'header', 'requirement', 'capability', 'model', 'require', 'capability', 'provide', 'capability', 'stand', 'demanding', 'something', 'providing', 'something', 'know', 'requirement', 'capability', 'model', 'wa', 'introduced', 'later', 'development', 'osgi', 'specification', 'exactly', 'find', 'year', 'version', 'wa', 'presented', 'ha', 'added', 'specification', 'see', 'ha', 'offer', 'import', 'export', 'package', 'already', 'offered', 'creating', 'dependency', 'package', 'bundle', 'could', 'someone', 'give', 'better', 'understanding', 'difference', 'pro', 'con', 'set', 'concept']","['when', 'we', 'started', 'with', 'osgi', 'in', 'we', 'had', 'some', 'clear', 'requirement', 'but', 'of', 'course', 'no', 'clear', 'view', 'of', 'what', 'would', 'come', 'out', 'of', 'it', 'so', 'we', 'started', 'to', 'explicitly', 'model', 'the', 'requirement', 'and', 'capability', 'we', 'had', 'package', 'the', 'import', 'package', 'requires', 'a', 'capability', 'and', 'that', 'capability', 'is', 'provided', 'by', 'an', 'export', 'package', 'in', 'eclipse', 'wanted', 'to', 'start', 'using', 'osgi', 'but', 'they', 'need', 'a', 'facility', 'to', 'require', 'another', 'bundle', 'they', 'did', 'not', 'like', 'the', 'idea', 'of', 'exporting', 'and', 'importing', 'all', 'their', 'package', 'actually', 'at', 'that', 'time', 'they', 'failed', 'to', 'see', 'the', 'benefit', 'of', 'package', 'to', 'satisfy', 'them', 'we', 'added', 'require', 'bundle', 'and', 'fragment', 'host', 'another', 'one', 'of', 'their', 'desire', 'that', 'turned', 'out', 'not', 'to', 'be', 'so', 'good', 'after', 'we', 'specified', 'osgi', 'x', 'with', 'these', 'extension', 'we', 'starting', 'thinking', 'about', 'a', 'repository', 'richard', 'had', 'developed', 'the', 'oscar', 'bundle', 'repository', 'analyzing', 'the', 'situation', 'with', 'the', 'new', 'header', 'in', 'osgi', 'it', 'became', 'clear', 'that', 'the', 'implementation', 'of', 'import', 'package', 'looked', 'a', 'lot', 'like', 'require', 'bundle', 'and', 'even', 'resembled', 'fragment', 'host', 'processing', 'in', 'richard', 's', 'hall', 'and', 'i', 'wrote', 'rfc', 'proposing', 'a', 'more', 'generic', 'model', 'that', 'captured', 'the', 'semantics', 'of', 'the', 'existing', 'dependency', 'model', 'but', 'wa', 'not', 'specific', 'for', 'each', 'type', 'of', 'requirement', 'i', 'e', 'for', 'the', 'framework', 'resolver', 'the', 'import', 'package', 'and', 'require', 'bundle', 'only', 'differ', 'in', 'their', 'namespace', 'thinking', 'of', 'import', 'package', 'a', 'a', 'generic', 'requirement', 'and', 'export', 'package', 'a', 'a', 'generic', 'capability', 'made', 'the', 'repository', 'model', 'extremely', 'simple', 'even', 'better', 'it', 'wa', 'extendable', 'since', 'we', 'could', 'always', 'add', 'more', 'namespaces', 'this', 'made', 'the', 'resolver', 'completely', 'independent', 'of', 'the', 'actual', 'namespaces', 'used', 'after', 'some', 'very', 'heated', 'discussion', 'the', 'osgi', 'core', 'platform', 'expert', 'group', 'decided', 'to', 'accept', 'the', 'basic', 'idea', 'and', 'developed', 'the', 'requirement', 'and', 'capability', 'specification', 'although', 'this', 'wa', 'originally', 'a', 'model', 'for', 'the', 'repository', 'it', 'turned', 'out', 'to', 'be', 'highly', 'useful', 'for', 'the', 'framework', 'itself', 'we', 'decided', 'therefore', 'to', 'adapt', 'the', 'existing', 'specification', 'to', 'this', 'model', 'osgi', 'internally', 'model', 'the', 'import', 'package', 'export', 'package', 'require', 'bundle', 'etc', 'a', 'requirement', 'and', 'capability', 'of', 'a', 'resource', 'the', 'bundle', 'for', 'backward', 'compatibility', 'we', 'kept', 'the', 'existing', 'header', 'but', 'they', 'are', 'internally', 'translated', 'to', 'requirement', 'and', 'capability', 'then', 'finally', 'to', 'the', 'answer', 'to', 'your', 'question', 'over', 'time', 'the', 'osgi', 'specification', 'added', 'more', 'and', 'more', 'namespaces', 'a', 'namespace', 'is', 'like', 'a', 'type', 'for', 'a', 'requirement', 'and', 'a', 'capability', 'it', 'defines', 'the', 'semantics', 'of', 'a', 'set', 'of', 'property', 'of', 'a', 'capability', 'in', 'that', 'namespace', 'a', 'requirement', 'is', 'a', 'filter', 'expression', 'that', 'is', 'asserted', 'on', 'those', 'property', 'a', 'resource', 'ha', 'a', 'set', 'of', 'capability', 'that', 'are', 'provided', 'to', 'the', 'runtime', 'when', 'all', 'it', 'requirement', 'are', 'satisfied', 'it', 'is', 'the', 'task', 'of', 'the', 'resolver', 'to', 'find', 'a', 'set', 'of', 'resource', 'that', 'are', 'all', 'satisfied', 'with', 'each', 'other', 's', 'capability', 'and', 'capability', 'provided', 'by', 'the', 'runtime', 'for', 'example', 'we', 'added', 'the', 'osgi', 'ee', 'namespace', 'that', 'defines', 'exactly', 'on', 'what', 'vm', 's', 'the', 'bundle', 'can', 'run', 'we', 'added', 'the', 'osgi', 'extender', 'namespace', 'that', 'model', 'a', 'dependency', 'on', 'an', 'external', 'program', 'like', 'the', 'service', 'component', 'runtime', 'scr', 'most', 'scr', 'component', 'do', 'not', 'require', 'any', 'package', 'from', 'the', 'scr', 'itself', 'we', 'tried', 'hard', 'to', 'make', 'them', 'a', 'independent', 'a', 'possible', 'however', 'a', 'scr', 'component', 'will', 'sit', 'useless', 'unless', 'some', 'bundle', 'in', 'the', 'runtime', 'provides', 'the', 'scr', 'functionality', 'notice', 'that', 'this', 'can', 'not', 'use', 'require', 'bundle', 'because', 'there', 'are', 'multiple', 'implementation', 'of', 'scr', 'i', 'think', 'there', 'are', 'about', 'namespaces', 'each', 'namespace', 'is', 'defined', 'in', 'a', 'namespace', 'class', 'this', 'model', 'ha', 'given', 'the', 'osgi', 'a', 'number', 'of', 'advantage', 'cohesion', 'although', 'the', 'specification', 'ha', 'added', 'many', 'namespaces', 'the', 'resolver', 'implementation', 'never', 'had', 'to', 'change', 'since', 'they', 'worked', 'on', 'the', 'generic', 'model', 'fine', 'grained', 'osgi', 'bundle', 'are', 'unique', 'in', 'how', 'they', 'describe', 'their', 'dependency', 'in', 'a', 'very', 'fine', 'grained', 'way', 'all', 'module', 'system', 'i', 'know', 'tend', 'to', 'use', 'the', 'simple', 'module', 'to', 'module', 'dependency', 'that', 'doe', 'not', 'allow', 'substitution', 'flexible', 'since', 'the', 'framework', 'reifies', 'the', 'dependency', 'between', 'bundle', 'it', 'is', 'possible', 'in', 'runtime', 'to', 'leverage', 'these', 'dependency', 'for', 'example', 'in', 'osgi', 'enroute', 'i', 'linked', 'a', 'bundle', 'to', 'it', 'web', 'page', 'traversing', 'these', 'runtime', 'wiring', 'i', 'personally', 'consider', 'the', 'requirement', 'and', 'capability', 'model', 'of', 'osgi', 'one', 'of', 'it', 'best', 'kept', 'secret', 'a', 'far', 'a', 'i', 'can', 'see', 'it', 'could', 'be', 'used', 'in', 'a', 'lot', 'of', 'area', 'to', 'improve', 'many', 'development', 'project', 'into', 'the', 'world', 'of', 'software', 'engineering', 'the', 'only', 'disappointing', 'part', 'in', 'this', 'question', 'is', 'that', 'i', 'thought', 'we', 'd', 'described', 'this', 'pretty', 'well', 'in', 'the', 'core', 'specification']",System Requirements and AWS,3,"{'neg': 0.031, 'neu': 0.898, 'pos': 0.072, 'compound': 0.8797}",0.14430272108843537,3,Python Package Installation and Management,3query
57414686,OSGi: What's the difference between Import-Package/Export-Package and Require-Capability/Provide Capability?,"<p>I am currently working with the OSGi framework but I have a question about some concepts that are not 100% clear to me. I have searching for it myself but I could not find a decent answer that clearly explains it.</p>

<p>In a bundle his manifest header 2 of the headers that get used are <code>Import-Package</code> and <code>Export-Package</code>. The names speak for themselves: a demand for a certain package and a offering of a certain package. In order to get that package (or give that package), the complete bundle must be installed in the framework where the <em>Import</em> is needed.</p>

<p>But then we get to the part of the <code>Requirements-Capabilities</code> model. This can practically do the same as the <code>Import-Package</code> and <code>Export-Package</code> headers. There are also headers for this <code>Requirements-Capability</code> model: <code>Require-Capability</code> and <code>Provide-Capability</code>. Again these stand for demanding something and for providing something.</p>

<p>I know that <code>Requirements-Capability</code> model was only introduced later on in the development of the OSGi specification(s). Can't exactly find at what year and version it was presented. </p>

<p>But,</p>

<ul>
<li><p>Why has this been added to the specification? I don't see what it has more to offer than what the <code>Import</code>/<code>Export-package</code> already offered: creating dependencies on other packages/bundles?</p></li>
<li><p>Could someone give me a better understanding in the difference (pro's and con's) between these 2 sets of concepts?</p></li>
</ul>
",<java><osgi><requirements><capability>,2019-08-08 14:15:21,1648,13,2,57415762,"<p>The <a href=""https://blog.osgi.org/2015/12/using-requirements-and-capabilities.html"" rel=""noreferrer"">requirements and capabilities</a> model is an extension of the Import/Export package model. Actually you can express a package import as a requirement and a package export as a capability.</p>

<p>Exporting / Importing packages allows for loose coupling. You export an API and the client imports it. This way the client only needs to know about the API so loose coupling is achieved.</p>

<p>At a later stage when you assemble the application out of bundles this loose coupling makes it difficult to automate the process.</p>

<p>If you just provide your client bundle to a resolver then it can only automatically find that you need the bundle that provides the API. If the implementation of the API is in a different bundle then the resolver has no way to know that you need it.</p>

<p>This is where requirements can help. Let's take the <a href=""https://osgi.org/specification/osgi.cmpn/7.0.0/service.http.whiteboard.html"" rel=""noreferrer"">HTTP Whiteboard model</a>. A bundle that want to publish a servlet needs to import the servlet api package but is also needs to express that it wants an implementation of the osgi http whiteboard. </p>

<p>This can be expressed by the requirement with namespace=""osgi.implementation"", name=""osgi.http"", version=""1.1.0"". As this is difficult to writer by hand there is annotation support for it.</p>

<pre><code>@HttpWhiteboardServletPattern(""/myservlet"")
@Component(service = Servlet.class)
public class MyServlet extends HttpServlet {
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) 
            throws IOException {
        resp.getWriter().println(""Hello"");
    }
}
</code></pre>

<p>The annotation @HttpWhiteboardServletPattern indirectly translates to the requirement above.</p>

<p>So when you build a bundle with this class it will import the servlet api package and also have a requirement for an http whiteboard implementation.</p>

<p>Now if you look at an implementation bundle like the felix http service you will see that it provide the capability for the whiteboard impl.</p>

<p>So if you have a OSGi repository with your bundle, the servlet API and the felix http service. Then the resolver can provide you with a complete application if you only give it your bundle. </p>
",2019-08,i am currently working with the osgi framework but i have a question about some concepts that are not   clear to me i have searching for it myself but i could not find a decent answer that clearly explains it in a bundle his manifest header   of the headers that get used are import package and export package the names speak for themselves a demand for a certain package and a offering of a certain package in order to get that package or give that package the complete bundle must be installed in the framework where the import is needed but then we get to the part of the requirements capabilities model this can practically do the same as the import package and export package headers there are also headers for this requirements capability model require capability and provide capability again these stand for demanding something and for providing something i know that requirements capability model was only introduced later on in the development of the osgi specification s can t exactly find at what year and version it was presented but why has this been added to the specification i don t see what it has more to offer than what the import export package already offered creating dependencies on other packages bundles could someone give me a better understanding in the difference pro s and con s between these   sets of concepts,the requirements and capabilities model is an extension of the import export package model actually you can express a package import as a requirement and a package export as a capability exporting importing packages allows for loose coupling you export an api and the client imports it this way the client only needs to know about the api so loose coupling is achieved at a later stage when you assemble the application out of bundles this loose coupling makes it difficult to automate the process if you just provide your client bundle to a resolver then it can only automatically find that you need the bundle that provides the api if the implementation of the api is in a different bundle then the resolver has no way to know that you need it this is where requirements can help let s take the http whiteboard model a bundle that want to publish a servlet needs to import the servlet api package but is also needs to express that it wants an implementation of the osgi http whiteboard this can be expressed by the requirement with namespace osgi implementation name osgi http version       as this is difficult to writer by hand there is annotation support for it httpwhiteboardservletpattern myservlet component service servlet class public class myservlet extends httpservlet protected void doget httpservletrequest req httpservletresponse resp throws ioexception resp getwriter println hello the annotation httpwhiteboardservletpattern indirectly translates to the requirement above so when you build a bundle with this class it will import the servlet api package and also have a requirement for an http whiteboard implementation now if you look at an implementation bundle like the felix http service you will see that it provide the capability for the whiteboard impl so if you have a osgi repository with your bundle the servlet api and the felix http service then the resolver can provide you with a complete application if you only give it your bundle,"['java', 'osgi', 'requirements', 'capability']","['i', 'am', 'currently', 'working', 'with', 'the', 'osgi', 'framework', 'but', 'i', 'have', 'a', 'question', 'about', 'some', 'concepts', 'that', 'are', 'not', 'clear', 'to', 'me', 'i', 'have', 'searching', 'for', 'it', 'myself', 'but', 'i', 'could', 'not', 'find', 'a', 'decent', 'answer', 'that', 'clearly', 'explains', 'it', 'in', 'a', 'bundle', 'his', 'manifest', 'header', 'of', 'the', 'headers', 'that', 'get', 'used', 'are', 'import', 'package', 'and', 'export', 'package', 'the', 'names', 'speak', 'for', 'themselves', 'a', 'demand', 'for', 'a', 'certain', 'package', 'and', 'a', 'offering', 'of', 'a', 'certain', 'package', 'in', 'order', 'to', 'get', 'that', 'package', 'or', 'give', 'that', 'package', 'the', 'complete', 'bundle', 'must', 'be', 'installed', 'in', 'the', 'framework', 'where', 'the', 'import', 'is', 'needed', 'but', 'then', 'we', 'get', 'to', 'the', 'part', 'of', 'the', 'requirements', 'capabilities', 'model', 'this', 'can', 'practically', 'do', 'the', 'same', 'as', 'the', 'import', 'package', 'and', 'export', 'package', 'headers', 'there', 'are', 'also', 'headers', 'for', 'this', 'requirements', 'capability', 'model', 'require', 'capability', 'and', 'provide', 'capability', 'again', 'these', 'stand', 'for', 'demanding', 'something', 'and', 'for', 'providing', 'something', 'i', 'know', 'that', 'requirements', 'capability', 'model', 'was', 'only', 'introduced', 'later', 'on', 'in', 'the', 'development', 'of', 'the', 'osgi', 'specification', 's', 'can', 't', 'exactly', 'find', 'at', 'what', 'year', 'and', 'version', 'it', 'was', 'presented', 'but', 'why', 'has', 'this', 'been', 'added', 'to', 'the', 'specification', 'i', 'don', 't', 'see', 'what', 'it', 'has', 'more', 'to', 'offer', 'than', 'what', 'the', 'import', 'export', 'package', 'already', 'offered', 'creating', 'dependencies', 'on', 'other', 'packages', 'bundles', 'could', 'someone', 'give', 'me', 'a', 'better', 'understanding', 'in', 'the', 'difference', 'pro', 's', 'and', 'con', 's', 'between', 'these', 'sets', 'of', 'concepts']","['the', 'requirements', 'and', 'capabilities', 'model', 'is', 'an', 'extension', 'of', 'the', 'import', 'export', 'package', 'model', 'actually', 'you', 'can', 'express', 'a', 'package', 'import', 'as', 'a', 'requirement', 'and', 'a', 'package', 'export', 'as', 'a', 'capability', 'exporting', 'importing', 'packages', 'allows', 'for', 'loose', 'coupling', 'you', 'export', 'an', 'api', 'and', 'the', 'client', 'imports', 'it', 'this', 'way', 'the', 'client', 'only', 'needs', 'to', 'know', 'about', 'the', 'api', 'so', 'loose', 'coupling', 'is', 'achieved', 'at', 'a', 'later', 'stage', 'when', 'you', 'assemble', 'the', 'application', 'out', 'of', 'bundles', 'this', 'loose', 'coupling', 'makes', 'it', 'difficult', 'to', 'automate', 'the', 'process', 'if', 'you', 'just', 'provide', 'your', 'client', 'bundle', 'to', 'a', 'resolver', 'then', 'it', 'can', 'only', 'automatically', 'find', 'that', 'you', 'need', 'the', 'bundle', 'that', 'provides', 'the', 'api', 'if', 'the', 'implementation', 'of', 'the', 'api', 'is', 'in', 'a', 'different', 'bundle', 'then', 'the', 'resolver', 'has', 'no', 'way', 'to', 'know', 'that', 'you', 'need', 'it', 'this', 'is', 'where', 'requirements', 'can', 'help', 'let', 's', 'take', 'the', 'http', 'whiteboard', 'model', 'a', 'bundle', 'that', 'want', 'to', 'publish', 'a', 'servlet', 'needs', 'to', 'import', 'the', 'servlet', 'api', 'package', 'but', 'is', 'also', 'needs', 'to', 'express', 'that', 'it', 'wants', 'an', 'implementation', 'of', 'the', 'osgi', 'http', 'whiteboard', 'this', 'can', 'be', 'expressed', 'by', 'the', 'requirement', 'with', 'namespace', 'osgi', 'implementation', 'name', 'osgi', 'http', 'version', 'as', 'this', 'is', 'difficult', 'to', 'writer', 'by', 'hand', 'there', 'is', 'annotation', 'support', 'for', 'it', 'httpwhiteboardservletpattern', 'myservlet', 'component', 'service', 'servlet', 'class', 'public', 'class', 'myservlet', 'extends', 'httpservlet', 'protected', 'void', 'doget', 'httpservletrequest', 'req', 'httpservletresponse', 'resp', 'throws', 'ioexception', 'resp', 'getwriter', 'println', 'hello', 'the', 'annotation', 'httpwhiteboardservletpattern', 'indirectly', 'translates', 'to', 'the', 'requirement', 'above', 'so', 'when', 'you', 'build', 'a', 'bundle', 'with', 'this', 'class', 'it', 'will', 'import', 'the', 'servlet', 'api', 'package', 'and', 'also', 'have', 'a', 'requirement', 'for', 'an', 'http', 'whiteboard', 'implementation', 'now', 'if', 'you', 'look', 'at', 'an', 'implementation', 'bundle', 'like', 'the', 'felix', 'http', 'service', 'you', 'will', 'see', 'that', 'it', 'provide', 'the', 'capability', 'for', 'the', 'whiteboard', 'impl', 'so', 'if', 'you', 'have', 'a', 'osgi', 'repository', 'with', 'your', 'bundle', 'the', 'servlet', 'api', 'and', 'the', 'felix', 'http', 'service', 'then', 'the', 'resolver', 'can', 'provide', 'you', 'with', 'a', 'complete', 'application', 'if', 'you', 'only', 'give', 'it', 'your', 'bundle']","['currently', 'working', 'osgi', 'framework', 'question', 'concept', 'clear', 'searching', 'could', 'find', 'decent', 'answer', 'clearly', 'explains', 'bundle', 'manifest', 'header', 'header', 'get', 'used', 'import', 'package', 'export', 'package', 'name', 'speak', 'demand', 'certain', 'package', 'offering', 'certain', 'package', 'order', 'get', 'package', 'give', 'package', 'complete', 'bundle', 'must', 'installed', 'framework', 'import', 'needed', 'get', 'part', 'requirement', 'capability', 'model', 'practically', 'import', 'package', 'export', 'package', 'header', 'also', 'header', 'requirement', 'capability', 'model', 'require', 'capability', 'provide', 'capability', 'stand', 'demanding', 'something', 'providing', 'something', 'know', 'requirement', 'capability', 'model', 'wa', 'introduced', 'later', 'development', 'osgi', 'specification', 'exactly', 'find', 'year', 'version', 'wa', 'presented', 'ha', 'added', 'specification', 'see', 'ha', 'offer', 'import', 'export', 'package', 'already', 'offered', 'creating', 'dependency', 'package', 'bundle', 'could', 'someone', 'give', 'better', 'understanding', 'difference', 'pro', 'con', 'set', 'concept']","['the', 'requirement', 'and', 'capability', 'model', 'is', 'an', 'extension', 'of', 'the', 'import', 'export', 'package', 'model', 'actually', 'you', 'can', 'express', 'a', 'package', 'import', 'a', 'a', 'requirement', 'and', 'a', 'package', 'export', 'a', 'a', 'capability', 'exporting', 'importing', 'package', 'allows', 'for', 'loose', 'coupling', 'you', 'export', 'an', 'api', 'and', 'the', 'client', 'import', 'it', 'this', 'way', 'the', 'client', 'only', 'need', 'to', 'know', 'about', 'the', 'api', 'so', 'loose', 'coupling', 'is', 'achieved', 'at', 'a', 'later', 'stage', 'when', 'you', 'assemble', 'the', 'application', 'out', 'of', 'bundle', 'this', 'loose', 'coupling', 'make', 'it', 'difficult', 'to', 'automate', 'the', 'process', 'if', 'you', 'just', 'provide', 'your', 'client', 'bundle', 'to', 'a', 'resolver', 'then', 'it', 'can', 'only', 'automatically', 'find', 'that', 'you', 'need', 'the', 'bundle', 'that', 'provides', 'the', 'api', 'if', 'the', 'implementation', 'of', 'the', 'api', 'is', 'in', 'a', 'different', 'bundle', 'then', 'the', 'resolver', 'ha', 'no', 'way', 'to', 'know', 'that', 'you', 'need', 'it', 'this', 'is', 'where', 'requirement', 'can', 'help', 'let', 's', 'take', 'the', 'http', 'whiteboard', 'model', 'a', 'bundle', 'that', 'want', 'to', 'publish', 'a', 'servlet', 'need', 'to', 'import', 'the', 'servlet', 'api', 'package', 'but', 'is', 'also', 'need', 'to', 'express', 'that', 'it', 'want', 'an', 'implementation', 'of', 'the', 'osgi', 'http', 'whiteboard', 'this', 'can', 'be', 'expressed', 'by', 'the', 'requirement', 'with', 'namespace', 'osgi', 'implementation', 'name', 'osgi', 'http', 'version', 'a', 'this', 'is', 'difficult', 'to', 'writer', 'by', 'hand', 'there', 'is', 'annotation', 'support', 'for', 'it', 'httpwhiteboardservletpattern', 'myservlet', 'component', 'service', 'servlet', 'class', 'public', 'class', 'myservlet', 'extends', 'httpservlet', 'protected', 'void', 'doget', 'httpservletrequest', 'req', 'httpservletresponse', 'resp', 'throw', 'ioexception', 'resp', 'getwriter', 'println', 'hello', 'the', 'annotation', 'httpwhiteboardservletpattern', 'indirectly', 'translates', 'to', 'the', 'requirement', 'above', 'so', 'when', 'you', 'build', 'a', 'bundle', 'with', 'this', 'class', 'it', 'will', 'import', 'the', 'servlet', 'api', 'package', 'and', 'also', 'have', 'a', 'requirement', 'for', 'an', 'http', 'whiteboard', 'implementation', 'now', 'if', 'you', 'look', 'at', 'an', 'implementation', 'bundle', 'like', 'the', 'felix', 'http', 'service', 'you', 'will', 'see', 'that', 'it', 'provide', 'the', 'capability', 'for', 'the', 'whiteboard', 'impl', 'so', 'if', 'you', 'have', 'a', 'osgi', 'repository', 'with', 'your', 'bundle', 'the', 'servlet', 'api', 'and', 'the', 'felix', 'http', 'service', 'then', 'the', 'resolver', 'can', 'provide', 'you', 'with', 'a', 'complete', 'application', 'if', 'you', 'only', 'give', 'it', 'your', 'bundle']",System Requirements and AWS,3,"{'neg': 0.031, 'neu': 0.898, 'pos': 0.072, 'compound': 0.8797}",0.14430272108843537,3,Python Package Installation and Management,3query
57267792,What I have to modifiy for the 64-bit requirement?,"<p>I know about that:</p>
<blockquote>
<p>Inspect your APK or app bundle for native code.
You can check for .so files using APK Analyzer.
Identify whether they are built from your own code or are imported by an SDK or library that you are using.
If you do not have any .so files in your APK, you are already 64-bit compliant.</p>
<p>Enable 64-bit architectures and rebuild native code (.so files) imported by your own code. See the documentation for more details.</p>
<p>Upgrade any SDKs and libraries to 64-bit compliant versions, if needed. Reach out to the SDK or library owner if one is not available. We’re working with top library owners on their 64-bit compatibility.</p>
<p>Test for issues locally once you’ve rebuilt your app.
Rollout to your testers using testing tracks for thorough testing.</p>
</blockquote>
<p>But I miss anything else? Any recommendations?</p>
<p>Thank you for your help!</p>
",<java><android><android-studio><google-play><requirements>,2019-07-30 08:51:40,93,-2,1,57267867,"<p>If you have no native (NDK) code, that is you only write Java/Dex code, then you don't need to do anything.</p>

<p>If you have native code (or libraries) then you need to supply their 64-bit versions.
<a href=""https://stackoverflow.com/questions/48549563/how-to-make-android-apps-which-support-both-32-bit-and-64-bit-architecture"">reference</a></p>
",2019-07,i know about that inspect your apk or app bundle for native code you can check for so files using apk analyzer identify whether they are built from your own code or are imported by an sdk or library that you are using if you do not have any so files in your apk you are already   bit compliant enable   bit architectures and rebuild native code so files imported by your own code see the documentation for more details upgrade any sdks and libraries to   bit compliant versions if needed reach out to the sdk or library owner if one is not available we re working with top library owners on their   bit compatibility test for issues locally once you ve rebuilt your app rollout to your testers using testing tracks for thorough testing but i miss anything else any recommendations thank you for your help,if you have no native ndk code that is you only write java dex code then you don t need to do anything if you have native code or libraries then you need to supply their   bit versions reference,"['java', 'android', 'android-studio', 'google-play', 'requirements']","['i', 'know', 'about', 'that', 'inspect', 'your', 'apk', 'or', 'app', 'bundle', 'for', 'native', 'code', 'you', 'can', 'check', 'for', 'so', 'files', 'using', 'apk', 'analyzer', 'identify', 'whether', 'they', 'are', 'built', 'from', 'your', 'own', 'code', 'or', 'are', 'imported', 'by', 'an', 'sdk', 'or', 'library', 'that', 'you', 'are', 'using', 'if', 'you', 'do', 'not', 'have', 'any', 'so', 'files', 'in', 'your', 'apk', 'you', 'are', 'already', 'bit', 'compliant', 'enable', 'bit', 'architectures', 'and', 'rebuild', 'native', 'code', 'so', 'files', 'imported', 'by', 'your', 'own', 'code', 'see', 'the', 'documentation', 'for', 'more', 'details', 'upgrade', 'any', 'sdks', 'and', 'libraries', 'to', 'bit', 'compliant', 'versions', 'if', 'needed', 'reach', 'out', 'to', 'the', 'sdk', 'or', 'library', 'owner', 'if', 'one', 'is', 'not', 'available', 'we', 're', 'working', 'with', 'top', 'library', 'owners', 'on', 'their', 'bit', 'compatibility', 'test', 'for', 'issues', 'locally', 'once', 'you', 've', 'rebuilt', 'your', 'app', 'rollout', 'to', 'your', 'testers', 'using', 'testing', 'tracks', 'for', 'thorough', 'testing', 'but', 'i', 'miss', 'anything', 'else', 'any', 'recommendations', 'thank', 'you', 'for', 'your', 'help']","['if', 'you', 'have', 'no', 'native', 'ndk', 'code', 'that', 'is', 'you', 'only', 'write', 'java', 'dex', 'code', 'then', 'you', 'don', 't', 'need', 'to', 'do', 'anything', 'if', 'you', 'have', 'native', 'code', 'or', 'libraries', 'then', 'you', 'need', 'to', 'supply', 'their', 'bit', 'versions', 'reference']","['know', 'inspect', 'apk', 'app', 'bundle', 'native', 'code', 'check', 'file', 'using', 'apk', 'analyzer', 'identify', 'whether', 'built', 'code', 'imported', 'sdk', 'library', 'using', 'file', 'apk', 'already', 'bit', 'compliant', 'enable', 'bit', 'architecture', 'rebuild', 'native', 'code', 'file', 'imported', 'code', 'see', 'documentation', 'detail', 'upgrade', 'sdks', 'library', 'bit', 'compliant', 'version', 'needed', 'reach', 'sdk', 'library', 'owner', 'one', 'available', 'working', 'top', 'library', 'owner', 'bit', 'compatibility', 'test', 'issue', 'locally', 'rebuilt', 'app', 'rollout', 'tester', 'using', 'testing', 'track', 'thorough', 'testing', 'miss', 'anything', 'else', 'recommendation', 'thank', 'help']","['if', 'you', 'have', 'no', 'native', 'ndk', 'code', 'that', 'is', 'you', 'only', 'write', 'java', 'dex', 'code', 'then', 'you', 'don', 't', 'need', 'to', 'do', 'anything', 'if', 'you', 'have', 'native', 'code', 'or', 'library', 'then', 'you', 'need', 'to', 'supply', 'their', 'bit', 'version', 'reference']",System Requirements and AWS,3,"{'neg': 0.011, 'neu': 0.965, 'pos': 0.024, 'compound': 0.2387}",0.3333333333333333,3,Python Package Installation and Management,3query
56810851,How to install dev version using versioning with asterisk in python/pip?,"<p>How to install a dev. version (e.g <code>0.2.dev0+gebdc597</code> generated by for example <a href=""https://github.com/pypa/setuptools_scm/#default-versioning-scheme"" rel=""nofollow noreferrer"">setuptools_scm</a>) of a package?</p>

<p>I tried this</p>

<pre class=""lang-sh prettyprint-override""><code>pip install my-package==0.2.*
</code></pre>

<p>and failed. Unfort. i can't paste the exact error, but it was something like <code>couldn't find this version, &lt;list of found versions&gt;</code></p>

<p>Also, i'd like to use it later in <code>requirements.txt</code>/<code>install_requires</code>, so i need a way which works both with <code>pip</code> and <code>setuptools</code>. I hope it's the same.</p>
",<python><versioning><requirements>,2019-06-28 17:09:17,4629,1,1,56893318,"<p>Short answer is use</p>

<pre><code>$ pip install pkg&gt;=0.2.0.dev
</code></pre>

<p>or in <code>requirements.txt</code></p>

<pre><code>pkg&gt;=0.2.0.dev
</code></pre>

<p>Other options are</p>

<p><code>Pip</code> has a special switch <a href=""https://packaging.python.org/tutorials/installing-packages/#installing-prereleases"" rel=""nofollow noreferrer""><code>--pre</code></a> which allows to install even with <code>*</code></p>

<pre><code>$ pip install --pre pkg==0.2.*
</code></pre>

<p>or in <code>requirements.txt</code></p>

<pre><code>--pre
pkg==0.2.*
</code></pre>

<p>This topic is also covered in <a href=""https://www.python.org/dev/peps/pep-0440/"" rel=""nofollow noreferrer"">PEP 440</a>.</p>
",2019-06,how to install a dev version e g     dev  gebdc  generated by for example setuptools_scm of a package i tried this pip install my package     and failed unfort i can t paste the exact error but it was something like couldn t find this version list of found versions also i d like to use it later in requirements txt install_requires so i need a way which works both with pip and setuptools i hope it s the same,short answer is use pip install pkg       dev or in requirements txt pkg       dev other options are pip has a special switch pre which allows to install even with pip install pre pkg     or in requirements txt pre pkg     this topic is also covered in pep,"['python', 'versioning', 'requirements']","['how', 'to', 'install', 'a', 'dev', 'version', 'e', 'g', 'dev', 'gebdc', 'generated', 'by', 'for', 'example', 'setuptools_scm', 'of', 'a', 'package', 'i', 'tried', 'this', 'pip', 'install', 'my', 'package', 'and', 'failed', 'unfort', 'i', 'can', 't', 'paste', 'the', 'exact', 'error', 'but', 'it', 'was', 'something', 'like', 'couldn', 't', 'find', 'this', 'version', 'list', 'of', 'found', 'versions', 'also', 'i', 'd', 'like', 'to', 'use', 'it', 'later', 'in', 'requirements', 'txt', 'install_requires', 'so', 'i', 'need', 'a', 'way', 'which', 'works', 'both', 'with', 'pip', 'and', 'setuptools', 'i', 'hope', 'it', 's', 'the', 'same']","['short', 'answer', 'is', 'use', 'pip', 'install', 'pkg', 'dev', 'or', 'in', 'requirements', 'txt', 'pkg', 'dev', 'other', 'options', 'are', 'pip', 'has', 'a', 'special', 'switch', 'pre', 'which', 'allows', 'to', 'install', 'even', 'with', 'pip', 'install', 'pre', 'pkg', 'or', 'in', 'requirements', 'txt', 'pre', 'pkg', 'this', 'topic', 'is', 'also', 'covered', 'in', 'pep']","['install', 'dev', 'version', 'e', 'g', 'dev', 'gebdc', 'generated', 'example', 'setuptools_scm', 'package', 'tried', 'pip', 'install', 'package', 'failed', 'unfort', 'paste', 'exact', 'error', 'wa', 'something', 'like', 'find', 'version', 'list', 'found', 'version', 'also', 'like', 'use', 'later', 'requirement', 'txt', 'install_requires', 'need', 'way', 'work', 'pip', 'setuptools', 'hope']","['short', 'answer', 'is', 'use', 'pip', 'install', 'pkg', 'dev', 'or', 'in', 'requirement', 'txt', 'pkg', 'dev', 'other', 'option', 'are', 'pip', 'ha', 'a', 'special', 'switch', 'pre', 'which', 'allows', 'to', 'install', 'even', 'with', 'pip', 'install', 'pre', 'pkg', 'or', 'in', 'requirement', 'txt', 'pre', 'pkg', 'this', 'topic', 'is', 'also', 'covered', 'in', 'pep']",System Requirements and AWS,3,"{'neg': 0.05, 'neu': 0.819, 'pos': 0.13, 'compound': 0.81}",-0.08333333333333333,3,Python Package Installation and Management,3query
56644115,Link two DOOR's modules without programming,"<p>I am new with IBM DOORS and I need some hint or help with this, probably, basic issue. </p>

<p>I have a <strong>Module A</strong> which contains some requirements and another <strong>Modules B,C,D etc</strong>, which corresponds to a concrete supplier answering to requirements that come from Module A. Therefore, if a requirement changes (i.e the text) I would like that automatically that change is also shown in modules B,C D...</p>

<p><strong>Module A</strong> (Atributes)<br>
Req_code (text)<br>
Req_type<br>
Req_text<br>
Req_owner<br>
[...]  </p>

<p><strong>Module B,C..</strong> (Atributes)<br>
Req_code (text)<br>
Supplier<br>
Base_option<br>
Req_answer<br>
Req_comments<br>
[...]  </p>

<p>The idea is, somehow, to make a linkage between <em>Req_code</em> in Module A and <em>Req_code</em> from other modules (one to many) so I can create a complete view with atributes from two modules.</p>

<p>I have been searching on the web but I have only found that this could be done with a dxl script. Is there any other way to do this not involving programming? I tried creating a linkage module, but I did not get what I wanted.</p>

<p>Thanks in advance,<br>
Bilbinight</p>
",<module><one-to-many><linkage><requirements><ibm-doors>,2019-06-18 07:45:22,1372,1,2,56659761,"<p>You will want to investigate the 'Link by Attribute' tool under the Link - Advanced menu. This is on DOORS 9.6.1.10, though most 9.x should have the same.</p>

<p>You will be able to create links between two modules, matching up a particular attribute- and then repeating the process for each subsequent module you need to link to.</p>
",2019-06,i am new with ibm doors and i need some hint or help with this probably basic issue i have a module a which contains some requirements and another modules b c d etc which corresponds to a concrete supplier answering to requirements that come from module a therefore if a requirement changes i e the text i would like that automatically that change is also shown in modules b c d module a atributes req_code text req_type req_text req_owner module b c atributes req_code text supplier base_option req_answer req_comments the idea is somehow to make a linkage between req_code in module a and req_code from other modules one to many so i can create a complete view with atributes from two modules i have been searching on the web but i have only found that this could be done with a dxl script is there any other way to do this not involving programming i tried creating a linkage module but i did not get what i wanted thanks in advance bilbinight,you will want to investigate the link by attribute tool under the link advanced menu this is on doors         though most   x should have the same you will be able to create links between two modules matching up a particular attribute and then repeating the process for each subsequent module you need to link to,"['module', 'one-to-many', 'linkage', 'requirements', 'ibm-doors']","['i', 'am', 'new', 'with', 'ibm', 'doors', 'and', 'i', 'need', 'some', 'hint', 'or', 'help', 'with', 'this', 'probably', 'basic', 'issue', 'i', 'have', 'a', 'module', 'a', 'which', 'contains', 'some', 'requirements', 'and', 'another', 'modules', 'b', 'c', 'd', 'etc', 'which', 'corresponds', 'to', 'a', 'concrete', 'supplier', 'answering', 'to', 'requirements', 'that', 'come', 'from', 'module', 'a', 'therefore', 'if', 'a', 'requirement', 'changes', 'i', 'e', 'the', 'text', 'i', 'would', 'like', 'that', 'automatically', 'that', 'change', 'is', 'also', 'shown', 'in', 'modules', 'b', 'c', 'd', 'module', 'a', 'atributes', 'req_code', 'text', 'req_type', 'req_text', 'req_owner', 'module', 'b', 'c', 'atributes', 'req_code', 'text', 'supplier', 'base_option', 'req_answer', 'req_comments', 'the', 'idea', 'is', 'somehow', 'to', 'make', 'a', 'linkage', 'between', 'req_code', 'in', 'module', 'a', 'and', 'req_code', 'from', 'other', 'modules', 'one', 'to', 'many', 'so', 'i', 'can', 'create', 'a', 'complete', 'view', 'with', 'atributes', 'from', 'two', 'modules', 'i', 'have', 'been', 'searching', 'on', 'the', 'web', 'but', 'i', 'have', 'only', 'found', 'that', 'this', 'could', 'be', 'done', 'with', 'a', 'dxl', 'script', 'is', 'there', 'any', 'other', 'way', 'to', 'do', 'this', 'not', 'involving', 'programming', 'i', 'tried', 'creating', 'a', 'linkage', 'module', 'but', 'i', 'did', 'not', 'get', 'what', 'i', 'wanted', 'thanks', 'in', 'advance', 'bilbinight']","['you', 'will', 'want', 'to', 'investigate', 'the', 'link', 'by', 'attribute', 'tool', 'under', 'the', 'link', 'advanced', 'menu', 'this', 'is', 'on', 'doors', 'though', 'most', 'x', 'should', 'have', 'the', 'same', 'you', 'will', 'be', 'able', 'to', 'create', 'links', 'between', 'two', 'modules', 'matching', 'up', 'a', 'particular', 'attribute', 'and', 'then', 'repeating', 'the', 'process', 'for', 'each', 'subsequent', 'module', 'you', 'need', 'to', 'link', 'to']","['new', 'ibm', 'door', 'need', 'hint', 'help', 'probably', 'basic', 'issue', 'module', 'contains', 'requirement', 'another', 'module', 'b', 'c', 'etc', 'corresponds', 'concrete', 'supplier', 'answering', 'requirement', 'come', 'module', 'therefore', 'requirement', 'change', 'e', 'text', 'would', 'like', 'automatically', 'change', 'also', 'shown', 'module', 'b', 'c', 'module', 'atributes', 'req_code', 'text', 'req_type', 'req_text', 'req_owner', 'module', 'b', 'c', 'atributes', 'req_code', 'text', 'supplier', 'base_option', 'req_answer', 'req_comments', 'idea', 'somehow', 'make', 'linkage', 'req_code', 'module', 'req_code', 'module', 'one', 'many', 'create', 'complete', 'view', 'atributes', 'two', 'module', 'searching', 'web', 'found', 'could', 'done', 'dxl', 'script', 'way', 'involving', 'programming', 'tried', 'creating', 'linkage', 'module', 'get', 'wanted', 'thanks', 'advance', 'bilbinight']","['you', 'will', 'want', 'to', 'investigate', 'the', 'link', 'by', 'attribute', 'tool', 'under', 'the', 'link', 'advanced', 'menu', 'this', 'is', 'on', 'door', 'though', 'most', 'x', 'should', 'have', 'the', 'same', 'you', 'will', 'be', 'able', 'to', 'create', 'link', 'between', 'two', 'module', 'matching', 'up', 'a', 'particular', 'attribute', 'and', 'then', 'repeating', 'the', 'process', 'for', 'each', 'subsequent', 'module', 'you', 'need', 'to', 'link', 'to']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.95, 'pos': 0.05, 'compound': 0.726}",0.07954545454545454,3,Python Package Installation and Management,3query
56644115,Link two DOOR's modules without programming,"<p>I am new with IBM DOORS and I need some hint or help with this, probably, basic issue. </p>

<p>I have a <strong>Module A</strong> which contains some requirements and another <strong>Modules B,C,D etc</strong>, which corresponds to a concrete supplier answering to requirements that come from Module A. Therefore, if a requirement changes (i.e the text) I would like that automatically that change is also shown in modules B,C D...</p>

<p><strong>Module A</strong> (Atributes)<br>
Req_code (text)<br>
Req_type<br>
Req_text<br>
Req_owner<br>
[...]  </p>

<p><strong>Module B,C..</strong> (Atributes)<br>
Req_code (text)<br>
Supplier<br>
Base_option<br>
Req_answer<br>
Req_comments<br>
[...]  </p>

<p>The idea is, somehow, to make a linkage between <em>Req_code</em> in Module A and <em>Req_code</em> from other modules (one to many) so I can create a complete view with atributes from two modules.</p>

<p>I have been searching on the web but I have only found that this could be done with a dxl script. Is there any other way to do this not involving programming? I tried creating a linkage module, but I did not get what I wanted.</p>

<p>Thanks in advance,<br>
Bilbinight</p>
",<module><one-to-many><linkage><requirements><ibm-doors>,2019-06-18 07:45:22,1372,1,2,56673450,"<p>I think what you want is actually the companion of link-by-attribute; Link > Advanced > Create links..., but first lets do a little architecture creation.</p>

<p>I am assuming that B, C, etc. will be creating answers to A and, as such, will be doing the linking to the objects in A as they answer. With this information, we can create Module A with Req_code (use ""Object Identifier""), Req_type (Type:string or enumerated list), Req_text (Use ""Object Text""), Req_owner (Type:string), etc. </p>

<p>Similarly, create Modules B and C with such attributes as necessary to describe the information to be contained in them. finally create a link module ""L"" to contain the Link Sets for B->A and C->A. note the link module contains only link sets, not actual links. the links are stored in the source modules, i.e., Modules B and C.</p>

<p>Just to be safe,  I would also go to File > Module Properties... select Linksets tab and set linksets in each of B and C to A through link Module L. Make mandatory and Only allow outgoing links... at the bottom.</p>

<p>Now we are ready to create objects in A (Insert > Object). Create some requirement text in the ""Object Text"" attribute or any other attributes that you want to appear in the other modules.</p>

<p>go to B and create an object. Link > Start Link go to the Object in A you want to link to and select Link > Make Link from Start. (It may ask the first time if you want to create a link set, just say Yes.) a little orange outgoing, and yellow incoming triangle will appear on each corresponding object. </p>

<p>finally, in B Analysis > Wizard... choose Out-links, DOORS links only; Next> (since we only have one anyway) choose All (formal) modules and All (Link) Modules; Next>
(choose the attributes you want to display from the other module) Next> (make sure Recursive analysis is not checked) and Finish.</p>

<p>This will create another column in Module B with the attributes you want to display from Module A.</p>

<p>You can now go to View > Save As... and give the view a name and at any time, see the linked information from Module B.</p>

<p>The only DXL that was written here was the DXL you wrote when you ran the Wizard.</p>

<p>WOW! A whole free training module in how to use DOORS!</p>
",2019-06,i am new with ibm doors and i need some hint or help with this probably basic issue i have a module a which contains some requirements and another modules b c d etc which corresponds to a concrete supplier answering to requirements that come from module a therefore if a requirement changes i e the text i would like that automatically that change is also shown in modules b c d module a atributes req_code text req_type req_text req_owner module b c atributes req_code text supplier base_option req_answer req_comments the idea is somehow to make a linkage between req_code in module a and req_code from other modules one to many so i can create a complete view with atributes from two modules i have been searching on the web but i have only found that this could be done with a dxl script is there any other way to do this not involving programming i tried creating a linkage module but i did not get what i wanted thanks in advance bilbinight,i think what you want is actually the companion of link by attribute link advanced create links but first lets do a little architecture creation i am assuming that b c etc will be creating answers to a and as such will be doing the linking to the objects in a as they answer with this information we can create module a with req_code use object identifier req_type type string or enumerated list req_text use object text req_owner type string etc similarly create modules b and c with such attributes as necessary to describe the information to be contained in them finally create a link module l to contain the link sets for b a and c a note the link module contains only link sets not actual links the links are stored in the source modules i e modules b and c just to be safe i would also go to file module properties select linksets tab and set linksets in each of b and c to a through link module l make mandatory and only allow outgoing links at the bottom now we are ready to create objects in a insert object create some requirement text in the object text attribute or any other attributes that you want to appear in the other modules go to b and create an object link start link go to the object in a you want to link to and select link make link from start it may ask the first time if you want to create a link set just say yes a little orange outgoing and yellow incoming triangle will appear on each corresponding object finally in b analysis wizard choose out links doors links only next since we only have one anyway choose all formal modules and all link modules next choose the attributes you want to display from the other module next make sure recursive analysis is not checked and finish this will create another column in module b with the attributes you want to display from module a you can now go to view save as and give the view a name and at any time see the linked information from module b the only dxl that was written here was the dxl you wrote when you ran the wizard wow a whole free training module in how to use doors,"['module', 'one-to-many', 'linkage', 'requirements', 'ibm-doors']","['i', 'am', 'new', 'with', 'ibm', 'doors', 'and', 'i', 'need', 'some', 'hint', 'or', 'help', 'with', 'this', 'probably', 'basic', 'issue', 'i', 'have', 'a', 'module', 'a', 'which', 'contains', 'some', 'requirements', 'and', 'another', 'modules', 'b', 'c', 'd', 'etc', 'which', 'corresponds', 'to', 'a', 'concrete', 'supplier', 'answering', 'to', 'requirements', 'that', 'come', 'from', 'module', 'a', 'therefore', 'if', 'a', 'requirement', 'changes', 'i', 'e', 'the', 'text', 'i', 'would', 'like', 'that', 'automatically', 'that', 'change', 'is', 'also', 'shown', 'in', 'modules', 'b', 'c', 'd', 'module', 'a', 'atributes', 'req_code', 'text', 'req_type', 'req_text', 'req_owner', 'module', 'b', 'c', 'atributes', 'req_code', 'text', 'supplier', 'base_option', 'req_answer', 'req_comments', 'the', 'idea', 'is', 'somehow', 'to', 'make', 'a', 'linkage', 'between', 'req_code', 'in', 'module', 'a', 'and', 'req_code', 'from', 'other', 'modules', 'one', 'to', 'many', 'so', 'i', 'can', 'create', 'a', 'complete', 'view', 'with', 'atributes', 'from', 'two', 'modules', 'i', 'have', 'been', 'searching', 'on', 'the', 'web', 'but', 'i', 'have', 'only', 'found', 'that', 'this', 'could', 'be', 'done', 'with', 'a', 'dxl', 'script', 'is', 'there', 'any', 'other', 'way', 'to', 'do', 'this', 'not', 'involving', 'programming', 'i', 'tried', 'creating', 'a', 'linkage', 'module', 'but', 'i', 'did', 'not', 'get', 'what', 'i', 'wanted', 'thanks', 'in', 'advance', 'bilbinight']","['i', 'think', 'what', 'you', 'want', 'is', 'actually', 'the', 'companion', 'of', 'link', 'by', 'attribute', 'link', 'advanced', 'create', 'links', 'but', 'first', 'lets', 'do', 'a', 'little', 'architecture', 'creation', 'i', 'am', 'assuming', 'that', 'b', 'c', 'etc', 'will', 'be', 'creating', 'answers', 'to', 'a', 'and', 'as', 'such', 'will', 'be', 'doing', 'the', 'linking', 'to', 'the', 'objects', 'in', 'a', 'as', 'they', 'answer', 'with', 'this', 'information', 'we', 'can', 'create', 'module', 'a', 'with', 'req_code', 'use', 'object', 'identifier', 'req_type', 'type', 'string', 'or', 'enumerated', 'list', 'req_text', 'use', 'object', 'text', 'req_owner', 'type', 'string', 'etc', 'similarly', 'create', 'modules', 'b', 'and', 'c', 'with', 'such', 'attributes', 'as', 'necessary', 'to', 'describe', 'the', 'information', 'to', 'be', 'contained', 'in', 'them', 'finally', 'create', 'a', 'link', 'module', 'l', 'to', 'contain', 'the', 'link', 'sets', 'for', 'b', 'a', 'and', 'c', 'a', 'note', 'the', 'link', 'module', 'contains', 'only', 'link', 'sets', 'not', 'actual', 'links', 'the', 'links', 'are', 'stored', 'in', 'the', 'source', 'modules', 'i', 'e', 'modules', 'b', 'and', 'c', 'just', 'to', 'be', 'safe', 'i', 'would', 'also', 'go', 'to', 'file', 'module', 'properties', 'select', 'linksets', 'tab', 'and', 'set', 'linksets', 'in', 'each', 'of', 'b', 'and', 'c', 'to', 'a', 'through', 'link', 'module', 'l', 'make', 'mandatory', 'and', 'only', 'allow', 'outgoing', 'links', 'at', 'the', 'bottom', 'now', 'we', 'are', 'ready', 'to', 'create', 'objects', 'in', 'a', 'insert', 'object', 'create', 'some', 'requirement', 'text', 'in', 'the', 'object', 'text', 'attribute', 'or', 'any', 'other', 'attributes', 'that', 'you', 'want', 'to', 'appear', 'in', 'the', 'other', 'modules', 'go', 'to', 'b', 'and', 'create', 'an', 'object', 'link', 'start', 'link', 'go', 'to', 'the', 'object', 'in', 'a', 'you', 'want', 'to', 'link', 'to', 'and', 'select', 'link', 'make', 'link', 'from', 'start', 'it', 'may', 'ask', 'the', 'first', 'time', 'if', 'you', 'want', 'to', 'create', 'a', 'link', 'set', 'just', 'say', 'yes', 'a', 'little', 'orange', 'outgoing', 'and', 'yellow', 'incoming', 'triangle', 'will', 'appear', 'on', 'each', 'corresponding', 'object', 'finally', 'in', 'b', 'analysis', 'wizard', 'choose', 'out', 'links', 'doors', 'links', 'only', 'next', 'since', 'we', 'only', 'have', 'one', 'anyway', 'choose', 'all', 'formal', 'modules', 'and', 'all', 'link', 'modules', 'next', 'choose', 'the', 'attributes', 'you', 'want', 'to', 'display', 'from', 'the', 'other', 'module', 'next', 'make', 'sure', 'recursive', 'analysis', 'is', 'not', 'checked', 'and', 'finish', 'this', 'will', 'create', 'another', 'column', 'in', 'module', 'b', 'with', 'the', 'attributes', 'you', 'want', 'to', 'display', 'from', 'module', 'a', 'you', 'can', 'now', 'go', 'to', 'view', 'save', 'as', 'and', 'give', 'the', 'view', 'a', 'name', 'and', 'at', 'any', 'time', 'see', 'the', 'linked', 'information', 'from', 'module', 'b', 'the', 'only', 'dxl', 'that', 'was', 'written', 'here', 'was', 'the', 'dxl', 'you', 'wrote', 'when', 'you', 'ran', 'the', 'wizard', 'wow', 'a', 'whole', 'free', 'training', 'module', 'in', 'how', 'to', 'use', 'doors']","['new', 'ibm', 'door', 'need', 'hint', 'help', 'probably', 'basic', 'issue', 'module', 'contains', 'requirement', 'another', 'module', 'b', 'c', 'etc', 'corresponds', 'concrete', 'supplier', 'answering', 'requirement', 'come', 'module', 'therefore', 'requirement', 'change', 'e', 'text', 'would', 'like', 'automatically', 'change', 'also', 'shown', 'module', 'b', 'c', 'module', 'atributes', 'req_code', 'text', 'req_type', 'req_text', 'req_owner', 'module', 'b', 'c', 'atributes', 'req_code', 'text', 'supplier', 'base_option', 'req_answer', 'req_comments', 'idea', 'somehow', 'make', 'linkage', 'req_code', 'module', 'req_code', 'module', 'one', 'many', 'create', 'complete', 'view', 'atributes', 'two', 'module', 'searching', 'web', 'found', 'could', 'done', 'dxl', 'script', 'way', 'involving', 'programming', 'tried', 'creating', 'linkage', 'module', 'get', 'wanted', 'thanks', 'advance', 'bilbinight']","['i', 'think', 'what', 'you', 'want', 'is', 'actually', 'the', 'companion', 'of', 'link', 'by', 'attribute', 'link', 'advanced', 'create', 'link', 'but', 'first', 'let', 'do', 'a', 'little', 'architecture', 'creation', 'i', 'am', 'assuming', 'that', 'b', 'c', 'etc', 'will', 'be', 'creating', 'answer', 'to', 'a', 'and', 'a', 'such', 'will', 'be', 'doing', 'the', 'linking', 'to', 'the', 'object', 'in', 'a', 'a', 'they', 'answer', 'with', 'this', 'information', 'we', 'can', 'create', 'module', 'a', 'with', 'req_code', 'use', 'object', 'identifier', 'req_type', 'type', 'string', 'or', 'enumerated', 'list', 'req_text', 'use', 'object', 'text', 'req_owner', 'type', 'string', 'etc', 'similarly', 'create', 'module', 'b', 'and', 'c', 'with', 'such', 'attribute', 'a', 'necessary', 'to', 'describe', 'the', 'information', 'to', 'be', 'contained', 'in', 'them', 'finally', 'create', 'a', 'link', 'module', 'l', 'to', 'contain', 'the', 'link', 'set', 'for', 'b', 'a', 'and', 'c', 'a', 'note', 'the', 'link', 'module', 'contains', 'only', 'link', 'set', 'not', 'actual', 'link', 'the', 'link', 'are', 'stored', 'in', 'the', 'source', 'module', 'i', 'e', 'module', 'b', 'and', 'c', 'just', 'to', 'be', 'safe', 'i', 'would', 'also', 'go', 'to', 'file', 'module', 'property', 'select', 'linksets', 'tab', 'and', 'set', 'linksets', 'in', 'each', 'of', 'b', 'and', 'c', 'to', 'a', 'through', 'link', 'module', 'l', 'make', 'mandatory', 'and', 'only', 'allow', 'outgoing', 'link', 'at', 'the', 'bottom', 'now', 'we', 'are', 'ready', 'to', 'create', 'object', 'in', 'a', 'insert', 'object', 'create', 'some', 'requirement', 'text', 'in', 'the', 'object', 'text', 'attribute', 'or', 'any', 'other', 'attribute', 'that', 'you', 'want', 'to', 'appear', 'in', 'the', 'other', 'module', 'go', 'to', 'b', 'and', 'create', 'an', 'object', 'link', 'start', 'link', 'go', 'to', 'the', 'object', 'in', 'a', 'you', 'want', 'to', 'link', 'to', 'and', 'select', 'link', 'make', 'link', 'from', 'start', 'it', 'may', 'ask', 'the', 'first', 'time', 'if', 'you', 'want', 'to', 'create', 'a', 'link', 'set', 'just', 'say', 'yes', 'a', 'little', 'orange', 'outgoing', 'and', 'yellow', 'incoming', 'triangle', 'will', 'appear', 'on', 'each', 'corresponding', 'object', 'finally', 'in', 'b', 'analysis', 'wizard', 'choose', 'out', 'link', 'door', 'link', 'only', 'next', 'since', 'we', 'only', 'have', 'one', 'anyway', 'choose', 'all', 'formal', 'module', 'and', 'all', 'link', 'module', 'next', 'choose', 'the', 'attribute', 'you', 'want', 'to', 'display', 'from', 'the', 'other', 'module', 'next', 'make', 'sure', 'recursive', 'analysis', 'is', 'not', 'checked', 'and', 'finish', 'this', 'will', 'create', 'another', 'column', 'in', 'module', 'b', 'with', 'the', 'attribute', 'you', 'want', 'to', 'display', 'from', 'module', 'a', 'you', 'can', 'now', 'go', 'to', 'view', 'save', 'a', 'and', 'give', 'the', 'view', 'a', 'name', 'and', 'at', 'any', 'time', 'see', 'the', 'linked', 'information', 'from', 'module', 'b', 'the', 'only', 'dxl', 'that', 'wa', 'written', 'here', 'wa', 'the', 'dxl', 'you', 'wrote', 'when', 'you', 'ran', 'the', 'wizard', 'wow', 'a', 'whole', 'free', 'training', 'module', 'in', 'how', 'to', 'use', 'door']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.95, 'pos': 0.05, 'compound': 0.726}",0.07954545454545454,3,Python Package Installation and Management,3query
56495866,DXL script to change specific words in strings to italic,"<p>I'm new to DXL and learning. I want to check in modules for all attributes for certain words to change them to italics.</p>

<p>Example:</p>

<p>specific word = change</p>

<p>before DXL script in attribute/column A: ""This requirement should change""</p>

<p>after DXL script in attribute/column A: ""This requirement should <em>change</em>""</p>

<p><strong>Code snippet</strong></p>

<pre><code>for itemRef in f do
{

if(shType==""Formal"")
      {
        filtering off;    
        m = read(fullName(itemRef), false)          
        Object o
        for o in m do 
       {

       //Operation for changing words to italic


       }

        close(moduleReference);
      }
}
</code></pre>

<p><strong>Updated Code</strong></p>

<pre><code>void ChangeItalic()
    {

      Module m = current
      filtering off;          
      Object o
      for o in m do
    {
      int i, j

      string t = o.""Object Text"" 
      string ModuleName = m.""Name""
      string ObjectName = identifier(o)
      print ModuleName ""\n""
      print ObjectName ""\n""
      print t

      if(matches(""[Ll]astenheft"",t)){
        print ""changed"" ""\n""
        i = start 0
        j = end 0
        t = t[0:(i-1)] ""\\i "" t[match 0] ""\\i0 "" t[j+1:]
        o.""Object Text"" = richText t


      }

}
}

// Main-Method
void main(void)
{

  ChangeItalic();

}
main()
</code></pre>
",<scripting><requirements><ibm-doors>,2019-06-07 14:05:13,937,0,1,56586960,"<p>Here is the ""guts"" of your script:</p>

<pre><code>Object o = current
int i, j
string t = o.""Object Text""
if (matches(""[Cc]hange"", t)){
    i = start 0
    j = end 0
    t = t[0:(i-1)] ""\\i "" t[match 0] ""\\i0 "" t[j+1:]
    o.""Object Text"" = richText t
}
</code></pre>

<p>this script will operate on the current object and change the word ""change"" to Italic if it is within the Object Text.it would be different if you wanted to display only.</p>

<p>Unfortunately, I don't know if you are wanting to <em>display</em> the word in italics (in a column) or to change the word to italics in the attribute.</p>
",2019-06,i m new to dxl and learning i want to check in modules for all attributes for certain words to change them to italics example specific word change before dxl script in attribute column a this requirement should change after dxl script in attribute column a this requirement should change code snippet for itemref in f do if shtype formal filtering off m read fullname itemref false object o for o in m do operation for changing words to italic close modulereference updated code void changeitalic module m current filtering off object o for o in m do int i j string t o object text string modulename m name string objectname identifier o print modulename n print objectname n print t if matches ll astenheft t print changed n i start   j end   t t   i   i t match   i  t j   o object text richtext t main method void main void changeitalic main,here is the guts of your script object o current int i j string t o object text if matches cc hange t i start   j end   t t   i   i t match   i  t j   o object text richtext t this script will operate on the current object and change the word change to italic if it is within the object text it would be different if you wanted to display only unfortunately i don t know if you are wanting to display the word in italics in a column or to change the word to italics in the attribute,"['scripting', 'requirements', 'ibm-doors']","['i', 'm', 'new', 'to', 'dxl', 'and', 'learning', 'i', 'want', 'to', 'check', 'in', 'modules', 'for', 'all', 'attributes', 'for', 'certain', 'words', 'to', 'change', 'them', 'to', 'italics', 'example', 'specific', 'word', 'change', 'before', 'dxl', 'script', 'in', 'attribute', 'column', 'a', 'this', 'requirement', 'should', 'change', 'after', 'dxl', 'script', 'in', 'attribute', 'column', 'a', 'this', 'requirement', 'should', 'change', 'code', 'snippet', 'for', 'itemref', 'in', 'f', 'do', 'if', 'shtype', 'formal', 'filtering', 'off', 'm', 'read', 'fullname', 'itemref', 'false', 'object', 'o', 'for', 'o', 'in', 'm', 'do', 'operation', 'for', 'changing', 'words', 'to', 'italic', 'close', 'modulereference', 'updated', 'code', 'void', 'changeitalic', 'module', 'm', 'current', 'filtering', 'off', 'object', 'o', 'for', 'o', 'in', 'm', 'do', 'int', 'i', 'j', 'string', 't', 'o', 'object', 'text', 'string', 'modulename', 'm', 'name', 'string', 'objectname', 'identifier', 'o', 'print', 'modulename', 'n', 'print', 'objectname', 'n', 'print', 't', 'if', 'matches', 'll', 'astenheft', 't', 'print', 'changed', 'n', 'i', 'start', 'j', 'end', 't', 't', 'i', 'i', 't', 'match', 'i', 't', 'j', 'o', 'object', 'text', 'richtext', 't', 'main', 'method', 'void', 'main', 'void', 'changeitalic', 'main']","['here', 'is', 'the', 'guts', 'of', 'your', 'script', 'object', 'o', 'current', 'int', 'i', 'j', 'string', 't', 'o', 'object', 'text', 'if', 'matches', 'cc', 'hange', 't', 'i', 'start', 'j', 'end', 't', 't', 'i', 'i', 't', 'match', 'i', 't', 'j', 'o', 'object', 'text', 'richtext', 't', 'this', 'script', 'will', 'operate', 'on', 'the', 'current', 'object', 'and', 'change', 'the', 'word', 'change', 'to', 'italic', 'if', 'it', 'is', 'within', 'the', 'object', 'text', 'it', 'would', 'be', 'different', 'if', 'you', 'wanted', 'to', 'display', 'only', 'unfortunately', 'i', 'don', 't', 'know', 'if', 'you', 'are', 'wanting', 'to', 'display', 'the', 'word', 'in', 'italics', 'in', 'a', 'column', 'or', 'to', 'change', 'the', 'word', 'to', 'italics', 'in', 'the', 'attribute']","['new', 'dxl', 'learning', 'want', 'check', 'module', 'attribute', 'certain', 'word', 'change', 'italic', 'example', 'specific', 'word', 'change', 'dxl', 'script', 'attribute', 'column', 'requirement', 'change', 'dxl', 'script', 'attribute', 'column', 'requirement', 'change', 'code', 'snippet', 'itemref', 'f', 'shtype', 'formal', 'filtering', 'read', 'fullname', 'itemref', 'false', 'object', 'operation', 'changing', 'word', 'italic', 'close', 'modulereference', 'updated', 'code', 'void', 'changeitalic', 'module', 'current', 'filtering', 'object', 'int', 'j', 'string', 'object', 'text', 'string', 'modulename', 'name', 'string', 'objectname', 'identifier', 'print', 'modulename', 'n', 'print', 'objectname', 'n', 'print', 'match', 'astenheft', 'print', 'changed', 'n', 'start', 'j', 'end', 'match', 'j', 'object', 'text', 'richtext', 'main', 'method', 'void', 'main', 'void', 'changeitalic', 'main']","['here', 'is', 'the', 'gut', 'of', 'your', 'script', 'object', 'o', 'current', 'int', 'i', 'j', 'string', 't', 'o', 'object', 'text', 'if', 'match', 'cc', 'hange', 't', 'i', 'start', 'j', 'end', 't', 't', 'i', 'i', 't', 'match', 'i', 't', 'j', 'o', 'object', 'text', 'richtext', 't', 'this', 'script', 'will', 'operate', 'on', 'the', 'current', 'object', 'and', 'change', 'the', 'word', 'change', 'to', 'italic', 'if', 'it', 'is', 'within', 'the', 'object', 'text', 'it', 'would', 'be', 'different', 'if', 'you', 'wanted', 'to', 'display', 'only', 'unfortunately', 'i', 'don', 't', 'know', 'if', 'you', 'are', 'wanting', 'to', 'display', 'the', 'word', 'in', 'italic', 'in', 'a', 'column', 'or', 'to', 'change', 'the', 'word', 'to', 'italic', 'in', 'the', 'attribute']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.972, 'pos': 0.028, 'compound': 0.34}",0.10288600288600287,3,Python Package Installation and Management,3query
56086834,Requirements gathering questionarie templete,"<p>I have a client who ask me to redesign his e-learning website,and we had a first call he explained everything about his website.Now how I prepare a questionnaire template for asking him about all the functionalities in the website and about the design of the website.</p>

<p>Thanks in advance.</p>
",<web-applications><requirements>,2019-05-11 03:02:21,50,0,1,56086847,"<p>I would start by asking what frameworks they are currently using (jQuery, Vue...) and what the backend setup is like (static, NodeJs, php...). From there you can ask where he wants to go with the website and what he wants done. </p>
",2019-05,i have a client who ask me to redesign his e learning website and we had a first call he explained everything about his website now how i prepare a questionnaire template for asking him about all the functionalities in the website and about the design of the website thanks in advance,i would start by asking what frameworks they are currently using jquery vue and what the backend setup is like static nodejs php from there you can ask where he wants to go with the website and what he wants done,"['web-applications', 'requirements']","['i', 'have', 'a', 'client', 'who', 'ask', 'me', 'to', 'redesign', 'his', 'e', 'learning', 'website', 'and', 'we', 'had', 'a', 'first', 'call', 'he', 'explained', 'everything', 'about', 'his', 'website', 'now', 'how', 'i', 'prepare', 'a', 'questionnaire', 'template', 'for', 'asking', 'him', 'about', 'all', 'the', 'functionalities', 'in', 'the', 'website', 'and', 'about', 'the', 'design', 'of', 'the', 'website', 'thanks', 'in', 'advance']","['i', 'would', 'start', 'by', 'asking', 'what', 'frameworks', 'they', 'are', 'currently', 'using', 'jquery', 'vue', 'and', 'what', 'the', 'backend', 'setup', 'is', 'like', 'static', 'nodejs', 'php', 'from', 'there', 'you', 'can', 'ask', 'where', 'he', 'wants', 'to', 'go', 'with', 'the', 'website', 'and', 'what', 'he', 'wants', 'done']","['client', 'ask', 'redesign', 'e', 'learning', 'website', 'first', 'call', 'explained', 'everything', 'website', 'prepare', 'questionnaire', 'template', 'asking', 'functionality', 'website', 'design', 'website', 'thanks', 'advance']","['i', 'would', 'start', 'by', 'asking', 'what', 'framework', 'they', 'are', 'currently', 'using', 'jquery', 'vue', 'and', 'what', 'the', 'backend', 'setup', 'is', 'like', 'static', 'nodejs', 'php', 'from', 'there', 'you', 'can', 'ask', 'where', 'he', 'want', 'to', 'go', 'with', 'the', 'website', 'and', 'what', 'he', 'want', 'done']",System Requirements and AWS,1,"{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}",0.25,1,Package Management and File Handling,3query
56010337,Amazon sagemaker. SKlearn estimator vs Tensorflow estimator - why requirements_file is not present in one of them?,"<p>I am looking at definitions of two estimators SKLearn and Tensorflow in Amazon Sagemaker:</p>

<p><a href=""https://sagemaker.readthedocs.io/en/stable/sagemaker.sklearn.html"" rel=""nofollow noreferrer"">SKLearn</a></p>

<p><a href=""https://sagemaker.readthedocs.io/en/stable/sagemaker.tensorflow.html"" rel=""nofollow noreferrer"">Tensorflow</a></p>

<pre><code>class sagemaker.sklearn.estimator.SKLearn(entry_point, framework_version='0.20.0', source_dir=None, hyperparameters=None, py_version='py3', image_name=None, **kwargs)

class sagemaker.tensorflow.estimator.TensorFlow(training_steps=None, evaluation_steps=None, checkpoint_path=None, py_version='py2', framework_version=None, model_dir=None, requirements_file='', image_name=None, script_mode=False, distributions=None, **kwargs)
</code></pre>

<p>Tensorflow has requirements_file parameter, while SKLearn does not. Is there reason why? How can I add <code>requirements.txt</code> to SKLearn estimator?</p>
",<python><requirements><amazon-sagemaker>,2019-05-06 18:09:44,251,1,1,56486750,"<p>I had similar usecase, while <a href=""https://github.com/aws/sagemaker-scikit-learn-container/issues/5"" rel=""nofollow noreferrer"">this issue</a> states that they will be supporting it, I found that if you keep <a href=""https://pip.pypa.io/en/stable/user_guide/#requirements-files"" rel=""nofollow noreferrer""><code>requirements.txt</code></a> file besides your entry point file, it downloads the required dependencies.</p>
",2019-05,i am looking at definitions of two estimators sklearn and tensorflow in amazon sagemaker sklearn tensorflow class sagemaker sklearn estimator sklearn entry_point framework_version       source_dir none hyperparameters none py_version py  image_name none kwargs class sagemaker tensorflow estimator tensorflow training_steps none evaluation_steps none checkpoint_path none py_version py  framework_version none model_dir none requirements_file image_name none script_mode false distributions none kwargs tensorflow has requirements_file parameter while sklearn does not is there reason why how can i add requirements txt to sklearn estimator,i had similar usecase while this issue states that they will be supporting it i found that if you keep requirements txt file besides your entry point file it downloads the required dependencies,"['python', 'requirements', 'amazon-sagemaker']","['i', 'am', 'looking', 'at', 'definitions', 'of', 'two', 'estimators', 'sklearn', 'and', 'tensorflow', 'in', 'amazon', 'sagemaker', 'sklearn', 'tensorflow', 'class', 'sagemaker', 'sklearn', 'estimator', 'sklearn', 'entry_point', 'framework_version', 'source_dir', 'none', 'hyperparameters', 'none', 'py_version', 'py', 'image_name', 'none', 'kwargs', 'class', 'sagemaker', 'tensorflow', 'estimator', 'tensorflow', 'training_steps', 'none', 'evaluation_steps', 'none', 'checkpoint_path', 'none', 'py_version', 'py', 'framework_version', 'none', 'model_dir', 'none', 'requirements_file', 'image_name', 'none', 'script_mode', 'false', 'distributions', 'none', 'kwargs', 'tensorflow', 'has', 'requirements_file', 'parameter', 'while', 'sklearn', 'does', 'not', 'is', 'there', 'reason', 'why', 'how', 'can', 'i', 'add', 'requirements', 'txt', 'to', 'sklearn', 'estimator']","['i', 'had', 'similar', 'usecase', 'while', 'this', 'issue', 'states', 'that', 'they', 'will', 'be', 'supporting', 'it', 'i', 'found', 'that', 'if', 'you', 'keep', 'requirements', 'txt', 'file', 'besides', 'your', 'entry', 'point', 'file', 'it', 'downloads', 'the', 'required', 'dependencies']","['looking', 'definition', 'two', 'estimator', 'sklearn', 'tensorflow', 'amazon', 'sagemaker', 'sklearn', 'tensorflow', 'class', 'sagemaker', 'sklearn', 'estimator', 'sklearn', 'entry_point', 'framework_version', 'source_dir', 'none', 'hyperparameters', 'none', 'py_version', 'py', 'image_name', 'none', 'kwargs', 'class', 'sagemaker', 'tensorflow', 'estimator', 'tensorflow', 'training_steps', 'none', 'evaluation_steps', 'none', 'checkpoint_path', 'none', 'py_version', 'py', 'framework_version', 'none', 'model_dir', 'none', 'requirements_file', 'image_name', 'none', 'script_mode', 'false', 'distribution', 'none', 'kwargs', 'tensorflow', 'ha', 'requirements_file', 'parameter', 'sklearn', 'doe', 'reason', 'add', 'requirement', 'txt', 'sklearn', 'estimator']","['i', 'had', 'similar', 'usecase', 'while', 'this', 'issue', 'state', 'that', 'they', 'will', 'be', 'supporting', 'it', 'i', 'found', 'that', 'if', 'you', 'keep', 'requirement', 'txt', 'file', 'besides', 'your', 'entry', 'point', 'file', 'it', 'downloads', 'the', 'required', 'dependency']",System Requirements and AWS,2,"{'neg': 0.0, 'neu': 0.967, 'pos': 0.033, 'compound': 0.264}",0.0,2,Python Libraries and Environment,3query
55091129,How can computational requirements be compared?,"<p>Calculating the solution to an optimization problem takes a 2 GHz CPU one hour. During this process there are no background processes, no RAM is being used and the CPU is at 100% capacity. </p>

<p>Based on this information, can it be derived that a 1 GHz CPU will take two hours to solve the same problem?</p>
",<requirements>,2019-03-10 18:48:42,22,-1,1,55091337,"<p>A quick search of IPC, frequence, and chip architecture will show you this topic has been breached many times. There are many things that can determine the execution speed of a program (without even going into threading at all) the main ones that pop to mind:</p>

<ol>
<li><p><strong>Instruction set</strong> - If one chip has an instruction for multiplication, than <code>a*b</code> is atomic. If not, you will need a lot of atomic instructions to perform such an action - big difference in speed, which can prove to make even higher frequency chips slower.</p></li>
<li><p>Cycles per second - this is the <strong>frequency</strong> of the chip.</p></li>
<li><p><strong>Instructions per cycle (IPC)</strong> - what you are really interested is IPC*frequency, not just frequency. How many atomic actions can you can perform in a second. After the amount of atomic actions (see 1), on a single threaded application this might act as you expect (x2 this => x2 faster program), though no guarantees.</p></li>
</ol>

<p>and there are a ton of other nuance technologies that can affect this, like branch prediction which hit the news big time recently. For a complete understanding a book/course might be a better resource.</p>

<p>So, in general, <strong>no</strong>. If you are comparing two single core, same architecture chips (unlikely), then maybe yes.</p>
",2019-03,calculating the solution to an optimization problem takes a   ghz cpu one hour during this process there are no background processes no ram is being used and the cpu is at   capacity based on this information can it be derived that a   ghz cpu will take two hours to solve the same problem,a quick search of ipc frequence and chip architecture will show you this topic has been breached many times there are many things that can determine the execution speed of a program without even going into threading at all the main ones that pop to mind instruction set if one chip has an instruction for multiplication than a b is atomic if not you will need a lot of atomic instructions to perform such an action big difference in speed which can prove to make even higher frequency chips slower cycles per second this is the frequency of the chip instructions per cycle ipc what you are really interested is ipc frequency not just frequency how many atomic actions can you can perform in a second after the amount of atomic actions see   on a single threaded application this might act as you expect x  this x  faster program though no guarantees and there are a ton of other nuance technologies that can affect this like branch prediction which hit the news big time recently for a complete understanding a book course might be a better resource so in general no if you are comparing two single core same architecture chips unlikely then maybe yes,['requirements'],"['calculating', 'the', 'solution', 'to', 'an', 'optimization', 'problem', 'takes', 'a', 'ghz', 'cpu', 'one', 'hour', 'during', 'this', 'process', 'there', 'are', 'no', 'background', 'processes', 'no', 'ram', 'is', 'being', 'used', 'and', 'the', 'cpu', 'is', 'at', 'capacity', 'based', 'on', 'this', 'information', 'can', 'it', 'be', 'derived', 'that', 'a', 'ghz', 'cpu', 'will', 'take', 'two', 'hours', 'to', 'solve', 'the', 'same', 'problem']","['a', 'quick', 'search', 'of', 'ipc', 'frequence', 'and', 'chip', 'architecture', 'will', 'show', 'you', 'this', 'topic', 'has', 'been', 'breached', 'many', 'times', 'there', 'are', 'many', 'things', 'that', 'can', 'determine', 'the', 'execution', 'speed', 'of', 'a', 'program', 'without', 'even', 'going', 'into', 'threading', 'at', 'all', 'the', 'main', 'ones', 'that', 'pop', 'to', 'mind', 'instruction', 'set', 'if', 'one', 'chip', 'has', 'an', 'instruction', 'for', 'multiplication', 'than', 'a', 'b', 'is', 'atomic', 'if', 'not', 'you', 'will', 'need', 'a', 'lot', 'of', 'atomic', 'instructions', 'to', 'perform', 'such', 'an', 'action', 'big', 'difference', 'in', 'speed', 'which', 'can', 'prove', 'to', 'make', 'even', 'higher', 'frequency', 'chips', 'slower', 'cycles', 'per', 'second', 'this', 'is', 'the', 'frequency', 'of', 'the', 'chip', 'instructions', 'per', 'cycle', 'ipc', 'what', 'you', 'are', 'really', 'interested', 'is', 'ipc', 'frequency', 'not', 'just', 'frequency', 'how', 'many', 'atomic', 'actions', 'can', 'you', 'can', 'perform', 'in', 'a', 'second', 'after', 'the', 'amount', 'of', 'atomic', 'actions', 'see', 'on', 'a', 'single', 'threaded', 'application', 'this', 'might', 'act', 'as', 'you', 'expect', 'x', 'this', 'x', 'faster', 'program', 'though', 'no', 'guarantees', 'and', 'there', 'are', 'a', 'ton', 'of', 'other', 'nuance', 'technologies', 'that', 'can', 'affect', 'this', 'like', 'branch', 'prediction', 'which', 'hit', 'the', 'news', 'big', 'time', 'recently', 'for', 'a', 'complete', 'understanding', 'a', 'book', 'course', 'might', 'be', 'a', 'better', 'resource', 'so', 'in', 'general', 'no', 'if', 'you', 'are', 'comparing', 'two', 'single', 'core', 'same', 'architecture', 'chips', 'unlikely', 'then', 'maybe', 'yes']","['calculating', 'solution', 'optimization', 'problem', 'take', 'ghz', 'cpu', 'one', 'hour', 'process', 'background', 'process', 'ram', 'used', 'cpu', 'capacity', 'based', 'information', 'derived', 'ghz', 'cpu', 'take', 'two', 'hour', 'solve', 'problem']","['a', 'quick', 'search', 'of', 'ipc', 'frequence', 'and', 'chip', 'architecture', 'will', 'show', 'you', 'this', 'topic', 'ha', 'been', 'breached', 'many', 'time', 'there', 'are', 'many', 'thing', 'that', 'can', 'determine', 'the', 'execution', 'speed', 'of', 'a', 'program', 'without', 'even', 'going', 'into', 'threading', 'at', 'all', 'the', 'main', 'one', 'that', 'pop', 'to', 'mind', 'instruction', 'set', 'if', 'one', 'chip', 'ha', 'an', 'instruction', 'for', 'multiplication', 'than', 'a', 'b', 'is', 'atomic', 'if', 'not', 'you', 'will', 'need', 'a', 'lot', 'of', 'atomic', 'instruction', 'to', 'perform', 'such', 'an', 'action', 'big', 'difference', 'in', 'speed', 'which', 'can', 'prove', 'to', 'make', 'even', 'higher', 'frequency', 'chip', 'slower', 'cycle', 'per', 'second', 'this', 'is', 'the', 'frequency', 'of', 'the', 'chip', 'instruction', 'per', 'cycle', 'ipc', 'what', 'you', 'are', 'really', 'interested', 'is', 'ipc', 'frequency', 'not', 'just', 'frequency', 'how', 'many', 'atomic', 'action', 'can', 'you', 'can', 'perform', 'in', 'a', 'second', 'after', 'the', 'amount', 'of', 'atomic', 'action', 'see', 'on', 'a', 'single', 'threaded', 'application', 'this', 'might', 'act', 'a', 'you', 'expect', 'x', 'this', 'x', 'faster', 'program', 'though', 'no', 'guarantee', 'and', 'there', 'are', 'a', 'ton', 'of', 'other', 'nuance', 'technology', 'that', 'can', 'affect', 'this', 'like', 'branch', 'prediction', 'which', 'hit', 'the', 'news', 'big', 'time', 'recently', 'for', 'a', 'complete', 'understanding', 'a', 'book', 'course', 'might', 'be', 'a', 'better', 'resource', 'so', 'in', 'general', 'no', 'if', 'you', 'are', 'comparing', 'two', 'single', 'core', 'same', 'architecture', 'chip', 'unlikely', 'then', 'maybe', 'yes']",System Requirements and AWS,4,"{'neg': 0.117, 'neu': 0.773, 'pos': 0.11, 'compound': -0.1027}",0.0,4,Building and Compiling Python Projects,3query
54690373,Doxygen custom tag with a placeholder,"<p>Is it somehow possible in Doxygen to create a custom tag, which creates a documentation using a placeholder tag as its input?</p>

<p>What I want to accomplish is to create a custom tag for requirements. As our DOORS Urls are quite long, and diverge from SW-component to SW-component, I want to create something similar to this:</p>

<pre><code>@file somefile.c
@doorsdocurl &lt;URL to DOORS document&gt; -&gt; this is going to be my placeholder

...
...
...


/**
* @brief somedescription
* @req{doorsdocurl: &lt;reqID1, reqID2,...&gt; } -&gt; this is going to be the second custom tag
*/
void jambo()
{
}
</code></pre>

<p>Is this somehow achievable with Doxygen? From what I have read, one has to put his custom tags within the ALIASES variable</p>
",<c><doxygen><requirements>,2019-02-14 12:25:17,544,0,1,54693581,"<p>In your Doxyfile you would need something like:</p>

<pre><code>ALIASES = ""doorsdocurl_sw_1=&lt;URL to DOORS document&gt;"" \
          ""req{2}=\1 \2&lt;br&gt;""
</code></pre>

<p>and the code would look like:</p>

<pre><code>/**
* @brief somedescription
*
* @req{@doorsdocurl_sw_1,reqID1}
* @req{@doorsdocurl_sw_1,reqID2}
*/
void jambo()
{
}
</code></pre>

<p>The <code>\req</code> command can of course be extended with other commands, in this respect the command <code>xrefitem</code> might be useful, see the manual (<a href=""http://www.doxygen.nl/manual/commands.html#cmdxrefitem"" rel=""nofollow noreferrer"">http://www.doxygen.nl/manual/commands.html#cmdxrefitem</a>)</p>
",2019-02,is it somehow possible in doxygen to create a custom tag which creates a documentation using a placeholder tag as its input what i want to accomplish is to create a custom tag for requirements as our doors urls are quite long and diverge from sw component to sw component i want to create something similar to this file somefile c doorsdocurl url to doors document this is going to be my placeholder brief somedescription req doorsdocurl reqid  reqid  this is going to be the second custom tag void jambo is this somehow achievable with doxygen from what i have read one has to put his custom tags within the aliases variable,in your doxyfile you would need something like aliases doorsdocurl_sw_  url to doors document req       br and the code would look like brief somedescription req doorsdocurl_sw_  reqid  req doorsdocurl_sw_  reqid  void jambo the req command can of course be extended with other commands in this respect the command xrefitem might be useful see the manual http www doxygen nl manual commands html cmdxrefitem,"['c', 'doxygen', 'requirements']","['is', 'it', 'somehow', 'possible', 'in', 'doxygen', 'to', 'create', 'a', 'custom', 'tag', 'which', 'creates', 'a', 'documentation', 'using', 'a', 'placeholder', 'tag', 'as', 'its', 'input', 'what', 'i', 'want', 'to', 'accomplish', 'is', 'to', 'create', 'a', 'custom', 'tag', 'for', 'requirements', 'as', 'our', 'doors', 'urls', 'are', 'quite', 'long', 'and', 'diverge', 'from', 'sw', 'component', 'to', 'sw', 'component', 'i', 'want', 'to', 'create', 'something', 'similar', 'to', 'this', 'file', 'somefile', 'c', 'doorsdocurl', 'url', 'to', 'doors', 'document', 'this', 'is', 'going', 'to', 'be', 'my', 'placeholder', 'brief', 'somedescription', 'req', 'doorsdocurl', 'reqid', 'reqid', 'this', 'is', 'going', 'to', 'be', 'the', 'second', 'custom', 'tag', 'void', 'jambo', 'is', 'this', 'somehow', 'achievable', 'with', 'doxygen', 'from', 'what', 'i', 'have', 'read', 'one', 'has', 'to', 'put', 'his', 'custom', 'tags', 'within', 'the', 'aliases', 'variable']","['in', 'your', 'doxyfile', 'you', 'would', 'need', 'something', 'like', 'aliases', 'doorsdocurl_sw_', 'url', 'to', 'doors', 'document', 'req', 'br', 'and', 'the', 'code', 'would', 'look', 'like', 'brief', 'somedescription', 'req', 'doorsdocurl_sw_', 'reqid', 'req', 'doorsdocurl_sw_', 'reqid', 'void', 'jambo', 'the', 'req', 'command', 'can', 'of', 'course', 'be', 'extended', 'with', 'other', 'commands', 'in', 'this', 'respect', 'the', 'command', 'xrefitem', 'might', 'be', 'useful', 'see', 'the', 'manual', 'http', 'www', 'doxygen', 'nl', 'manual', 'commands', 'html', 'cmdxrefitem']","['somehow', 'possible', 'doxygen', 'create', 'custom', 'tag', 'creates', 'documentation', 'using', 'placeholder', 'tag', 'input', 'want', 'accomplish', 'create', 'custom', 'tag', 'requirement', 'door', 'url', 'quite', 'long', 'diverge', 'sw', 'component', 'sw', 'component', 'want', 'create', 'something', 'similar', 'file', 'somefile', 'c', 'doorsdocurl', 'url', 'door', 'document', 'going', 'placeholder', 'brief', 'somedescription', 'req', 'doorsdocurl', 'reqid', 'reqid', 'going', 'second', 'custom', 'tag', 'void', 'jambo', 'somehow', 'achievable', 'doxygen', 'read', 'one', 'ha', 'put', 'custom', 'tag', 'within', 'alias', 'variable']","['in', 'your', 'doxyfile', 'you', 'would', 'need', 'something', 'like', 'alias', 'doorsdocurl_sw_', 'url', 'to', 'door', 'document', 'req', 'br', 'and', 'the', 'code', 'would', 'look', 'like', 'brief', 'somedescription', 'req', 'doorsdocurl_sw_', 'reqid', 'req', 'doorsdocurl_sw_', 'reqid', 'void', 'jambo', 'the', 'req', 'command', 'can', 'of', 'course', 'be', 'extended', 'with', 'other', 'command', 'in', 'this', 'respect', 'the', 'command', 'xrefitem', 'might', 'be', 'useful', 'see', 'the', 'manual', 'http', 'www', 'doxygen', 'nl', 'manual', 'command', 'html', 'cmdxrefitem']",System Requirements and AWS,3,"{'neg': 0.0, 'neu': 0.86, 'pos': 0.14, 'compound': 0.9092}",-0.01,3,Python Package Installation and Management,3query
54687228,DOORS creates Object ID while they are not saved,"<p>I am adding some 2000 new objects to a DOORS module, I do this by importing a spread sheet with blank IDs, DOORS is supposed to create IDs for those blank rows.
Now the problem is, while i import spreadsheet, DOORS hangs, then when i Kill DOORS process, it anyhow creates IDs, next time when i add a new object, ID number starts from those which are already created but no exist. For some reason i need to continue from my last saved ID. Is there any way I can do this? </p>
",<requirements><configuration-management><ibm-doors>,2019-02-14 09:37:54,398,0,1,54688876,"<p>several remarks here:</p>

<ul>
<li>works as designed. As soon as an object is created in any DOORS session, the new absolute number is centrally marked as ""used"". I think the main reason for this feature is the possibility to work in shared mode. If there were a different design, you would get into trouble as soon as two developers work on the module at the same time.</li>
<li>are you sure that DOORS really hangs? Perhaps it is just not yet finished, at least you can see that the objects are really created. Note that depending on how the script is written that you use for import, the number of imports per second might decrease significantly for bigger files</li>
<li>You should NEVER give any meaning to the absolute number other than uniqueness (perhaps QSS should have used timestamps or UUIDS instead of integers for their absolute numbers when they designed DOORS, this would make the situation clearer). You will have to rework “some reasons” . Perhaps you use a different mechanism to assign your own ID mechanism or you have to evaluate whether the requirement “generate consecutive numbers without gaps” is really necessary.</li>
</ul>
",2019-02,i am adding some   new objects to a doors module i do this by importing a spread sheet with blank ids doors is supposed to create ids for those blank rows now the problem is while i import spreadsheet doors hangs then when i kill doors process it anyhow creates ids next time when i add a new object id number starts from those which are already created but no exist for some reason i need to continue from my last saved id is there any way i can do this,several remarks here works as designed as soon as an object is created in any doors session the new absolute number is centrally marked as used i think the main reason for this feature is the possibility to work in shared mode if there were a different design you would get into trouble as soon as two developers work on the module at the same time are you sure that doors really hangs perhaps it is just not yet finished at least you can see that the objects are really created note that depending on how the script is written that you use for import the number of imports per second might decrease significantly for bigger files you should never give any meaning to the absolute number other than uniqueness perhaps qss should have used timestamps or uuids instead of integers for their absolute numbers when they designed doors this would make the situation clearer you will have to rework some reasons perhaps you use a different mechanism to assign your own id mechanism or you have to evaluate whether the requirement generate consecutive numbers without gaps is really necessary,"['requirements', 'configuration-management', 'ibm-doors']","['i', 'am', 'adding', 'some', 'new', 'objects', 'to', 'a', 'doors', 'module', 'i', 'do', 'this', 'by', 'importing', 'a', 'spread', 'sheet', 'with', 'blank', 'ids', 'doors', 'is', 'supposed', 'to', 'create', 'ids', 'for', 'those', 'blank', 'rows', 'now', 'the', 'problem', 'is', 'while', 'i', 'import', 'spreadsheet', 'doors', 'hangs', 'then', 'when', 'i', 'kill', 'doors', 'process', 'it', 'anyhow', 'creates', 'ids', 'next', 'time', 'when', 'i', 'add', 'a', 'new', 'object', 'id', 'number', 'starts', 'from', 'those', 'which', 'are', 'already', 'created', 'but', 'no', 'exist', 'for', 'some', 'reason', 'i', 'need', 'to', 'continue', 'from', 'my', 'last', 'saved', 'id', 'is', 'there', 'any', 'way', 'i', 'can', 'do', 'this']","['several', 'remarks', 'here', 'works', 'as', 'designed', 'as', 'soon', 'as', 'an', 'object', 'is', 'created', 'in', 'any', 'doors', 'session', 'the', 'new', 'absolute', 'number', 'is', 'centrally', 'marked', 'as', 'used', 'i', 'think', 'the', 'main', 'reason', 'for', 'this', 'feature', 'is', 'the', 'possibility', 'to', 'work', 'in', 'shared', 'mode', 'if', 'there', 'were', 'a', 'different', 'design', 'you', 'would', 'get', 'into', 'trouble', 'as', 'soon', 'as', 'two', 'developers', 'work', 'on', 'the', 'module', 'at', 'the', 'same', 'time', 'are', 'you', 'sure', 'that', 'doors', 'really', 'hangs', 'perhaps', 'it', 'is', 'just', 'not', 'yet', 'finished', 'at', 'least', 'you', 'can', 'see', 'that', 'the', 'objects', 'are', 'really', 'created', 'note', 'that', 'depending', 'on', 'how', 'the', 'script', 'is', 'written', 'that', 'you', 'use', 'for', 'import', 'the', 'number', 'of', 'imports', 'per', 'second', 'might', 'decrease', 'significantly', 'for', 'bigger', 'files', 'you', 'should', 'never', 'give', 'any', 'meaning', 'to', 'the', 'absolute', 'number', 'other', 'than', 'uniqueness', 'perhaps', 'qss', 'should', 'have', 'used', 'timestamps', 'or', 'uuids', 'instead', 'of', 'integers', 'for', 'their', 'absolute', 'numbers', 'when', 'they', 'designed', 'doors', 'this', 'would', 'make', 'the', 'situation', 'clearer', 'you', 'will', 'have', 'to', 'rework', 'some', 'reasons', 'perhaps', 'you', 'use', 'a', 'different', 'mechanism', 'to', 'assign', 'your', 'own', 'id', 'mechanism', 'or', 'you', 'have', 'to', 'evaluate', 'whether', 'the', 'requirement', 'generate', 'consecutive', 'numbers', 'without', 'gaps', 'is', 'really', 'necessary']","['adding', 'new', 'object', 'door', 'module', 'importing', 'spread', 'sheet', 'blank', 'id', 'door', 'supposed', 'create', 'id', 'blank', 'row', 'problem', 'import', 'spreadsheet', 'door', 'hang', 'kill', 'door', 'process', 'anyhow', 'creates', 'id', 'next', 'time', 'add', 'new', 'object', 'id', 'number', 'start', 'already', 'created', 'exist', 'reason', 'need', 'continue', 'last', 'saved', 'id', 'way']","['several', 'remark', 'here', 'work', 'a', 'designed', 'a', 'soon', 'a', 'an', 'object', 'is', 'created', 'in', 'any', 'door', 'session', 'the', 'new', 'absolute', 'number', 'is', 'centrally', 'marked', 'a', 'used', 'i', 'think', 'the', 'main', 'reason', 'for', 'this', 'feature', 'is', 'the', 'possibility', 'to', 'work', 'in', 'shared', 'mode', 'if', 'there', 'were', 'a', 'different', 'design', 'you', 'would', 'get', 'into', 'trouble', 'a', 'soon', 'a', 'two', 'developer', 'work', 'on', 'the', 'module', 'at', 'the', 'same', 'time', 'are', 'you', 'sure', 'that', 'door', 'really', 'hang', 'perhaps', 'it', 'is', 'just', 'not', 'yet', 'finished', 'at', 'least', 'you', 'can', 'see', 'that', 'the', 'object', 'are', 'really', 'created', 'note', 'that', 'depending', 'on', 'how', 'the', 'script', 'is', 'written', 'that', 'you', 'use', 'for', 'import', 'the', 'number', 'of', 'import', 'per', 'second', 'might', 'decrease', 'significantly', 'for', 'bigger', 'file', 'you', 'should', 'never', 'give', 'any', 'meaning', 'to', 'the', 'absolute', 'number', 'other', 'than', 'uniqueness', 'perhaps', 'q', 'should', 'have', 'used', 'timestamps', 'or', 'uuids', 'instead', 'of', 'integer', 'for', 'their', 'absolute', 'number', 'when', 'they', 'designed', 'door', 'this', 'would', 'make', 'the', 'situation', 'clearer', 'you', 'will', 'have', 'to', 'rework', 'some', 'reason', 'perhaps', 'you', 'use', 'a', 'different', 'mechanism', 'to', 'assign', 'your', 'own', 'id', 'mechanism', 'or', 'you', 'have', 'to', 'evaluate', 'whether', 'the', 'requirement', 'generate', 'consecutive', 'number', 'without', 'gap', 'is', 'really', 'necessary']",System Requirements and AWS,3,"{'neg': 0.081, 'neu': 0.818, 'pos': 0.102, 'compound': -0.0129}",0.04545454545454545,3,Python Package Installation and Management,3query
54668439,When shall I create UML diagrams when developing software?,"<p>I am currently working on a new software and I am not sure how to go on.</p>

<p>I already started coding before having a good plan.</p>

<p>My opinion was to start with below sequence</p>

<ol>
<li><p>Create User Stories</p></li>
<li><p>Create BMSC &amp; Hsmc</p></li>
<li><p>Code the required features</p></li>
<li><p>Test</p></li>
<li><p>Refactor &amp; solve bugs</p></li>
</ol>

<p>Now I want to know where do I put the UML Diagram, before coding or after coding?</p>
",<uml><software-design><requirements>,2019-02-13 10:51:47,82,-3,2,54668476,"<p>UML is the ""graphical"" design of a project. Before you start coding, you should have all UML's done and <strong>checked</strong> so as programming the project later will be faster, easier and with less errors (as the UML will be <strong>CHECKED</strong> to ensure that). </p>

<p>Do not rush making the UML, as it will be the ""core"" before the actual coding core. </p>
",2019-02,i am currently working on a new software and i am not sure how to go on i already started coding before having a good plan my opinion was to start with below sequence create user stories create bmsc hsmc code the required features test refactor solve bugs now i want to know where do i put the uml diagram before coding or after coding,uml is the graphical design of a project before you start coding you should have all uml s done and checked so as programming the project later will be faster easier and with less errors as the uml will be checked to ensure that do not rush making the uml as it will be the core before the actual coding core,"['uml', 'software-design', 'requirements']","['i', 'am', 'currently', 'working', 'on', 'a', 'new', 'software', 'and', 'i', 'am', 'not', 'sure', 'how', 'to', 'go', 'on', 'i', 'already', 'started', 'coding', 'before', 'having', 'a', 'good', 'plan', 'my', 'opinion', 'was', 'to', 'start', 'with', 'below', 'sequence', 'create', 'user', 'stories', 'create', 'bmsc', 'hsmc', 'code', 'the', 'required', 'features', 'test', 'refactor', 'solve', 'bugs', 'now', 'i', 'want', 'to', 'know', 'where', 'do', 'i', 'put', 'the', 'uml', 'diagram', 'before', 'coding', 'or', 'after', 'coding']","['uml', 'is', 'the', 'graphical', 'design', 'of', 'a', 'project', 'before', 'you', 'start', 'coding', 'you', 'should', 'have', 'all', 'uml', 's', 'done', 'and', 'checked', 'so', 'as', 'programming', 'the', 'project', 'later', 'will', 'be', 'faster', 'easier', 'and', 'with', 'less', 'errors', 'as', 'the', 'uml', 'will', 'be', 'checked', 'to', 'ensure', 'that', 'do', 'not', 'rush', 'making', 'the', 'uml', 'as', 'it', 'will', 'be', 'the', 'core', 'before', 'the', 'actual', 'coding', 'core']","['currently', 'working', 'new', 'software', 'sure', 'go', 'already', 'started', 'coding', 'good', 'plan', 'opinion', 'wa', 'start', 'sequence', 'create', 'user', 'story', 'create', 'bmsc', 'hsmc', 'code', 'required', 'feature', 'test', 'refactor', 'solve', 'bug', 'want', 'know', 'put', 'uml', 'diagram', 'coding', 'coding']","['uml', 'is', 'the', 'graphical', 'design', 'of', 'a', 'project', 'before', 'you', 'start', 'coding', 'you', 'should', 'have', 'all', 'uml', 's', 'done', 'and', 'checked', 'so', 'a', 'programming', 'the', 'project', 'later', 'will', 'be', 'faster', 'easier', 'and', 'with', 'le', 'error', 'a', 'the', 'uml', 'will', 'be', 'checked', 'to', 'ensure', 'that', 'do', 'not', 'rush', 'making', 'the', 'uml', 'a', 'it', 'will', 'be', 'the', 'core', 'before', 'the', 'actual', 'coding', 'core']",System Requirements and AWS,0,"{'neg': 0.029, 'neu': 0.883, 'pos': 0.088, 'compound': 0.4657}",0.14659090909090908,0,System Requirements and AWS,3query
54668439,When shall I create UML diagrams when developing software?,"<p>I am currently working on a new software and I am not sure how to go on.</p>

<p>I already started coding before having a good plan.</p>

<p>My opinion was to start with below sequence</p>

<ol>
<li><p>Create User Stories</p></li>
<li><p>Create BMSC &amp; Hsmc</p></li>
<li><p>Code the required features</p></li>
<li><p>Test</p></li>
<li><p>Refactor &amp; solve bugs</p></li>
</ol>

<p>Now I want to know where do I put the UML Diagram, before coding or after coding?</p>
",<uml><software-design><requirements>,2019-02-13 10:51:47,82,-3,2,54668580,"<p>To be honest, there can not be a ultimate answer here.</p>

<p>There are various process models and you have to find one that suits your needs and your project. </p>

<p><strong>Test driven development</strong> for example puts tests in front of writing the actual code.</p>

<p>My point is, if you feel like <strong>UML</strong> gives you confidence - go do it.
But if you feel like a minimal working example gives you more insights - write some code first and come back to uml later.</p>
",2019-02,i am currently working on a new software and i am not sure how to go on i already started coding before having a good plan my opinion was to start with below sequence create user stories create bmsc hsmc code the required features test refactor solve bugs now i want to know where do i put the uml diagram before coding or after coding,to be honest there can not be a ultimate answer here there are various process models and you have to find one that suits your needs and your project test driven development for example puts tests in front of writing the actual code my point is if you feel like uml gives you confidence go do it but if you feel like a minimal working example gives you more insights write some code first and come back to uml later,"['uml', 'software-design', 'requirements']","['i', 'am', 'currently', 'working', 'on', 'a', 'new', 'software', 'and', 'i', 'am', 'not', 'sure', 'how', 'to', 'go', 'on', 'i', 'already', 'started', 'coding', 'before', 'having', 'a', 'good', 'plan', 'my', 'opinion', 'was', 'to', 'start', 'with', 'below', 'sequence', 'create', 'user', 'stories', 'create', 'bmsc', 'hsmc', 'code', 'the', 'required', 'features', 'test', 'refactor', 'solve', 'bugs', 'now', 'i', 'want', 'to', 'know', 'where', 'do', 'i', 'put', 'the', 'uml', 'diagram', 'before', 'coding', 'or', 'after', 'coding']","['to', 'be', 'honest', 'there', 'can', 'not', 'be', 'a', 'ultimate', 'answer', 'here', 'there', 'are', 'various', 'process', 'models', 'and', 'you', 'have', 'to', 'find', 'one', 'that', 'suits', 'your', 'needs', 'and', 'your', 'project', 'test', 'driven', 'development', 'for', 'example', 'puts', 'tests', 'in', 'front', 'of', 'writing', 'the', 'actual', 'code', 'my', 'point', 'is', 'if', 'you', 'feel', 'like', 'uml', 'gives', 'you', 'confidence', 'go', 'do', 'it', 'but', 'if', 'you', 'feel', 'like', 'a', 'minimal', 'working', 'example', 'gives', 'you', 'more', 'insights', 'write', 'some', 'code', 'first', 'and', 'come', 'back', 'to', 'uml', 'later']","['currently', 'working', 'new', 'software', 'sure', 'go', 'already', 'started', 'coding', 'good', 'plan', 'opinion', 'wa', 'start', 'sequence', 'create', 'user', 'story', 'create', 'bmsc', 'hsmc', 'code', 'required', 'feature', 'test', 'refactor', 'solve', 'bug', 'want', 'know', 'put', 'uml', 'diagram', 'coding', 'coding']","['to', 'be', 'honest', 'there', 'can', 'not', 'be', 'a', 'ultimate', 'answer', 'here', 'there', 'are', 'various', 'process', 'model', 'and', 'you', 'have', 'to', 'find', 'one', 'that', 'suit', 'your', 'need', 'and', 'your', 'project', 'test', 'driven', 'development', 'for', 'example', 'put', 'test', 'in', 'front', 'of', 'writing', 'the', 'actual', 'code', 'my', 'point', 'is', 'if', 'you', 'feel', 'like', 'uml', 'give', 'you', 'confidence', 'go', 'do', 'it', 'but', 'if', 'you', 'feel', 'like', 'a', 'minimal', 'working', 'example', 'give', 'you', 'more', 'insight', 'write', 'some', 'code', 'first', 'and', 'come', 'back', 'to', 'uml', 'later']",System Requirements and AWS,0,"{'neg': 0.029, 'neu': 0.883, 'pos': 0.088, 'compound': 0.4657}",0.14659090909090908,0,System Requirements and AWS,3query
54234482,Startup Services AddAuthorization AddPolicy: EmptyRequirement,"<p>I'm little bit new in web development. I have an RestController which has many method e.g. (Get, GetById, Create, Update). I use Authorize Attribute, which used with Policy. This policy depend on a bool variable. You can see at below. </p>

<p>Now I use this workaround but I search more nice solution. </p>

<pre><code>services.AddAuthorization(o =&gt;
    {
        o.AddPolicy(""UserRoleCheck"", p =&gt;
        {
            if (C.RequiredAuth)
            {
                p.RequireAuthenticatedUser();
                p.AssertRole(Roles.User);
            }
            else
            {
                p.AddRequirements(new EmptyRequirement()); // Here I don't want to else branch
            }

        });
    });  

public class EmptyRequirement : AuthorizationHandler&lt;EmptyRequirement&gt;, IAuthorizationRequirement
{
    protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, EmptyRequirement requirement)
    {
        context.Succeed(requirement);
        return Task.CompletedTask;
    }
}
</code></pre>

<p>It's work, but can You offer me more beautiful solution?</p>
",<c#><asp.net-core><policy><requirements><authorize-attribute>,2019-01-17 11:02:02,255,0,1,54338610,"<p>For your current design, it is caused by that <code>Policy</code> must contains at least one requirement.   </p>

<p>Not sure what is the defination for <code>C</code>, I suggest you implement <code>UserRoleCheckRequirement</code> and move the <code>C</code> to <code>UserRoleCheckRequirement</code> to return <code>context.Succeed(requirement);</code>. And then check <code>AuthenticatedUser</code> and other authorization logic in <code>HandleRequirementAsync</code>.</p>
",2019-01,i m little bit new in web development i have an restcontroller which has many method e g get getbyid create update i use authorize attribute which used with policy this policy depend on a bool variable you can see at below now i use this workaround but i search more nice solution services addauthorization o o addpolicy userrolecheck p if c requiredauth p requireauthenticateduser p assertrole roles user else p addrequirements new emptyrequirement here i don t want to else branch public class emptyrequirement authorizationhandler emptyrequirement iauthorizationrequirement protected override task handlerequirementasync authorizationhandlercontext context emptyrequirement requirement context succeed requirement return task completedtask it s work but can you offer me more beautiful solution,for your current design it is caused by that policy must contains at least one requirement not sure what is the defination for c i suggest you implement userrolecheckrequirement and move the c to userrolecheckrequirement to return context succeed requirement and then check authenticateduser and other authorization logic in handlerequirementasync,"['c#', 'asp.net-core', 'policy', 'requirements', 'authorize-attribute']","['i', 'm', 'little', 'bit', 'new', 'in', 'web', 'development', 'i', 'have', 'an', 'restcontroller', 'which', 'has', 'many', 'method', 'e', 'g', 'get', 'getbyid', 'create', 'update', 'i', 'use', 'authorize', 'attribute', 'which', 'used', 'with', 'policy', 'this', 'policy', 'depend', 'on', 'a', 'bool', 'variable', 'you', 'can', 'see', 'at', 'below', 'now', 'i', 'use', 'this', 'workaround', 'but', 'i', 'search', 'more', 'nice', 'solution', 'services', 'addauthorization', 'o', 'o', 'addpolicy', 'userrolecheck', 'p', 'if', 'c', 'requiredauth', 'p', 'requireauthenticateduser', 'p', 'assertrole', 'roles', 'user', 'else', 'p', 'addrequirements', 'new', 'emptyrequirement', 'here', 'i', 'don', 't', 'want', 'to', 'else', 'branch', 'public', 'class', 'emptyrequirement', 'authorizationhandler', 'emptyrequirement', 'iauthorizationrequirement', 'protected', 'override', 'task', 'handlerequirementasync', 'authorizationhandlercontext', 'context', 'emptyrequirement', 'requirement', 'context', 'succeed', 'requirement', 'return', 'task', 'completedtask', 'it', 's', 'work', 'but', 'can', 'you', 'offer', 'me', 'more', 'beautiful', 'solution']","['for', 'your', 'current', 'design', 'it', 'is', 'caused', 'by', 'that', 'policy', 'must', 'contains', 'at', 'least', 'one', 'requirement', 'not', 'sure', 'what', 'is', 'the', 'defination', 'for', 'c', 'i', 'suggest', 'you', 'implement', 'userrolecheckrequirement', 'and', 'move', 'the', 'c', 'to', 'userrolecheckrequirement', 'to', 'return', 'context', 'succeed', 'requirement', 'and', 'then', 'check', 'authenticateduser', 'and', 'other', 'authorization', 'logic', 'in', 'handlerequirementasync']","['little', 'bit', 'new', 'web', 'development', 'restcontroller', 'ha', 'many', 'method', 'e', 'g', 'get', 'getbyid', 'create', 'update', 'use', 'authorize', 'attribute', 'used', 'policy', 'policy', 'depend', 'bool', 'variable', 'see', 'use', 'workaround', 'search', 'nice', 'solution', 'service', 'addauthorization', 'addpolicy', 'userrolecheck', 'p', 'c', 'requiredauth', 'p', 'requireauthenticateduser', 'p', 'assertrole', 'role', 'user', 'else', 'p', 'addrequirements', 'new', 'emptyrequirement', 'want', 'else', 'branch', 'public', 'class', 'emptyrequirement', 'authorizationhandler', 'emptyrequirement', 'iauthorizationrequirement', 'protected', 'override', 'task', 'handlerequirementasync', 'authorizationhandlercontext', 'context', 'emptyrequirement', 'requirement', 'context', 'succeed', 'requirement', 'return', 'task', 'completedtask', 'work', 'offer', 'beautiful', 'solution']","['for', 'your', 'current', 'design', 'it', 'is', 'caused', 'by', 'that', 'policy', 'must', 'contains', 'at', 'least', 'one', 'requirement', 'not', 'sure', 'what', 'is', 'the', 'defination', 'for', 'c', 'i', 'suggest', 'you', 'implement', 'userrolecheckrequirement', 'and', 'move', 'the', 'c', 'to', 'userrolecheckrequirement', 'to', 'return', 'context', 'succeed', 'requirement', 'and', 'then', 'check', 'authenticateduser', 'and', 'other', 'authorization', 'logic', 'in', 'handlerequirementasync']",System Requirements and AWS,2,"{'neg': 0.012, 'neu': 0.815, 'pos': 0.173, 'compound': 0.9605}",0.36235795454545455,2,Python Libraries and Environment,3query
53581142,Correct classification of client requirements for UML diagrams?,"<p>I needed to classify the following RQs as a </p>

<ul>
<li>Design objective, </li>
<li>Design Decisions, </li>
<li>Functional Req, </li>
<li>Non-Functional Req</li>
</ul>

<p>(so I can do class diagram and use case diagram based on them later).</p>

<p>I wanted to know if I'm on the right track here (the bold face is my guess for each requirement):</p>

<p><strong>Requirement document</strong>
 Purchase Commitment System.</p>

<ol>
<li><p>The software is to calculate a number of details needed to purchase by a factory in order to produce its products. <strong>(Design decision)</strong></p></li>
<li><p>The software must be written in C++ or Java Programming Languages on the computer IBM PC. <strong>(Design decision)</strong></p></li>
<li><p>The number of products should be equal to 4. <strong>(Non-Functional Req)</strong></p></li>
<li><p>A general aim in the design of the software is to improve the portability of software. <strong>(Non-Functional Req)</strong></p></li>
<li><p>The system should accept as input (make as a text file) the data about a number, amount and price of detail for every type of products. <strong>(Functional Req)</strong></p></li>
<li><p>A number of details for every type of products should not be less than 5.</p></li>
<li><p>The first and second type of products should have 2 same details. The second and fourth type of products should have one same detail. The third type of products should have 2 same details with the fourth type and one same detail with the first type of products. <strong>(Design Objective)</strong></p></li>
<li><p>The operator should be logged in and logged out to the system by login and password. <strong>(Design Objective)</strong></p></li>
<li><p>At the beginning an operator must provide the following items of data (a validation of input data should be provided):</p>

<ul>
<li>A number of every type of products to be produced by the factory for 3 months ahead.   <strong>(Functional Req)</strong></li>
</ul></li>
<li><p>The software must produce for each action of an operator a report (the report should be saved in a file by the operator's request). The report must consist of :    <strong>(Functional or Design Objective Req)</strong> 
-A number of every detail needed to purchase.</p>

<ul>
<li>The total price for every detail.</li>
<li>The total price for all the details</li>
</ul></li>
</ol>
",<classification><requirements>,2018-12-02 14:22:08,130,1,2,53588604,"<p>I remember long discussions in the past about RQs whether a specific one were Non-F or F. However, <a href=""https://en.wikipedia.org/wiki/Functional_requirement"" rel=""nofollow noreferrer"">Wikipedia</a> has a simple definition.</p>

<blockquote>
  <p>As defined in requirements engineering, functional requirements specify particular results of a system.</p>
</blockquote>

<p>So your classification does not look bad. Though, I wonder what your first two classifications should be. Looks a bit like <a href=""https://en.wikipedia.org/wiki/MoSCoW_method"" rel=""nofollow noreferrer"">MoSCoW</a>, but then again it does not. Design decisions (at least to me) are nothing to be found in requirements. They are, what the name suggests, decisions coming from a design process. Further a design objective is a sub-category of NF. Even more important is the fact that your NFs are not classified. There should be at least a handful of sub-classes (legal, performance, etc.). See <a href=""https://en.wikipedia.org/wiki/Non-functional_requirement"" rel=""nofollow noreferrer"">Wikipedia</a> for a rather complete list.</p>
",2018-12,i needed to classify the following rqs as a design objective design decisions functional req non functional req so i can do class diagram and use case diagram based on them later i wanted to know if i m on the right track here the bold face is my guess for each requirement requirement document purchase commitment system the software is to calculate a number of details needed to purchase by a factory in order to produce its products design decision the software must be written in c or java programming languages on the computer ibm pc design decision the number of products should be equal to   non functional req a general aim in the design of the software is to improve the portability of software non functional req the system should accept as input make as a text file the data about a number amount and price of detail for every type of products functional req a number of details for every type of products should not be less than   the first and second type of products should have   same details the second and fourth type of products should have one same detail the third type of products should have   same details with the fourth type and one same detail with the first type of products design objective the operator should be logged in and logged out to the system by login and password design objective at the beginning an operator must provide the following items of data a validation of input data should be provided a number of every type of products to be produced by the factory for   months ahead functional req the software must produce for each action of an operator a report the report should be saved in a file by the operator s request the report must consist of functional or design objective req a number of every detail needed to purchase the total price for every detail the total price for all the details,i remember long discussions in the past about rqs whether a specific one were non f or f however wikipedia has a simple definition as defined in requirements engineering functional requirements specify particular results of a system so your classification does not look bad though i wonder what your first two classifications should be looks a bit like moscow but then again it does not design decisions at least to me are nothing to be found in requirements they are what the name suggests decisions coming from a design process further a design objective is a sub category of nf even more important is the fact that your nfs are not classified there should be at least a handful of sub classes legal performance etc see wikipedia for a rather complete list,"['classification', 'requirements']","['i', 'needed', 'to', 'classify', 'the', 'following', 'rqs', 'as', 'a', 'design', 'objective', 'design', 'decisions', 'functional', 'req', 'non', 'functional', 'req', 'so', 'i', 'can', 'do', 'class', 'diagram', 'and', 'use', 'case', 'diagram', 'based', 'on', 'them', 'later', 'i', 'wanted', 'to', 'know', 'if', 'i', 'm', 'on', 'the', 'right', 'track', 'here', 'the', 'bold', 'face', 'is', 'my', 'guess', 'for', 'each', 'requirement', 'requirement', 'document', 'purchase', 'commitment', 'system', 'the', 'software', 'is', 'to', 'calculate', 'a', 'number', 'of', 'details', 'needed', 'to', 'purchase', 'by', 'a', 'factory', 'in', 'order', 'to', 'produce', 'its', 'products', 'design', 'decision', 'the', 'software', 'must', 'be', 'written', 'in', 'c', 'or', 'java', 'programming', 'languages', 'on', 'the', 'computer', 'ibm', 'pc', 'design', 'decision', 'the', 'number', 'of', 'products', 'should', 'be', 'equal', 'to', 'non', 'functional', 'req', 'a', 'general', 'aim', 'in', 'the', 'design', 'of', 'the', 'software', 'is', 'to', 'improve', 'the', 'portability', 'of', 'software', 'non', 'functional', 'req', 'the', 'system', 'should', 'accept', 'as', 'input', 'make', 'as', 'a', 'text', 'file', 'the', 'data', 'about', 'a', 'number', 'amount', 'and', 'price', 'of', 'detail', 'for', 'every', 'type', 'of', 'products', 'functional', 'req', 'a', 'number', 'of', 'details', 'for', 'every', 'type', 'of', 'products', 'should', 'not', 'be', 'less', 'than', 'the', 'first', 'and', 'second', 'type', 'of', 'products', 'should', 'have', 'same', 'details', 'the', 'second', 'and', 'fourth', 'type', 'of', 'products', 'should', 'have', 'one', 'same', 'detail', 'the', 'third', 'type', 'of', 'products', 'should', 'have', 'same', 'details', 'with', 'the', 'fourth', 'type', 'and', 'one', 'same', 'detail', 'with', 'the', 'first', 'type', 'of', 'products', 'design', 'objective', 'the', 'operator', 'should', 'be', 'logged', 'in', 'and', 'logged', 'out', 'to', 'the', 'system', 'by', 'login', 'and', 'password', 'design', 'objective', 'at', 'the', 'beginning', 'an', 'operator', 'must', 'provide', 'the', 'following', 'items', 'of', 'data', 'a', 'validation', 'of', 'input', 'data', 'should', 'be', 'provided', 'a', 'number', 'of', 'every', 'type', 'of', 'products', 'to', 'be', 'produced', 'by', 'the', 'factory', 'for', 'months', 'ahead', 'functional', 'req', 'the', 'software', 'must', 'produce', 'for', 'each', 'action', 'of', 'an', 'operator', 'a', 'report', 'the', 'report', 'should', 'be', 'saved', 'in', 'a', 'file', 'by', 'the', 'operator', 's', 'request', 'the', 'report', 'must', 'consist', 'of', 'functional', 'or', 'design', 'objective', 'req', 'a', 'number', 'of', 'every', 'detail', 'needed', 'to', 'purchase', 'the', 'total', 'price', 'for', 'every', 'detail', 'the', 'total', 'price', 'for', 'all', 'the', 'details']","['i', 'remember', 'long', 'discussions', 'in', 'the', 'past', 'about', 'rqs', 'whether', 'a', 'specific', 'one', 'were', 'non', 'f', 'or', 'f', 'however', 'wikipedia', 'has', 'a', 'simple', 'definition', 'as', 'defined', 'in', 'requirements', 'engineering', 'functional', 'requirements', 'specify', 'particular', 'results', 'of', 'a', 'system', 'so', 'your', 'classification', 'does', 'not', 'look', 'bad', 'though', 'i', 'wonder', 'what', 'your', 'first', 'two', 'classifications', 'should', 'be', 'looks', 'a', 'bit', 'like', 'moscow', 'but', 'then', 'again', 'it', 'does', 'not', 'design', 'decisions', 'at', 'least', 'to', 'me', 'are', 'nothing', 'to', 'be', 'found', 'in', 'requirements', 'they', 'are', 'what', 'the', 'name', 'suggests', 'decisions', 'coming', 'from', 'a', 'design', 'process', 'further', 'a', 'design', 'objective', 'is', 'a', 'sub', 'category', 'of', 'nf', 'even', 'more', 'important', 'is', 'the', 'fact', 'that', 'your', 'nfs', 'are', 'not', 'classified', 'there', 'should', 'be', 'at', 'least', 'a', 'handful', 'of', 'sub', 'classes', 'legal', 'performance', 'etc', 'see', 'wikipedia', 'for', 'a', 'rather', 'complete', 'list']","['needed', 'classify', 'following', 'rqs', 'design', 'objective', 'design', 'decision', 'functional', 'req', 'non', 'functional', 'req', 'class', 'diagram', 'use', 'case', 'diagram', 'based', 'later', 'wanted', 'know', 'right', 'track', 'bold', 'face', 'guess', 'requirement', 'requirement', 'document', 'purchase', 'commitment', 'system', 'software', 'calculate', 'number', 'detail', 'needed', 'purchase', 'factory', 'order', 'produce', 'product', 'design', 'decision', 'software', 'must', 'written', 'c', 'java', 'programming', 'language', 'computer', 'ibm', 'pc', 'design', 'decision', 'number', 'product', 'equal', 'non', 'functional', 'req', 'general', 'aim', 'design', 'software', 'improve', 'portability', 'software', 'non', 'functional', 'req', 'system', 'accept', 'input', 'make', 'text', 'file', 'data', 'number', 'amount', 'price', 'detail', 'every', 'type', 'product', 'functional', 'req', 'number', 'detail', 'every', 'type', 'product', 'le', 'first', 'second', 'type', 'product', 'detail', 'second', 'fourth', 'type', 'product', 'one', 'detail', 'third', 'type', 'product', 'detail', 'fourth', 'type', 'one', 'detail', 'first', 'type', 'product', 'design', 'objective', 'operator', 'logged', 'logged', 'system', 'login', 'password', 'design', 'objective', 'beginning', 'operator', 'must', 'provide', 'following', 'item', 'data', 'validation', 'input', 'data', 'provided', 'number', 'every', 'type', 'product', 'produced', 'factory', 'month', 'ahead', 'functional', 'req', 'software', 'must', 'produce', 'action', 'operator', 'report', 'report', 'saved', 'file', 'operator', 'request', 'report', 'must', 'consist', 'functional', 'design', 'objective', 'req', 'number', 'every', 'detail', 'needed', 'purchase', 'total', 'price', 'every', 'detail', 'total', 'price', 'detail']","['i', 'remember', 'long', 'discussion', 'in', 'the', 'past', 'about', 'rqs', 'whether', 'a', 'specific', 'one', 'were', 'non', 'f', 'or', 'f', 'however', 'wikipedia', 'ha', 'a', 'simple', 'definition', 'a', 'defined', 'in', 'requirement', 'engineering', 'functional', 'requirement', 'specify', 'particular', 'result', 'of', 'a', 'system', 'so', 'your', 'classification', 'doe', 'not', 'look', 'bad', 'though', 'i', 'wonder', 'what', 'your', 'first', 'two', 'classification', 'should', 'be', 'look', 'a', 'bit', 'like', 'moscow', 'but', 'then', 'again', 'it', 'doe', 'not', 'design', 'decision', 'at', 'least', 'to', 'me', 'are', 'nothing', 'to', 'be', 'found', 'in', 'requirement', 'they', 'are', 'what', 'the', 'name', 'suggests', 'decision', 'coming', 'from', 'a', 'design', 'process', 'further', 'a', 'design', 'objective', 'is', 'a', 'sub', 'category', 'of', 'nf', 'even', 'more', 'important', 'is', 'the', 'fact', 'that', 'your', 'nfs', 'are', 'not', 'classified', 'there', 'should', 'be', 'at', 'least', 'a', 'handful', 'of', 'sub', 'class', 'legal', 'performance', 'etc', 'see', 'wikipedia', 'for', 'a', 'rather', 'complete', 'list']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 0.938, 'pos': 0.062, 'compound': 0.936}",0.0479296066252588,0,System Requirements and AWS,3query
53581142,Correct classification of client requirements for UML diagrams?,"<p>I needed to classify the following RQs as a </p>

<ul>
<li>Design objective, </li>
<li>Design Decisions, </li>
<li>Functional Req, </li>
<li>Non-Functional Req</li>
</ul>

<p>(so I can do class diagram and use case diagram based on them later).</p>

<p>I wanted to know if I'm on the right track here (the bold face is my guess for each requirement):</p>

<p><strong>Requirement document</strong>
 Purchase Commitment System.</p>

<ol>
<li><p>The software is to calculate a number of details needed to purchase by a factory in order to produce its products. <strong>(Design decision)</strong></p></li>
<li><p>The software must be written in C++ or Java Programming Languages on the computer IBM PC. <strong>(Design decision)</strong></p></li>
<li><p>The number of products should be equal to 4. <strong>(Non-Functional Req)</strong></p></li>
<li><p>A general aim in the design of the software is to improve the portability of software. <strong>(Non-Functional Req)</strong></p></li>
<li><p>The system should accept as input (make as a text file) the data about a number, amount and price of detail for every type of products. <strong>(Functional Req)</strong></p></li>
<li><p>A number of details for every type of products should not be less than 5.</p></li>
<li><p>The first and second type of products should have 2 same details. The second and fourth type of products should have one same detail. The third type of products should have 2 same details with the fourth type and one same detail with the first type of products. <strong>(Design Objective)</strong></p></li>
<li><p>The operator should be logged in and logged out to the system by login and password. <strong>(Design Objective)</strong></p></li>
<li><p>At the beginning an operator must provide the following items of data (a validation of input data should be provided):</p>

<ul>
<li>A number of every type of products to be produced by the factory for 3 months ahead.   <strong>(Functional Req)</strong></li>
</ul></li>
<li><p>The software must produce for each action of an operator a report (the report should be saved in a file by the operator's request). The report must consist of :    <strong>(Functional or Design Objective Req)</strong> 
-A number of every detail needed to purchase.</p>

<ul>
<li>The total price for every detail.</li>
<li>The total price for all the details</li>
</ul></li>
</ol>
",<classification><requirements>,2018-12-02 14:22:08,130,1,2,53641757,"<p>A <a href=""https://en.wikipedia.org/wiki/Functional_requirement"" rel=""nofollow noreferrer"">functional requirement</a> tells <strong>what</strong> the software shall do.  A <a href=""https://en.wikipedia.org/wiki/Non-functional_requirement"" rel=""nofollow noreferrer"">non functional requirement</a> tells something about <strong>how</strong> the software shall be or how well it should do what it does. </p>

<p>Software design is about the <strong>structure and the behavior</strong> of the software.   If some statement seems arbitrary and you think the software could fulfil all the requirements but differently, then there are chances that it's more about design than requirements.  A design objective tells what the design must ensure (ambiguous: at the stage of the requirements, it's difficult to make the difference between non functional requirements and design objective).  A design decision is a decision on the behavior or the structure of the software.     </p>

<p>With this in mind, here an analysis: </p>

<ol>
<li>What the software shall do ==> Functional requirement (FR) <br/> If we'd change this, the software would no longer do what is expected, so it can't be a design decision. </li>
<li>How the software shall be ==> Non functional requirement (NFR) <br/> Not really about structure or behavior of the software. The language will not impact use case nor class model, so it's not really a design decision IMHO.   </li>
<li>Arbitrary decision about cardinality in object model ==> Design decision (DD) </li>
<li>""aim in the design"" ==> Design objective (DO) </li>
<li>What the software shall do ==> FR</li>
<li>Arbitrary constraint about object model ==> DD<br/>If it would be no less than 3 or no less than 10, the software would still fulfil the functional requirements.  However this depends on the context.  If it would turn out that the software would not be fit for purpose if these limits would not be respected, then it could be FR. </li>
<li>Arbitrary constraint on object model ==> DD<br/>The purpose of this statement is unclear.  It looks like some arbitrary constraints that could allow to generalize some categories. </li>
<li>What the software shall do ==> FR  </li>
<li>Arbitrary decision on the interaction ==> DD<br/> I think that the data could be entered at another moment, or in a different way (3 times 1 month).  Therefore I think it is DD.  However, one could argue that the system shall offer a 3 month planning.  So FR cannot be excluded, although I would expect it to be expressed differently.   </li>
<li>What the software shall do ==> FR</li>
</ol>
",2018-12,i needed to classify the following rqs as a design objective design decisions functional req non functional req so i can do class diagram and use case diagram based on them later i wanted to know if i m on the right track here the bold face is my guess for each requirement requirement document purchase commitment system the software is to calculate a number of details needed to purchase by a factory in order to produce its products design decision the software must be written in c or java programming languages on the computer ibm pc design decision the number of products should be equal to   non functional req a general aim in the design of the software is to improve the portability of software non functional req the system should accept as input make as a text file the data about a number amount and price of detail for every type of products functional req a number of details for every type of products should not be less than   the first and second type of products should have   same details the second and fourth type of products should have one same detail the third type of products should have   same details with the fourth type and one same detail with the first type of products design objective the operator should be logged in and logged out to the system by login and password design objective at the beginning an operator must provide the following items of data a validation of input data should be provided a number of every type of products to be produced by the factory for   months ahead functional req the software must produce for each action of an operator a report the report should be saved in a file by the operator s request the report must consist of functional or design objective req a number of every detail needed to purchase the total price for every detail the total price for all the details,a functional requirement tells what the software shall do a non functional requirement tells something about how the software shall be or how well it should do what it does software design is about the structure and the behavior of the software if some statement seems arbitrary and you think the software could fulfil all the requirements but differently then there are chances that it s more about design than requirements a design objective tells what the design must ensure ambiguous at the stage of the requirements it s difficult to make the difference between non functional requirements and design objective a design decision is a decision on the behavior or the structure of the software with this in mind here an analysis what the software shall do functional requirement fr if we d change this the software would no longer do what is expected so it can t be a design decision how the software shall be non functional requirement nfr not really about structure or behavior of the software the language will not impact use case nor class model so it s not really a design decision imho arbitrary decision about cardinality in object model design decision dd aim in the design design objective do what the software shall do fr arbitrary constraint about object model ddif it would be no less than   or no less than   the software would still fulfil the functional requirements however this depends on the context if it would turn out that the software would not be fit for purpose if these limits would not be respected then it could be fr arbitrary constraint on object model ddthe purpose of this statement is unclear it looks like some arbitrary constraints that could allow to generalize some categories what the software shall do fr arbitrary decision on the interaction dd i think that the data could be entered at another moment or in a different way   times   month therefore i think it is dd however one could argue that the system shall offer a   month planning so fr cannot be excluded although i would expect it to be expressed differently what the software shall do fr,"['classification', 'requirements']","['i', 'needed', 'to', 'classify', 'the', 'following', 'rqs', 'as', 'a', 'design', 'objective', 'design', 'decisions', 'functional', 'req', 'non', 'functional', 'req', 'so', 'i', 'can', 'do', 'class', 'diagram', 'and', 'use', 'case', 'diagram', 'based', 'on', 'them', 'later', 'i', 'wanted', 'to', 'know', 'if', 'i', 'm', 'on', 'the', 'right', 'track', 'here', 'the', 'bold', 'face', 'is', 'my', 'guess', 'for', 'each', 'requirement', 'requirement', 'document', 'purchase', 'commitment', 'system', 'the', 'software', 'is', 'to', 'calculate', 'a', 'number', 'of', 'details', 'needed', 'to', 'purchase', 'by', 'a', 'factory', 'in', 'order', 'to', 'produce', 'its', 'products', 'design', 'decision', 'the', 'software', 'must', 'be', 'written', 'in', 'c', 'or', 'java', 'programming', 'languages', 'on', 'the', 'computer', 'ibm', 'pc', 'design', 'decision', 'the', 'number', 'of', 'products', 'should', 'be', 'equal', 'to', 'non', 'functional', 'req', 'a', 'general', 'aim', 'in', 'the', 'design', 'of', 'the', 'software', 'is', 'to', 'improve', 'the', 'portability', 'of', 'software', 'non', 'functional', 'req', 'the', 'system', 'should', 'accept', 'as', 'input', 'make', 'as', 'a', 'text', 'file', 'the', 'data', 'about', 'a', 'number', 'amount', 'and', 'price', 'of', 'detail', 'for', 'every', 'type', 'of', 'products', 'functional', 'req', 'a', 'number', 'of', 'details', 'for', 'every', 'type', 'of', 'products', 'should', 'not', 'be', 'less', 'than', 'the', 'first', 'and', 'second', 'type', 'of', 'products', 'should', 'have', 'same', 'details', 'the', 'second', 'and', 'fourth', 'type', 'of', 'products', 'should', 'have', 'one', 'same', 'detail', 'the', 'third', 'type', 'of', 'products', 'should', 'have', 'same', 'details', 'with', 'the', 'fourth', 'type', 'and', 'one', 'same', 'detail', 'with', 'the', 'first', 'type', 'of', 'products', 'design', 'objective', 'the', 'operator', 'should', 'be', 'logged', 'in', 'and', 'logged', 'out', 'to', 'the', 'system', 'by', 'login', 'and', 'password', 'design', 'objective', 'at', 'the', 'beginning', 'an', 'operator', 'must', 'provide', 'the', 'following', 'items', 'of', 'data', 'a', 'validation', 'of', 'input', 'data', 'should', 'be', 'provided', 'a', 'number', 'of', 'every', 'type', 'of', 'products', 'to', 'be', 'produced', 'by', 'the', 'factory', 'for', 'months', 'ahead', 'functional', 'req', 'the', 'software', 'must', 'produce', 'for', 'each', 'action', 'of', 'an', 'operator', 'a', 'report', 'the', 'report', 'should', 'be', 'saved', 'in', 'a', 'file', 'by', 'the', 'operator', 's', 'request', 'the', 'report', 'must', 'consist', 'of', 'functional', 'or', 'design', 'objective', 'req', 'a', 'number', 'of', 'every', 'detail', 'needed', 'to', 'purchase', 'the', 'total', 'price', 'for', 'every', 'detail', 'the', 'total', 'price', 'for', 'all', 'the', 'details']","['a', 'functional', 'requirement', 'tells', 'what', 'the', 'software', 'shall', 'do', 'a', 'non', 'functional', 'requirement', 'tells', 'something', 'about', 'how', 'the', 'software', 'shall', 'be', 'or', 'how', 'well', 'it', 'should', 'do', 'what', 'it', 'does', 'software', 'design', 'is', 'about', 'the', 'structure', 'and', 'the', 'behavior', 'of', 'the', 'software', 'if', 'some', 'statement', 'seems', 'arbitrary', 'and', 'you', 'think', 'the', 'software', 'could', 'fulfil', 'all', 'the', 'requirements', 'but', 'differently', 'then', 'there', 'are', 'chances', 'that', 'it', 's', 'more', 'about', 'design', 'than', 'requirements', 'a', 'design', 'objective', 'tells', 'what', 'the', 'design', 'must', 'ensure', 'ambiguous', 'at', 'the', 'stage', 'of', 'the', 'requirements', 'it', 's', 'difficult', 'to', 'make', 'the', 'difference', 'between', 'non', 'functional', 'requirements', 'and', 'design', 'objective', 'a', 'design', 'decision', 'is', 'a', 'decision', 'on', 'the', 'behavior', 'or', 'the', 'structure', 'of', 'the', 'software', 'with', 'this', 'in', 'mind', 'here', 'an', 'analysis', 'what', 'the', 'software', 'shall', 'do', 'functional', 'requirement', 'fr', 'if', 'we', 'd', 'change', 'this', 'the', 'software', 'would', 'no', 'longer', 'do', 'what', 'is', 'expected', 'so', 'it', 'can', 't', 'be', 'a', 'design', 'decision', 'how', 'the', 'software', 'shall', 'be', 'non', 'functional', 'requirement', 'nfr', 'not', 'really', 'about', 'structure', 'or', 'behavior', 'of', 'the', 'software', 'the', 'language', 'will', 'not', 'impact', 'use', 'case', 'nor', 'class', 'model', 'so', 'it', 's', 'not', 'really', 'a', 'design', 'decision', 'imho', 'arbitrary', 'decision', 'about', 'cardinality', 'in', 'object', 'model', 'design', 'decision', 'dd', 'aim', 'in', 'the', 'design', 'design', 'objective', 'do', 'what', 'the', 'software', 'shall', 'do', 'fr', 'arbitrary', 'constraint', 'about', 'object', 'model', 'ddif', 'it', 'would', 'be', 'no', 'less', 'than', 'or', 'no', 'less', 'than', 'the', 'software', 'would', 'still', 'fulfil', 'the', 'functional', 'requirements', 'however', 'this', 'depends', 'on', 'the', 'context', 'if', 'it', 'would', 'turn', 'out', 'that', 'the', 'software', 'would', 'not', 'be', 'fit', 'for', 'purpose', 'if', 'these', 'limits', 'would', 'not', 'be', 'respected', 'then', 'it', 'could', 'be', 'fr', 'arbitrary', 'constraint', 'on', 'object', 'model', 'ddthe', 'purpose', 'of', 'this', 'statement', 'is', 'unclear', 'it', 'looks', 'like', 'some', 'arbitrary', 'constraints', 'that', 'could', 'allow', 'to', 'generalize', 'some', 'categories', 'what', 'the', 'software', 'shall', 'do', 'fr', 'arbitrary', 'decision', 'on', 'the', 'interaction', 'dd', 'i', 'think', 'that', 'the', 'data', 'could', 'be', 'entered', 'at', 'another', 'moment', 'or', 'in', 'a', 'different', 'way', 'times', 'month', 'therefore', 'i', 'think', 'it', 'is', 'dd', 'however', 'one', 'could', 'argue', 'that', 'the', 'system', 'shall', 'offer', 'a', 'month', 'planning', 'so', 'fr', 'can', 'not', 'be', 'excluded', 'although', 'i', 'would', 'expect', 'it', 'to', 'be', 'expressed', 'differently', 'what', 'the', 'software', 'shall', 'do', 'fr']","['needed', 'classify', 'following', 'rqs', 'design', 'objective', 'design', 'decision', 'functional', 'req', 'non', 'functional', 'req', 'class', 'diagram', 'use', 'case', 'diagram', 'based', 'later', 'wanted', 'know', 'right', 'track', 'bold', 'face', 'guess', 'requirement', 'requirement', 'document', 'purchase', 'commitment', 'system', 'software', 'calculate', 'number', 'detail', 'needed', 'purchase', 'factory', 'order', 'produce', 'product', 'design', 'decision', 'software', 'must', 'written', 'c', 'java', 'programming', 'language', 'computer', 'ibm', 'pc', 'design', 'decision', 'number', 'product', 'equal', 'non', 'functional', 'req', 'general', 'aim', 'design', 'software', 'improve', 'portability', 'software', 'non', 'functional', 'req', 'system', 'accept', 'input', 'make', 'text', 'file', 'data', 'number', 'amount', 'price', 'detail', 'every', 'type', 'product', 'functional', 'req', 'number', 'detail', 'every', 'type', 'product', 'le', 'first', 'second', 'type', 'product', 'detail', 'second', 'fourth', 'type', 'product', 'one', 'detail', 'third', 'type', 'product', 'detail', 'fourth', 'type', 'one', 'detail', 'first', 'type', 'product', 'design', 'objective', 'operator', 'logged', 'logged', 'system', 'login', 'password', 'design', 'objective', 'beginning', 'operator', 'must', 'provide', 'following', 'item', 'data', 'validation', 'input', 'data', 'provided', 'number', 'every', 'type', 'product', 'produced', 'factory', 'month', 'ahead', 'functional', 'req', 'software', 'must', 'produce', 'action', 'operator', 'report', 'report', 'saved', 'file', 'operator', 'request', 'report', 'must', 'consist', 'functional', 'design', 'objective', 'req', 'number', 'every', 'detail', 'needed', 'purchase', 'total', 'price', 'every', 'detail', 'total', 'price', 'detail']","['a', 'functional', 'requirement', 'tell', 'what', 'the', 'software', 'shall', 'do', 'a', 'non', 'functional', 'requirement', 'tell', 'something', 'about', 'how', 'the', 'software', 'shall', 'be', 'or', 'how', 'well', 'it', 'should', 'do', 'what', 'it', 'doe', 'software', 'design', 'is', 'about', 'the', 'structure', 'and', 'the', 'behavior', 'of', 'the', 'software', 'if', 'some', 'statement', 'seems', 'arbitrary', 'and', 'you', 'think', 'the', 'software', 'could', 'fulfil', 'all', 'the', 'requirement', 'but', 'differently', 'then', 'there', 'are', 'chance', 'that', 'it', 's', 'more', 'about', 'design', 'than', 'requirement', 'a', 'design', 'objective', 'tell', 'what', 'the', 'design', 'must', 'ensure', 'ambiguous', 'at', 'the', 'stage', 'of', 'the', 'requirement', 'it', 's', 'difficult', 'to', 'make', 'the', 'difference', 'between', 'non', 'functional', 'requirement', 'and', 'design', 'objective', 'a', 'design', 'decision', 'is', 'a', 'decision', 'on', 'the', 'behavior', 'or', 'the', 'structure', 'of', 'the', 'software', 'with', 'this', 'in', 'mind', 'here', 'an', 'analysis', 'what', 'the', 'software', 'shall', 'do', 'functional', 'requirement', 'fr', 'if', 'we', 'd', 'change', 'this', 'the', 'software', 'would', 'no', 'longer', 'do', 'what', 'is', 'expected', 'so', 'it', 'can', 't', 'be', 'a', 'design', 'decision', 'how', 'the', 'software', 'shall', 'be', 'non', 'functional', 'requirement', 'nfr', 'not', 'really', 'about', 'structure', 'or', 'behavior', 'of', 'the', 'software', 'the', 'language', 'will', 'not', 'impact', 'use', 'case', 'nor', 'class', 'model', 'so', 'it', 's', 'not', 'really', 'a', 'design', 'decision', 'imho', 'arbitrary', 'decision', 'about', 'cardinality', 'in', 'object', 'model', 'design', 'decision', 'dd', 'aim', 'in', 'the', 'design', 'design', 'objective', 'do', 'what', 'the', 'software', 'shall', 'do', 'fr', 'arbitrary', 'constraint', 'about', 'object', 'model', 'ddif', 'it', 'would', 'be', 'no', 'le', 'than', 'or', 'no', 'le', 'than', 'the', 'software', 'would', 'still', 'fulfil', 'the', 'functional', 'requirement', 'however', 'this', 'depends', 'on', 'the', 'context', 'if', 'it', 'would', 'turn', 'out', 'that', 'the', 'software', 'would', 'not', 'be', 'fit', 'for', 'purpose', 'if', 'these', 'limit', 'would', 'not', 'be', 'respected', 'then', 'it', 'could', 'be', 'fr', 'arbitrary', 'constraint', 'on', 'object', 'model', 'ddthe', 'purpose', 'of', 'this', 'statement', 'is', 'unclear', 'it', 'look', 'like', 'some', 'arbitrary', 'constraint', 'that', 'could', 'allow', 'to', 'generalize', 'some', 'category', 'what', 'the', 'software', 'shall', 'do', 'fr', 'arbitrary', 'decision', 'on', 'the', 'interaction', 'dd', 'i', 'think', 'that', 'the', 'data', 'could', 'be', 'entered', 'at', 'another', 'moment', 'or', 'in', 'a', 'different', 'way', 'time', 'month', 'therefore', 'i', 'think', 'it', 'is', 'dd', 'however', 'one', 'could', 'argue', 'that', 'the', 'system', 'shall', 'offer', 'a', 'month', 'planning', 'so', 'fr', 'can', 'not', 'be', 'excluded', 'although', 'i', 'would', 'expect', 'it', 'to', 'be', 'expressed', 'differently', 'what', 'the', 'software', 'shall', 'do', 'fr']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 0.938, 'pos': 0.062, 'compound': 0.936}",0.0479296066252588,0,System Requirements and AWS,3query
53360336,External System in UML,"<p>I am currently working on software requirements specification document, I am creating a use case to validate or communicate with external system, for example I a want to creating a use case that about sending notification emails to user outlook contacts, donI need to specified the detail for the external system? Like calidation or credentials?</p>
",<uml><use-case><requirements><use-case-diagram>,2018-11-18 11:27:47,1589,0,1,53360841,"<p>Not in the UC diagram, but there are others where you might.</p>

<h2>Use Case diagram</h2>

<p>UC will show external systems that are involved in the UC as actors. The UC itself shows functionality of modeled systems and should no go to low with decomposition. Things like ""communicate with external system"" or ""validate query"" are not separate UCs but part of something broader like ""Place an order"". On this level you only show the main function, leaving details for other, more specific diagrams (e.g. activity diagram depicting the UC's flow).</p>

<h2>Activity diagram</h2>

<p>On activity diagram you show the information about processing but in general you do not show too much static data. As a result things like ""Validate query"" or ""Create notification e-mail"" will be separate actions within the activity. They may have be further decomposed as Activities with details about how validation is performed or what steps has to be performed to communicate with the system.</p>

<h1>Sequence diagram</h1>

<p>Sequence diagram is another great way of showing the flow of action, especially when communication between various parties (e.g. systems) is involved. Here you can show the order of messages being sent, to some degree actions taken (as called operations - so you can show that you run validation first and send the message to the e-mail system then if the validation was successful). With the operation you can also show information about parameters that has to be provided (so for example credentials for communication with external systems).</p>

<h2>Other diagrams</h2>

<p>It all depends on the specific diagram and most of them give you a possibility to show the other system in some way. Sometimes there is more than one good way to do so. Details would depend on what exactly you want to show and which diagram did you choose to present the information</p>

<hr>

<p>I would suggest you read some good books about modelling with the use of UML. Craig Larman's ""Applying UML and patterns"" or Howard Podesva's ""UML for the IT business analysis"" are my usual starting recommendations.</p>
",2018-11,i am currently working on software requirements specification document i am creating a use case to validate or communicate with external system for example i a want to creating a use case that about sending notification emails to user outlook contacts doni need to specified the detail for the external system like calidation or credentials,not in the uc diagram but there are others where you might use case diagram uc will show external systems that are involved in the uc as actors the uc itself shows functionality of modeled systems and should no go to low with decomposition things like communicate with external system or validate query are not separate ucs but part of something broader like place an order on this level you only show the main function leaving details for other more specific diagrams e g activity diagram depicting the uc s flow activity diagram on activity diagram you show the information about processing but in general you do not show too much static data as a result things like validate query or create notification e mail will be separate actions within the activity they may have be further decomposed as activities with details about how validation is performed or what steps has to be performed to communicate with the system sequence diagram sequence diagram is another great way of showing the flow of action especially when communication between various parties e g systems is involved here you can show the order of messages being sent to some degree actions taken as called operations so you can show that you run validation first and send the message to the e mail system then if the validation was successful with the operation you can also show information about parameters that has to be provided so for example credentials for communication with external systems other diagrams it all depends on the specific diagram and most of them give you a possibility to show the other system in some way sometimes there is more than one good way to do so details would depend on what exactly you want to show and which diagram did you choose to present the information i would suggest you read some good books about modelling with the use of uml craig larman s applying uml and patterns or howard podesva s uml for the it business analysis are my usual starting recommendations,"['uml', 'use-case', 'requirements', 'use-case-diagram']","['i', 'am', 'currently', 'working', 'on', 'software', 'requirements', 'specification', 'document', 'i', 'am', 'creating', 'a', 'use', 'case', 'to', 'validate', 'or', 'communicate', 'with', 'external', 'system', 'for', 'example', 'i', 'a', 'want', 'to', 'creating', 'a', 'use', 'case', 'that', 'about', 'sending', 'notification', 'emails', 'to', 'user', 'outlook', 'contacts', 'doni', 'need', 'to', 'specified', 'the', 'detail', 'for', 'the', 'external', 'system', 'like', 'calidation', 'or', 'credentials']","['not', 'in', 'the', 'uc', 'diagram', 'but', 'there', 'are', 'others', 'where', 'you', 'might', 'use', 'case', 'diagram', 'uc', 'will', 'show', 'external', 'systems', 'that', 'are', 'involved', 'in', 'the', 'uc', 'as', 'actors', 'the', 'uc', 'itself', 'shows', 'functionality', 'of', 'modeled', 'systems', 'and', 'should', 'no', 'go', 'to', 'low', 'with', 'decomposition', 'things', 'like', 'communicate', 'with', 'external', 'system', 'or', 'validate', 'query', 'are', 'not', 'separate', 'ucs', 'but', 'part', 'of', 'something', 'broader', 'like', 'place', 'an', 'order', 'on', 'this', 'level', 'you', 'only', 'show', 'the', 'main', 'function', 'leaving', 'details', 'for', 'other', 'more', 'specific', 'diagrams', 'e', 'g', 'activity', 'diagram', 'depicting', 'the', 'uc', 's', 'flow', 'activity', 'diagram', 'on', 'activity', 'diagram', 'you', 'show', 'the', 'information', 'about', 'processing', 'but', 'in', 'general', 'you', 'do', 'not', 'show', 'too', 'much', 'static', 'data', 'as', 'a', 'result', 'things', 'like', 'validate', 'query', 'or', 'create', 'notification', 'e', 'mail', 'will', 'be', 'separate', 'actions', 'within', 'the', 'activity', 'they', 'may', 'have', 'be', 'further', 'decomposed', 'as', 'activities', 'with', 'details', 'about', 'how', 'validation', 'is', 'performed', 'or', 'what', 'steps', 'has', 'to', 'be', 'performed', 'to', 'communicate', 'with', 'the', 'system', 'sequence', 'diagram', 'sequence', 'diagram', 'is', 'another', 'great', 'way', 'of', 'showing', 'the', 'flow', 'of', 'action', 'especially', 'when', 'communication', 'between', 'various', 'parties', 'e', 'g', 'systems', 'is', 'involved', 'here', 'you', 'can', 'show', 'the', 'order', 'of', 'messages', 'being', 'sent', 'to', 'some', 'degree', 'actions', 'taken', 'as', 'called', 'operations', 'so', 'you', 'can', 'show', 'that', 'you', 'run', 'validation', 'first', 'and', 'send', 'the', 'message', 'to', 'the', 'e', 'mail', 'system', 'then', 'if', 'the', 'validation', 'was', 'successful', 'with', 'the', 'operation', 'you', 'can', 'also', 'show', 'information', 'about', 'parameters', 'that', 'has', 'to', 'be', 'provided', 'so', 'for', 'example', 'credentials', 'for', 'communication', 'with', 'external', 'systems', 'other', 'diagrams', 'it', 'all', 'depends', 'on', 'the', 'specific', 'diagram', 'and', 'most', 'of', 'them', 'give', 'you', 'a', 'possibility', 'to', 'show', 'the', 'other', 'system', 'in', 'some', 'way', 'sometimes', 'there', 'is', 'more', 'than', 'one', 'good', 'way', 'to', 'do', 'so', 'details', 'would', 'depend', 'on', 'what', 'exactly', 'you', 'want', 'to', 'show', 'and', 'which', 'diagram', 'did', 'you', 'choose', 'to', 'present', 'the', 'information', 'i', 'would', 'suggest', 'you', 'read', 'some', 'good', 'books', 'about', 'modelling', 'with', 'the', 'use', 'of', 'uml', 'craig', 'larman', 's', 'applying', 'uml', 'and', 'patterns', 'or', 'howard', 'podesva', 's', 'uml', 'for', 'the', 'it', 'business', 'analysis', 'are', 'my', 'usual', 'starting', 'recommendations']","['currently', 'working', 'software', 'requirement', 'specification', 'document', 'creating', 'use', 'case', 'validate', 'communicate', 'external', 'system', 'example', 'want', 'creating', 'use', 'case', 'sending', 'notification', 'email', 'user', 'outlook', 'contact', 'doni', 'need', 'specified', 'detail', 'external', 'system', 'like', 'calidation', 'credential']","['not', 'in', 'the', 'uc', 'diagram', 'but', 'there', 'are', 'others', 'where', 'you', 'might', 'use', 'case', 'diagram', 'uc', 'will', 'show', 'external', 'system', 'that', 'are', 'involved', 'in', 'the', 'uc', 'a', 'actor', 'the', 'uc', 'itself', 'show', 'functionality', 'of', 'modeled', 'system', 'and', 'should', 'no', 'go', 'to', 'low', 'with', 'decomposition', 'thing', 'like', 'communicate', 'with', 'external', 'system', 'or', 'validate', 'query', 'are', 'not', 'separate', 'ucs', 'but', 'part', 'of', 'something', 'broader', 'like', 'place', 'an', 'order', 'on', 'this', 'level', 'you', 'only', 'show', 'the', 'main', 'function', 'leaving', 'detail', 'for', 'other', 'more', 'specific', 'diagram', 'e', 'g', 'activity', 'diagram', 'depicting', 'the', 'uc', 's', 'flow', 'activity', 'diagram', 'on', 'activity', 'diagram', 'you', 'show', 'the', 'information', 'about', 'processing', 'but', 'in', 'general', 'you', 'do', 'not', 'show', 'too', 'much', 'static', 'data', 'a', 'a', 'result', 'thing', 'like', 'validate', 'query', 'or', 'create', 'notification', 'e', 'mail', 'will', 'be', 'separate', 'action', 'within', 'the', 'activity', 'they', 'may', 'have', 'be', 'further', 'decomposed', 'a', 'activity', 'with', 'detail', 'about', 'how', 'validation', 'is', 'performed', 'or', 'what', 'step', 'ha', 'to', 'be', 'performed', 'to', 'communicate', 'with', 'the', 'system', 'sequence', 'diagram', 'sequence', 'diagram', 'is', 'another', 'great', 'way', 'of', 'showing', 'the', 'flow', 'of', 'action', 'especially', 'when', 'communication', 'between', 'various', 'party', 'e', 'g', 'system', 'is', 'involved', 'here', 'you', 'can', 'show', 'the', 'order', 'of', 'message', 'being', 'sent', 'to', 'some', 'degree', 'action', 'taken', 'a', 'called', 'operation', 'so', 'you', 'can', 'show', 'that', 'you', 'run', 'validation', 'first', 'and', 'send', 'the', 'message', 'to', 'the', 'e', 'mail', 'system', 'then', 'if', 'the', 'validation', 'wa', 'successful', 'with', 'the', 'operation', 'you', 'can', 'also', 'show', 'information', 'about', 'parameter', 'that', 'ha', 'to', 'be', 'provided', 'so', 'for', 'example', 'credential', 'for', 'communication', 'with', 'external', 'system', 'other', 'diagram', 'it', 'all', 'depends', 'on', 'the', 'specific', 'diagram', 'and', 'most', 'of', 'them', 'give', 'you', 'a', 'possibility', 'to', 'show', 'the', 'other', 'system', 'in', 'some', 'way', 'sometimes', 'there', 'is', 'more', 'than', 'one', 'good', 'way', 'to', 'do', 'so', 'detail', 'would', 'depend', 'on', 'what', 'exactly', 'you', 'want', 'to', 'show', 'and', 'which', 'diagram', 'did', 'you', 'choose', 'to', 'present', 'the', 'information', 'i', 'would', 'suggest', 'you', 'read', 'some', 'good', 'book', 'about', 'modelling', 'with', 'the', 'use', 'of', 'uml', 'craig', 'larman', 's', 'applying', 'uml', 'and', 'pattern', 'or', 'howard', 'podesva', 's', 'uml', 'for', 'the', 'it', 'business', 'analysis', 'are', 'my', 'usual', 'starting', 'recommendation']",Package Management and File Handling,1,"{'neg': 0.0, 'neu': 0.803, 'pos': 0.197, 'compound': 0.8426}",0.0,1,Package Management and File Handling,3query
52858824,How do we gather and document non-functional requirements in Agile,"<p>I know in waterfall, they are gathered and documented at an early stage of SDLC, I believe very first stage. Therefore, they are captured and documented before development and testing even starts.</p>

<p>But I am confused how is that done in Agile? </p>

<p>If I understand correctly, user stories should be written with acceptance criteria which capture non-functional requirements. But in Agile, we pick project, create it, and start working on it right away.  </p>

<p>So, my guess is that someone (perhaps product owner) goes through user stories and collects acceptance criteria into a formatted document which then becomes Non-Functional-Requirements document?</p>
",<agile><requirements>,2018-10-17 15:46:03,566,-2,1,52859874,"<p>First, to answer your question, I must be clear that no Agile frameworks or methodologies attempt to define everything that a team might need to do (especially Scrum) so there is nothing wrong with adding extra artifacts or practices that the team finds useful as long as they aren't contradicting a defined practice.</p>

<p>There are a few places I typically see non-functional requirements recorded. Here are a few of the most common ones:</p>

<p><strong>Definition of Done</strong></p>

<p>The definition of done contains standards for quality that should be applied across all backlog items that come through. Often times this includes things like ""n% unit test coverage of code"", ""code and configuration changes have been peer reviewed"", and ""all automated regression tests have been run and pass"". I've sometimes seen broader non-functional requirements like ""no changes cause the application load time to exceed X ms"".</p>

<p><strong>Architectural Design Documents</strong></p>

<p>You can still have these in Agile. Rather than establishing the finished architecture at the beginning of the project, they introduce constraints that the architecture has to stay within. As the project progresses and architectural decisions are made or changed, these documents are updated to reflect that information. Examples of constraints may include ""System X is considered to be the authoritative source of customer personal data"" or ""Details needed for payment processing should never be available to a public-facing server in order to reduce attack opportunities on that data.""</p>

<p><strong>Product Chartering</strong></p>

<p>Depending on the project, ""starting right away"" is a bit fluid. On very large projects or products, it is not uncommon to take a few days (in my experience, 1 - 3 is a good number) to charter the project. This would include identifying personas, making sure business stakeholders and team members have a shared understanding of the vision, talk through some expected user experiences and problems at a high level, etc. It is very common that non-functional needs come out here and should be recorded either in the DoD, existing architectural documents, or in some cases, in backlog items. One good example of this happening is something called a trade-off matrix. When building a tradeoff matrix, we talk about constraints on the project like performance, adaptability, feature set, budget, time, etc. We identify one as a primary constraint, two as secondary, and all others are considered tertiary. This isn't a hard-and-fast rule, but it establishes an general understanding of how trade-offs on non-functional needs will be decided in the work.</p>

<p><strong>Backlog Items</strong></p>

<p>Ok, last one. Not all backlog items have to be User Stories. If you have an actionable non-functional requirement (set up a server, reconfigure a firewall, team needs to convert to a new version of the IDE) there is nothing that stops you from creating a backlog item for this. It isn't a User Story, but that's ok. I will warn that most teams find a correlation between the number of items in the backlog that are User Stories and their ability to effectively deliver value and adapt to changes along the way, so don't get carries away. But I'd rather see a team put in a non-US in their backlog than try to pass off those things as user stories like ""As a firewall, I want to be updated, so we don't get h@XX0rD"" &lt;- real backlog item I saw.</p>

<p>As a final note: remember that in Agile, we strive to adapt to change, so don't worry about getting the DoD or architectural document perfect the first time. It can change as you learn more.</p>
",2018-10,i know in waterfall they are gathered and documented at an early stage of sdlc i believe very first stage therefore they are captured and documented before development and testing even starts but i am confused how is that done in agile if i understand correctly user stories should be written with acceptance criteria which capture non functional requirements but in agile we pick project create it and start working on it right away so my guess is that someone perhaps product owner goes through user stories and collects acceptance criteria into a formatted document which then becomes non functional requirements document,first to answer your question i must be clear that no agile frameworks or methodologies attempt to define everything that a team might need to do especially scrum so there is nothing wrong with adding extra artifacts or practices that the team finds useful as long as they aren t contradicting a defined practice there are a few places i typically see non functional requirements recorded here are a few of the most common ones definition of done the definition of done contains standards for quality that should be applied across all backlog items that come through often times this includes things like n unit test coverage of code code and configuration changes have been peer reviewed and all automated regression tests have been run and pass i ve sometimes seen broader non functional requirements like no changes cause the application load time to exceed x ms architectural design documents you can still have these in agile rather than establishing the finished architecture at the beginning of the project they introduce constraints that the architecture has to stay within as the project progresses and architectural decisions are made or changed these documents are updated to reflect that information examples of constraints may include system x is considered to be the authoritative source of customer personal data or details needed for payment processing should never be available to a public facing server in order to reduce attack opportunities on that data product chartering depending on the project starting right away is a bit fluid on very large projects or products it is not uncommon to take a few days in my experience     is a good number to charter the project this would include identifying personas making sure business stakeholders and team members have a shared understanding of the vision talk through some expected user experiences and problems at a high level etc it is very common that non functional needs come out here and should be recorded either in the dod existing architectural documents or in some cases in backlog items one good example of this happening is something called a trade off matrix when building a tradeoff matrix we talk about constraints on the project like performance adaptability feature set budget time etc we identify one as a primary constraint two as secondary and all others are considered tertiary this isn t a hard and fast rule but it establishes an general understanding of how trade offs on non functional needs will be decided in the work backlog items ok last one not all backlog items have to be user stories if you have an actionable non functional requirement set up a server reconfigure a firewall team needs to convert to a new version of the ide there is nothing that stops you from creating a backlog item for this it isn t a user story but that s ok i will warn that most teams find a correlation between the number of items in the backlog that are user stories and their ability to effectively deliver value and adapt to changes along the way so don t get carries away but i d rather see a team put in a non us in their backlog than try to pass off those things as user stories like as a firewall i want to be updated so we don t get h xx rd real backlog item i saw as a final note remember that in agile we strive to adapt to change so don t worry about getting the dod or architectural document perfect the first time it can change as you learn more,"['agile', 'requirements']","['i', 'know', 'in', 'waterfall', 'they', 'are', 'gathered', 'and', 'documented', 'at', 'an', 'early', 'stage', 'of', 'sdlc', 'i', 'believe', 'very', 'first', 'stage', 'therefore', 'they', 'are', 'captured', 'and', 'documented', 'before', 'development', 'and', 'testing', 'even', 'starts', 'but', 'i', 'am', 'confused', 'how', 'is', 'that', 'done', 'in', 'agile', 'if', 'i', 'understand', 'correctly', 'user', 'stories', 'should', 'be', 'written', 'with', 'acceptance', 'criteria', 'which', 'capture', 'non', 'functional', 'requirements', 'but', 'in', 'agile', 'we', 'pick', 'project', 'create', 'it', 'and', 'start', 'working', 'on', 'it', 'right', 'away', 'so', 'my', 'guess', 'is', 'that', 'someone', 'perhaps', 'product', 'owner', 'goes', 'through', 'user', 'stories', 'and', 'collects', 'acceptance', 'criteria', 'into', 'a', 'formatted', 'document', 'which', 'then', 'becomes', 'non', 'functional', 'requirements', 'document']","['first', 'to', 'answer', 'your', 'question', 'i', 'must', 'be', 'clear', 'that', 'no', 'agile', 'frameworks', 'or', 'methodologies', 'attempt', 'to', 'define', 'everything', 'that', 'a', 'team', 'might', 'need', 'to', 'do', 'especially', 'scrum', 'so', 'there', 'is', 'nothing', 'wrong', 'with', 'adding', 'extra', 'artifacts', 'or', 'practices', 'that', 'the', 'team', 'finds', 'useful', 'as', 'long', 'as', 'they', 'aren', 't', 'contradicting', 'a', 'defined', 'practice', 'there', 'are', 'a', 'few', 'places', 'i', 'typically', 'see', 'non', 'functional', 'requirements', 'recorded', 'here', 'are', 'a', 'few', 'of', 'the', 'most', 'common', 'ones', 'definition', 'of', 'done', 'the', 'definition', 'of', 'done', 'contains', 'standards', 'for', 'quality', 'that', 'should', 'be', 'applied', 'across', 'all', 'backlog', 'items', 'that', 'come', 'through', 'often', 'times', 'this', 'includes', 'things', 'like', 'n', 'unit', 'test', 'coverage', 'of', 'code', 'code', 'and', 'configuration', 'changes', 'have', 'been', 'peer', 'reviewed', 'and', 'all', 'automated', 'regression', 'tests', 'have', 'been', 'run', 'and', 'pass', 'i', 've', 'sometimes', 'seen', 'broader', 'non', 'functional', 'requirements', 'like', 'no', 'changes', 'cause', 'the', 'application', 'load', 'time', 'to', 'exceed', 'x', 'ms', 'architectural', 'design', 'documents', 'you', 'can', 'still', 'have', 'these', 'in', 'agile', 'rather', 'than', 'establishing', 'the', 'finished', 'architecture', 'at', 'the', 'beginning', 'of', 'the', 'project', 'they', 'introduce', 'constraints', 'that', 'the', 'architecture', 'has', 'to', 'stay', 'within', 'as', 'the', 'project', 'progresses', 'and', 'architectural', 'decisions', 'are', 'made', 'or', 'changed', 'these', 'documents', 'are', 'updated', 'to', 'reflect', 'that', 'information', 'examples', 'of', 'constraints', 'may', 'include', 'system', 'x', 'is', 'considered', 'to', 'be', 'the', 'authoritative', 'source', 'of', 'customer', 'personal', 'data', 'or', 'details', 'needed', 'for', 'payment', 'processing', 'should', 'never', 'be', 'available', 'to', 'a', 'public', 'facing', 'server', 'in', 'order', 'to', 'reduce', 'attack', 'opportunities', 'on', 'that', 'data', 'product', 'chartering', 'depending', 'on', 'the', 'project', 'starting', 'right', 'away', 'is', 'a', 'bit', 'fluid', 'on', 'very', 'large', 'projects', 'or', 'products', 'it', 'is', 'not', 'uncommon', 'to', 'take', 'a', 'few', 'days', 'in', 'my', 'experience', 'is', 'a', 'good', 'number', 'to', 'charter', 'the', 'project', 'this', 'would', 'include', 'identifying', 'personas', 'making', 'sure', 'business', 'stakeholders', 'and', 'team', 'members', 'have', 'a', 'shared', 'understanding', 'of', 'the', 'vision', 'talk', 'through', 'some', 'expected', 'user', 'experiences', 'and', 'problems', 'at', 'a', 'high', 'level', 'etc', 'it', 'is', 'very', 'common', 'that', 'non', 'functional', 'needs', 'come', 'out', 'here', 'and', 'should', 'be', 'recorded', 'either', 'in', 'the', 'dod', 'existing', 'architectural', 'documents', 'or', 'in', 'some', 'cases', 'in', 'backlog', 'items', 'one', 'good', 'example', 'of', 'this', 'happening', 'is', 'something', 'called', 'a', 'trade', 'off', 'matrix', 'when', 'building', 'a', 'tradeoff', 'matrix', 'we', 'talk', 'about', 'constraints', 'on', 'the', 'project', 'like', 'performance', 'adaptability', 'feature', 'set', 'budget', 'time', 'etc', 'we', 'identify', 'one', 'as', 'a', 'primary', 'constraint', 'two', 'as', 'secondary', 'and', 'all', 'others', 'are', 'considered', 'tertiary', 'this', 'isn', 't', 'a', 'hard', 'and', 'fast', 'rule', 'but', 'it', 'establishes', 'an', 'general', 'understanding', 'of', 'how', 'trade', 'offs', 'on', 'non', 'functional', 'needs', 'will', 'be', 'decided', 'in', 'the', 'work', 'backlog', 'items', 'ok', 'last', 'one', 'not', 'all', 'backlog', 'items', 'have', 'to', 'be', 'user', 'stories', 'if', 'you', 'have', 'an', 'actionable', 'non', 'functional', 'requirement', 'set', 'up', 'a', 'server', 'reconfigure', 'a', 'firewall', 'team', 'needs', 'to', 'convert', 'to', 'a', 'new', 'version', 'of', 'the', 'ide', 'there', 'is', 'nothing', 'that', 'stops', 'you', 'from', 'creating', 'a', 'backlog', 'item', 'for', 'this', 'it', 'isn', 't', 'a', 'user', 'story', 'but', 'that', 's', 'ok', 'i', 'will', 'warn', 'that', 'most', 'teams', 'find', 'a', 'correlation', 'between', 'the', 'number', 'of', 'items', 'in', 'the', 'backlog', 'that', 'are', 'user', 'stories', 'and', 'their', 'ability', 'to', 'effectively', 'deliver', 'value', 'and', 'adapt', 'to', 'changes', 'along', 'the', 'way', 'so', 'don', 't', 'get', 'carries', 'away', 'but', 'i', 'd', 'rather', 'see', 'a', 'team', 'put', 'in', 'a', 'non', 'us', 'in', 'their', 'backlog', 'than', 'try', 'to', 'pass', 'off', 'those', 'things', 'as', 'user', 'stories', 'like', 'as', 'a', 'firewall', 'i', 'want', 'to', 'be', 'updated', 'so', 'we', 'don', 't', 'get', 'h', 'xx', 'rd', 'real', 'backlog', 'item', 'i', 'saw', 'as', 'a', 'final', 'note', 'remember', 'that', 'in', 'agile', 'we', 'strive', 'to', 'adapt', 'to', 'change', 'so', 'don', 't', 'worry', 'about', 'getting', 'the', 'dod', 'or', 'architectural', 'document', 'perfect', 'the', 'first', 'time', 'it', 'can', 'change', 'as', 'you', 'learn', 'more']","['know', 'waterfall', 'gathered', 'documented', 'early', 'stage', 'sdlc', 'believe', 'first', 'stage', 'therefore', 'captured', 'documented', 'development', 'testing', 'even', 'start', 'confused', 'done', 'agile', 'understand', 'correctly', 'user', 'story', 'written', 'acceptance', 'criterion', 'capture', 'non', 'functional', 'requirement', 'agile', 'pick', 'project', 'create', 'start', 'working', 'right', 'away', 'guess', 'someone', 'perhaps', 'product', 'owner', 'go', 'user', 'story', 'collect', 'acceptance', 'criterion', 'formatted', 'document', 'becomes', 'non', 'functional', 'requirement', 'document']","['first', 'to', 'answer', 'your', 'question', 'i', 'must', 'be', 'clear', 'that', 'no', 'agile', 'framework', 'or', 'methodology', 'attempt', 'to', 'define', 'everything', 'that', 'a', 'team', 'might', 'need', 'to', 'do', 'especially', 'scrum', 'so', 'there', 'is', 'nothing', 'wrong', 'with', 'adding', 'extra', 'artifact', 'or', 'practice', 'that', 'the', 'team', 'find', 'useful', 'a', 'long', 'a', 'they', 'aren', 't', 'contradicting', 'a', 'defined', 'practice', 'there', 'are', 'a', 'few', 'place', 'i', 'typically', 'see', 'non', 'functional', 'requirement', 'recorded', 'here', 'are', 'a', 'few', 'of', 'the', 'most', 'common', 'one', 'definition', 'of', 'done', 'the', 'definition', 'of', 'done', 'contains', 'standard', 'for', 'quality', 'that', 'should', 'be', 'applied', 'across', 'all', 'backlog', 'item', 'that', 'come', 'through', 'often', 'time', 'this', 'includes', 'thing', 'like', 'n', 'unit', 'test', 'coverage', 'of', 'code', 'code', 'and', 'configuration', 'change', 'have', 'been', 'peer', 'reviewed', 'and', 'all', 'automated', 'regression', 'test', 'have', 'been', 'run', 'and', 'pas', 'i', 've', 'sometimes', 'seen', 'broader', 'non', 'functional', 'requirement', 'like', 'no', 'change', 'cause', 'the', 'application', 'load', 'time', 'to', 'exceed', 'x', 'm', 'architectural', 'design', 'document', 'you', 'can', 'still', 'have', 'these', 'in', 'agile', 'rather', 'than', 'establishing', 'the', 'finished', 'architecture', 'at', 'the', 'beginning', 'of', 'the', 'project', 'they', 'introduce', 'constraint', 'that', 'the', 'architecture', 'ha', 'to', 'stay', 'within', 'a', 'the', 'project', 'progress', 'and', 'architectural', 'decision', 'are', 'made', 'or', 'changed', 'these', 'document', 'are', 'updated', 'to', 'reflect', 'that', 'information', 'example', 'of', 'constraint', 'may', 'include', 'system', 'x', 'is', 'considered', 'to', 'be', 'the', 'authoritative', 'source', 'of', 'customer', 'personal', 'data', 'or', 'detail', 'needed', 'for', 'payment', 'processing', 'should', 'never', 'be', 'available', 'to', 'a', 'public', 'facing', 'server', 'in', 'order', 'to', 'reduce', 'attack', 'opportunity', 'on', 'that', 'data', 'product', 'chartering', 'depending', 'on', 'the', 'project', 'starting', 'right', 'away', 'is', 'a', 'bit', 'fluid', 'on', 'very', 'large', 'project', 'or', 'product', 'it', 'is', 'not', 'uncommon', 'to', 'take', 'a', 'few', 'day', 'in', 'my', 'experience', 'is', 'a', 'good', 'number', 'to', 'charter', 'the', 'project', 'this', 'would', 'include', 'identifying', 'persona', 'making', 'sure', 'business', 'stakeholder', 'and', 'team', 'member', 'have', 'a', 'shared', 'understanding', 'of', 'the', 'vision', 'talk', 'through', 'some', 'expected', 'user', 'experience', 'and', 'problem', 'at', 'a', 'high', 'level', 'etc', 'it', 'is', 'very', 'common', 'that', 'non', 'functional', 'need', 'come', 'out', 'here', 'and', 'should', 'be', 'recorded', 'either', 'in', 'the', 'dod', 'existing', 'architectural', 'document', 'or', 'in', 'some', 'case', 'in', 'backlog', 'item', 'one', 'good', 'example', 'of', 'this', 'happening', 'is', 'something', 'called', 'a', 'trade', 'off', 'matrix', 'when', 'building', 'a', 'tradeoff', 'matrix', 'we', 'talk', 'about', 'constraint', 'on', 'the', 'project', 'like', 'performance', 'adaptability', 'feature', 'set', 'budget', 'time', 'etc', 'we', 'identify', 'one', 'a', 'a', 'primary', 'constraint', 'two', 'a', 'secondary', 'and', 'all', 'others', 'are', 'considered', 'tertiary', 'this', 'isn', 't', 'a', 'hard', 'and', 'fast', 'rule', 'but', 'it', 'establishes', 'an', 'general', 'understanding', 'of', 'how', 'trade', 'offs', 'on', 'non', 'functional', 'need', 'will', 'be', 'decided', 'in', 'the', 'work', 'backlog', 'item', 'ok', 'last', 'one', 'not', 'all', 'backlog', 'item', 'have', 'to', 'be', 'user', 'story', 'if', 'you', 'have', 'an', 'actionable', 'non', 'functional', 'requirement', 'set', 'up', 'a', 'server', 'reconfigure', 'a', 'firewall', 'team', 'need', 'to', 'convert', 'to', 'a', 'new', 'version', 'of', 'the', 'ide', 'there', 'is', 'nothing', 'that', 'stop', 'you', 'from', 'creating', 'a', 'backlog', 'item', 'for', 'this', 'it', 'isn', 't', 'a', 'user', 'story', 'but', 'that', 's', 'ok', 'i', 'will', 'warn', 'that', 'most', 'team', 'find', 'a', 'correlation', 'between', 'the', 'number', 'of', 'item', 'in', 'the', 'backlog', 'that', 'are', 'user', 'story', 'and', 'their', 'ability', 'to', 'effectively', 'deliver', 'value', 'and', 'adapt', 'to', 'change', 'along', 'the', 'way', 'so', 'don', 't', 'get', 'carry', 'away', 'but', 'i', 'd', 'rather', 'see', 'a', 'team', 'put', 'in', 'a', 'non', 'u', 'in', 'their', 'backlog', 'than', 'try', 'to', 'pas', 'off', 'those', 'thing', 'a', 'user', 'story', 'like', 'a', 'a', 'firewall', 'i', 'want', 'to', 'be', 'updated', 'so', 'we', 'don', 't', 'get', 'h', 'xx', 'rd', 'real', 'backlog', 'item', 'i', 'saw', 'a', 'a', 'final', 'note', 'remember', 'that', 'in', 'agile', 'we', 'strive', 'to', 'adapt', 'to', 'change', 'so', 'don', 't', 'worry', 'about', 'getting', 'the', 'dod', 'or', 'architectural', 'document', 'perfect', 'the', 'first', 'time', 'it', 'can', 'change', 'a', 'you', 'learn', 'more']",System Requirements and AWS,4,"{'neg': 0.016, 'neu': 0.897, 'pos': 0.087, 'compound': 0.8105}",0.21845238095238093,4,Building and Compiling Python Projects,3query
52849063,Searching for free requirements management software,"<p>I am looking for a requirements management software, like DOORS, but for free <em>(I need to enter requirements, and generate a specification document, not only follow requirement traceability like reqtify allows you to do)</em>
I searched on the Internet, and I found the nearly perfect sofware : <strong>GenSpec</strong>. Moreover, GenSpec use templates with standards, like IEEE 830 which is the one I am interested in.</p>

<p>I said ""nearly perfect"" because the document generation does not work in GenSpec (runtime error). So I tried to subscribe to the google group to ask some assistance, but I think it is an old software which is not supported and updated anymore (for info, I downloaded GenSpec 6.8.40 and I work with Microsoft Office 2016, I think there is a compatibility issue, but it is only an hypothesis)</p>

<p>So I am posting this subject here if someone can :</p>

<ul>
<li>Either tell me if there is a similar software ?</li>
<li>Or, knows GenSpec and
can perhaps help me with my document generation issue (I could give
more details in this case) ?</li>
</ul>

<p>Thanks !</p>
",<requirements><requirements-management>,2018-10-17 07:04:10,288,-3,1,52930531,"<p>Yes, there is a similar SW - ReqView. See the SW Recommendations question at 
<a href=""https://softwarerecs.stackexchange.com/a/52607/41086"">https://softwarerecs.stackexchange.com/a/52607/41086</a></p>
",2018-10,i am looking for a requirements management software like doors but for free i need to enter requirements and generate a specification document not only follow requirement traceability like reqtify allows you to do i searched on the internet and i found the nearly perfect sofware genspec moreover genspec use templates with standards like ieee   which is the one i am interested in i said nearly perfect because the document generation does not work in genspec runtime error so i tried to subscribe to the google group to ask some assistance but i think it is an old software which is not supported and updated anymore for info i downloaded genspec       and i work with microsoft office   i think there is a compatibility issue but it is only an hypothesis so i am posting this subject here if someone can either tell me if there is a similar software or knows genspec and can perhaps help me with my document generation issue i could give more details in this case thanks,yes there is a similar sw reqview see the sw recommendations question at https softwarerecs stackexchange com a,"['requirements', 'requirements-management']","['i', 'am', 'looking', 'for', 'a', 'requirements', 'management', 'software', 'like', 'doors', 'but', 'for', 'free', 'i', 'need', 'to', 'enter', 'requirements', 'and', 'generate', 'a', 'specification', 'document', 'not', 'only', 'follow', 'requirement', 'traceability', 'like', 'reqtify', 'allows', 'you', 'to', 'do', 'i', 'searched', 'on', 'the', 'internet', 'and', 'i', 'found', 'the', 'nearly', 'perfect', 'sofware', 'genspec', 'moreover', 'genspec', 'use', 'templates', 'with', 'standards', 'like', 'ieee', 'which', 'is', 'the', 'one', 'i', 'am', 'interested', 'in', 'i', 'said', 'nearly', 'perfect', 'because', 'the', 'document', 'generation', 'does', 'not', 'work', 'in', 'genspec', 'runtime', 'error', 'so', 'i', 'tried', 'to', 'subscribe', 'to', 'the', 'google', 'group', 'to', 'ask', 'some', 'assistance', 'but', 'i', 'think', 'it', 'is', 'an', 'old', 'software', 'which', 'is', 'not', 'supported', 'and', 'updated', 'anymore', 'for', 'info', 'i', 'downloaded', 'genspec', 'and', 'i', 'work', 'with', 'microsoft', 'office', 'i', 'think', 'there', 'is', 'a', 'compatibility', 'issue', 'but', 'it', 'is', 'only', 'an', 'hypothesis', 'so', 'i', 'am', 'posting', 'this', 'subject', 'here', 'if', 'someone', 'can', 'either', 'tell', 'me', 'if', 'there', 'is', 'a', 'similar', 'software', 'or', 'knows', 'genspec', 'and', 'can', 'perhaps', 'help', 'me', 'with', 'my', 'document', 'generation', 'issue', 'i', 'could', 'give', 'more', 'details', 'in', 'this', 'case', 'thanks']","['yes', 'there', 'is', 'a', 'similar', 'sw', 'reqview', 'see', 'the', 'sw', 'recommendations', 'question', 'at', 'https', 'softwarerecs', 'stackexchange', 'com', 'a']","['looking', 'requirement', 'management', 'software', 'like', 'door', 'free', 'need', 'enter', 'requirement', 'generate', 'specification', 'document', 'follow', 'requirement', 'traceability', 'like', 'reqtify', 'allows', 'searched', 'internet', 'found', 'nearly', 'perfect', 'sofware', 'genspec', 'moreover', 'genspec', 'use', 'template', 'standard', 'like', 'ieee', 'one', 'interested', 'said', 'nearly', 'perfect', 'document', 'generation', 'doe', 'work', 'genspec', 'runtime', 'error', 'tried', 'subscribe', 'google', 'group', 'ask', 'assistance', 'think', 'old', 'software', 'supported', 'updated', 'anymore', 'info', 'downloaded', 'genspec', 'work', 'microsoft', 'office', 'think', 'compatibility', 'issue', 'hypothesis', 'posting', 'subject', 'someone', 'either', 'tell', 'similar', 'software', 'know', 'genspec', 'perhaps', 'help', 'document', 'generation', 'issue', 'could', 'give', 'detail', 'case', 'thanks']","['yes', 'there', 'is', 'a', 'similar', 'sw', 'reqview', 'see', 'the', 'sw', 'recommendation', 'question', 'at', 'http', 'softwarerecs', 'stackexchange', 'com', 'a']",System Requirements and AWS,0,"{'neg': 0.013, 'neu': 0.827, 'pos': 0.16, 'compound': 0.9836}",0.32083333333333336,0,System Requirements and AWS,3query
52193141,Storing requirements/specification documents in TFS on-premise,"<p>We're starting a new development project using on-premise TFS 2018, git and Visual Studio. In the past we've followed the Agile model of creating epics and user stories and putting the requirements/ui mockups and other details directly in the user stories.</p>

<p>After living through that approach, we don't want go back down that road for the following reasons:
1) Once that feature is shipped, it becomes extremely difficult to locate the info. Who remembers what feature was done in what user story?
2) No centralized place to store feature documentation. Of course, we all don't want take the waterfall approach of spending 2 years writing feature requirements, but there is something to be said of having a centralized place organized by feature area that contains the relevant documentation.
3) Have you ever tried to read an extensive user story with requirements acceptance testing through either the web interface or through Visual Studio? It gets old pretty fast having to read through a 8 line window.</p>

<p>What we would like to do is do a hybrid of documentation and reference a link to the doc in the user story.  The user story exists for sprint tracking, but the details are stored in the document.  After the feature/user story has shipped, we can refer to the doc.</p>

<p>Therefore the question becomes how to store this type of info in TFS and link to it so it can open with a link in the user story.  We know we can do this with SharePoint, but is it possible to do in on-premise TFS?</p>
",<sharepoint><tfs><documentation><requirements>,2018-09-05 20:44:37,482,2,1,52215778,"<p>Currently, this is not directly possible in TFS with outgoing with some 3rd party vendors like <a href=""https://marketplace.visualstudio.com/items?itemName=edevtech-mr.inteGREAT4TFS"" rel=""nofollow noreferrer"">Modernrequirements</a> which will be <strong>paid services</strong>.</p>

<p>You could always use the CMMI template which is used for creating and managing requirement Workitems, but not for storing a huge set of requirements as you typically stored in requirement documents. </p>

<ol>
<li>As you mentioned there are other ways like  Storing the documents in
SharePoint, one drive etc., and link to the user stories</li>
<li>Creating a
<a href=""https://marketplace.visualstudio.com/items?itemName=cschleiden.markdown"" rel=""nofollow noreferrer"">markdown</a>
in the user stories itself.</li>
<li>Check-in those documents in the version control(Git,TFVS)</li>
</ol>

<p>Refer to this similar <a href=""https://stackoverflow.com/a/35968872/7073340"">SO</a> in order to understand it better.</p>
",2018-09,we re starting a new development project using on premise tfs   git and visual studio in the past we ve followed the agile model of creating epics and user stories and putting the requirements ui mockups and other details directly in the user stories after living through that approach we don t want go back down that road for the following reasons   once that feature is shipped it becomes extremely difficult to locate the info who remembers what feature was done in what user story   no centralized place to store feature documentation of course we all don t want take the waterfall approach of spending   years writing feature requirements but there is something to be said of having a centralized place organized by feature area that contains the relevant documentation   have you ever tried to read an extensive user story with requirements acceptance testing through either the web interface or through visual studio it gets old pretty fast having to read through a   line window what we would like to do is do a hybrid of documentation and reference a link to the doc in the user story the user story exists for sprint tracking but the details are stored in the document after the feature user story has shipped we can refer to the doc therefore the question becomes how to store this type of info in tfs and link to it so it can open with a link in the user story we know we can do this with sharepoint but is it possible to do in on premise tfs,currently this is not directly possible in tfs with outgoing with some  rd party vendors like modernrequirements which will be paid services you could always use the cmmi template which is used for creating and managing requirement workitems but not for storing a huge set of requirements as you typically stored in requirement documents as you mentioned there are other ways like storing the documents in sharepoint one drive etc and link to the user stories creating a markdown in the user stories itself check in those documents in the version control git tfvs refer to this similar so in order to understand it better,"['sharepoint', 'tfs', 'documentation', 'requirements']","['we', 're', 'starting', 'a', 'new', 'development', 'project', 'using', 'on', 'premise', 'tfs', 'git', 'and', 'visual', 'studio', 'in', 'the', 'past', 'we', 've', 'followed', 'the', 'agile', 'model', 'of', 'creating', 'epics', 'and', 'user', 'stories', 'and', 'putting', 'the', 'requirements', 'ui', 'mockups', 'and', 'other', 'details', 'directly', 'in', 'the', 'user', 'stories', 'after', 'living', 'through', 'that', 'approach', 'we', 'don', 't', 'want', 'go', 'back', 'down', 'that', 'road', 'for', 'the', 'following', 'reasons', 'once', 'that', 'feature', 'is', 'shipped', 'it', 'becomes', 'extremely', 'difficult', 'to', 'locate', 'the', 'info', 'who', 'remembers', 'what', 'feature', 'was', 'done', 'in', 'what', 'user', 'story', 'no', 'centralized', 'place', 'to', 'store', 'feature', 'documentation', 'of', 'course', 'we', 'all', 'don', 't', 'want', 'take', 'the', 'waterfall', 'approach', 'of', 'spending', 'years', 'writing', 'feature', 'requirements', 'but', 'there', 'is', 'something', 'to', 'be', 'said', 'of', 'having', 'a', 'centralized', 'place', 'organized', 'by', 'feature', 'area', 'that', 'contains', 'the', 'relevant', 'documentation', 'have', 'you', 'ever', 'tried', 'to', 'read', 'an', 'extensive', 'user', 'story', 'with', 'requirements', 'acceptance', 'testing', 'through', 'either', 'the', 'web', 'interface', 'or', 'through', 'visual', 'studio', 'it', 'gets', 'old', 'pretty', 'fast', 'having', 'to', 'read', 'through', 'a', 'line', 'window', 'what', 'we', 'would', 'like', 'to', 'do', 'is', 'do', 'a', 'hybrid', 'of', 'documentation', 'and', 'reference', 'a', 'link', 'to', 'the', 'doc', 'in', 'the', 'user', 'story', 'the', 'user', 'story', 'exists', 'for', 'sprint', 'tracking', 'but', 'the', 'details', 'are', 'stored', 'in', 'the', 'document', 'after', 'the', 'feature', 'user', 'story', 'has', 'shipped', 'we', 'can', 'refer', 'to', 'the', 'doc', 'therefore', 'the', 'question', 'becomes', 'how', 'to', 'store', 'this', 'type', 'of', 'info', 'in', 'tfs', 'and', 'link', 'to', 'it', 'so', 'it', 'can', 'open', 'with', 'a', 'link', 'in', 'the', 'user', 'story', 'we', 'know', 'we', 'can', 'do', 'this', 'with', 'sharepoint', 'but', 'is', 'it', 'possible', 'to', 'do', 'in', 'on', 'premise', 'tfs']","['currently', 'this', 'is', 'not', 'directly', 'possible', 'in', 'tfs', 'with', 'outgoing', 'with', 'some', 'rd', 'party', 'vendors', 'like', 'modernrequirements', 'which', 'will', 'be', 'paid', 'services', 'you', 'could', 'always', 'use', 'the', 'cmmi', 'template', 'which', 'is', 'used', 'for', 'creating', 'and', 'managing', 'requirement', 'workitems', 'but', 'not', 'for', 'storing', 'a', 'huge', 'set', 'of', 'requirements', 'as', 'you', 'typically', 'stored', 'in', 'requirement', 'documents', 'as', 'you', 'mentioned', 'there', 'are', 'other', 'ways', 'like', 'storing', 'the', 'documents', 'in', 'sharepoint', 'one', 'drive', 'etc', 'and', 'link', 'to', 'the', 'user', 'stories', 'creating', 'a', 'markdown', 'in', 'the', 'user', 'stories', 'itself', 'check', 'in', 'those', 'documents', 'in', 'the', 'version', 'control', 'git', 'tfvs', 'refer', 'to', 'this', 'similar', 'so', 'in', 'order', 'to', 'understand', 'it', 'better']","['starting', 'new', 'development', 'project', 'using', 'premise', 'tfs', 'git', 'visual', 'studio', 'past', 'followed', 'agile', 'model', 'creating', 'epic', 'user', 'story', 'putting', 'requirement', 'ui', 'mockups', 'detail', 'directly', 'user', 'story', 'living', 'approach', 'want', 'go', 'back', 'road', 'following', 'reason', 'feature', 'shipped', 'becomes', 'extremely', 'difficult', 'locate', 'info', 'remembers', 'feature', 'wa', 'done', 'user', 'story', 'centralized', 'place', 'store', 'feature', 'documentation', 'course', 'want', 'take', 'waterfall', 'approach', 'spending', 'year', 'writing', 'feature', 'requirement', 'something', 'said', 'centralized', 'place', 'organized', 'feature', 'area', 'contains', 'relevant', 'documentation', 'ever', 'tried', 'read', 'extensive', 'user', 'story', 'requirement', 'acceptance', 'testing', 'either', 'web', 'interface', 'visual', 'studio', 'get', 'old', 'pretty', 'fast', 'read', 'line', 'window', 'would', 'like', 'hybrid', 'documentation', 'reference', 'link', 'doc', 'user', 'story', 'user', 'story', 'exists', 'sprint', 'tracking', 'detail', 'stored', 'document', 'feature', 'user', 'story', 'ha', 'shipped', 'refer', 'doc', 'therefore', 'question', 'becomes', 'store', 'type', 'info', 'tfs', 'link', 'open', 'link', 'user', 'story', 'know', 'sharepoint', 'possible', 'premise', 'tfs']","['currently', 'this', 'is', 'not', 'directly', 'possible', 'in', 'tfs', 'with', 'outgoing', 'with', 'some', 'rd', 'party', 'vendor', 'like', 'modernrequirements', 'which', 'will', 'be', 'paid', 'service', 'you', 'could', 'always', 'use', 'the', 'cmmi', 'template', 'which', 'is', 'used', 'for', 'creating', 'and', 'managing', 'requirement', 'workitems', 'but', 'not', 'for', 'storing', 'a', 'huge', 'set', 'of', 'requirement', 'a', 'you', 'typically', 'stored', 'in', 'requirement', 'document', 'a', 'you', 'mentioned', 'there', 'are', 'other', 'way', 'like', 'storing', 'the', 'document', 'in', 'sharepoint', 'one', 'drive', 'etc', 'and', 'link', 'to', 'the', 'user', 'story', 'creating', 'a', 'markdown', 'in', 'the', 'user', 'story', 'itself', 'check', 'in', 'those', 'document', 'in', 'the', 'version', 'control', 'git', 'tfvs', 'refer', 'to', 'this', 'similar', 'so', 'in', 'order', 'to', 'understand', 'it', 'better']",System Requirements and AWS,3,"{'neg': 0.022, 'neu': 0.926, 'pos': 0.052, 'compound': 0.8995}",0.034516214779372674,3,Python Package Installation and Management,3query
52153676,What is the requirements for running a Rust compiled program on another Windows machine?,"<p>I'm totally new to Rust. I installed Rust on my Windows 10 machine. Created a simple helloworld program like this:</p>

<pre><code>fn main() {
    print!(""Hello world!"");
}
</code></pre>

<p>And compiled it with <code>rustc rust.rs</code>. After that there are two files generated:</p>

<pre><code>admin@myserver MINGW64 ~/Documents/rust_test
$ ls -latrh
total 1.6M
drwxr-xr-x 1 admin 197121    0 Sep  2 03:28 ..
-rw-r--r-- 1 admin 197121   45 Sep  4 00:26 rust.rs
-rwxr-xr-x 1 admin 197121 146K Sep  4 00:26 rust.exe
-rw-r--r-- 1 admin 197121 1.5M Sep  4 00:26 rust.pdb
drwxr-xr-x 1 admin 197121    0 Sep  4 00:26 .
</code></pre>

<p>I can successfully run <code>rust.exe</code> and get the proper result. However, when I copy <code>rust.exe</code> to another newly created Windows 2016 virtual machine and run it, I got this error:</p>

<p><a href=""https://i.stack.imgur.com/eJ5QJ.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/eJ5QJ.png"" alt=""enter image description here""></a></p>

<p>My question is, what's the requirement to run a Rust compiled program on a machine that doesn't have Rust installed? Do I need to install the <code>vc++ build tools</code> on it too (just as I did on the development machine)? </p>
",<compilation><rust><requirements>,2018-09-03 16:44:45,2322,6,3,52160045,"<p>You need to install the <a href=""https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads"" rel=""nofollow noreferrer"">Microsoft Visual C++ Redistributable Package</a> in the correct version. </p>

<p>The ""140"" in the file name in your error message indicates the version, which should be the <a href=""https://www.microsoft.com/en-US/download/details.aspx?id=48145"" rel=""nofollow noreferrer"">Visual C++ Redistributable for Visual Studio 2015</a>.</p>

<hr>

<p>As a shortcut, here are the most common dowload links for other versions:</p>

<ul>
<li>Microsoft Visual C++ Redistributable 2017 — <a href=""https://aka.ms/vs/15/release/vc_redist.x86.exe"" rel=""nofollow noreferrer"">32-bit (x86)</a>, <a href=""https://aka.ms/vs/15/release/vc_redist.x64.exe"" rel=""nofollow noreferrer"">64-bit (x64)</a></li>
<li>Microsoft Visual C++ Redistributable 2015 — <a href=""https://download.microsoft.com/download/9/3/F/93FCF1E7-E6A4-478B-96E7-D4B285925B00/vc_redist.x86.exe"" rel=""nofollow noreferrer"">32-bit (x86)</a>, <a href=""https://download.microsoft.com/download/9/3/F/93FCF1E7-E6A4-478B-96E7-D4B285925B00/vc_redist.x64.exe"" rel=""nofollow noreferrer"">64-bit (x64)</a></li>
<li>Microsoft Visual C++ Redistributable 2013 — <a href=""http://download.microsoft.com/download/2/E/6/2E61CFA4-993B-4DD4-91DA-3737CD5CD6E3/vcredist_x86.exe"" rel=""nofollow noreferrer"">32-bit (x86)</a>, <a href=""http://download.microsoft.com/download/2/E/6/2E61CFA4-993B-4DD4-91DA-3737CD5CD6E3/vcredist_x64.exe"" rel=""nofollow noreferrer"">64-bit (x64)</a></li>
<li>Microsoft Visual C++ Redistributable 2012 — <a href=""http://download.microsoft.com/download/1/6/B/16B06F60-3B20-4FF2-B699-5E9B7962F9AE/VSU3/vcredist_x86.exe"" rel=""nofollow noreferrer"">32-bit (x86)</a>, <a href=""http://download.microsoft.com/download/1/6/B/16B06F60-3B20-4FF2-B699-5E9B7962F9AE/VSU3/vcredist_x64.exe"" rel=""nofollow noreferrer"">64-bit (x64)</a></li>
<li>Microsoft Visual C++ Redistributable 2010 — <a href=""http://download.microsoft.com/download/5/B/C/5BC5DBB3-652D-4DCE-B14A-475AB85EEF6E/vcredist_x86.exe"" rel=""nofollow noreferrer"">32-bit (x86)</a>, <a href=""http://download.microsoft.com/download/d/2/4/d242c3fb-da5a-4542-ad66-f9661d0a8d19/vcredist_x64.exe"" rel=""nofollow noreferrer"">64-bit (x64)</a></li>
<li>Microsoft Visual C++ Redistributable 2008 — <a href=""http://download.microsoft.com/download/1/1/1/1116b75a-9ec3-481a-a3c8-1777b5381140/vcredist_x86.exe"" rel=""nofollow noreferrer"">32-bit (x86)</a>, <a href=""http://download.microsoft.com/download/d/2/4/d242c3fb-da5a-4542-ad66-f9661d0a8d19/vcredist_x64.exe"" rel=""nofollow noreferrer"">64-bit (x64)</a></li>
<li>Microsoft Visual C++ Redistributable 2005 — <a href=""http://download.microsoft.com/download/d/3/4/d342efa6-3266-4157-a2ec-5174867be706/vcredist_x86.exe"" rel=""nofollow noreferrer"">32-bit (x86)</a>, <a href=""http://download.microsoft.com/download/9/1/4/914851c6-9141-443b-bdb4-8bad3a57bea9/vcredist_x64.exe"" rel=""nofollow noreferrer"">64-bit (x64)</a></li>
</ul>
",2018-09,i m totally new to rust i installed rust on my windows   machine created a simple helloworld program like this fn main print hello world and compiled it with rustc rust rs after that there are two files generated admin myserver mingw  documents rust_test ls latrh total    m drwxr xr x   admin     sep       rw r r   admin     sep       rust rs rwxr xr x   admin    k sep       rust exe rw r r   admin      m sep       rust pdb drwxr xr x   admin     sep       i can successfully run rust exe and get the proper result however when i copy rust exe to another newly created windows   virtual machine and run it i got this error my question is what s the requirement to run a rust compiled program on a machine that doesn t have rust installed do i need to install the vc build tools on it too just as i did on the development machine,you need to install the microsoft visual c redistributable package in the correct version the   in the file name in your error message indicates the version which should be the visual c redistributable for visual studio   as a shortcut here are the most common dowload links for other versions microsoft visual c redistributable     bit x    bit x  microsoft visual c redistributable     bit x    bit x  microsoft visual c redistributable     bit x    bit x  microsoft visual c redistributable     bit x    bit x  microsoft visual c redistributable     bit x    bit x  microsoft visual c redistributable     bit x    bit x  microsoft visual c redistributable     bit x    bit x,"['compilation', 'rust', 'requirements']","['i', 'm', 'totally', 'new', 'to', 'rust', 'i', 'installed', 'rust', 'on', 'my', 'windows', 'machine', 'created', 'a', 'simple', 'helloworld', 'program', 'like', 'this', 'fn', 'main', 'print', 'hello', 'world', 'and', 'compiled', 'it', 'with', 'rustc', 'rust', 'rs', 'after', 'that', 'there', 'are', 'two', 'files', 'generated', 'admin', 'myserver', 'mingw', 'documents', 'rust_test', 'ls', 'latrh', 'total', 'm', 'drwxr', 'xr', 'x', 'admin', 'sep', 'rw', 'r', 'r', 'admin', 'sep', 'rust', 'rs', 'rwxr', 'xr', 'x', 'admin', 'k', 'sep', 'rust', 'exe', 'rw', 'r', 'r', 'admin', 'm', 'sep', 'rust', 'pdb', 'drwxr', 'xr', 'x', 'admin', 'sep', 'i', 'can', 'successfully', 'run', 'rust', 'exe', 'and', 'get', 'the', 'proper', 'result', 'however', 'when', 'i', 'copy', 'rust', 'exe', 'to', 'another', 'newly', 'created', 'windows', 'virtual', 'machine', 'and', 'run', 'it', 'i', 'got', 'this', 'error', 'my', 'question', 'is', 'what', 's', 'the', 'requirement', 'to', 'run', 'a', 'rust', 'compiled', 'program', 'on', 'a', 'machine', 'that', 'doesn', 't', 'have', 'rust', 'installed', 'do', 'i', 'need', 'to', 'install', 'the', 'vc', 'build', 'tools', 'on', 'it', 'too', 'just', 'as', 'i', 'did', 'on', 'the', 'development', 'machine']","['you', 'need', 'to', 'install', 'the', 'microsoft', 'visual', 'c', 'redistributable', 'package', 'in', 'the', 'correct', 'version', 'the', 'in', 'the', 'file', 'name', 'in', 'your', 'error', 'message', 'indicates', 'the', 'version', 'which', 'should', 'be', 'the', 'visual', 'c', 'redistributable', 'for', 'visual', 'studio', 'as', 'a', 'shortcut', 'here', 'are', 'the', 'most', 'common', 'dowload', 'links', 'for', 'other', 'versions', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x']","['totally', 'new', 'rust', 'installed', 'rust', 'window', 'machine', 'created', 'simple', 'helloworld', 'program', 'like', 'fn', 'main', 'print', 'hello', 'world', 'compiled', 'rustc', 'rust', 'r', 'two', 'file', 'generated', 'admin', 'myserver', 'mingw', 'document', 'rust_test', 'l', 'latrh', 'total', 'drwxr', 'xr', 'x', 'admin', 'sep', 'rw', 'r', 'r', 'admin', 'sep', 'rust', 'r', 'rwxr', 'xr', 'x', 'admin', 'k', 'sep', 'rust', 'exe', 'rw', 'r', 'r', 'admin', 'sep', 'rust', 'pdb', 'drwxr', 'xr', 'x', 'admin', 'sep', 'successfully', 'run', 'rust', 'exe', 'get', 'proper', 'result', 'however', 'copy', 'rust', 'exe', 'another', 'newly', 'created', 'window', 'virtual', 'machine', 'run', 'got', 'error', 'question', 'requirement', 'run', 'rust', 'compiled', 'program', 'machine', 'rust', 'installed', 'need', 'install', 'vc', 'build', 'tool', 'development', 'machine']","['you', 'need', 'to', 'install', 'the', 'microsoft', 'visual', 'c', 'redistributable', 'package', 'in', 'the', 'correct', 'version', 'the', 'in', 'the', 'file', 'name', 'in', 'your', 'error', 'message', 'indicates', 'the', 'version', 'which', 'should', 'be', 'the', 'visual', 'c', 'redistributable', 'for', 'visual', 'studio', 'a', 'a', 'shortcut', 'here', 'are', 'the', 'most', 'common', 'dowload', 'link', 'for', 'other', 'version', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x', 'microsoft', 'visual', 'c', 'redistributable', 'bit', 'x', 'bit', 'x']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 0.932, 'pos': 0.068, 'compound': 0.8639}",0.18330627705627706,0,System Requirements and AWS,3query
52153676,What is the requirements for running a Rust compiled program on another Windows machine?,"<p>I'm totally new to Rust. I installed Rust on my Windows 10 machine. Created a simple helloworld program like this:</p>

<pre><code>fn main() {
    print!(""Hello world!"");
}
</code></pre>

<p>And compiled it with <code>rustc rust.rs</code>. After that there are two files generated:</p>

<pre><code>admin@myserver MINGW64 ~/Documents/rust_test
$ ls -latrh
total 1.6M
drwxr-xr-x 1 admin 197121    0 Sep  2 03:28 ..
-rw-r--r-- 1 admin 197121   45 Sep  4 00:26 rust.rs
-rwxr-xr-x 1 admin 197121 146K Sep  4 00:26 rust.exe
-rw-r--r-- 1 admin 197121 1.5M Sep  4 00:26 rust.pdb
drwxr-xr-x 1 admin 197121    0 Sep  4 00:26 .
</code></pre>

<p>I can successfully run <code>rust.exe</code> and get the proper result. However, when I copy <code>rust.exe</code> to another newly created Windows 2016 virtual machine and run it, I got this error:</p>

<p><a href=""https://i.stack.imgur.com/eJ5QJ.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/eJ5QJ.png"" alt=""enter image description here""></a></p>

<p>My question is, what's the requirement to run a Rust compiled program on a machine that doesn't have Rust installed? Do I need to install the <code>vc++ build tools</code> on it too (just as I did on the development machine)? </p>
",<compilation><rust><requirements>,2018-09-03 16:44:45,2322,6,3,52166618,"<p>You can also statically link the CRT by adding</p>

<pre><code>[target.x86_64-pc-windows-msvc]
rustflags = [""-Ctarget-feature=+crt-static"", ""-Zunstable-options""]
</code></pre>

<p>to your <code>.cargo/config</code>. As pointed out in <a href=""https://stackoverflow.com/a/44387312/2430485"">this Stack Overflow answer</a>.</p>
",2018-09,i m totally new to rust i installed rust on my windows   machine created a simple helloworld program like this fn main print hello world and compiled it with rustc rust rs after that there are two files generated admin myserver mingw  documents rust_test ls latrh total    m drwxr xr x   admin     sep       rw r r   admin     sep       rust rs rwxr xr x   admin    k sep       rust exe rw r r   admin      m sep       rust pdb drwxr xr x   admin     sep       i can successfully run rust exe and get the proper result however when i copy rust exe to another newly created windows   virtual machine and run it i got this error my question is what s the requirement to run a rust compiled program on a machine that doesn t have rust installed do i need to install the vc build tools on it too just as i did on the development machine,you can also statically link the crt by adding target x _  pc windows msvc rustflags ctarget feature crt static zunstable options to your cargo config as pointed out in this stack overflow answer,"['compilation', 'rust', 'requirements']","['i', 'm', 'totally', 'new', 'to', 'rust', 'i', 'installed', 'rust', 'on', 'my', 'windows', 'machine', 'created', 'a', 'simple', 'helloworld', 'program', 'like', 'this', 'fn', 'main', 'print', 'hello', 'world', 'and', 'compiled', 'it', 'with', 'rustc', 'rust', 'rs', 'after', 'that', 'there', 'are', 'two', 'files', 'generated', 'admin', 'myserver', 'mingw', 'documents', 'rust_test', 'ls', 'latrh', 'total', 'm', 'drwxr', 'xr', 'x', 'admin', 'sep', 'rw', 'r', 'r', 'admin', 'sep', 'rust', 'rs', 'rwxr', 'xr', 'x', 'admin', 'k', 'sep', 'rust', 'exe', 'rw', 'r', 'r', 'admin', 'm', 'sep', 'rust', 'pdb', 'drwxr', 'xr', 'x', 'admin', 'sep', 'i', 'can', 'successfully', 'run', 'rust', 'exe', 'and', 'get', 'the', 'proper', 'result', 'however', 'when', 'i', 'copy', 'rust', 'exe', 'to', 'another', 'newly', 'created', 'windows', 'virtual', 'machine', 'and', 'run', 'it', 'i', 'got', 'this', 'error', 'my', 'question', 'is', 'what', 's', 'the', 'requirement', 'to', 'run', 'a', 'rust', 'compiled', 'program', 'on', 'a', 'machine', 'that', 'doesn', 't', 'have', 'rust', 'installed', 'do', 'i', 'need', 'to', 'install', 'the', 'vc', 'build', 'tools', 'on', 'it', 'too', 'just', 'as', 'i', 'did', 'on', 'the', 'development', 'machine']","['you', 'can', 'also', 'statically', 'link', 'the', 'crt', 'by', 'adding', 'target', 'x', '_', 'pc', 'windows', 'msvc', 'rustflags', 'ctarget', 'feature', 'crt', 'static', 'zunstable', 'options', 'to', 'your', 'cargo', 'config', 'as', 'pointed', 'out', 'in', 'this', 'stack', 'overflow', 'answer']","['totally', 'new', 'rust', 'installed', 'rust', 'window', 'machine', 'created', 'simple', 'helloworld', 'program', 'like', 'fn', 'main', 'print', 'hello', 'world', 'compiled', 'rustc', 'rust', 'r', 'two', 'file', 'generated', 'admin', 'myserver', 'mingw', 'document', 'rust_test', 'l', 'latrh', 'total', 'drwxr', 'xr', 'x', 'admin', 'sep', 'rw', 'r', 'r', 'admin', 'sep', 'rust', 'r', 'rwxr', 'xr', 'x', 'admin', 'k', 'sep', 'rust', 'exe', 'rw', 'r', 'r', 'admin', 'sep', 'rust', 'pdb', 'drwxr', 'xr', 'x', 'admin', 'sep', 'successfully', 'run', 'rust', 'exe', 'get', 'proper', 'result', 'however', 'copy', 'rust', 'exe', 'another', 'newly', 'created', 'window', 'virtual', 'machine', 'run', 'got', 'error', 'question', 'requirement', 'run', 'rust', 'compiled', 'program', 'machine', 'rust', 'installed', 'need', 'install', 'vc', 'build', 'tool', 'development', 'machine']","['you', 'can', 'also', 'statically', 'link', 'the', 'crt', 'by', 'adding', 'target', 'x', '_', 'pc', 'window', 'msvc', 'rustflags', 'ctarget', 'feature', 'crt', 'static', 'zunstable', 'option', 'to', 'your', 'cargo', 'config', 'a', 'pointed', 'out', 'in', 'this', 'stack', 'overflow', 'answer']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 0.932, 'pos': 0.068, 'compound': 0.8639}",0.18330627705627706,0,System Requirements and AWS,3query
52153676,What is the requirements for running a Rust compiled program on another Windows machine?,"<p>I'm totally new to Rust. I installed Rust on my Windows 10 machine. Created a simple helloworld program like this:</p>

<pre><code>fn main() {
    print!(""Hello world!"");
}
</code></pre>

<p>And compiled it with <code>rustc rust.rs</code>. After that there are two files generated:</p>

<pre><code>admin@myserver MINGW64 ~/Documents/rust_test
$ ls -latrh
total 1.6M
drwxr-xr-x 1 admin 197121    0 Sep  2 03:28 ..
-rw-r--r-- 1 admin 197121   45 Sep  4 00:26 rust.rs
-rwxr-xr-x 1 admin 197121 146K Sep  4 00:26 rust.exe
-rw-r--r-- 1 admin 197121 1.5M Sep  4 00:26 rust.pdb
drwxr-xr-x 1 admin 197121    0 Sep  4 00:26 .
</code></pre>

<p>I can successfully run <code>rust.exe</code> and get the proper result. However, when I copy <code>rust.exe</code> to another newly created Windows 2016 virtual machine and run it, I got this error:</p>

<p><a href=""https://i.stack.imgur.com/eJ5QJ.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/eJ5QJ.png"" alt=""enter image description here""></a></p>

<p>My question is, what's the requirement to run a Rust compiled program on a machine that doesn't have Rust installed? Do I need to install the <code>vc++ build tools</code> on it too (just as I did on the development machine)? </p>
",<compilation><rust><requirements>,2018-09-03 16:44:45,2322,6,3,68900092,"<p>I ran into the same problem but I resolved it by installing Microsoft Visual C++ Redistributable 2019.  You do not need to stick with 2015.  Any newer version will work just fine.</p>
",2018-09,i m totally new to rust i installed rust on my windows   machine created a simple helloworld program like this fn main print hello world and compiled it with rustc rust rs after that there are two files generated admin myserver mingw  documents rust_test ls latrh total    m drwxr xr x   admin     sep       rw r r   admin     sep       rust rs rwxr xr x   admin    k sep       rust exe rw r r   admin      m sep       rust pdb drwxr xr x   admin     sep       i can successfully run rust exe and get the proper result however when i copy rust exe to another newly created windows   virtual machine and run it i got this error my question is what s the requirement to run a rust compiled program on a machine that doesn t have rust installed do i need to install the vc build tools on it too just as i did on the development machine,i ran into the same problem but i resolved it by installing microsoft visual c redistributable   you do not need to stick with   any newer version will work just fine,"['compilation', 'rust', 'requirements']","['i', 'm', 'totally', 'new', 'to', 'rust', 'i', 'installed', 'rust', 'on', 'my', 'windows', 'machine', 'created', 'a', 'simple', 'helloworld', 'program', 'like', 'this', 'fn', 'main', 'print', 'hello', 'world', 'and', 'compiled', 'it', 'with', 'rustc', 'rust', 'rs', 'after', 'that', 'there', 'are', 'two', 'files', 'generated', 'admin', 'myserver', 'mingw', 'documents', 'rust_test', 'ls', 'latrh', 'total', 'm', 'drwxr', 'xr', 'x', 'admin', 'sep', 'rw', 'r', 'r', 'admin', 'sep', 'rust', 'rs', 'rwxr', 'xr', 'x', 'admin', 'k', 'sep', 'rust', 'exe', 'rw', 'r', 'r', 'admin', 'm', 'sep', 'rust', 'pdb', 'drwxr', 'xr', 'x', 'admin', 'sep', 'i', 'can', 'successfully', 'run', 'rust', 'exe', 'and', 'get', 'the', 'proper', 'result', 'however', 'when', 'i', 'copy', 'rust', 'exe', 'to', 'another', 'newly', 'created', 'windows', 'virtual', 'machine', 'and', 'run', 'it', 'i', 'got', 'this', 'error', 'my', 'question', 'is', 'what', 's', 'the', 'requirement', 'to', 'run', 'a', 'rust', 'compiled', 'program', 'on', 'a', 'machine', 'that', 'doesn', 't', 'have', 'rust', 'installed', 'do', 'i', 'need', 'to', 'install', 'the', 'vc', 'build', 'tools', 'on', 'it', 'too', 'just', 'as', 'i', 'did', 'on', 'the', 'development', 'machine']","['i', 'ran', 'into', 'the', 'same', 'problem', 'but', 'i', 'resolved', 'it', 'by', 'installing', 'microsoft', 'visual', 'c', 'redistributable', 'you', 'do', 'not', 'need', 'to', 'stick', 'with', 'any', 'newer', 'version', 'will', 'work', 'just', 'fine']","['totally', 'new', 'rust', 'installed', 'rust', 'window', 'machine', 'created', 'simple', 'helloworld', 'program', 'like', 'fn', 'main', 'print', 'hello', 'world', 'compiled', 'rustc', 'rust', 'r', 'two', 'file', 'generated', 'admin', 'myserver', 'mingw', 'document', 'rust_test', 'l', 'latrh', 'total', 'drwxr', 'xr', 'x', 'admin', 'sep', 'rw', 'r', 'r', 'admin', 'sep', 'rust', 'r', 'rwxr', 'xr', 'x', 'admin', 'k', 'sep', 'rust', 'exe', 'rw', 'r', 'r', 'admin', 'sep', 'rust', 'pdb', 'drwxr', 'xr', 'x', 'admin', 'sep', 'successfully', 'run', 'rust', 'exe', 'get', 'proper', 'result', 'however', 'copy', 'rust', 'exe', 'another', 'newly', 'created', 'window', 'virtual', 'machine', 'run', 'got', 'error', 'question', 'requirement', 'run', 'rust', 'compiled', 'program', 'machine', 'rust', 'installed', 'need', 'install', 'vc', 'build', 'tool', 'development', 'machine']","['i', 'ran', 'into', 'the', 'same', 'problem', 'but', 'i', 'resolved', 'it', 'by', 'installing', 'microsoft', 'visual', 'c', 'redistributable', 'you', 'do', 'not', 'need', 'to', 'stick', 'with', 'any', 'newer', 'version', 'will', 'work', 'just', 'fine']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 0.932, 'pos': 0.068, 'compound': 0.8639}",0.18330627705627706,0,System Requirements and AWS,3query
52021074,why templated non const parameter constructor is preferred to given copy constructor,"<p>I want to make my class be able to be used in a <code>std::variant</code>.</p>

<p>The simply code that should work is:</p>

<pre><code>int main()
{
    std::variant&lt; int, A &gt; v;

    A a(1);
    v = a;
}
</code></pre>

<p>My class contains a templated constructor:</p>

<pre><code> template &lt;typename T&gt; A( T&amp; );
</code></pre>

<p>At this point the trouble starts! The constructor binds to the call from <code>std::variant</code> and not the provided <code>A(const A&amp;)</code> is used anymore.</p>

<p>For copy&amp;paste reasons the full example here:</p>

<pre><code>#include &lt;iostream&gt;
#include &lt;variant&gt;

class A
{
    private:
        int x;

    public:

        A( A&amp;&amp;) {}
        A( const A&amp; ) {}
        A(){}
        ~A() {}

        A&amp; operator=( const A&amp; ) { return *this;}
        A&amp; operator=( A&amp;&amp; ) {return *this;}

        template &lt;typename T&gt;
            A( T&amp; t  ) 
            {
                std::cout &lt;&lt; __PRETTY_FUNCTION__ &lt;&lt; std::endl;
            }

        A(int _x):x{_x}{}
};

int main()
{
    std::variant&lt; int, A &gt; v;

    A a(1);
    v = a;
}
</code></pre>

<p>Background:</p>

<p>Why the template here?
The problem starts while using a constructor which takes a serializer type. The serializer can have multiple types, depends on files or streams to serialize with.</p>

<p>Remark: I know that the functionality of the constructors is missing!</p>
",<c++><c++17><variant><requirements>,2018-08-25 20:41:59,121,2,1,52021094,"<p>The problem is not with <code>std::variant</code>. The problem is with the constructor template,</p>

<pre><code>template &lt;typename T&gt;
A(T&amp; t)
</code></pre>

<p>Such constructors are problematic because when the argument is a non-<code>const</code> lvalue of type <code>A</code>, this constructor is preferred over the copy constructor taking <code>const A&amp;</code>---which is usually not the intended behaviour. To prevent this, we usually constrain this constructor with SFINAE:</p>

<pre><code>template &lt;typename T, typename = std::enable_if_t&lt;!std::is_same_v&lt;std::decay_t&lt;T&gt;, A&gt;&gt;&gt;
A(T&amp; t)  // or T&amp;&amp; t
</code></pre>

<p>and might consider making it <code>explicit</code> as well.</p>

<p>We usually do not provide copy constructors taking non-<code>const</code> <code>A&amp;</code>, since they are redundant next to the ones taking <code>const A&amp;</code>.</p>
",2018-08,i want to make my class be able to be used in a std variant the simply code that should work is int main std variant int a v a a   v a my class contains a templated constructor template typename t a t at this point the trouble starts the constructor binds to the call from std variant and not the provided a const a is used anymore for copy paste reasons the full example here include iostream include variant class a private int x public a a a const a a a a operator const a return this a operator a return this template typename t a t t std cout __pretty_function__ std endl a int _x x _x int main std variant int a v a a   v a background why the template here the problem starts while using a constructor which takes a serializer type the serializer can have multiple types depends on files or streams to serialize with remark i know that the functionality of the constructors is missing,the problem is not with std variant the problem is with the constructor template template typename t a t t such constructors are problematic because when the argument is a non const lvalue of type a this constructor is preferred over the copy constructor taking const a which is usually not the intended behaviour to prevent this we usually constrain this constructor with sfinae template typename t typename std enable_if_t std is_same_v std decay_t t a a t t or t t and might consider making it explicit as well we usually do not provide copy constructors taking non const a since they are redundant next to the ones taking const a,"['c++', 'c++17', 'variant', 'requirements']","['i', 'want', 'to', 'make', 'my', 'class', 'be', 'able', 'to', 'be', 'used', 'in', 'a', 'std', 'variant', 'the', 'simply', 'code', 'that', 'should', 'work', 'is', 'int', 'main', 'std', 'variant', 'int', 'a', 'v', 'a', 'a', 'v', 'a', 'my', 'class', 'contains', 'a', 'templated', 'constructor', 'template', 'typename', 't', 'a', 't', 'at', 'this', 'point', 'the', 'trouble', 'starts', 'the', 'constructor', 'binds', 'to', 'the', 'call', 'from', 'std', 'variant', 'and', 'not', 'the', 'provided', 'a', 'const', 'a', 'is', 'used', 'anymore', 'for', 'copy', 'paste', 'reasons', 'the', 'full', 'example', 'here', 'include', 'iostream', 'include', 'variant', 'class', 'a', 'private', 'int', 'x', 'public', 'a', 'a', 'a', 'const', 'a', 'a', 'a', 'a', 'operator', 'const', 'a', 'return', 'this', 'a', 'operator', 'a', 'return', 'this', 'template', 'typename', 't', 'a', 't', 't', 'std', 'cout', '__pretty_function__', 'std', 'endl', 'a', 'int', '_x', 'x', '_x', 'int', 'main', 'std', 'variant', 'int', 'a', 'v', 'a', 'a', 'v', 'a', 'background', 'why', 'the', 'template', 'here', 'the', 'problem', 'starts', 'while', 'using', 'a', 'constructor', 'which', 'takes', 'a', 'serializer', 'type', 'the', 'serializer', 'can', 'have', 'multiple', 'types', 'depends', 'on', 'files', 'or', 'streams', 'to', 'serialize', 'with', 'remark', 'i', 'know', 'that', 'the', 'functionality', 'of', 'the', 'constructors', 'is', 'missing']","['the', 'problem', 'is', 'not', 'with', 'std', 'variant', 'the', 'problem', 'is', 'with', 'the', 'constructor', 'template', 'template', 'typename', 't', 'a', 't', 't', 'such', 'constructors', 'are', 'problematic', 'because', 'when', 'the', 'argument', 'is', 'a', 'non', 'const', 'lvalue', 'of', 'type', 'a', 'this', 'constructor', 'is', 'preferred', 'over', 'the', 'copy', 'constructor', 'taking', 'const', 'a', 'which', 'is', 'usually', 'not', 'the', 'intended', 'behaviour', 'to', 'prevent', 'this', 'we', 'usually', 'constrain', 'this', 'constructor', 'with', 'sfinae', 'template', 'typename', 't', 'typename', 'std', 'enable_if_t', 'std', 'is_same_v', 'std', 'decay_t', 't', 'a', 'a', 't', 't', 'or', 't', 't', 'and', 'might', 'consider', 'making', 'it', 'explicit', 'as', 'well', 'we', 'usually', 'do', 'not', 'provide', 'copy', 'constructors', 'taking', 'non', 'const', 'a', 'since', 'they', 'are', 'redundant', 'next', 'to', 'the', 'ones', 'taking', 'const', 'a']","['want', 'make', 'class', 'able', 'used', 'std', 'variant', 'simply', 'code', 'work', 'int', 'main', 'std', 'variant', 'int', 'v', 'v', 'class', 'contains', 'templated', 'constructor', 'template', 'typename', 'point', 'trouble', 'start', 'constructor', 'bind', 'call', 'std', 'variant', 'provided', 'const', 'used', 'anymore', 'copy', 'paste', 'reason', 'full', 'example', 'include', 'iostream', 'include', 'variant', 'class', 'private', 'int', 'x', 'public', 'const', 'operator', 'const', 'return', 'operator', 'return', 'template', 'typename', 'std', 'cout', '__pretty_function__', 'std', 'endl', 'int', '_x', 'x', '_x', 'int', 'main', 'std', 'variant', 'int', 'v', 'v', 'background', 'template', 'problem', 'start', 'using', 'constructor', 'take', 'serializer', 'type', 'serializer', 'multiple', 'type', 'depends', 'file', 'stream', 'serialize', 'remark', 'know', 'functionality', 'constructor', 'missing']","['the', 'problem', 'is', 'not', 'with', 'std', 'variant', 'the', 'problem', 'is', 'with', 'the', 'constructor', 'template', 'template', 'typename', 't', 'a', 't', 't', 'such', 'constructor', 'are', 'problematic', 'because', 'when', 'the', 'argument', 'is', 'a', 'non', 'const', 'lvalue', 'of', 'type', 'a', 'this', 'constructor', 'is', 'preferred', 'over', 'the', 'copy', 'constructor', 'taking', 'const', 'a', 'which', 'is', 'usually', 'not', 'the', 'intended', 'behaviour', 'to', 'prevent', 'this', 'we', 'usually', 'constrain', 'this', 'constructor', 'with', 'sfinae', 'template', 'typename', 't', 'typename', 'std', 'enable_if_t', 'std', 'is_same_v', 'std', 'decay_t', 't', 'a', 'a', 't', 't', 'or', 't', 't', 'and', 'might', 'consider', 'making', 'it', 'explicit', 'a', 'well', 'we', 'usually', 'do', 'not', 'provide', 'copy', 'constructor', 'taking', 'non', 'const', 'a', 'since', 'they', 'are', 'redundant', 'next', 'to', 'the', 'one', 'taking', 'const', 'a']",System Requirements and AWS,1,"{'neg': 0.036, 'neu': 0.956, 'pos': 0.008, 'compound': -0.6892}",0.04270833333333333,1,Package Management and File Handling,3query
51535618,Best practices for including large resource folder into java project,"<p>I'm working on a project where having access to a big resource folder (structure with thousand of little images) is required. The client want to offer the app through a native installation (which includes the JVM that the app require to run). He doesn't want to pack that resources as a folder in the app because it would create a folder structure as big as the original in the final user's hard drive (the folder doesn't take much space but it has many little files), plus the folder could be stealed easily by simply copying it. Giving this, I can't package all the app with a resource folder in a jar file, as far as i know jar files are not installables. Another requirement is that client needs certain flexibility to add some files in a installed app folders structure to add new features to the program. So an installation is the only way (i think) to obtain this.</p>

<p>I've tried to pack them in a jar file, include it in the build path and tried to access it but i failed even with all the research i've made through various sites.  Tried getResources() in a million ways but it was impossible to get a simple directory inside the jar file meanwhile doing it from a folder outside the jar is really easy. I need to get access to a directory in order to get a list of files it cointains.</p>

<p>Arrived to this point. I've started to ask myself if i'm facing this problem on the best way so i wanted to ask you all: how would you package the resources you need in a native java app with this requirements?</p>

<p>I'm even thinking about create some kind of encryption proccess to create a single file with all the information and simply temporarily decrypt it when needed at runtime but i think there would be a simpler and cleaner way to face this.</p>

<p>Thank you in advance</p>

<p><strong>EDIT:</strong> As you asked for, i'm adding the code of what i've tried:</p>

<p>this is the project structure</p>

<pre><code>project
├───src
│   ├───main
│   │   └───java
│   │       ├───model &lt;--- where my class is
│   │       ├───controllers
│   │       ├───utilities
│   │       └───views
│   ├───resources &lt;--- this is where is (formerly) accessed the content i need
|   |   ├─── jarfile.jar &lt;--- i've placed file here and included to build path
│   │   └───-various folders and files -
│   └───test
└───target
</code></pre>

<p>inside the jar file there are the packages src.resources.blalblaba and inside of this, the folder i need</p>

<p>Way1: </p>

<p>getResources replacing jar file ""."" with ""/"" tried with paths: ""src/resources/blablabla/folderINeed"",""src/resources/src/resources/blablabla"" (due to possible duplicity), ""folderINeed"", ""blablabla/folderINeed""  -> URI always get NullPointerException with message ""null""</p>

<pre><code>public void loadContent(String contentPath) throws Exception
{ 
    File resources= null;
    File[] listFiles = null;

    URI uri = getClass().getClassLoader().getResource(contentPath).toURI();
    resources= new File(uri);
    listFiles = resources.listFiles();

    //do some file proccessing and load them
}
</code></pre>

<p>Way 2: paths used ""folderINeed"",""src/resources/blablabla/folderINeed"",""blablabla/folderINeed"",""../../../resources/blablabla/folderINeed"" &lt;--- URL return null but, at least, doesn't raise a NullPointerException.</p>

<pre><code>public void loadContent(String contentPath) throws Exception
{ 
    // conseguimos todas las carpetas de animaciones
    File resources;
    File[] listFiles = null;

    URL url = MyClass.class.getResource(contentPath);
    if (url == null) {
         // error - missing folder
    } else {
        resources = new File(url.toURI());
        listFiles = resources.listFiles();
    }
}
</code></pre>

<p>Way 3: some complex code using class JarFile that didn't work for me and was oriented to get a simple file, not a folder. Obtained <a href=""https://stackoverflow.com/questions/11012819/how-can-i-get-a-resource-folder-from-inside-my-jar-file"" title=""here"">here</a></p>
",<java><jar><resources><packaging><requirements>,2018-07-26 09:35:11,2928,0,2,51537188,"<p><code>src/main/java/</code> is the build convention of <strong>maven</strong>, so I'll assume it is that.</p>

<p>Then one normally would pack the images as read-only resources in its own jar, a separate maven project <code>jarfile</code>.</p>

<p><code>jarfile/src/main/resources/</code> would be the root directory for the images. For instance:
<code>jarfile/src/main/resources/icons16/new.png</code> would then be accessed by something like:</p>

<pre><code>getClass().getResource(""/icons16/new.png""); // Class' package relative path
getClass().getResourceAsStream(""/icons16/new.png"");
getClassLoader().getResource(""icons16/new.png""); // Absolute class path path
</code></pre>

<p>In the original project one would add a <code>dependency</code> in the pom.xml to jarfile.</p>

<p>If you do no use maven, the jarfile.jar must be on the class path.</p>

<p><code>File</code> cannot be used with resources, but getResourceAsStream most often is feasible.</p>

<hr>

<p>To read a resource directory, the directory path should be rather unique,
and it is simply a list of file names in the directory resource.</p>

<pre><code>    InputStream in = App.class.getResourceAsStream(""/icons16"");
    try (BufferedReader rd = new BufferedReader(new InputStreamReader(in, ""UTF-8""))) {
        String line;
        while ((line = rd.readLine()) != null) {
            System.out.println(""line: "" + line);
        }
    }
</code></pre>
",2018-07,i m working on a project where having access to a big resource folder structure with thousand of little images is required the client want to offer the app through a native installation which includes the jvm that the app require to run he doesn t want to pack that resources as a folder in the app because it would create a folder structure as big as the original in the final user s hard drive the folder doesn t take much space but it has many little files plus the folder could be stealed easily by simply copying it giving this i can t package all the app with a resource folder in a jar file as far as i know jar files are not installables another requirement is that client needs certain flexibility to add some files in a installed app folders structure to add new features to the program so an installation is the only way i think to obtain this i ve tried to pack them in a jar file include it in the build path and tried to access it but i failed even with all the research i ve made through various sites tried getresources in a million ways but it was impossible to get a simple directory inside the jar file meanwhile doing it from a folder outside the jar is really easy i need to get access to a directory in order to get a list of files it cointains arrived to this point i ve started to ask myself if i m facing this problem on the best way so i wanted to ask you all how would you package the resources you need in a native java app with this requirements i m even thinking about create some kind of encryption proccess to create a single file with all the information and simply temporarily decrypt it when needed at runtime but i think there would be a simpler and cleaner way to face this thank you in advance edit as you asked for i m adding the code of what i ve tried this is the project structure project src main java model where my class is controllers utilities views resources this is where is formerly accessed the content i need jarfile jar i ve placed file here and included to build path various folders and files test target inside the jar file there are the packages src resources blalblaba and inside of this the folder i need way  getresources replacing jar file with tried with paths src resources blablabla folderineed src resources src resources blablabla due to possible duplicity folderineed blablabla folderineed uri always get nullpointerexception with message null public void loadcontent string contentpath throws exception file resources null file listfiles null uri uri getclass getclassloader getresource contentpath touri resources new file uri listfiles resources listfiles do some file proccessing and load them way   paths used folderineed src resources blablabla folderineed blablabla folderineed resources blablabla folderineed url return null but at least doesn t raise a nullpointerexception public void loadcontent string contentpath throws exception conseguimos todas las carpetas de animaciones file resources file listfiles null url url myclass class getresource contentpath if url null error missing folder else resources new file url touri listfiles resources listfiles way   some complex code using class jarfile that didn t work for me and was oriented to get a simple file not a folder obtained here,src main java is the build convention of maven so i ll assume it is that then one normally would pack the images as read only resources in its own jar a separate maven project jarfile jarfile src main resources would be the root directory for the images for instance jarfile src main resources icons  new png would then be accessed by something like getclass getresource icons  new png class package relative path getclass getresourceasstream icons  new png getclassloader getresource icons  new png absolute class path path in the original project one would add a dependency in the pom xml to jarfile if you do no use maven the jarfile jar must be on the class path file cannot be used with resources but getresourceasstream most often is feasible to read a resource directory the directory path should be rather unique and it is simply a list of file names in the directory resource inputstream in app class getresourceasstream icons  try bufferedreader rd new bufferedreader new inputstreamreader in utf   string line while line rd readline null system out println line line,"['java', 'jar', 'resources', 'packaging', 'requirements']","['i', 'm', 'working', 'on', 'a', 'project', 'where', 'having', 'access', 'to', 'a', 'big', 'resource', 'folder', 'structure', 'with', 'thousand', 'of', 'little', 'images', 'is', 'required', 'the', 'client', 'want', 'to', 'offer', 'the', 'app', 'through', 'a', 'native', 'installation', 'which', 'includes', 'the', 'jvm', 'that', 'the', 'app', 'require', 'to', 'run', 'he', 'doesn', 't', 'want', 'to', 'pack', 'that', 'resources', 'as', 'a', 'folder', 'in', 'the', 'app', 'because', 'it', 'would', 'create', 'a', 'folder', 'structure', 'as', 'big', 'as', 'the', 'original', 'in', 'the', 'final', 'user', 's', 'hard', 'drive', 'the', 'folder', 'doesn', 't', 'take', 'much', 'space', 'but', 'it', 'has', 'many', 'little', 'files', 'plus', 'the', 'folder', 'could', 'be', 'stealed', 'easily', 'by', 'simply', 'copying', 'it', 'giving', 'this', 'i', 'can', 't', 'package', 'all', 'the', 'app', 'with', 'a', 'resource', 'folder', 'in', 'a', 'jar', 'file', 'as', 'far', 'as', 'i', 'know', 'jar', 'files', 'are', 'not', 'installables', 'another', 'requirement', 'is', 'that', 'client', 'needs', 'certain', 'flexibility', 'to', 'add', 'some', 'files', 'in', 'a', 'installed', 'app', 'folders', 'structure', 'to', 'add', 'new', 'features', 'to', 'the', 'program', 'so', 'an', 'installation', 'is', 'the', 'only', 'way', 'i', 'think', 'to', 'obtain', 'this', 'i', 've', 'tried', 'to', 'pack', 'them', 'in', 'a', 'jar', 'file', 'include', 'it', 'in', 'the', 'build', 'path', 'and', 'tried', 'to', 'access', 'it', 'but', 'i', 'failed', 'even', 'with', 'all', 'the', 'research', 'i', 've', 'made', 'through', 'various', 'sites', 'tried', 'getresources', 'in', 'a', 'million', 'ways', 'but', 'it', 'was', 'impossible', 'to', 'get', 'a', 'simple', 'directory', 'inside', 'the', 'jar', 'file', 'meanwhile', 'doing', 'it', 'from', 'a', 'folder', 'outside', 'the', 'jar', 'is', 'really', 'easy', 'i', 'need', 'to', 'get', 'access', 'to', 'a', 'directory', 'in', 'order', 'to', 'get', 'a', 'list', 'of', 'files', 'it', 'cointains', 'arrived', 'to', 'this', 'point', 'i', 've', 'started', 'to', 'ask', 'myself', 'if', 'i', 'm', 'facing', 'this', 'problem', 'on', 'the', 'best', 'way', 'so', 'i', 'wanted', 'to', 'ask', 'you', 'all', 'how', 'would', 'you', 'package', 'the', 'resources', 'you', 'need', 'in', 'a', 'native', 'java', 'app', 'with', 'this', 'requirements', 'i', 'm', 'even', 'thinking', 'about', 'create', 'some', 'kind', 'of', 'encryption', 'proccess', 'to', 'create', 'a', 'single', 'file', 'with', 'all', 'the', 'information', 'and', 'simply', 'temporarily', 'decrypt', 'it', 'when', 'needed', 'at', 'runtime', 'but', 'i', 'think', 'there', 'would', 'be', 'a', 'simpler', 'and', 'cleaner', 'way', 'to', 'face', 'this', 'thank', 'you', 'in', 'advance', 'edit', 'as', 'you', 'asked', 'for', 'i', 'm', 'adding', 'the', 'code', 'of', 'what', 'i', 've', 'tried', 'this', 'is', 'the', 'project', 'structure', 'project', 'src', 'main', 'java', 'model', 'where', 'my', 'class', 'is', 'controllers', 'utilities', 'views', 'resources', 'this', 'is', 'where', 'is', 'formerly', 'accessed', 'the', 'content', 'i', 'need', 'jarfile', 'jar', 'i', 've', 'placed', 'file', 'here', 'and', 'included', 'to', 'build', 'path', 'various', 'folders', 'and', 'files', 'test', 'target', 'inside', 'the', 'jar', 'file', 'there', 'are', 'the', 'packages', 'src', 'resources', 'blalblaba', 'and', 'inside', 'of', 'this', 'the', 'folder', 'i', 'need', 'way', 'getresources', 'replacing', 'jar', 'file', 'with', 'tried', 'with', 'paths', 'src', 'resources', 'blablabla', 'folderineed', 'src', 'resources', 'src', 'resources', 'blablabla', 'due', 'to', 'possible', 'duplicity', 'folderineed', 'blablabla', 'folderineed', 'uri', 'always', 'get', 'nullpointerexception', 'with', 'message', 'null', 'public', 'void', 'loadcontent', 'string', 'contentpath', 'throws', 'exception', 'file', 'resources', 'null', 'file', 'listfiles', 'null', 'uri', 'uri', 'getclass', 'getclassloader', 'getresource', 'contentpath', 'touri', 'resources', 'new', 'file', 'uri', 'listfiles', 'resources', 'listfiles', 'do', 'some', 'file', 'proccessing', 'and', 'load', 'them', 'way', 'paths', 'used', 'folderineed', 'src', 'resources', 'blablabla', 'folderineed', 'blablabla', 'folderineed', 'resources', 'blablabla', 'folderineed', 'url', 'return', 'null', 'but', 'at', 'least', 'doesn', 't', 'raise', 'a', 'nullpointerexception', 'public', 'void', 'loadcontent', 'string', 'contentpath', 'throws', 'exception', 'conseguimos', 'todas', 'las', 'carpetas', 'de', 'animaciones', 'file', 'resources', 'file', 'listfiles', 'null', 'url', 'url', 'myclass', 'class', 'getresource', 'contentpath', 'if', 'url', 'null', 'error', 'missing', 'folder', 'else', 'resources', 'new', 'file', 'url', 'touri', 'listfiles', 'resources', 'listfiles', 'way', 'some', 'complex', 'code', 'using', 'class', 'jarfile', 'that', 'didn', 't', 'work', 'for', 'me', 'and', 'was', 'oriented', 'to', 'get', 'a', 'simple', 'file', 'not', 'a', 'folder', 'obtained', 'here']","['src', 'main', 'java', 'is', 'the', 'build', 'convention', 'of', 'maven', 'so', 'i', 'll', 'assume', 'it', 'is', 'that', 'then', 'one', 'normally', 'would', 'pack', 'the', 'images', 'as', 'read', 'only', 'resources', 'in', 'its', 'own', 'jar', 'a', 'separate', 'maven', 'project', 'jarfile', 'jarfile', 'src', 'main', 'resources', 'would', 'be', 'the', 'root', 'directory', 'for', 'the', 'images', 'for', 'instance', 'jarfile', 'src', 'main', 'resources', 'icons', 'new', 'png', 'would', 'then', 'be', 'accessed', 'by', 'something', 'like', 'getclass', 'getresource', 'icons', 'new', 'png', 'class', 'package', 'relative', 'path', 'getclass', 'getresourceasstream', 'icons', 'new', 'png', 'getclassloader', 'getresource', 'icons', 'new', 'png', 'absolute', 'class', 'path', 'path', 'in', 'the', 'original', 'project', 'one', 'would', 'add', 'a', 'dependency', 'in', 'the', 'pom', 'xml', 'to', 'jarfile', 'if', 'you', 'do', 'no', 'use', 'maven', 'the', 'jarfile', 'jar', 'must', 'be', 'on', 'the', 'class', 'path', 'file', 'can', 'not', 'be', 'used', 'with', 'resources', 'but', 'getresourceasstream', 'most', 'often', 'is', 'feasible', 'to', 'read', 'a', 'resource', 'directory', 'the', 'directory', 'path', 'should', 'be', 'rather', 'unique', 'and', 'it', 'is', 'simply', 'a', 'list', 'of', 'file', 'names', 'in', 'the', 'directory', 'resource', 'inputstream', 'in', 'app', 'class', 'getresourceasstream', 'icons', 'try', 'bufferedreader', 'rd', 'new', 'bufferedreader', 'new', 'inputstreamreader', 'in', 'utf', 'string', 'line', 'while', 'line', 'rd', 'readline', 'null', 'system', 'out', 'println', 'line', 'line']","['working', 'project', 'access', 'big', 'resource', 'folder', 'structure', 'thousand', 'little', 'image', 'required', 'client', 'want', 'offer', 'app', 'native', 'installation', 'includes', 'jvm', 'app', 'require', 'run', 'want', 'pack', 'resource', 'folder', 'app', 'would', 'create', 'folder', 'structure', 'big', 'original', 'final', 'user', 'hard', 'drive', 'folder', 'take', 'much', 'space', 'ha', 'many', 'little', 'file', 'plus', 'folder', 'could', 'stealed', 'easily', 'simply', 'copying', 'giving', 'package', 'app', 'resource', 'folder', 'jar', 'file', 'far', 'know', 'jar', 'file', 'installables', 'another', 'requirement', 'client', 'need', 'certain', 'flexibility', 'add', 'file', 'installed', 'app', 'folder', 'structure', 'add', 'new', 'feature', 'program', 'installation', 'way', 'think', 'obtain', 'tried', 'pack', 'jar', 'file', 'include', 'build', 'path', 'tried', 'access', 'failed', 'even', 'research', 'made', 'various', 'site', 'tried', 'getresources', 'million', 'way', 'wa', 'impossible', 'get', 'simple', 'directory', 'inside', 'jar', 'file', 'meanwhile', 'folder', 'outside', 'jar', 'really', 'easy', 'need', 'get', 'access', 'directory', 'order', 'get', 'list', 'file', 'cointains', 'arrived', 'point', 'started', 'ask', 'facing', 'problem', 'best', 'way', 'wanted', 'ask', 'would', 'package', 'resource', 'need', 'native', 'java', 'app', 'requirement', 'even', 'thinking', 'create', 'kind', 'encryption', 'proccess', 'create', 'single', 'file', 'information', 'simply', 'temporarily', 'decrypt', 'needed', 'runtime', 'think', 'would', 'simpler', 'cleaner', 'way', 'face', 'thank', 'advance', 'edit', 'asked', 'adding', 'code', 'tried', 'project', 'structure', 'project', 'src', 'main', 'java', 'model', 'class', 'controller', 'utility', 'view', 'resource', 'formerly', 'accessed', 'content', 'need', 'jarfile', 'jar', 'placed', 'file', 'included', 'build', 'path', 'various', 'folder', 'file', 'test', 'target', 'inside', 'jar', 'file', 'package', 'src', 'resource', 'blalblaba', 'inside', 'folder', 'need', 'way', 'getresources', 'replacing', 'jar', 'file', 'tried', 'path', 'src', 'resource', 'blablabla', 'folderineed', 'src', 'resource', 'src', 'resource', 'blablabla', 'due', 'possible', 'duplicity', 'folderineed', 'blablabla', 'folderineed', 'uri', 'always', 'get', 'nullpointerexception', 'message', 'null', 'public', 'void', 'loadcontent', 'string', 'contentpath', 'throw', 'exception', 'file', 'resource', 'null', 'file', 'listfiles', 'null', 'uri', 'uri', 'getclass', 'getclassloader', 'getresource', 'contentpath', 'touri', 'resource', 'new', 'file', 'uri', 'listfiles', 'resource', 'listfiles', 'file', 'proccessing', 'load', 'way', 'path', 'used', 'folderineed', 'src', 'resource', 'blablabla', 'folderineed', 'blablabla', 'folderineed', 'resource', 'blablabla', 'folderineed', 'url', 'return', 'null', 'least', 'raise', 'nullpointerexception', 'public', 'void', 'loadcontent', 'string', 'contentpath', 'throw', 'exception', 'conseguimos', 'toda', 'la', 'carpetas', 'de', 'animaciones', 'file', 'resource', 'file', 'listfiles', 'null', 'url', 'url', 'myclass', 'class', 'getresource', 'contentpath', 'url', 'null', 'error', 'missing', 'folder', 'else', 'resource', 'new', 'file', 'url', 'touri', 'listfiles', 'resource', 'listfiles', 'way', 'complex', 'code', 'using', 'class', 'jarfile', 'work', 'wa', 'oriented', 'get', 'simple', 'file', 'folder', 'obtained']","['src', 'main', 'java', 'is', 'the', 'build', 'convention', 'of', 'maven', 'so', 'i', 'll', 'assume', 'it', 'is', 'that', 'then', 'one', 'normally', 'would', 'pack', 'the', 'image', 'a', 'read', 'only', 'resource', 'in', 'it', 'own', 'jar', 'a', 'separate', 'maven', 'project', 'jarfile', 'jarfile', 'src', 'main', 'resource', 'would', 'be', 'the', 'root', 'directory', 'for', 'the', 'image', 'for', 'instance', 'jarfile', 'src', 'main', 'resource', 'icon', 'new', 'png', 'would', 'then', 'be', 'accessed', 'by', 'something', 'like', 'getclass', 'getresource', 'icon', 'new', 'png', 'class', 'package', 'relative', 'path', 'getclass', 'getresourceasstream', 'icon', 'new', 'png', 'getclassloader', 'getresource', 'icon', 'new', 'png', 'absolute', 'class', 'path', 'path', 'in', 'the', 'original', 'project', 'one', 'would', 'add', 'a', 'dependency', 'in', 'the', 'pom', 'xml', 'to', 'jarfile', 'if', 'you', 'do', 'no', 'use', 'maven', 'the', 'jarfile', 'jar', 'must', 'be', 'on', 'the', 'class', 'path', 'file', 'can', 'not', 'be', 'used', 'with', 'resource', 'but', 'getresourceasstream', 'most', 'often', 'is', 'feasible', 'to', 'read', 'a', 'resource', 'directory', 'the', 'directory', 'path', 'should', 'be', 'rather', 'unique', 'and', 'it', 'is', 'simply', 'a', 'list', 'of', 'file', 'name', 'in', 'the', 'directory', 'resource', 'inputstream', 'in', 'app', 'class', 'getresourceasstream', 'icon', 'try', 'bufferedreader', 'rd', 'new', 'bufferedreader', 'new', 'inputstreamreader', 'in', 'utf', 'string', 'line', 'while', 'line', 'rd', 'readline', 'null', 'system', 'out', 'println', 'line', 'line']",System Requirements and AWS,4,"{'neg': 0.03, 'neu': 0.907, 'pos': 0.064, 'compound': 0.9403}",0.030362062180244,4,Building and Compiling Python Projects,3query
51535618,Best practices for including large resource folder into java project,"<p>I'm working on a project where having access to a big resource folder (structure with thousand of little images) is required. The client want to offer the app through a native installation (which includes the JVM that the app require to run). He doesn't want to pack that resources as a folder in the app because it would create a folder structure as big as the original in the final user's hard drive (the folder doesn't take much space but it has many little files), plus the folder could be stealed easily by simply copying it. Giving this, I can't package all the app with a resource folder in a jar file, as far as i know jar files are not installables. Another requirement is that client needs certain flexibility to add some files in a installed app folders structure to add new features to the program. So an installation is the only way (i think) to obtain this.</p>

<p>I've tried to pack them in a jar file, include it in the build path and tried to access it but i failed even with all the research i've made through various sites.  Tried getResources() in a million ways but it was impossible to get a simple directory inside the jar file meanwhile doing it from a folder outside the jar is really easy. I need to get access to a directory in order to get a list of files it cointains.</p>

<p>Arrived to this point. I've started to ask myself if i'm facing this problem on the best way so i wanted to ask you all: how would you package the resources you need in a native java app with this requirements?</p>

<p>I'm even thinking about create some kind of encryption proccess to create a single file with all the information and simply temporarily decrypt it when needed at runtime but i think there would be a simpler and cleaner way to face this.</p>

<p>Thank you in advance</p>

<p><strong>EDIT:</strong> As you asked for, i'm adding the code of what i've tried:</p>

<p>this is the project structure</p>

<pre><code>project
├───src
│   ├───main
│   │   └───java
│   │       ├───model &lt;--- where my class is
│   │       ├───controllers
│   │       ├───utilities
│   │       └───views
│   ├───resources &lt;--- this is where is (formerly) accessed the content i need
|   |   ├─── jarfile.jar &lt;--- i've placed file here and included to build path
│   │   └───-various folders and files -
│   └───test
└───target
</code></pre>

<p>inside the jar file there are the packages src.resources.blalblaba and inside of this, the folder i need</p>

<p>Way1: </p>

<p>getResources replacing jar file ""."" with ""/"" tried with paths: ""src/resources/blablabla/folderINeed"",""src/resources/src/resources/blablabla"" (due to possible duplicity), ""folderINeed"", ""blablabla/folderINeed""  -> URI always get NullPointerException with message ""null""</p>

<pre><code>public void loadContent(String contentPath) throws Exception
{ 
    File resources= null;
    File[] listFiles = null;

    URI uri = getClass().getClassLoader().getResource(contentPath).toURI();
    resources= new File(uri);
    listFiles = resources.listFiles();

    //do some file proccessing and load them
}
</code></pre>

<p>Way 2: paths used ""folderINeed"",""src/resources/blablabla/folderINeed"",""blablabla/folderINeed"",""../../../resources/blablabla/folderINeed"" &lt;--- URL return null but, at least, doesn't raise a NullPointerException.</p>

<pre><code>public void loadContent(String contentPath) throws Exception
{ 
    // conseguimos todas las carpetas de animaciones
    File resources;
    File[] listFiles = null;

    URL url = MyClass.class.getResource(contentPath);
    if (url == null) {
         // error - missing folder
    } else {
        resources = new File(url.toURI());
        listFiles = resources.listFiles();
    }
}
</code></pre>

<p>Way 3: some complex code using class JarFile that didn't work for me and was oriented to get a simple file, not a folder. Obtained <a href=""https://stackoverflow.com/questions/11012819/how-can-i-get-a-resource-folder-from-inside-my-jar-file"" title=""here"">here</a></p>
",<java><jar><resources><packaging><requirements>,2018-07-26 09:35:11,2928,0,2,51650404,"<p><strong>MY WRONGS:</strong> </p>

<ul>
<li><p>As @Joop Egen told in his answer, one of my problem was my folder structure in the project. I was not following the maven convention of putting the resource folder in the src/main/ folder it's because of this all the solutions i were trying didn't have the necessary scope to get the resource folder. </p></li>
<li><p>I didn't know how jar files work with java. For java .jar files are a collection (not a Collection of java) of jar entries to every single file within them. In my single case, the .jar file was created using the Eclipse export wizard and didn't have any reference to folders, it just had references to files. So it's simply IMPOSSIBLE to get a folder with all its content. </p></li>
<li><p>I used the java JarFile class to manage the content but this class doesn't offer methods to manage files like java File class does. So it's not as easy to do as it is with another kind of files.</p></li>
</ul>

<p><strong>WHAT I'VE DONE:</strong> <br>
I've developed a code to read all the file entries in the .jar, discriminate the ones i was interested to. And then extract them to a directory within the app. By doing this i had standard access to them and, if i want to, i can simply remove the directory when the application closes. I was trying to use them directly from the jar but jar files are zip files so in some moment that inner files need to be extrated from the jar to somewhere as OS do with zip files. It's can a be a temp directory or not.</p>

<pre><code>import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;
import org.apache.commons.io.FileUtils;

public class App
{
  public static void main(String[] args)
  {
    try
    {

      //needed attributes
      String pathToJar = ""./src/main/blablalba/fileName.jar"";
      String folderYouWantToRetrieveFromTheJar = ""/folderIWant"";
      String pathOfFilesWithinTheJar=""src/resources/blablabla/""+folderYouWantToRetrieveFromTheJar+""/"";
      String tempDirectoryWhereExtract=""./src/main/resources/temp"";

      //creating the temp directory
      File tempDirectoryReference = new File(tempDirectoryWhereExtract);
      if (!tempDirectoryReference.exists())
      {
        Files.createDirectory(tempDirectoryReference.toPath());
      }

      //searching what entries i need
      JarFile jar = new JarFile(pathToJar);
      final Enumeration&lt;JarEntry&gt; entries = jar.entries(); 
      List&lt;JarEntry&gt; targetEntries = new ArrayList&lt;&gt;();
      while (entries.hasMoreElements())
      {
        JarEntry entry = entries.nextElement();
        //if the entry is what i need 
        if (entry.getName().startsWith(pathOfFilesWithinTheJar))
        { 
          targetEntries.add(entry);
        }
      }
      //extract every target entry from the .jar
      for (JarEntry entry : targetEntries)
      {
        //in order to copy the structure i will get only the point where folderIWant is present
        int index = entry.getName().indexOf(folderYouWantToRetrieveFromTheJar);
        String newTemporaryPath = tempDirectoryReference.getPath().toString()+""/""+entry.getName().substring(index);
        extractFileFromJar(jar, entry, new File(newTemporaryPath));

      }

      jar.close();
      //(optional) clean after use
      FileUtils.deleteDirectory(tempDirectoryReference);


    }
    catch (IOException e)
    {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }
  }

  public static void extractFileFromJar (JarFile jarFile, JarEntry targetEntry, File destinyPath)
  {
    try
    {
      if (!destinyPath.getParentFile().exists())
      {
        createFolderStructure(destinyPath);
      }
      else
      {
        Files.createFile(destinyPath.toPath());
      }

      InputStream inputStream = jarFile.getInputStream(targetEntry); 
      FileOutputStream outputStream = new java.io.FileOutputStream(destinyPath);
      while (inputStream.available() &gt; 0) {  
          outputStream.write(inputStream.read());
      }
      outputStream.flush();
      outputStream.close();
      inputStream.close();
    }
    catch (IOException e)
    {
      e.printStackTrace();
    }
  }


  private static void createFolderStructure(File destinyPath)
  {
    File parentPath = destinyPath.getParentFile();
    try
    {
      if (parentPath.exists())
      {
          Files.createFile(destinyPath.toPath());
      }
      else
      {
        Files.createDirectories(destinyPath.getParentFile().toPath());
        Files.createFile(destinyPath.toPath());
      }
    }
    catch(IOException e)
    {
      System.err.println(e.getMessage());
    }
  }
}
</code></pre>
",2018-07,i m working on a project where having access to a big resource folder structure with thousand of little images is required the client want to offer the app through a native installation which includes the jvm that the app require to run he doesn t want to pack that resources as a folder in the app because it would create a folder structure as big as the original in the final user s hard drive the folder doesn t take much space but it has many little files plus the folder could be stealed easily by simply copying it giving this i can t package all the app with a resource folder in a jar file as far as i know jar files are not installables another requirement is that client needs certain flexibility to add some files in a installed app folders structure to add new features to the program so an installation is the only way i think to obtain this i ve tried to pack them in a jar file include it in the build path and tried to access it but i failed even with all the research i ve made through various sites tried getresources in a million ways but it was impossible to get a simple directory inside the jar file meanwhile doing it from a folder outside the jar is really easy i need to get access to a directory in order to get a list of files it cointains arrived to this point i ve started to ask myself if i m facing this problem on the best way so i wanted to ask you all how would you package the resources you need in a native java app with this requirements i m even thinking about create some kind of encryption proccess to create a single file with all the information and simply temporarily decrypt it when needed at runtime but i think there would be a simpler and cleaner way to face this thank you in advance edit as you asked for i m adding the code of what i ve tried this is the project structure project src main java model where my class is controllers utilities views resources this is where is formerly accessed the content i need jarfile jar i ve placed file here and included to build path various folders and files test target inside the jar file there are the packages src resources blalblaba and inside of this the folder i need way  getresources replacing jar file with tried with paths src resources blablabla folderineed src resources src resources blablabla due to possible duplicity folderineed blablabla folderineed uri always get nullpointerexception with message null public void loadcontent string contentpath throws exception file resources null file listfiles null uri uri getclass getclassloader getresource contentpath touri resources new file uri listfiles resources listfiles do some file proccessing and load them way   paths used folderineed src resources blablabla folderineed blablabla folderineed resources blablabla folderineed url return null but at least doesn t raise a nullpointerexception public void loadcontent string contentpath throws exception conseguimos todas las carpetas de animaciones file resources file listfiles null url url myclass class getresource contentpath if url null error missing folder else resources new file url touri listfiles resources listfiles way   some complex code using class jarfile that didn t work for me and was oriented to get a simple file not a folder obtained here,my wrongs as joop egen told in his answer one of my problem was my folder structure in the project i was not following the maven convention of putting the resource folder in the src main folder it s because of this all the solutions i were trying didn t have the necessary scope to get the resource folder i didn t know how jar files work with java for java jar files are a collection not a collection of java of jar entries to every single file within them in my single case the jar file was created using the eclipse export wizard and didn t have any reference to folders it just had references to files so it s simply impossible to get a folder with all its content i used the java jarfile class to manage the content but this class doesn t offer methods to manage files like java file class does so it s not as easy to do as it is with another kind of files what i ve done i ve developed a code to read all the file entries in the jar discriminate the ones i was interested to and then extract them to a directory within the app by doing this i had standard access to them and if i want to i can simply remove the directory when the application closes i was trying to use them directly from the jar but jar files are zip files so in some moment that inner files need to be extrated from the jar to somewhere as os do with zip files it s can a be a temp directory or not import java io file import java io fileoutputstream import java io ioexception import java io inputstream import java nio file files import java util arraylist import java util enumeration import java util list import java util jar jarentry import java util jar jarfile import org apache commons io fileutils public class app public static void main string args try needed attributes string pathtojar src main blablalba filename jar string folderyouwanttoretrievefromthejar folderiwant string pathoffileswithinthejar src resources blablabla folderyouwanttoretrievefromthejar string tempdirectorywhereextract src main resources temp creating the temp directory file tempdirectoryreference new file tempdirectorywhereextract if tempdirectoryreference exists files createdirectory tempdirectoryreference topath searching what entries i need jarfile jar new jarfile pathtojar final enumeration jarentry entries jar entries list jarentry targetentries new arraylist while entries hasmoreelements jarentry entry entries nextelement if the entry is what i need if entry getname startswith pathoffileswithinthejar targetentries add entry extract every target entry from the jar for jarentry entry targetentries in order to copy the structure i will get only the point where folderiwant is present int index entry getname indexof folderyouwanttoretrievefromthejar string newtemporarypath tempdirectoryreference getpath tostring entry getname substring index extractfilefromjar jar entry new file newtemporarypath jar close optional clean after use fileutils deletedirectory tempdirectoryreference catch ioexception e todo auto generated catch block e printstacktrace public static void extractfilefromjar jarfile jarfile jarentry targetentry file destinypath try if destinypath getparentfile exists createfolderstructure destinypath else files createfile destinypath topath inputstream inputstream jarfile getinputstream targetentry fileoutputstream outputstream new java io fileoutputstream destinypath while inputstream available   outputstream write inputstream read outputstream flush outputstream close inputstream close catch ioexception e e printstacktrace private static void createfolderstructure file destinypath file parentpath destinypath getparentfile try if parentpath exists files createfile destinypath topath else files createdirectories destinypath getparentfile topath files createfile destinypath topath catch ioexception e system err println e getmessage,"['java', 'jar', 'resources', 'packaging', 'requirements']","['i', 'm', 'working', 'on', 'a', 'project', 'where', 'having', 'access', 'to', 'a', 'big', 'resource', 'folder', 'structure', 'with', 'thousand', 'of', 'little', 'images', 'is', 'required', 'the', 'client', 'want', 'to', 'offer', 'the', 'app', 'through', 'a', 'native', 'installation', 'which', 'includes', 'the', 'jvm', 'that', 'the', 'app', 'require', 'to', 'run', 'he', 'doesn', 't', 'want', 'to', 'pack', 'that', 'resources', 'as', 'a', 'folder', 'in', 'the', 'app', 'because', 'it', 'would', 'create', 'a', 'folder', 'structure', 'as', 'big', 'as', 'the', 'original', 'in', 'the', 'final', 'user', 's', 'hard', 'drive', 'the', 'folder', 'doesn', 't', 'take', 'much', 'space', 'but', 'it', 'has', 'many', 'little', 'files', 'plus', 'the', 'folder', 'could', 'be', 'stealed', 'easily', 'by', 'simply', 'copying', 'it', 'giving', 'this', 'i', 'can', 't', 'package', 'all', 'the', 'app', 'with', 'a', 'resource', 'folder', 'in', 'a', 'jar', 'file', 'as', 'far', 'as', 'i', 'know', 'jar', 'files', 'are', 'not', 'installables', 'another', 'requirement', 'is', 'that', 'client', 'needs', 'certain', 'flexibility', 'to', 'add', 'some', 'files', 'in', 'a', 'installed', 'app', 'folders', 'structure', 'to', 'add', 'new', 'features', 'to', 'the', 'program', 'so', 'an', 'installation', 'is', 'the', 'only', 'way', 'i', 'think', 'to', 'obtain', 'this', 'i', 've', 'tried', 'to', 'pack', 'them', 'in', 'a', 'jar', 'file', 'include', 'it', 'in', 'the', 'build', 'path', 'and', 'tried', 'to', 'access', 'it', 'but', 'i', 'failed', 'even', 'with', 'all', 'the', 'research', 'i', 've', 'made', 'through', 'various', 'sites', 'tried', 'getresources', 'in', 'a', 'million', 'ways', 'but', 'it', 'was', 'impossible', 'to', 'get', 'a', 'simple', 'directory', 'inside', 'the', 'jar', 'file', 'meanwhile', 'doing', 'it', 'from', 'a', 'folder', 'outside', 'the', 'jar', 'is', 'really', 'easy', 'i', 'need', 'to', 'get', 'access', 'to', 'a', 'directory', 'in', 'order', 'to', 'get', 'a', 'list', 'of', 'files', 'it', 'cointains', 'arrived', 'to', 'this', 'point', 'i', 've', 'started', 'to', 'ask', 'myself', 'if', 'i', 'm', 'facing', 'this', 'problem', 'on', 'the', 'best', 'way', 'so', 'i', 'wanted', 'to', 'ask', 'you', 'all', 'how', 'would', 'you', 'package', 'the', 'resources', 'you', 'need', 'in', 'a', 'native', 'java', 'app', 'with', 'this', 'requirements', 'i', 'm', 'even', 'thinking', 'about', 'create', 'some', 'kind', 'of', 'encryption', 'proccess', 'to', 'create', 'a', 'single', 'file', 'with', 'all', 'the', 'information', 'and', 'simply', 'temporarily', 'decrypt', 'it', 'when', 'needed', 'at', 'runtime', 'but', 'i', 'think', 'there', 'would', 'be', 'a', 'simpler', 'and', 'cleaner', 'way', 'to', 'face', 'this', 'thank', 'you', 'in', 'advance', 'edit', 'as', 'you', 'asked', 'for', 'i', 'm', 'adding', 'the', 'code', 'of', 'what', 'i', 've', 'tried', 'this', 'is', 'the', 'project', 'structure', 'project', 'src', 'main', 'java', 'model', 'where', 'my', 'class', 'is', 'controllers', 'utilities', 'views', 'resources', 'this', 'is', 'where', 'is', 'formerly', 'accessed', 'the', 'content', 'i', 'need', 'jarfile', 'jar', 'i', 've', 'placed', 'file', 'here', 'and', 'included', 'to', 'build', 'path', 'various', 'folders', 'and', 'files', 'test', 'target', 'inside', 'the', 'jar', 'file', 'there', 'are', 'the', 'packages', 'src', 'resources', 'blalblaba', 'and', 'inside', 'of', 'this', 'the', 'folder', 'i', 'need', 'way', 'getresources', 'replacing', 'jar', 'file', 'with', 'tried', 'with', 'paths', 'src', 'resources', 'blablabla', 'folderineed', 'src', 'resources', 'src', 'resources', 'blablabla', 'due', 'to', 'possible', 'duplicity', 'folderineed', 'blablabla', 'folderineed', 'uri', 'always', 'get', 'nullpointerexception', 'with', 'message', 'null', 'public', 'void', 'loadcontent', 'string', 'contentpath', 'throws', 'exception', 'file', 'resources', 'null', 'file', 'listfiles', 'null', 'uri', 'uri', 'getclass', 'getclassloader', 'getresource', 'contentpath', 'touri', 'resources', 'new', 'file', 'uri', 'listfiles', 'resources', 'listfiles', 'do', 'some', 'file', 'proccessing', 'and', 'load', 'them', 'way', 'paths', 'used', 'folderineed', 'src', 'resources', 'blablabla', 'folderineed', 'blablabla', 'folderineed', 'resources', 'blablabla', 'folderineed', 'url', 'return', 'null', 'but', 'at', 'least', 'doesn', 't', 'raise', 'a', 'nullpointerexception', 'public', 'void', 'loadcontent', 'string', 'contentpath', 'throws', 'exception', 'conseguimos', 'todas', 'las', 'carpetas', 'de', 'animaciones', 'file', 'resources', 'file', 'listfiles', 'null', 'url', 'url', 'myclass', 'class', 'getresource', 'contentpath', 'if', 'url', 'null', 'error', 'missing', 'folder', 'else', 'resources', 'new', 'file', 'url', 'touri', 'listfiles', 'resources', 'listfiles', 'way', 'some', 'complex', 'code', 'using', 'class', 'jarfile', 'that', 'didn', 't', 'work', 'for', 'me', 'and', 'was', 'oriented', 'to', 'get', 'a', 'simple', 'file', 'not', 'a', 'folder', 'obtained', 'here']","['my', 'wrongs', 'as', 'joop', 'egen', 'told', 'in', 'his', 'answer', 'one', 'of', 'my', 'problem', 'was', 'my', 'folder', 'structure', 'in', 'the', 'project', 'i', 'was', 'not', 'following', 'the', 'maven', 'convention', 'of', 'putting', 'the', 'resource', 'folder', 'in', 'the', 'src', 'main', 'folder', 'it', 's', 'because', 'of', 'this', 'all', 'the', 'solutions', 'i', 'were', 'trying', 'didn', 't', 'have', 'the', 'necessary', 'scope', 'to', 'get', 'the', 'resource', 'folder', 'i', 'didn', 't', 'know', 'how', 'jar', 'files', 'work', 'with', 'java', 'for', 'java', 'jar', 'files', 'are', 'a', 'collection', 'not', 'a', 'collection', 'of', 'java', 'of', 'jar', 'entries', 'to', 'every', 'single', 'file', 'within', 'them', 'in', 'my', 'single', 'case', 'the', 'jar', 'file', 'was', 'created', 'using', 'the', 'eclipse', 'export', 'wizard', 'and', 'didn', 't', 'have', 'any', 'reference', 'to', 'folders', 'it', 'just', 'had', 'references', 'to', 'files', 'so', 'it', 's', 'simply', 'impossible', 'to', 'get', 'a', 'folder', 'with', 'all', 'its', 'content', 'i', 'used', 'the', 'java', 'jarfile', 'class', 'to', 'manage', 'the', 'content', 'but', 'this', 'class', 'doesn', 't', 'offer', 'methods', 'to', 'manage', 'files', 'like', 'java', 'file', 'class', 'does', 'so', 'it', 's', 'not', 'as', 'easy', 'to', 'do', 'as', 'it', 'is', 'with', 'another', 'kind', 'of', 'files', 'what', 'i', 've', 'done', 'i', 've', 'developed', 'a', 'code', 'to', 'read', 'all', 'the', 'file', 'entries', 'in', 'the', 'jar', 'discriminate', 'the', 'ones', 'i', 'was', 'interested', 'to', 'and', 'then', 'extract', 'them', 'to', 'a', 'directory', 'within', 'the', 'app', 'by', 'doing', 'this', 'i', 'had', 'standard', 'access', 'to', 'them', 'and', 'if', 'i', 'want', 'to', 'i', 'can', 'simply', 'remove', 'the', 'directory', 'when', 'the', 'application', 'closes', 'i', 'was', 'trying', 'to', 'use', 'them', 'directly', 'from', 'the', 'jar', 'but', 'jar', 'files', 'are', 'zip', 'files', 'so', 'in', 'some', 'moment', 'that', 'inner', 'files', 'need', 'to', 'be', 'extrated', 'from', 'the', 'jar', 'to', 'somewhere', 'as', 'os', 'do', 'with', 'zip', 'files', 'it', 's', 'can', 'a', 'be', 'a', 'temp', 'directory', 'or', 'not', 'import', 'java', 'io', 'file', 'import', 'java', 'io', 'fileoutputstream', 'import', 'java', 'io', 'ioexception', 'import', 'java', 'io', 'inputstream', 'import', 'java', 'nio', 'file', 'files', 'import', 'java', 'util', 'arraylist', 'import', 'java', 'util', 'enumeration', 'import', 'java', 'util', 'list', 'import', 'java', 'util', 'jar', 'jarentry', 'import', 'java', 'util', 'jar', 'jarfile', 'import', 'org', 'apache', 'commons', 'io', 'fileutils', 'public', 'class', 'app', 'public', 'static', 'void', 'main', 'string', 'args', 'try', 'needed', 'attributes', 'string', 'pathtojar', 'src', 'main', 'blablalba', 'filename', 'jar', 'string', 'folderyouwanttoretrievefromthejar', 'folderiwant', 'string', 'pathoffileswithinthejar', 'src', 'resources', 'blablabla', 'folderyouwanttoretrievefromthejar', 'string', 'tempdirectorywhereextract', 'src', 'main', 'resources', 'temp', 'creating', 'the', 'temp', 'directory', 'file', 'tempdirectoryreference', 'new', 'file', 'tempdirectorywhereextract', 'if', 'tempdirectoryreference', 'exists', 'files', 'createdirectory', 'tempdirectoryreference', 'topath', 'searching', 'what', 'entries', 'i', 'need', 'jarfile', 'jar', 'new', 'jarfile', 'pathtojar', 'final', 'enumeration', 'jarentry', 'entries', 'jar', 'entries', 'list', 'jarentry', 'targetentries', 'new', 'arraylist', 'while', 'entries', 'hasmoreelements', 'jarentry', 'entry', 'entries', 'nextelement', 'if', 'the', 'entry', 'is', 'what', 'i', 'need', 'if', 'entry', 'getname', 'startswith', 'pathoffileswithinthejar', 'targetentries', 'add', 'entry', 'extract', 'every', 'target', 'entry', 'from', 'the', 'jar', 'for', 'jarentry', 'entry', 'targetentries', 'in', 'order', 'to', 'copy', 'the', 'structure', 'i', 'will', 'get', 'only', 'the', 'point', 'where', 'folderiwant', 'is', 'present', 'int', 'index', 'entry', 'getname', 'indexof', 'folderyouwanttoretrievefromthejar', 'string', 'newtemporarypath', 'tempdirectoryreference', 'getpath', 'tostring', 'entry', 'getname', 'substring', 'index', 'extractfilefromjar', 'jar', 'entry', 'new', 'file', 'newtemporarypath', 'jar', 'close', 'optional', 'clean', 'after', 'use', 'fileutils', 'deletedirectory', 'tempdirectoryreference', 'catch', 'ioexception', 'e', 'todo', 'auto', 'generated', 'catch', 'block', 'e', 'printstacktrace', 'public', 'static', 'void', 'extractfilefromjar', 'jarfile', 'jarfile', 'jarentry', 'targetentry', 'file', 'destinypath', 'try', 'if', 'destinypath', 'getparentfile', 'exists', 'createfolderstructure', 'destinypath', 'else', 'files', 'createfile', 'destinypath', 'topath', 'inputstream', 'inputstream', 'jarfile', 'getinputstream', 'targetentry', 'fileoutputstream', 'outputstream', 'new', 'java', 'io', 'fileoutputstream', 'destinypath', 'while', 'inputstream', 'available', 'outputstream', 'write', 'inputstream', 'read', 'outputstream', 'flush', 'outputstream', 'close', 'inputstream', 'close', 'catch', 'ioexception', 'e', 'e', 'printstacktrace', 'private', 'static', 'void', 'createfolderstructure', 'file', 'destinypath', 'file', 'parentpath', 'destinypath', 'getparentfile', 'try', 'if', 'parentpath', 'exists', 'files', 'createfile', 'destinypath', 'topath', 'else', 'files', 'createdirectories', 'destinypath', 'getparentfile', 'topath', 'files', 'createfile', 'destinypath', 'topath', 'catch', 'ioexception', 'e', 'system', 'err', 'println', 'e', 'getmessage']","['working', 'project', 'access', 'big', 'resource', 'folder', 'structure', 'thousand', 'little', 'image', 'required', 'client', 'want', 'offer', 'app', 'native', 'installation', 'includes', 'jvm', 'app', 'require', 'run', 'want', 'pack', 'resource', 'folder', 'app', 'would', 'create', 'folder', 'structure', 'big', 'original', 'final', 'user', 'hard', 'drive', 'folder', 'take', 'much', 'space', 'ha', 'many', 'little', 'file', 'plus', 'folder', 'could', 'stealed', 'easily', 'simply', 'copying', 'giving', 'package', 'app', 'resource', 'folder', 'jar', 'file', 'far', 'know', 'jar', 'file', 'installables', 'another', 'requirement', 'client', 'need', 'certain', 'flexibility', 'add', 'file', 'installed', 'app', 'folder', 'structure', 'add', 'new', 'feature', 'program', 'installation', 'way', 'think', 'obtain', 'tried', 'pack', 'jar', 'file', 'include', 'build', 'path', 'tried', 'access', 'failed', 'even', 'research', 'made', 'various', 'site', 'tried', 'getresources', 'million', 'way', 'wa', 'impossible', 'get', 'simple', 'directory', 'inside', 'jar', 'file', 'meanwhile', 'folder', 'outside', 'jar', 'really', 'easy', 'need', 'get', 'access', 'directory', 'order', 'get', 'list', 'file', 'cointains', 'arrived', 'point', 'started', 'ask', 'facing', 'problem', 'best', 'way', 'wanted', 'ask', 'would', 'package', 'resource', 'need', 'native', 'java', 'app', 'requirement', 'even', 'thinking', 'create', 'kind', 'encryption', 'proccess', 'create', 'single', 'file', 'information', 'simply', 'temporarily', 'decrypt', 'needed', 'runtime', 'think', 'would', 'simpler', 'cleaner', 'way', 'face', 'thank', 'advance', 'edit', 'asked', 'adding', 'code', 'tried', 'project', 'structure', 'project', 'src', 'main', 'java', 'model', 'class', 'controller', 'utility', 'view', 'resource', 'formerly', 'accessed', 'content', 'need', 'jarfile', 'jar', 'placed', 'file', 'included', 'build', 'path', 'various', 'folder', 'file', 'test', 'target', 'inside', 'jar', 'file', 'package', 'src', 'resource', 'blalblaba', 'inside', 'folder', 'need', 'way', 'getresources', 'replacing', 'jar', 'file', 'tried', 'path', 'src', 'resource', 'blablabla', 'folderineed', 'src', 'resource', 'src', 'resource', 'blablabla', 'due', 'possible', 'duplicity', 'folderineed', 'blablabla', 'folderineed', 'uri', 'always', 'get', 'nullpointerexception', 'message', 'null', 'public', 'void', 'loadcontent', 'string', 'contentpath', 'throw', 'exception', 'file', 'resource', 'null', 'file', 'listfiles', 'null', 'uri', 'uri', 'getclass', 'getclassloader', 'getresource', 'contentpath', 'touri', 'resource', 'new', 'file', 'uri', 'listfiles', 'resource', 'listfiles', 'file', 'proccessing', 'load', 'way', 'path', 'used', 'folderineed', 'src', 'resource', 'blablabla', 'folderineed', 'blablabla', 'folderineed', 'resource', 'blablabla', 'folderineed', 'url', 'return', 'null', 'least', 'raise', 'nullpointerexception', 'public', 'void', 'loadcontent', 'string', 'contentpath', 'throw', 'exception', 'conseguimos', 'toda', 'la', 'carpetas', 'de', 'animaciones', 'file', 'resource', 'file', 'listfiles', 'null', 'url', 'url', 'myclass', 'class', 'getresource', 'contentpath', 'url', 'null', 'error', 'missing', 'folder', 'else', 'resource', 'new', 'file', 'url', 'touri', 'listfiles', 'resource', 'listfiles', 'way', 'complex', 'code', 'using', 'class', 'jarfile', 'work', 'wa', 'oriented', 'get', 'simple', 'file', 'folder', 'obtained']","['my', 'wrong', 'a', 'joop', 'egen', 'told', 'in', 'his', 'answer', 'one', 'of', 'my', 'problem', 'wa', 'my', 'folder', 'structure', 'in', 'the', 'project', 'i', 'wa', 'not', 'following', 'the', 'maven', 'convention', 'of', 'putting', 'the', 'resource', 'folder', 'in', 'the', 'src', 'main', 'folder', 'it', 's', 'because', 'of', 'this', 'all', 'the', 'solution', 'i', 'were', 'trying', 'didn', 't', 'have', 'the', 'necessary', 'scope', 'to', 'get', 'the', 'resource', 'folder', 'i', 'didn', 't', 'know', 'how', 'jar', 'file', 'work', 'with', 'java', 'for', 'java', 'jar', 'file', 'are', 'a', 'collection', 'not', 'a', 'collection', 'of', 'java', 'of', 'jar', 'entry', 'to', 'every', 'single', 'file', 'within', 'them', 'in', 'my', 'single', 'case', 'the', 'jar', 'file', 'wa', 'created', 'using', 'the', 'eclipse', 'export', 'wizard', 'and', 'didn', 't', 'have', 'any', 'reference', 'to', 'folder', 'it', 'just', 'had', 'reference', 'to', 'file', 'so', 'it', 's', 'simply', 'impossible', 'to', 'get', 'a', 'folder', 'with', 'all', 'it', 'content', 'i', 'used', 'the', 'java', 'jarfile', 'class', 'to', 'manage', 'the', 'content', 'but', 'this', 'class', 'doesn', 't', 'offer', 'method', 'to', 'manage', 'file', 'like', 'java', 'file', 'class', 'doe', 'so', 'it', 's', 'not', 'a', 'easy', 'to', 'do', 'a', 'it', 'is', 'with', 'another', 'kind', 'of', 'file', 'what', 'i', 've', 'done', 'i', 've', 'developed', 'a', 'code', 'to', 'read', 'all', 'the', 'file', 'entry', 'in', 'the', 'jar', 'discriminate', 'the', 'one', 'i', 'wa', 'interested', 'to', 'and', 'then', 'extract', 'them', 'to', 'a', 'directory', 'within', 'the', 'app', 'by', 'doing', 'this', 'i', 'had', 'standard', 'access', 'to', 'them', 'and', 'if', 'i', 'want', 'to', 'i', 'can', 'simply', 'remove', 'the', 'directory', 'when', 'the', 'application', 'close', 'i', 'wa', 'trying', 'to', 'use', 'them', 'directly', 'from', 'the', 'jar', 'but', 'jar', 'file', 'are', 'zip', 'file', 'so', 'in', 'some', 'moment', 'that', 'inner', 'file', 'need', 'to', 'be', 'extrated', 'from', 'the', 'jar', 'to', 'somewhere', 'a', 'o', 'do', 'with', 'zip', 'file', 'it', 's', 'can', 'a', 'be', 'a', 'temp', 'directory', 'or', 'not', 'import', 'java', 'io', 'file', 'import', 'java', 'io', 'fileoutputstream', 'import', 'java', 'io', 'ioexception', 'import', 'java', 'io', 'inputstream', 'import', 'java', 'nio', 'file', 'file', 'import', 'java', 'util', 'arraylist', 'import', 'java', 'util', 'enumeration', 'import', 'java', 'util', 'list', 'import', 'java', 'util', 'jar', 'jarentry', 'import', 'java', 'util', 'jar', 'jarfile', 'import', 'org', 'apache', 'common', 'io', 'fileutils', 'public', 'class', 'app', 'public', 'static', 'void', 'main', 'string', 'args', 'try', 'needed', 'attribute', 'string', 'pathtojar', 'src', 'main', 'blablalba', 'filename', 'jar', 'string', 'folderyouwanttoretrievefromthejar', 'folderiwant', 'string', 'pathoffileswithinthejar', 'src', 'resource', 'blablabla', 'folderyouwanttoretrievefromthejar', 'string', 'tempdirectorywhereextract', 'src', 'main', 'resource', 'temp', 'creating', 'the', 'temp', 'directory', 'file', 'tempdirectoryreference', 'new', 'file', 'tempdirectorywhereextract', 'if', 'tempdirectoryreference', 'exists', 'file', 'createdirectory', 'tempdirectoryreference', 'topath', 'searching', 'what', 'entry', 'i', 'need', 'jarfile', 'jar', 'new', 'jarfile', 'pathtojar', 'final', 'enumeration', 'jarentry', 'entry', 'jar', 'entry', 'list', 'jarentry', 'targetentries', 'new', 'arraylist', 'while', 'entry', 'hasmoreelements', 'jarentry', 'entry', 'entry', 'nextelement', 'if', 'the', 'entry', 'is', 'what', 'i', 'need', 'if', 'entry', 'getname', 'startswith', 'pathoffileswithinthejar', 'targetentries', 'add', 'entry', 'extract', 'every', 'target', 'entry', 'from', 'the', 'jar', 'for', 'jarentry', 'entry', 'targetentries', 'in', 'order', 'to', 'copy', 'the', 'structure', 'i', 'will', 'get', 'only', 'the', 'point', 'where', 'folderiwant', 'is', 'present', 'int', 'index', 'entry', 'getname', 'indexof', 'folderyouwanttoretrievefromthejar', 'string', 'newtemporarypath', 'tempdirectoryreference', 'getpath', 'tostring', 'entry', 'getname', 'substring', 'index', 'extractfilefromjar', 'jar', 'entry', 'new', 'file', 'newtemporarypath', 'jar', 'close', 'optional', 'clean', 'after', 'use', 'fileutils', 'deletedirectory', 'tempdirectoryreference', 'catch', 'ioexception', 'e', 'todo', 'auto', 'generated', 'catch', 'block', 'e', 'printstacktrace', 'public', 'static', 'void', 'extractfilefromjar', 'jarfile', 'jarfile', 'jarentry', 'targetentry', 'file', 'destinypath', 'try', 'if', 'destinypath', 'getparentfile', 'exists', 'createfolderstructure', 'destinypath', 'else', 'file', 'createfile', 'destinypath', 'topath', 'inputstream', 'inputstream', 'jarfile', 'getinputstream', 'targetentry', 'fileoutputstream', 'outputstream', 'new', 'java', 'io', 'fileoutputstream', 'destinypath', 'while', 'inputstream', 'available', 'outputstream', 'write', 'inputstream', 'read', 'outputstream', 'flush', 'outputstream', 'close', 'inputstream', 'close', 'catch', 'ioexception', 'e', 'e', 'printstacktrace', 'private', 'static', 'void', 'createfolderstructure', 'file', 'destinypath', 'file', 'parentpath', 'destinypath', 'getparentfile', 'try', 'if', 'parentpath', 'exists', 'file', 'createfile', 'destinypath', 'topath', 'else', 'file', 'createdirectories', 'destinypath', 'getparentfile', 'topath', 'file', 'createfile', 'destinypath', 'topath', 'catch', 'ioexception', 'e', 'system', 'err', 'println', 'e', 'getmessage']",System Requirements and AWS,4,"{'neg': 0.03, 'neu': 0.907, 'pos': 0.064, 'compound': 0.9403}",0.030362062180244,4,Building and Compiling Python Projects,3query
51441053,Minimum hardware and software requirements to install Xcode 10.0,"<p>What are the minimum hardware and software specifications to install Xcode 10.0 in a MAC mini and Macbook Pro? How much RAM is required? What processor is required?</p>
",<xcode><xcode10>,2018-07-20 11:00:44,27075,8,1,51441220,"<p>These are specification for Xcode 10</p>

<ol>
<li><p>Xcode 10 requires a Mac running macOS 10.13.6 or later..</p></li>
<li><p>Xcode 10 includes SDKs for iOS 12, watchOS 5, macOS 10.14, and tvOS 12.</p></li>
<li><p>Xcode 10 supports running multiple concurrent versions of the Xcode app and of any associated tools such as Simulator.</p></li>
<li><p>Xcode 10 can coexist with previous versions of Xcode.</p></li>
</ol>

<p>reference: <a href=""https://developer.apple.com/documentation/xcode_release_notes/xcode_10_release_notes"" rel=""noreferrer"">https://developer.apple.com/documentation/xcode_release_notes/xcode_10_release_notes</a></p>
",2018-07,what are the minimum hardware and software specifications to install xcode     in a mac mini and macbook pro how much ram is required what processor is required,these are specification for xcode   xcode   requires a mac running macos       or later xcode   includes sdks for ios   watchos   macos     and tvos   xcode   supports running multiple concurrent versions of the xcode app and of any associated tools such as simulator xcode   can coexist with previous versions of xcode reference https developer apple com documentation xcode_release_notes xcode_ _release_notes,"['xcode', 'xcode10']","['what', 'are', 'the', 'minimum', 'hardware', 'and', 'software', 'specifications', 'to', 'install', 'xcode', 'in', 'a', 'mac', 'mini', 'and', 'macbook', 'pro', 'how', 'much', 'ram', 'is', 'required', 'what', 'processor', 'is', 'required']","['these', 'are', 'specification', 'for', 'xcode', 'xcode', 'requires', 'a', 'mac', 'running', 'macos', 'or', 'later', 'xcode', 'includes', 'sdks', 'for', 'ios', 'watchos', 'macos', 'and', 'tvos', 'xcode', 'supports', 'running', 'multiple', 'concurrent', 'versions', 'of', 'the', 'xcode', 'app', 'and', 'of', 'any', 'associated', 'tools', 'such', 'as', 'simulator', 'xcode', 'can', 'coexist', 'with', 'previous', 'versions', 'of', 'xcode', 'reference', 'https', 'developer', 'apple', 'com', 'documentation', 'xcode_release_notes', 'xcode_', '_release_notes']","['minimum', 'hardware', 'software', 'specification', 'install', 'xcode', 'mac', 'mini', 'macbook', 'pro', 'much', 'ram', 'required', 'processor', 'required']","['these', 'are', 'specification', 'for', 'xcode', 'xcode', 'requires', 'a', 'mac', 'running', 'macos', 'or', 'later', 'xcode', 'includes', 'sdks', 'for', 'io', 'watchos', 'macos', 'and', 'tvos', 'xcode', 'support', 'running', 'multiple', 'concurrent', 'version', 'of', 'the', 'xcode', 'app', 'and', 'of', 'any', 'associated', 'tool', 'such', 'a', 'simulator', 'xcode', 'can', 'coexist', 'with', 'previous', 'version', 'of', 'xcode', 'reference', 'http', 'developer', 'apple', 'com', 'documentation', 'xcode_release_notes', 'xcode_', '_release_notes']",System Requirements and AWS,0,"{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}",0.2,0,System Requirements and AWS,3query
51020927,MS VSTS How do I view Requirements in a tree,"<p>We are in the process of evaluating VSTS as a Requirements/Test Management platform.</p>

<p>Is there a way of viewing Requirements (Or Work Items in General) in a tree structure?</p>

<p>I have tried but can't find any way of doing it.</p>

<p>Cheers</p>
",<tree><azure-devops><requirements><workitem>,2018-06-25 10:08:44,145,0,1,51038326,"<p>If you mean map child work items to parents and show the work items in a tree structure, then you can try below ways:</p>

<ul>
<li><p>In <strong>Backlog</strong>:</p>

<p>You can set <code>Parents</code> to <code>Show</code> and click the expand <code>＋</code> icon to
expand <code>one level</code> of the hierarchy (click twice to expand two
levels). See <a href=""https://learn.microsoft.com/en-us/vsts/work/backlogs/organize-backlog?view=vsts&amp;tabs=horizontal#show-parents-and-expand-the-tree-hierarchy"" rel=""nofollow noreferrer"">Show parents and expand the tree hierarchy</a></p></li>
<li><p>In <strong>query</strong>: </p>

<p>Use the tree query (<code>Tree of work items</code>) to view a multi-tiered, nested list of work items.
See <a href=""https://learn.microsoft.com/en-us/vsts/work/track/using-queries?view=vsts&amp;tabs=new-query-exp#use-a-tree-query-to-view-hierarchies"" rel=""nofollow noreferrer"">Use a tree query to view hierarchies</a></p></li>
</ul>

<p><a href=""https://i.stack.imgur.com/EpSfL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EpSfL.png"" alt=""enter image description here""></a></p>
",2018-06,we are in the process of evaluating vsts as a requirements test management platform is there a way of viewing requirements or work items in general in a tree structure i have tried but can t find any way of doing it cheers,if you mean map child work items to parents and show the work items in a tree structure then you can try below ways in backlog you can set parents to show and click the expand icon to expand one level of the hierarchy click twice to expand two levels see show parents and expand the tree hierarchy in query use the tree query tree of work items to view a multi tiered nested list of work items see use a tree query to view hierarchies,"['tree', 'azure-devops', 'requirements', 'workitem']","['we', 'are', 'in', 'the', 'process', 'of', 'evaluating', 'vsts', 'as', 'a', 'requirements', 'test', 'management', 'platform', 'is', 'there', 'a', 'way', 'of', 'viewing', 'requirements', 'or', 'work', 'items', 'in', 'general', 'in', 'a', 'tree', 'structure', 'i', 'have', 'tried', 'but', 'can', 't', 'find', 'any', 'way', 'of', 'doing', 'it', 'cheers']","['if', 'you', 'mean', 'map', 'child', 'work', 'items', 'to', 'parents', 'and', 'show', 'the', 'work', 'items', 'in', 'a', 'tree', 'structure', 'then', 'you', 'can', 'try', 'below', 'ways', 'in', 'backlog', 'you', 'can', 'set', 'parents', 'to', 'show', 'and', 'click', 'the', 'expand', 'icon', 'to', 'expand', 'one', 'level', 'of', 'the', 'hierarchy', 'click', 'twice', 'to', 'expand', 'two', 'levels', 'see', 'show', 'parents', 'and', 'expand', 'the', 'tree', 'hierarchy', 'in', 'query', 'use', 'the', 'tree', 'query', 'tree', 'of', 'work', 'items', 'to', 'view', 'a', 'multi', 'tiered', 'nested', 'list', 'of', 'work', 'items', 'see', 'use', 'a', 'tree', 'query', 'to', 'view', 'hierarchies']","['process', 'evaluating', 'vsts', 'requirement', 'test', 'management', 'platform', 'way', 'viewing', 'requirement', 'work', 'item', 'general', 'tree', 'structure', 'tried', 'find', 'way', 'cheer']","['if', 'you', 'mean', 'map', 'child', 'work', 'item', 'to', 'parent', 'and', 'show', 'the', 'work', 'item', 'in', 'a', 'tree', 'structure', 'then', 'you', 'can', 'try', 'below', 'way', 'in', 'backlog', 'you', 'can', 'set', 'parent', 'to', 'show', 'and', 'click', 'the', 'expand', 'icon', 'to', 'expand', 'one', 'level', 'of', 'the', 'hierarchy', 'click', 'twice', 'to', 'expand', 'two', 'level', 'see', 'show', 'parent', 'and', 'expand', 'the', 'tree', 'hierarchy', 'in', 'query', 'use', 'the', 'tree', 'query', 'tree', 'of', 'work', 'item', 'to', 'view', 'a', 'multi', 'tiered', 'nested', 'list', 'of', 'work', 'item', 'see', 'use', 'a', 'tree', 'query', 'to', 'view', 'hierarchy']",Python Libraries and Environment,2,"{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}",0.05000000000000002,2,Python Libraries and Environment,3query
50963447,Swift - Conform third-party type to my own protocol with conflicting requirement,"<p>Here's the boiled down situation:</p>

<p>Let's say a third-party framework written by Alice Allman provides a very useful class:</p>

<pre><code>public class AATrackpad {
  public var cursorLocation: AAPoint = .zero
}
</code></pre>

<p>and another framework written by Bob Bell provides a different class:</p>

<pre><code>public class BBMouse {
  public var where_is_the_mouse: BBPoint = .zero
}
</code></pre>

<p>At runtime either one of these classes may be needed depending on which piece of hardware the user has decided to use. Therefore, in keeping with the <a href=""https://drive.google.com/file/d/0BwhCYaYDn8EgMjdlMWIzNGUtZTQ0NC00ZjQ5LTkwYzQtZjRhMDRlNTQ3ZGMz/view"" rel=""nofollow noreferrer"">Dependency Inversion Principle</a>, I do not want my own types to depend on <code>AATrackpad</code> or <code>BBMouse</code> directly. Rather, I want to define a protocol which describes the behaviors I need:</p>

<pre><code>protocol CursorInput {
  var cursorLocation: CGPoint { get }
}
</code></pre>

<p>and then have my own types make use of that protocol instead:</p>

<pre><code>class MyCursorDescriber {
  var cursorInput: CursorInput?

  func descriptionOfCursor () -&gt; String {
    return ""Cursor Location: \(cursorInput?.cursorLocation.description ?? ""nil"")""
  }
}
</code></pre>

<p>I want to be able to use an instance of <code>BBMouse</code> as the cursor input, like this:</p>

<pre><code>let myCursorDescriber = MyCursorDescriber()
myCursorDescriber.cursorInput = BBMouse()
</code></pre>

<p>but in order for this to compile I have to retroactively conform <code>BBMouse</code> to my protocol:</p>

<pre><code>extension BBMouse: CursorInput {
  var cursorLocation: CGPoint {
    return CGPoint(x: self.where_is_the_mouse.x, y: self.where_is_the_mouse.y)
  }
}
</code></pre>

<p>Now that I've conformed <code>BBMouse</code> to my <code>CursorInput</code> protocol, my code compiles and my architecture is the way I want it. The reason I have no problem here is that I think that <code>where_is_the_mouse</code> is a terrible name for that property, and I'm quite happy to never use that name again. However, with <code>AATrackpad</code> its a different story. I happen to think that Alice named her <code>cursorLocation</code> property perfectly, and as you can see I want to be able to use the same name for my protocol requirement. My problem is that <code>AATrackpad</code> does not use <code>CGPoint</code> as the type of this property, but instead uses a proprietary point type called <code>AAPoint</code>. The fact that my protocol requirement (<code>cursorLocation</code>) has the same name as an existing property of <code>AATrackpad</code> but a different type means that I can't retroactively conform to <code>CursorInput</code>:</p>

<pre><code>extension AATrackpad: CursorInput {
  var cursorLocation: CGPoint { // -- Invalid redeclaration
    return CGPoint(x: self.cursorLocation.x, y: self.cursorLocation.y) // -- Infinite recursion
  }
}
</code></pre>

<p>As the comments in that snippet say, this code does not compile, and even if it did I'd be facing an infinite recursion at runtime because I have no way to specifically reference the <code>AATrackpad</code> version of <code>cursorLocation</code>. It would be great if something like this would work <code>(self as? AATrackpad)?.cursorLocation</code>, but I don't believe this makes sense in this context. Again though, the protocol conformance won't even compile in the first place, so disambiguating in order to solve the infinite recursion is secondary.</p>

<p>With all of that context in mind, my question is:</p>

<p>If I architect my app using protocols (which is widely recommended, for good reason), is it really true that my ability to use a certain third-party concrete type depends on the hope this third-party developer doesn't share my taste for naming conventions?</p>

<hr>

<p>NOTE: The answer <strong>""Just pick a name that doesn't conflict with the types you want to use""</strong> won't be satisfactory. Maybe in the beginning I only had <code>BBMouse</code> and had no conflicts, and then a year later I decided that I wanted to add support for <code>AATrackpad</code> as well. I initially chose a great name and it's now used pervasively throughout my app - should I have to change it everywhere for the sake of one new concrete type? What happens later on when I want to add support for <code>CCStylusTablet</code>, which now conflicts with whatever new name I chose? Do I have to change the name of my protocol requirement <em>again</em>? I hope you see why I'm looking for a more sound answer than that.</p>
",<swift><protocols><conflict><requirements><dependency-inversion>,2018-06-21 08:06:40,402,3,1,50984709,"<p>Inspired by Jonas Maier's comment, I found what I believe to be an architecturally adequate solution to this problem. As Jonas said, function overloading exhibits the behavior that I'm looking for. I'm starting to think that maybe protocol requirements should only ever be functions, and not properties. Following this line of thinking, my protocol will now be:</p>

<pre><code>protocol CursorInput {
  func getCursorLocation () -&gt; CGPoint
  func setCursorLocation (_ newValue: CGPoint)
}
</code></pre>

<p><em>(Note that in this answer I'm making it settable as well, unlike in the original post.)</em></p>

<p>I can now retroactively conform <code>AATrackpad</code> to this protocol without conflict:</p>

<pre><code>extension AATrackpad: CursorInput {
  func getCursorLocation () -&gt; CGPoint {
    return CGPoint(x: self.cursorLocation.x, y: self.cursorLocation.y)
  }
  func setCursorLocation (_ newValue: CGPoint) {
    self.cursorLocation = AAPoint(newValue)
  }
}
</code></pre>

<p><strong>Important -</strong> This will still compile even if <code>AATrackpad</code> already has a function <code>func getCursorLocation () -&gt; AAPoint</code>, which has the same name but a different type. This behavior is exactly what I was wanting from my property in the original post. Thus:</p>

<p><em>The major problem with including a property in a protocol is that it can render certain concrete types literally incapable of conforming to that protocol due to namespace collisions.</em></p>

<p>After solving this in this way, I have a new problem to solve: there was a reason I wanted <code>cursorLocation</code> to be a property and not a function. I definitely do not want to be forced to use the <code>getPropertyName()</code> syntax all across my app. Thankfully, this can be solved, like this:</p>

<pre><code>extension CursorInput {
  var cursorLocation: CGPoint {
    get { return self.getCursorLocation() }
    set { self.setCursorLocation(newValue) }
  }
}
</code></pre>

<p>This is what is so cool about protocol extensions. Anything declared in a protocol extension behaves analogously to a default argument for a function - only used if nothing else takes precedence. Because of this different mode of behavior, this property does not cause a conflict when I conform <code>AATrackpad</code> to <code>CursorInput</code>. I can now use the property semantics that I originally wanted and I don't have to worry about namespace conflicts. I'm satisfied.</p>

<hr>

<p><strong>""Wait a second - now that</strong> <code>AATrackpad</code> <strong>conforms to</strong> <code>CursorInput</code><strong>, doesn't it have two versions of</strong> <code>cursorLocation</code><strong>? If I were to use</strong> <code>trackpad.cursorLocation</code><strong>, would it be a</strong> <code>CGPoint</code> <strong>or an</strong> <code>AAPoint</code><strong>?</strong></p>

<p>The way this works is this - if within this scope the object is known to be an <code>AATrackpad</code> then Alice's original property is used:</p>

<pre><code>let trackpad = AATrackpad()
type(of: trackpad.cursorLocation) // This is AAPoint
</code></pre>

<p>However, if the type is known only to be a <code>CursorInput</code> then the default property that I defined gets used:</p>

<pre><code>let cursorInput: CursorInput = AATrackpad()
type(of: cursorInput.cursorLocation) // This is CGPoint
</code></pre>

<p>This means that if I do happen to know that the type is <code>AATrackpad</code> then I can access either version of the property like this:</p>

<pre><code>let trackpad = AATrackpad()
type(of: trackpad.cursorLocation) // This is AAPoint
type(of: (trackpad as CursorInput).cursorLocation) // This is CGPoint
</code></pre>

<p>and it also means that my use case is exactly solved, because I specifically wanted <em>not</em> to know whether my <code>cursorInput</code> happens to be an <code>AATrackpad</code> or a <code>BBMouse</code> - only that it is some kind of <code>CursorInput</code>. Therefore, wherever I am using my <code>cursorInput: CursorInput?</code>, its properties will be of the types which I defined in the protocol extension, not the original types defined in the class.</p>

<hr>

<p>There is one possibility that a protocol with only functions as requirements could cause a namespace conflict - Jonas pointed this out in his comment. If one of the protocol requirements is a function with no arguments and the conforming type already has a property with that name then the type will not be able to conform to the protocol. This is why I made sure to name my functions including verbs, not just nouns (<code>func getCursorLocation () -&gt; CGPoint</code>) - if any third-party type is using a verb in a property name then I probably don't want to be using it anyway :)</p>
",2018-06,here s the boiled down situation let s say a third party framework written by alice allman provides a very useful class public class aatrackpad public var cursorlocation aapoint zero and another framework written by bob bell provides a different class public class bbmouse public var where_is_the_mouse bbpoint zero at runtime either one of these classes may be needed depending on which piece of hardware the user has decided to use therefore in keeping with the dependency inversion principle i do not want my own types to depend on aatrackpad or bbmouse directly rather i want to define a protocol which describes the behaviors i need protocol cursorinput var cursorlocation cgpoint get and then have my own types make use of that protocol instead class mycursordescriber var cursorinput cursorinput func descriptionofcursor string return cursor location cursorinput cursorlocation description nil i want to be able to use an instance of bbmouse as the cursor input like this let mycursordescriber mycursordescriber mycursordescriber cursorinput bbmouse but in order for this to compile i have to retroactively conform bbmouse to my protocol extension bbmouse cursorinput var cursorlocation cgpoint return cgpoint x self where_is_the_mouse x y self where_is_the_mouse y now that i ve conformed bbmouse to my cursorinput protocol my code compiles and my architecture is the way i want it the reason i have no problem here is that i think that where_is_the_mouse is a terrible name for that property and i m quite happy to never use that name again however with aatrackpad its a different story i happen to think that alice named her cursorlocation property perfectly and as you can see i want to be able to use the same name for my protocol requirement my problem is that aatrackpad does not use cgpoint as the type of this property but instead uses a proprietary point type called aapoint the fact that my protocol requirement cursorlocation has the same name as an existing property of aatrackpad but a different type means that i can t retroactively conform to cursorinput extension aatrackpad cursorinput var cursorlocation cgpoint invalid redeclaration return cgpoint x self cursorlocation x y self cursorlocation y infinite recursion as the comments in that snippet say this code does not compile and even if it did i d be facing an infinite recursion at runtime because i have no way to specifically reference the aatrackpad version of cursorlocation it would be great if something like this would work self as aatrackpad cursorlocation but i don t believe this makes sense in this context again though the protocol conformance won t even compile in the first place so disambiguating in order to solve the infinite recursion is secondary with all of that context in mind my question is if i architect my app using protocols which is widely recommended for good reason is it really true that my ability to use a certain third party concrete type depends on the hope this third party developer doesn t share my taste for naming conventions note the answer just pick a name that doesn t conflict with the types you want to use won t be satisfactory maybe in the beginning i only had bbmouse and had no conflicts and then a year later i decided that i wanted to add support for aatrackpad as well i initially chose a great name and it s now used pervasively throughout my app should i have to change it everywhere for the sake of one new concrete type what happens later on when i want to add support for ccstylustablet which now conflicts with whatever new name i chose do i have to change the name of my protocol requirement again i hope you see why i m looking for a more sound answer than that,inspired by jonas maier s comment i found what i believe to be an architecturally adequate solution to this problem as jonas said function overloading exhibits the behavior that i m looking for i m starting to think that maybe protocol requirements should only ever be functions and not properties following this line of thinking my protocol will now be protocol cursorinput func getcursorlocation cgpoint func setcursorlocation _ newvalue cgpoint note that in this answer i m making it settable as well unlike in the original post i can now retroactively conform aatrackpad to this protocol without conflict extension aatrackpad cursorinput func getcursorlocation cgpoint return cgpoint x self cursorlocation x y self cursorlocation y func setcursorlocation _ newvalue cgpoint self cursorlocation aapoint newvalue important this will still compile even if aatrackpad already has a function func getcursorlocation aapoint which has the same name but a different type this behavior is exactly what i was wanting from my property in the original post thus the major problem with including a property in a protocol is that it can render certain concrete types literally incapable of conforming to that protocol due to namespace collisions after solving this in this way i have a new problem to solve there was a reason i wanted cursorlocation to be a property and not a function i definitely do not want to be forced to use the getpropertyname syntax all across my app thankfully this can be solved like this extension cursorinput var cursorlocation cgpoint get return self getcursorlocation set self setcursorlocation newvalue this is what is so cool about protocol extensions anything declared in a protocol extension behaves analogously to a default argument for a function only used if nothing else takes precedence because of this different mode of behavior this property does not cause a conflict when i conform aatrackpad to cursorinput i can now use the property semantics that i originally wanted and i don t have to worry about namespace conflicts i m satisfied wait a second now that aatrackpad conforms to cursorinput doesn t it have two versions of cursorlocation if i were to use trackpad cursorlocation would it be a cgpoint or an aapoint the way this works is this if within this scope the object is known to be an aatrackpad then alice s original property is used let trackpad aatrackpad type of trackpad cursorlocation this is aapoint however if the type is known only to be a cursorinput then the default property that i defined gets used let cursorinput cursorinput aatrackpad type of cursorinput cursorlocation this is cgpoint this means that if i do happen to know that the type is aatrackpad then i can access either version of the property like this let trackpad aatrackpad type of trackpad cursorlocation this is aapoint type of trackpad as cursorinput cursorlocation this is cgpoint and it also means that my use case is exactly solved because i specifically wanted not to know whether my cursorinput happens to be an aatrackpad or a bbmouse only that it is some kind of cursorinput therefore wherever i am using my cursorinput cursorinput its properties will be of the types which i defined in the protocol extension not the original types defined in the class there is one possibility that a protocol with only functions as requirements could cause a namespace conflict jonas pointed this out in his comment if one of the protocol requirements is a function with no arguments and the conforming type already has a property with that name then the type will not be able to conform to the protocol this is why i made sure to name my functions including verbs not just nouns func getcursorlocation cgpoint if any third party type is using a verb in a property name then i probably don t want to be using it anyway,"['swift', 'protocols', 'conflict', 'requirements', 'dependency-inversion']","['here', 's', 'the', 'boiled', 'down', 'situation', 'let', 's', 'say', 'a', 'third', 'party', 'framework', 'written', 'by', 'alice', 'allman', 'provides', 'a', 'very', 'useful', 'class', 'public', 'class', 'aatrackpad', 'public', 'var', 'cursorlocation', 'aapoint', 'zero', 'and', 'another', 'framework', 'written', 'by', 'bob', 'bell', 'provides', 'a', 'different', 'class', 'public', 'class', 'bbmouse', 'public', 'var', 'where_is_the_mouse', 'bbpoint', 'zero', 'at', 'runtime', 'either', 'one', 'of', 'these', 'classes', 'may', 'be', 'needed', 'depending', 'on', 'which', 'piece', 'of', 'hardware', 'the', 'user', 'has', 'decided', 'to', 'use', 'therefore', 'in', 'keeping', 'with', 'the', 'dependency', 'inversion', 'principle', 'i', 'do', 'not', 'want', 'my', 'own', 'types', 'to', 'depend', 'on', 'aatrackpad', 'or', 'bbmouse', 'directly', 'rather', 'i', 'want', 'to', 'define', 'a', 'protocol', 'which', 'describes', 'the', 'behaviors', 'i', 'need', 'protocol', 'cursorinput', 'var', 'cursorlocation', 'cgpoint', 'get', 'and', 'then', 'have', 'my', 'own', 'types', 'make', 'use', 'of', 'that', 'protocol', 'instead', 'class', 'mycursordescriber', 'var', 'cursorinput', 'cursorinput', 'func', 'descriptionofcursor', 'string', 'return', 'cursor', 'location', 'cursorinput', 'cursorlocation', 'description', 'nil', 'i', 'want', 'to', 'be', 'able', 'to', 'use', 'an', 'instance', 'of', 'bbmouse', 'as', 'the', 'cursor', 'input', 'like', 'this', 'let', 'mycursordescriber', 'mycursordescriber', 'mycursordescriber', 'cursorinput', 'bbmouse', 'but', 'in', 'order', 'for', 'this', 'to', 'compile', 'i', 'have', 'to', 'retroactively', 'conform', 'bbmouse', 'to', 'my', 'protocol', 'extension', 'bbmouse', 'cursorinput', 'var', 'cursorlocation', 'cgpoint', 'return', 'cgpoint', 'x', 'self', 'where_is_the_mouse', 'x', 'y', 'self', 'where_is_the_mouse', 'y', 'now', 'that', 'i', 've', 'conformed', 'bbmouse', 'to', 'my', 'cursorinput', 'protocol', 'my', 'code', 'compiles', 'and', 'my', 'architecture', 'is', 'the', 'way', 'i', 'want', 'it', 'the', 'reason', 'i', 'have', 'no', 'problem', 'here', 'is', 'that', 'i', 'think', 'that', 'where_is_the_mouse', 'is', 'a', 'terrible', 'name', 'for', 'that', 'property', 'and', 'i', 'm', 'quite', 'happy', 'to', 'never', 'use', 'that', 'name', 'again', 'however', 'with', 'aatrackpad', 'its', 'a', 'different', 'story', 'i', 'happen', 'to', 'think', 'that', 'alice', 'named', 'her', 'cursorlocation', 'property', 'perfectly', 'and', 'as', 'you', 'can', 'see', 'i', 'want', 'to', 'be', 'able', 'to', 'use', 'the', 'same', 'name', 'for', 'my', 'protocol', 'requirement', 'my', 'problem', 'is', 'that', 'aatrackpad', 'does', 'not', 'use', 'cgpoint', 'as', 'the', 'type', 'of', 'this', 'property', 'but', 'instead', 'uses', 'a', 'proprietary', 'point', 'type', 'called', 'aapoint', 'the', 'fact', 'that', 'my', 'protocol', 'requirement', 'cursorlocation', 'has', 'the', 'same', 'name', 'as', 'an', 'existing', 'property', 'of', 'aatrackpad', 'but', 'a', 'different', 'type', 'means', 'that', 'i', 'can', 't', 'retroactively', 'conform', 'to', 'cursorinput', 'extension', 'aatrackpad', 'cursorinput', 'var', 'cursorlocation', 'cgpoint', 'invalid', 'redeclaration', 'return', 'cgpoint', 'x', 'self', 'cursorlocation', 'x', 'y', 'self', 'cursorlocation', 'y', 'infinite', 'recursion', 'as', 'the', 'comments', 'in', 'that', 'snippet', 'say', 'this', 'code', 'does', 'not', 'compile', 'and', 'even', 'if', 'it', 'did', 'i', 'd', 'be', 'facing', 'an', 'infinite', 'recursion', 'at', 'runtime', 'because', 'i', 'have', 'no', 'way', 'to', 'specifically', 'reference', 'the', 'aatrackpad', 'version', 'of', 'cursorlocation', 'it', 'would', 'be', 'great', 'if', 'something', 'like', 'this', 'would', 'work', 'self', 'as', 'aatrackpad', 'cursorlocation', 'but', 'i', 'don', 't', 'believe', 'this', 'makes', 'sense', 'in', 'this', 'context', 'again', 'though', 'the', 'protocol', 'conformance', 'won', 't', 'even', 'compile', 'in', 'the', 'first', 'place', 'so', 'disambiguating', 'in', 'order', 'to', 'solve', 'the', 'infinite', 'recursion', 'is', 'secondary', 'with', 'all', 'of', 'that', 'context', 'in', 'mind', 'my', 'question', 'is', 'if', 'i', 'architect', 'my', 'app', 'using', 'protocols', 'which', 'is', 'widely', 'recommended', 'for', 'good', 'reason', 'is', 'it', 'really', 'true', 'that', 'my', 'ability', 'to', 'use', 'a', 'certain', 'third', 'party', 'concrete', 'type', 'depends', 'on', 'the', 'hope', 'this', 'third', 'party', 'developer', 'doesn', 't', 'share', 'my', 'taste', 'for', 'naming', 'conventions', 'note', 'the', 'answer', 'just', 'pick', 'a', 'name', 'that', 'doesn', 't', 'conflict', 'with', 'the', 'types', 'you', 'want', 'to', 'use', 'won', 't', 'be', 'satisfactory', 'maybe', 'in', 'the', 'beginning', 'i', 'only', 'had', 'bbmouse', 'and', 'had', 'no', 'conflicts', 'and', 'then', 'a', 'year', 'later', 'i', 'decided', 'that', 'i', 'wanted', 'to', 'add', 'support', 'for', 'aatrackpad', 'as', 'well', 'i', 'initially', 'chose', 'a', 'great', 'name', 'and', 'it', 's', 'now', 'used', 'pervasively', 'throughout', 'my', 'app', 'should', 'i', 'have', 'to', 'change', 'it', 'everywhere', 'for', 'the', 'sake', 'of', 'one', 'new', 'concrete', 'type', 'what', 'happens', 'later', 'on', 'when', 'i', 'want', 'to', 'add', 'support', 'for', 'ccstylustablet', 'which', 'now', 'conflicts', 'with', 'whatever', 'new', 'name', 'i', 'chose', 'do', 'i', 'have', 'to', 'change', 'the', 'name', 'of', 'my', 'protocol', 'requirement', 'again', 'i', 'hope', 'you', 'see', 'why', 'i', 'm', 'looking', 'for', 'a', 'more', 'sound', 'answer', 'than', 'that']","['inspired', 'by', 'jonas', 'maier', 's', 'comment', 'i', 'found', 'what', 'i', 'believe', 'to', 'be', 'an', 'architecturally', 'adequate', 'solution', 'to', 'this', 'problem', 'as', 'jonas', 'said', 'function', 'overloading', 'exhibits', 'the', 'behavior', 'that', 'i', 'm', 'looking', 'for', 'i', 'm', 'starting', 'to', 'think', 'that', 'maybe', 'protocol', 'requirements', 'should', 'only', 'ever', 'be', 'functions', 'and', 'not', 'properties', 'following', 'this', 'line', 'of', 'thinking', 'my', 'protocol', 'will', 'now', 'be', 'protocol', 'cursorinput', 'func', 'getcursorlocation', 'cgpoint', 'func', 'setcursorlocation', '_', 'newvalue', 'cgpoint', 'note', 'that', 'in', 'this', 'answer', 'i', 'm', 'making', 'it', 'settable', 'as', 'well', 'unlike', 'in', 'the', 'original', 'post', 'i', 'can', 'now', 'retroactively', 'conform', 'aatrackpad', 'to', 'this', 'protocol', 'without', 'conflict', 'extension', 'aatrackpad', 'cursorinput', 'func', 'getcursorlocation', 'cgpoint', 'return', 'cgpoint', 'x', 'self', 'cursorlocation', 'x', 'y', 'self', 'cursorlocation', 'y', 'func', 'setcursorlocation', '_', 'newvalue', 'cgpoint', 'self', 'cursorlocation', 'aapoint', 'newvalue', 'important', 'this', 'will', 'still', 'compile', 'even', 'if', 'aatrackpad', 'already', 'has', 'a', 'function', 'func', 'getcursorlocation', 'aapoint', 'which', 'has', 'the', 'same', 'name', 'but', 'a', 'different', 'type', 'this', 'behavior', 'is', 'exactly', 'what', 'i', 'was', 'wanting', 'from', 'my', 'property', 'in', 'the', 'original', 'post', 'thus', 'the', 'major', 'problem', 'with', 'including', 'a', 'property', 'in', 'a', 'protocol', 'is', 'that', 'it', 'can', 'render', 'certain', 'concrete', 'types', 'literally', 'incapable', 'of', 'conforming', 'to', 'that', 'protocol', 'due', 'to', 'namespace', 'collisions', 'after', 'solving', 'this', 'in', 'this', 'way', 'i', 'have', 'a', 'new', 'problem', 'to', 'solve', 'there', 'was', 'a', 'reason', 'i', 'wanted', 'cursorlocation', 'to', 'be', 'a', 'property', 'and', 'not', 'a', 'function', 'i', 'definitely', 'do', 'not', 'want', 'to', 'be', 'forced', 'to', 'use', 'the', 'getpropertyname', 'syntax', 'all', 'across', 'my', 'app', 'thankfully', 'this', 'can', 'be', 'solved', 'like', 'this', 'extension', 'cursorinput', 'var', 'cursorlocation', 'cgpoint', 'get', 'return', 'self', 'getcursorlocation', 'set', 'self', 'setcursorlocation', 'newvalue', 'this', 'is', 'what', 'is', 'so', 'cool', 'about', 'protocol', 'extensions', 'anything', 'declared', 'in', 'a', 'protocol', 'extension', 'behaves', 'analogously', 'to', 'a', 'default', 'argument', 'for', 'a', 'function', 'only', 'used', 'if', 'nothing', 'else', 'takes', 'precedence', 'because', 'of', 'this', 'different', 'mode', 'of', 'behavior', 'this', 'property', 'does', 'not', 'cause', 'a', 'conflict', 'when', 'i', 'conform', 'aatrackpad', 'to', 'cursorinput', 'i', 'can', 'now', 'use', 'the', 'property', 'semantics', 'that', 'i', 'originally', 'wanted', 'and', 'i', 'don', 't', 'have', 'to', 'worry', 'about', 'namespace', 'conflicts', 'i', 'm', 'satisfied', 'wait', 'a', 'second', 'now', 'that', 'aatrackpad', 'conforms', 'to', 'cursorinput', 'doesn', 't', 'it', 'have', 'two', 'versions', 'of', 'cursorlocation', 'if', 'i', 'were', 'to', 'use', 'trackpad', 'cursorlocation', 'would', 'it', 'be', 'a', 'cgpoint', 'or', 'an', 'aapoint', 'the', 'way', 'this', 'works', 'is', 'this', 'if', 'within', 'this', 'scope', 'the', 'object', 'is', 'known', 'to', 'be', 'an', 'aatrackpad', 'then', 'alice', 's', 'original', 'property', 'is', 'used', 'let', 'trackpad', 'aatrackpad', 'type', 'of', 'trackpad', 'cursorlocation', 'this', 'is', 'aapoint', 'however', 'if', 'the', 'type', 'is', 'known', 'only', 'to', 'be', 'a', 'cursorinput', 'then', 'the', 'default', 'property', 'that', 'i', 'defined', 'gets', 'used', 'let', 'cursorinput', 'cursorinput', 'aatrackpad', 'type', 'of', 'cursorinput', 'cursorlocation', 'this', 'is', 'cgpoint', 'this', 'means', 'that', 'if', 'i', 'do', 'happen', 'to', 'know', 'that', 'the', 'type', 'is', 'aatrackpad', 'then', 'i', 'can', 'access', 'either', 'version', 'of', 'the', 'property', 'like', 'this', 'let', 'trackpad', 'aatrackpad', 'type', 'of', 'trackpad', 'cursorlocation', 'this', 'is', 'aapoint', 'type', 'of', 'trackpad', 'as', 'cursorinput', 'cursorlocation', 'this', 'is', 'cgpoint', 'and', 'it', 'also', 'means', 'that', 'my', 'use', 'case', 'is', 'exactly', 'solved', 'because', 'i', 'specifically', 'wanted', 'not', 'to', 'know', 'whether', 'my', 'cursorinput', 'happens', 'to', 'be', 'an', 'aatrackpad', 'or', 'a', 'bbmouse', 'only', 'that', 'it', 'is', 'some', 'kind', 'of', 'cursorinput', 'therefore', 'wherever', 'i', 'am', 'using', 'my', 'cursorinput', 'cursorinput', 'its', 'properties', 'will', 'be', 'of', 'the', 'types', 'which', 'i', 'defined', 'in', 'the', 'protocol', 'extension', 'not', 'the', 'original', 'types', 'defined', 'in', 'the', 'class', 'there', 'is', 'one', 'possibility', 'that', 'a', 'protocol', 'with', 'only', 'functions', 'as', 'requirements', 'could', 'cause', 'a', 'namespace', 'conflict', 'jonas', 'pointed', 'this', 'out', 'in', 'his', 'comment', 'if', 'one', 'of', 'the', 'protocol', 'requirements', 'is', 'a', 'function', 'with', 'no', 'arguments', 'and', 'the', 'conforming', 'type', 'already', 'has', 'a', 'property', 'with', 'that', 'name', 'then', 'the', 'type', 'will', 'not', 'be', 'able', 'to', 'conform', 'to', 'the', 'protocol', 'this', 'is', 'why', 'i', 'made', 'sure', 'to', 'name', 'my', 'functions', 'including', 'verbs', 'not', 'just', 'nouns', 'func', 'getcursorlocation', 'cgpoint', 'if', 'any', 'third', 'party', 'type', 'is', 'using', 'a', 'verb', 'in', 'a', 'property', 'name', 'then', 'i', 'probably', 'don', 't', 'want', 'to', 'be', 'using', 'it', 'anyway']","['boiled', 'situation', 'let', 'say', 'third', 'party', 'framework', 'written', 'alice', 'allman', 'provides', 'useful', 'class', 'public', 'class', 'aatrackpad', 'public', 'var', 'cursorlocation', 'aapoint', 'zero', 'another', 'framework', 'written', 'bob', 'bell', 'provides', 'different', 'class', 'public', 'class', 'bbmouse', 'public', 'var', 'where_is_the_mouse', 'bbpoint', 'zero', 'runtime', 'either', 'one', 'class', 'may', 'needed', 'depending', 'piece', 'hardware', 'user', 'ha', 'decided', 'use', 'therefore', 'keeping', 'dependency', 'inversion', 'principle', 'want', 'type', 'depend', 'aatrackpad', 'bbmouse', 'directly', 'rather', 'want', 'define', 'protocol', 'describes', 'behavior', 'need', 'protocol', 'cursorinput', 'var', 'cursorlocation', 'cgpoint', 'get', 'type', 'make', 'use', 'protocol', 'instead', 'class', 'mycursordescriber', 'var', 'cursorinput', 'cursorinput', 'func', 'descriptionofcursor', 'string', 'return', 'cursor', 'location', 'cursorinput', 'cursorlocation', 'description', 'nil', 'want', 'able', 'use', 'instance', 'bbmouse', 'cursor', 'input', 'like', 'let', 'mycursordescriber', 'mycursordescriber', 'mycursordescriber', 'cursorinput', 'bbmouse', 'order', 'compile', 'retroactively', 'conform', 'bbmouse', 'protocol', 'extension', 'bbmouse', 'cursorinput', 'var', 'cursorlocation', 'cgpoint', 'return', 'cgpoint', 'x', 'self', 'where_is_the_mouse', 'x', 'self', 'where_is_the_mouse', 'conformed', 'bbmouse', 'cursorinput', 'protocol', 'code', 'compiles', 'architecture', 'way', 'want', 'reason', 'problem', 'think', 'where_is_the_mouse', 'terrible', 'name', 'property', 'quite', 'happy', 'never', 'use', 'name', 'however', 'aatrackpad', 'different', 'story', 'happen', 'think', 'alice', 'named', 'cursorlocation', 'property', 'perfectly', 'see', 'want', 'able', 'use', 'name', 'protocol', 'requirement', 'problem', 'aatrackpad', 'doe', 'use', 'cgpoint', 'type', 'property', 'instead', 'us', 'proprietary', 'point', 'type', 'called', 'aapoint', 'fact', 'protocol', 'requirement', 'cursorlocation', 'ha', 'name', 'existing', 'property', 'aatrackpad', 'different', 'type', 'mean', 'retroactively', 'conform', 'cursorinput', 'extension', 'aatrackpad', 'cursorinput', 'var', 'cursorlocation', 'cgpoint', 'invalid', 'redeclaration', 'return', 'cgpoint', 'x', 'self', 'cursorlocation', 'x', 'self', 'cursorlocation', 'infinite', 'recursion', 'comment', 'snippet', 'say', 'code', 'doe', 'compile', 'even', 'facing', 'infinite', 'recursion', 'runtime', 'way', 'specifically', 'reference', 'aatrackpad', 'version', 'cursorlocation', 'would', 'great', 'something', 'like', 'would', 'work', 'self', 'aatrackpad', 'cursorlocation', 'believe', 'make', 'sense', 'context', 'though', 'protocol', 'conformance', 'even', 'compile', 'first', 'place', 'disambiguating', 'order', 'solve', 'infinite', 'recursion', 'secondary', 'context', 'mind', 'question', 'architect', 'app', 'using', 'protocol', 'widely', 'recommended', 'good', 'reason', 'really', 'true', 'ability', 'use', 'certain', 'third', 'party', 'concrete', 'type', 'depends', 'hope', 'third', 'party', 'developer', 'share', 'taste', 'naming', 'convention', 'note', 'answer', 'pick', 'name', 'conflict', 'type', 'want', 'use', 'satisfactory', 'maybe', 'beginning', 'bbmouse', 'conflict', 'year', 'later', 'decided', 'wanted', 'add', 'support', 'aatrackpad', 'well', 'initially', 'chose', 'great', 'name', 'used', 'pervasively', 'throughout', 'app', 'change', 'everywhere', 'sake', 'one', 'new', 'concrete', 'type', 'happens', 'later', 'want', 'add', 'support', 'ccstylustablet', 'conflict', 'whatever', 'new', 'name', 'chose', 'change', 'name', 'protocol', 'requirement', 'hope', 'see', 'looking', 'sound', 'answer']","['inspired', 'by', 'jonas', 'maier', 's', 'comment', 'i', 'found', 'what', 'i', 'believe', 'to', 'be', 'an', 'architecturally', 'adequate', 'solution', 'to', 'this', 'problem', 'a', 'jonas', 'said', 'function', 'overloading', 'exhibit', 'the', 'behavior', 'that', 'i', 'm', 'looking', 'for', 'i', 'm', 'starting', 'to', 'think', 'that', 'maybe', 'protocol', 'requirement', 'should', 'only', 'ever', 'be', 'function', 'and', 'not', 'property', 'following', 'this', 'line', 'of', 'thinking', 'my', 'protocol', 'will', 'now', 'be', 'protocol', 'cursorinput', 'func', 'getcursorlocation', 'cgpoint', 'func', 'setcursorlocation', '_', 'newvalue', 'cgpoint', 'note', 'that', 'in', 'this', 'answer', 'i', 'm', 'making', 'it', 'settable', 'a', 'well', 'unlike', 'in', 'the', 'original', 'post', 'i', 'can', 'now', 'retroactively', 'conform', 'aatrackpad', 'to', 'this', 'protocol', 'without', 'conflict', 'extension', 'aatrackpad', 'cursorinput', 'func', 'getcursorlocation', 'cgpoint', 'return', 'cgpoint', 'x', 'self', 'cursorlocation', 'x', 'y', 'self', 'cursorlocation', 'y', 'func', 'setcursorlocation', '_', 'newvalue', 'cgpoint', 'self', 'cursorlocation', 'aapoint', 'newvalue', 'important', 'this', 'will', 'still', 'compile', 'even', 'if', 'aatrackpad', 'already', 'ha', 'a', 'function', 'func', 'getcursorlocation', 'aapoint', 'which', 'ha', 'the', 'same', 'name', 'but', 'a', 'different', 'type', 'this', 'behavior', 'is', 'exactly', 'what', 'i', 'wa', 'wanting', 'from', 'my', 'property', 'in', 'the', 'original', 'post', 'thus', 'the', 'major', 'problem', 'with', 'including', 'a', 'property', 'in', 'a', 'protocol', 'is', 'that', 'it', 'can', 'render', 'certain', 'concrete', 'type', 'literally', 'incapable', 'of', 'conforming', 'to', 'that', 'protocol', 'due', 'to', 'namespace', 'collision', 'after', 'solving', 'this', 'in', 'this', 'way', 'i', 'have', 'a', 'new', 'problem', 'to', 'solve', 'there', 'wa', 'a', 'reason', 'i', 'wanted', 'cursorlocation', 'to', 'be', 'a', 'property', 'and', 'not', 'a', 'function', 'i', 'definitely', 'do', 'not', 'want', 'to', 'be', 'forced', 'to', 'use', 'the', 'getpropertyname', 'syntax', 'all', 'across', 'my', 'app', 'thankfully', 'this', 'can', 'be', 'solved', 'like', 'this', 'extension', 'cursorinput', 'var', 'cursorlocation', 'cgpoint', 'get', 'return', 'self', 'getcursorlocation', 'set', 'self', 'setcursorlocation', 'newvalue', 'this', 'is', 'what', 'is', 'so', 'cool', 'about', 'protocol', 'extension', 'anything', 'declared', 'in', 'a', 'protocol', 'extension', 'behaves', 'analogously', 'to', 'a', 'default', 'argument', 'for', 'a', 'function', 'only', 'used', 'if', 'nothing', 'else', 'take', 'precedence', 'because', 'of', 'this', 'different', 'mode', 'of', 'behavior', 'this', 'property', 'doe', 'not', 'cause', 'a', 'conflict', 'when', 'i', 'conform', 'aatrackpad', 'to', 'cursorinput', 'i', 'can', 'now', 'use', 'the', 'property', 'semantics', 'that', 'i', 'originally', 'wanted', 'and', 'i', 'don', 't', 'have', 'to', 'worry', 'about', 'namespace', 'conflict', 'i', 'm', 'satisfied', 'wait', 'a', 'second', 'now', 'that', 'aatrackpad', 'conforms', 'to', 'cursorinput', 'doesn', 't', 'it', 'have', 'two', 'version', 'of', 'cursorlocation', 'if', 'i', 'were', 'to', 'use', 'trackpad', 'cursorlocation', 'would', 'it', 'be', 'a', 'cgpoint', 'or', 'an', 'aapoint', 'the', 'way', 'this', 'work', 'is', 'this', 'if', 'within', 'this', 'scope', 'the', 'object', 'is', 'known', 'to', 'be', 'an', 'aatrackpad', 'then', 'alice', 's', 'original', 'property', 'is', 'used', 'let', 'trackpad', 'aatrackpad', 'type', 'of', 'trackpad', 'cursorlocation', 'this', 'is', 'aapoint', 'however', 'if', 'the', 'type', 'is', 'known', 'only', 'to', 'be', 'a', 'cursorinput', 'then', 'the', 'default', 'property', 'that', 'i', 'defined', 'get', 'used', 'let', 'cursorinput', 'cursorinput', 'aatrackpad', 'type', 'of', 'cursorinput', 'cursorlocation', 'this', 'is', 'cgpoint', 'this', 'mean', 'that', 'if', 'i', 'do', 'happen', 'to', 'know', 'that', 'the', 'type', 'is', 'aatrackpad', 'then', 'i', 'can', 'access', 'either', 'version', 'of', 'the', 'property', 'like', 'this', 'let', 'trackpad', 'aatrackpad', 'type', 'of', 'trackpad', 'cursorlocation', 'this', 'is', 'aapoint', 'type', 'of', 'trackpad', 'a', 'cursorinput', 'cursorlocation', 'this', 'is', 'cgpoint', 'and', 'it', 'also', 'mean', 'that', 'my', 'use', 'case', 'is', 'exactly', 'solved', 'because', 'i', 'specifically', 'wanted', 'not', 'to', 'know', 'whether', 'my', 'cursorinput', 'happens', 'to', 'be', 'an', 'aatrackpad', 'or', 'a', 'bbmouse', 'only', 'that', 'it', 'is', 'some', 'kind', 'of', 'cursorinput', 'therefore', 'wherever', 'i', 'am', 'using', 'my', 'cursorinput', 'cursorinput', 'it', 'property', 'will', 'be', 'of', 'the', 'type', 'which', 'i', 'defined', 'in', 'the', 'protocol', 'extension', 'not', 'the', 'original', 'type', 'defined', 'in', 'the', 'class', 'there', 'is', 'one', 'possibility', 'that', 'a', 'protocol', 'with', 'only', 'function', 'a', 'requirement', 'could', 'cause', 'a', 'namespace', 'conflict', 'jonas', 'pointed', 'this', 'out', 'in', 'his', 'comment', 'if', 'one', 'of', 'the', 'protocol', 'requirement', 'is', 'a', 'function', 'with', 'no', 'argument', 'and', 'the', 'conforming', 'type', 'already', 'ha', 'a', 'property', 'with', 'that', 'name', 'then', 'the', 'type', 'will', 'not', 'be', 'able', 'to', 'conform', 'to', 'the', 'protocol', 'this', 'is', 'why', 'i', 'made', 'sure', 'to', 'name', 'my', 'function', 'including', 'verb', 'not', 'just', 'noun', 'func', 'getcursorlocation', 'cgpoint', 'if', 'any', 'third', 'party', 'type', 'is', 'using', 'a', 'verb', 'in', 'a', 'property', 'name', 'then', 'i', 'probably', 'don', 't', 'want', 'to', 'be', 'using', 'it', 'anyway']",System Requirements and AWS,0,"{'neg': 0.051, 'neu': 0.852, 'pos': 0.097, 'compound': 0.9901}",0.23004286563110096,0,System Requirements and AWS,3query
50866024,"Drupal 8, just after installing, css files can't loaded, server error 500","<p>I have just installed Drupal 8.5.4, like this:</p>

<ul>
<li><p>get the code from the site</p></li>
<li><p>extracted it in the s folder on my site ('katelec.com/s').</p></li>
<li><p>create database, installed the site.</p></li>
</ul>

<p>when trying to access the site, no styles loaded.</p>

<p>when trying to access any css file i get server error 500.</p>

<p>the style are generated correctly and lay in the corresponding folder.</p>

<p>everything went well when I disabled css / js aggregation.</p>

<p>PHP Version 7.0.30
Memory limit: 500M
TRUSTED HOST SETTINGS</p>

<p>Why I get this error?</p>
",<installation><drupal-8><requirements>,2018-06-14 21:13:11,282,0,1,50878465,"<p>After reviewing server log.</p>

<p>Drupal's .htaccess files has a command to stop cgi from running.</p>

<p>And it seems that the shared hosting I'm using disabled cgi.</p>

<blockquote>
  <p>So I edited .htaccess file by removing that cgi command.</p>
</blockquote>
",2018-06,i have just installed drupal       like this get the code from the site extracted it in the s folder on my site katelec com s create database installed the site when trying to access the site no styles loaded when trying to access any css file i get server error   the style are generated correctly and lay in the corresponding folder everything went well when i disabled css js aggregation php version       memory limit  m trusted host settings why i get this error,after reviewing server log drupal s htaccess files has a command to stop cgi from running and it seems that the shared hosting i m using disabled cgi so i edited htaccess file by removing that cgi command,"['installation', 'drupal-8', 'requirements']","['i', 'have', 'just', 'installed', 'drupal', 'like', 'this', 'get', 'the', 'code', 'from', 'the', 'site', 'extracted', 'it', 'in', 'the', 's', 'folder', 'on', 'my', 'site', 'katelec', 'com', 's', 'create', 'database', 'installed', 'the', 'site', 'when', 'trying', 'to', 'access', 'the', 'site', 'no', 'styles', 'loaded', 'when', 'trying', 'to', 'access', 'any', 'css', 'file', 'i', 'get', 'server', 'error', 'the', 'style', 'are', 'generated', 'correctly', 'and', 'lay', 'in', 'the', 'corresponding', 'folder', 'everything', 'went', 'well', 'when', 'i', 'disabled', 'css', 'js', 'aggregation', 'php', 'version', 'memory', 'limit', 'm', 'trusted', 'host', 'settings', 'why', 'i', 'get', 'this', 'error']","['after', 'reviewing', 'server', 'log', 'drupal', 's', 'htaccess', 'files', 'has', 'a', 'command', 'to', 'stop', 'cgi', 'from', 'running', 'and', 'it', 'seems', 'that', 'the', 'shared', 'hosting', 'i', 'm', 'using', 'disabled', 'cgi', 'so', 'i', 'edited', 'htaccess', 'file', 'by', 'removing', 'that', 'cgi', 'command']","['installed', 'drupal', 'like', 'get', 'code', 'site', 'extracted', 'folder', 'site', 'katelec', 'com', 'create', 'database', 'installed', 'site', 'trying', 'access', 'site', 'style', 'loaded', 'trying', 'access', 'cs', 'file', 'get', 'server', 'error', 'style', 'generated', 'correctly', 'lay', 'corresponding', 'folder', 'everything', 'went', 'well', 'disabled', 'cs', 'j', 'aggregation', 'php', 'version', 'memory', 'limit', 'trusted', 'host', 'setting', 'get', 'error']","['after', 'reviewing', 'server', 'log', 'drupal', 's', 'htaccess', 'file', 'ha', 'a', 'command', 'to', 'stop', 'cgi', 'from', 'running', 'and', 'it', 'seems', 'that', 'the', 'shared', 'hosting', 'i', 'm', 'using', 'disabled', 'cgi', 'so', 'i', 'edited', 'htaccess', 'file', 'by', 'removing', 'that', 'cgi', 'command']",System Requirements and AWS,0,"{'neg': 0.054, 'neu': 0.852, 'pos': 0.093, 'compound': 0.5473}",-0.2,0,System Requirements and AWS,3query
50861906,"Could not find a version that satisfies the requirement <every package> , No matching distribution","<p>On windows, I can't install any packages of these : numpy, matplotlib, skimage,...</p>

<p>My python version is 2.7</p>

<p>Everytime the same error :</p>

<p><strong>Could not find a version that satisfies the requirement scikit-image (from ver
sions: )
No matching distribution found for scikit-image</strong></p>

<p>I have tried to consider 'abce' requirements, but didn't work.</p>

<p>Thank you very much for helping me</p>
",<windows><pip><scikit-image><requirements>,2018-06-14 16:17:50,10750,5,1,50892195,"<p>You're using pip to install your packages ?</p>

<p>First install numpy : <code>pip install numpy</code></p>

<p>Then install matplotlib <code>pip install matplotlib</code></p>

<p>Then install scipy <code>pip install scipy</code></p>

<p>And finally install skimage <code>pip install scikit-image</code></p>

<p>The error you obtain means that you're not giving the right name for your package</p>

<p>Hope it helps</p>

<p>Cheers</p>
",2018-06,on windows i can t install any packages of these numpy matplotlib skimage my python version is     everytime the same error could not find a version that satisfies the requirement scikit image from ver sions no matching distribution found for scikit image i have tried to consider abce requirements but didn t work thank you very much for helping me,you re using pip to install your packages first install numpy pip install numpy then install matplotlib pip install matplotlib then install scipy pip install scipy and finally install skimage pip install scikit image the error you obtain means that you re not giving the right name for your package hope it helps cheers,"['windows', 'pip', 'scikit-image', 'requirements']","['on', 'windows', 'i', 'can', 't', 'install', 'any', 'packages', 'of', 'these', 'numpy', 'matplotlib', 'skimage', 'my', 'python', 'version', 'is', 'everytime', 'the', 'same', 'error', 'could', 'not', 'find', 'a', 'version', 'that', 'satisfies', 'the', 'requirement', 'scikit', 'image', 'from', 'ver', 'sions', 'no', 'matching', 'distribution', 'found', 'for', 'scikit', 'image', 'i', 'have', 'tried', 'to', 'consider', 'abce', 'requirements', 'but', 'didn', 't', 'work', 'thank', 'you', 'very', 'much', 'for', 'helping', 'me']","['you', 're', 'using', 'pip', 'to', 'install', 'your', 'packages', 'first', 'install', 'numpy', 'pip', 'install', 'numpy', 'then', 'install', 'matplotlib', 'pip', 'install', 'matplotlib', 'then', 'install', 'scipy', 'pip', 'install', 'scipy', 'and', 'finally', 'install', 'skimage', 'pip', 'install', 'scikit', 'image', 'the', 'error', 'you', 'obtain', 'means', 'that', 'you', 're', 'not', 'giving', 'the', 'right', 'name', 'for', 'your', 'package', 'hope', 'it', 'helps', 'cheers']","['window', 'install', 'package', 'numpy', 'matplotlib', 'skimage', 'python', 'version', 'everytime', 'error', 'could', 'find', 'version', 'satisfies', 'requirement', 'scikit', 'image', 'ver', 'sion', 'matching', 'distribution', 'found', 'scikit', 'image', 'tried', 'consider', 'abce', 'requirement', 'work', 'thank', 'much', 'helping']","['you', 're', 'using', 'pip', 'to', 'install', 'your', 'package', 'first', 'install', 'numpy', 'pip', 'install', 'numpy', 'then', 'install', 'matplotlib', 'pip', 'install', 'matplotlib', 'then', 'install', 'scipy', 'pip', 'install', 'scipy', 'and', 'finally', 'install', 'skimage', 'pip', 'install', 'scikit', 'image', 'the', 'error', 'you', 'obtain', 'mean', 'that', 'you', 're', 'not', 'giving', 'the', 'right', 'name', 'for', 'your', 'package', 'hope', 'it', 'help', 'cheer']",System Requirements and AWS,3,"{'neg': 0.057, 'neu': 0.859, 'pos': 0.084, 'compound': 0.391}",0.25333333333333335,3,Python Package Installation and Management,3query
50742839,How to use the proxy provided in .condarc for pip packages in the environment.yml?,"<p>I have to use a proxy, which I have configured in the .condarc file, for conda work, which works perfectly fine. However when I'm setting up a new python environment with an environment.yml file, which could look like this:</p>

<pre><code>name: Test
channels:
  - intel
  - defaults
dependencies:
  - pypdf2=1.26.0=py36_1
  - mkl=2018.0.2=1
  - pip:
    - adjusttext==0.7.2
prefix: C:\ProgramData\Anaconda3\envs\Test
</code></pre>

<p>Pip doesn't use the provided proxy to install those packages, so I get an error. How can I get pip to use that proxy as well?</p>
",<python><proxy><pip><conda><requirements>,2018-06-07 13:44:10,1558,3,2,51629346,"<p>Indeed pip doesn't pick proxy settings from .condarc.
But it will use HTTPS_PROXY environment variable if present.
Just add this line to .bash_profile:
export HTTPS_PROXY=<a href=""https://user:pwd@proxy_host:port"" rel=""nofollow noreferrer"">https://user:pwd@proxy_host:port</a></p>
",2018-06,i have to use a proxy which i have configured in the condarc file for conda work which works perfectly fine however when i m setting up a new python environment with an environment yml file which could look like this name test channels intel defaults dependencies pypdf        py _  mkl         pip adjusttext       prefix c programdata anaconda  envs test pip doesn t use the provided proxy to install those packages so i get an error how can i get pip to use that proxy as well,indeed pip doesn t pick proxy settings from condarc but it will use https_proxy environment variable if present just add this line to bash_profile export https_proxy https user pwd proxy_host port,"['python', 'proxy', 'pip', 'conda', 'requirements']","['i', 'have', 'to', 'use', 'a', 'proxy', 'which', 'i', 'have', 'configured', 'in', 'the', 'condarc', 'file', 'for', 'conda', 'work', 'which', 'works', 'perfectly', 'fine', 'however', 'when', 'i', 'm', 'setting', 'up', 'a', 'new', 'python', 'environment', 'with', 'an', 'environment', 'yml', 'file', 'which', 'could', 'look', 'like', 'this', 'name', 'test', 'channels', 'intel', 'defaults', 'dependencies', 'pypdf', 'py', '_', 'mkl', 'pip', 'adjusttext', 'prefix', 'c', 'programdata', 'anaconda', 'envs', 'test', 'pip', 'doesn', 't', 'use', 'the', 'provided', 'proxy', 'to', 'install', 'those', 'packages', 'so', 'i', 'get', 'an', 'error', 'how', 'can', 'i', 'get', 'pip', 'to', 'use', 'that', 'proxy', 'as', 'well']","['indeed', 'pip', 'doesn', 't', 'pick', 'proxy', 'settings', 'from', 'condarc', 'but', 'it', 'will', 'use', 'https_proxy', 'environment', 'variable', 'if', 'present', 'just', 'add', 'this', 'line', 'to', 'bash_profile', 'export', 'https_proxy', 'https', 'user', 'pwd', 'proxy_host', 'port']","['use', 'proxy', 'configured', 'condarc', 'file', 'conda', 'work', 'work', 'perfectly', 'fine', 'however', 'setting', 'new', 'python', 'environment', 'environment', 'yml', 'file', 'could', 'look', 'like', 'name', 'test', 'channel', 'intel', 'default', 'dependency', 'pypdf', 'py', '_', 'mkl', 'pip', 'adjusttext', 'prefix', 'c', 'programdata', 'anaconda', 'envs', 'test', 'pip', 'use', 'provided', 'proxy', 'install', 'package', 'get', 'error', 'get', 'pip', 'use', 'proxy', 'well']","['indeed', 'pip', 'doesn', 't', 'pick', 'proxy', 'setting', 'from', 'condarc', 'but', 'it', 'will', 'use', 'https_proxy', 'environment', 'variable', 'if', 'present', 'just', 'add', 'this', 'line', 'to', 'bash_profile', 'export', 'https_proxy', 'http', 'user', 'pwd', 'proxy_host', 'port']",Package Management and File Handling,3,"{'neg': 0.037, 'neu': 0.858, 'pos': 0.106, 'compound': 0.6743}",0.2765151515151515,3,Python Package Installation and Management,3query
50742839,How to use the proxy provided in .condarc for pip packages in the environment.yml?,"<p>I have to use a proxy, which I have configured in the .condarc file, for conda work, which works perfectly fine. However when I'm setting up a new python environment with an environment.yml file, which could look like this:</p>

<pre><code>name: Test
channels:
  - intel
  - defaults
dependencies:
  - pypdf2=1.26.0=py36_1
  - mkl=2018.0.2=1
  - pip:
    - adjusttext==0.7.2
prefix: C:\ProgramData\Anaconda3\envs\Test
</code></pre>

<p>Pip doesn't use the provided proxy to install those packages, so I get an error. How can I get pip to use that proxy as well?</p>
",<python><proxy><pip><conda><requirements>,2018-06-07 13:44:10,1558,3,2,63356126,"<p>Struggled with this issue a lot working on Win10. When modifying <code>https_proxy</code> I had issues with git, but with a file <code>pip.ini</code> in <code>C:\ProgramData\pip\</code> as <code>C:\ProgramData\pip\pip.ini</code> it works finally:</p>
<p><code>pip.ini</code>:</p>
<pre><code>[global]
timeout = 10
proxy=http://myproxy:8080
cert = C:\Users\Public\mycert.cer
</code></pre>
<p>now I can install conda environments with included pip packages</p>
<p>for more infos for default location visit: <a href=""https://pip.pypa.io/en/stable/user_guide/"" rel=""nofollow noreferrer"">https://pip.pypa.io/en/stable/user_guide/</a></p>
",2018-06,i have to use a proxy which i have configured in the condarc file for conda work which works perfectly fine however when i m setting up a new python environment with an environment yml file which could look like this name test channels intel defaults dependencies pypdf        py _  mkl         pip adjusttext       prefix c programdata anaconda  envs test pip doesn t use the provided proxy to install those packages so i get an error how can i get pip to use that proxy as well,struggled with this issue a lot working on win  when modifying https_proxy i had issues with git but with a file pip ini in c programdata pip as c programdata pip pip ini it works finally pip ini global timeout   proxy http myproxy   cert c users public mycert cer now i can install conda environments with included pip packages for more infos for default location visit https pip pypa io en stable user_guide,"['python', 'proxy', 'pip', 'conda', 'requirements']","['i', 'have', 'to', 'use', 'a', 'proxy', 'which', 'i', 'have', 'configured', 'in', 'the', 'condarc', 'file', 'for', 'conda', 'work', 'which', 'works', 'perfectly', 'fine', 'however', 'when', 'i', 'm', 'setting', 'up', 'a', 'new', 'python', 'environment', 'with', 'an', 'environment', 'yml', 'file', 'which', 'could', 'look', 'like', 'this', 'name', 'test', 'channels', 'intel', 'defaults', 'dependencies', 'pypdf', 'py', '_', 'mkl', 'pip', 'adjusttext', 'prefix', 'c', 'programdata', 'anaconda', 'envs', 'test', 'pip', 'doesn', 't', 'use', 'the', 'provided', 'proxy', 'to', 'install', 'those', 'packages', 'so', 'i', 'get', 'an', 'error', 'how', 'can', 'i', 'get', 'pip', 'to', 'use', 'that', 'proxy', 'as', 'well']","['struggled', 'with', 'this', 'issue', 'a', 'lot', 'working', 'on', 'win', 'when', 'modifying', 'https_proxy', 'i', 'had', 'issues', 'with', 'git', 'but', 'with', 'a', 'file', 'pip', 'ini', 'in', 'c', 'programdata', 'pip', 'as', 'c', 'programdata', 'pip', 'pip', 'ini', 'it', 'works', 'finally', 'pip', 'ini', 'global', 'timeout', 'proxy', 'http', 'myproxy', 'cert', 'c', 'users', 'public', 'mycert', 'cer', 'now', 'i', 'can', 'install', 'conda', 'environments', 'with', 'included', 'pip', 'packages', 'for', 'more', 'infos', 'for', 'default', 'location', 'visit', 'https', 'pip', 'pypa', 'io', 'en', 'stable', 'user_guide']","['use', 'proxy', 'configured', 'condarc', 'file', 'conda', 'work', 'work', 'perfectly', 'fine', 'however', 'setting', 'new', 'python', 'environment', 'environment', 'yml', 'file', 'could', 'look', 'like', 'name', 'test', 'channel', 'intel', 'default', 'dependency', 'pypdf', 'py', '_', 'mkl', 'pip', 'adjusttext', 'prefix', 'c', 'programdata', 'anaconda', 'envs', 'test', 'pip', 'use', 'provided', 'proxy', 'install', 'package', 'get', 'error', 'get', 'pip', 'use', 'proxy', 'well']","['struggled', 'with', 'this', 'issue', 'a', 'lot', 'working', 'on', 'win', 'when', 'modifying', 'https_proxy', 'i', 'had', 'issue', 'with', 'git', 'but', 'with', 'a', 'file', 'pip', 'ini', 'in', 'c', 'programdata', 'pip', 'a', 'c', 'programdata', 'pip', 'pip', 'ini', 'it', 'work', 'finally', 'pip', 'ini', 'global', 'timeout', 'proxy', 'http', 'myproxy', 'cert', 'c', 'user', 'public', 'mycert', 'cer', 'now', 'i', 'can', 'install', 'conda', 'environment', 'with', 'included', 'pip', 'package', 'for', 'more', 'info', 'for', 'default', 'location', 'visit', 'http', 'pip', 'pypa', 'io', 'en', 'stable', 'user_guide']",Package Management and File Handling,3,"{'neg': 0.037, 'neu': 0.858, 'pos': 0.106, 'compound': 0.6743}",0.2765151515151515,3,Python Package Installation and Management,3query
50685300,Local dependencies requeriments.txt for Bluemix server,"<p>I want to upload a flask server to bluemix. The structure of my project is something like this</p>

<ul>
<li>Classes

<ul>
<li>functions.py</li>
</ul></li>
<li>Watson

<ul>
<li>bot.py</li>
</ul></li>
<li>requirements.txt</li>
<li>runtime.txt</li>
<li>Procfile</li>
<li>manifest.yml</li>
</ul>

<p>my bot.py has this dependency:  </p>

<pre><code>from classes import functions
</code></pre>

<p>I have tried to include it in the manifest using things like this:<br>
./classes or ./classes/functions</p>

<p>but I have had no luck, it keeps saying either that module is not found or things like pip.exceptions.InstallationError: Invalid requirement: './classes/functions'</p>

<p>I dont know how to add the dependency</p>

<p>manifest.yml</p>

<pre><code>---
applications:
- name: chatbotstest
  random-route: true
  memory: 256M
</code></pre>

<p>Procfile (the file that I use to run the app)</p>

<pre><code>web: python watson/bot.py
</code></pre>

<p>when I print my sys.path I get this:</p>

<pre><code>    ['..', '/home/vcap/app/watson', '/home/vcap/deps/0/python/lib/python36.zip', '/home/vcap/deps/0/py
e/vcap/deps/0/python/lib/python3.6/lib-dynload', '/home/vcap/deps/0/python/lib/python3.6/site-packages', '/home/vcap/deps/0/python/lib/python3.6/site-
-py3.6.egg', '/home/vcap/deps/0/python/lib/python3.6/site-packages/pip-9.0.1-py3.6.egg']
</code></pre>

<p>I have tried to add the folder parent to my script using </p>

<p>Thanks a lot for your help!!!</p>
",<python><flask><pip><ibm-cloud><requirements>,2018-06-04 16:48:48,47,0,2,50685605,"<p>You don't need to include it into the manifest file. Your entire app directory and its subdirectories are uploaded as part of the <code>push</code> command. Thereafter, it is possible to reference the file as shown.</p>

<p>This imports a file in the current directory:</p>

<pre><code>import myfile
</code></pre>

<p>This should work for your <code>functions.py</code>:</p>

<pre><code>from classes import functions
</code></pre>
",2018-06,i want to upload a flask server to bluemix the structure of my project is something like this classes functions py watson bot py requirements txt runtime txt procfile manifest yml my bot py has this dependency from classes import functions i have tried to include it in the manifest using things like this classes or classes functions but i have had no luck it keeps saying either that module is not found or things like pip exceptions installationerror invalid requirement classes functions i dont know how to add the dependency manifest yml applications name chatbotstest random route true memory  m procfile the file that i use to run the app web python watson bot py when i print my sys path i get this home vcap app watson home vcap deps   python lib python  zip home vcap deps   py e vcap deps   python lib python    lib dynload home vcap deps   python lib python    site packages home vcap deps   python lib python    site py    egg home vcap deps   python lib python    site packages pip       py    egg i have tried to add the folder parent to my script using thanks a lot for your help,you don t need to include it into the manifest file your entire app directory and its subdirectories are uploaded as part of the push command thereafter it is possible to reference the file as shown this imports a file in the current directory import myfile this should work for your functions py from classes import functions,"['python', 'flask', 'pip', 'ibm-cloud', 'requirements']","['i', 'want', 'to', 'upload', 'a', 'flask', 'server', 'to', 'bluemix', 'the', 'structure', 'of', 'my', 'project', 'is', 'something', 'like', 'this', 'classes', 'functions', 'py', 'watson', 'bot', 'py', 'requirements', 'txt', 'runtime', 'txt', 'procfile', 'manifest', 'yml', 'my', 'bot', 'py', 'has', 'this', 'dependency', 'from', 'classes', 'import', 'functions', 'i', 'have', 'tried', 'to', 'include', 'it', 'in', 'the', 'manifest', 'using', 'things', 'like', 'this', 'classes', 'or', 'classes', 'functions', 'but', 'i', 'have', 'had', 'no', 'luck', 'it', 'keeps', 'saying', 'either', 'that', 'module', 'is', 'not', 'found', 'or', 'things', 'like', 'pip', 'exceptions', 'installationerror', 'invalid', 'requirement', 'classes', 'functions', 'i', 'dont', 'know', 'how', 'to', 'add', 'the', 'dependency', 'manifest', 'yml', 'applications', 'name', 'chatbotstest', 'random', 'route', 'true', 'memory', 'm', 'procfile', 'the', 'file', 'that', 'i', 'use', 'to', 'run', 'the', 'app', 'web', 'python', 'watson', 'bot', 'py', 'when', 'i', 'print', 'my', 'sys', 'path', 'i', 'get', 'this', 'home', 'vcap', 'app', 'watson', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'zip', 'home', 'vcap', 'deps', 'py', 'e', 'vcap', 'deps', 'python', 'lib', 'python', 'lib', 'dynload', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'site', 'packages', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'site', 'py', 'egg', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'site', 'packages', 'pip', 'py', 'egg', 'i', 'have', 'tried', 'to', 'add', 'the', 'folder', 'parent', 'to', 'my', 'script', 'using', 'thanks', 'a', 'lot', 'for', 'your', 'help']","['you', 'don', 't', 'need', 'to', 'include', 'it', 'into', 'the', 'manifest', 'file', 'your', 'entire', 'app', 'directory', 'and', 'its', 'subdirectories', 'are', 'uploaded', 'as', 'part', 'of', 'the', 'push', 'command', 'thereafter', 'it', 'is', 'possible', 'to', 'reference', 'the', 'file', 'as', 'shown', 'this', 'imports', 'a', 'file', 'in', 'the', 'current', 'directory', 'import', 'myfile', 'this', 'should', 'work', 'for', 'your', 'functions', 'py', 'from', 'classes', 'import', 'functions']","['want', 'upload', 'flask', 'server', 'bluemix', 'structure', 'project', 'something', 'like', 'class', 'function', 'py', 'watson', 'bot', 'py', 'requirement', 'txt', 'runtime', 'txt', 'procfile', 'manifest', 'yml', 'bot', 'py', 'ha', 'dependency', 'class', 'import', 'function', 'tried', 'include', 'manifest', 'using', 'thing', 'like', 'class', 'class', 'function', 'luck', 'keep', 'saying', 'either', 'module', 'found', 'thing', 'like', 'pip', 'exception', 'installationerror', 'invalid', 'requirement', 'class', 'function', 'dont', 'know', 'add', 'dependency', 'manifest', 'yml', 'application', 'name', 'chatbotstest', 'random', 'route', 'true', 'memory', 'procfile', 'file', 'use', 'run', 'app', 'web', 'python', 'watson', 'bot', 'py', 'print', 'sys', 'path', 'get', 'home', 'vcap', 'app', 'watson', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'zip', 'home', 'vcap', 'deps', 'py', 'e', 'vcap', 'deps', 'python', 'lib', 'python', 'lib', 'dynload', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'site', 'package', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'site', 'py', 'egg', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'site', 'package', 'pip', 'py', 'egg', 'tried', 'add', 'folder', 'parent', 'script', 'using', 'thanks', 'lot', 'help']","['you', 'don', 't', 'need', 'to', 'include', 'it', 'into', 'the', 'manifest', 'file', 'your', 'entire', 'app', 'directory', 'and', 'it', 'subdirectory', 'are', 'uploaded', 'a', 'part', 'of', 'the', 'push', 'command', 'thereafter', 'it', 'is', 'possible', 'to', 'reference', 'the', 'file', 'a', 'shown', 'this', 'import', 'a', 'file', 'in', 'the', 'current', 'directory', 'import', 'myfile', 'this', 'should', 'work', 'for', 'your', 'function', 'py', 'from', 'class', 'import', 'function']",System Requirements and AWS,3,"{'neg': 0.014, 'neu': 0.886, 'pos': 0.099, 'compound': 0.9057}",0.35,3,Python Package Installation and Management,3query
50685300,Local dependencies requeriments.txt for Bluemix server,"<p>I want to upload a flask server to bluemix. The structure of my project is something like this</p>

<ul>
<li>Classes

<ul>
<li>functions.py</li>
</ul></li>
<li>Watson

<ul>
<li>bot.py</li>
</ul></li>
<li>requirements.txt</li>
<li>runtime.txt</li>
<li>Procfile</li>
<li>manifest.yml</li>
</ul>

<p>my bot.py has this dependency:  </p>

<pre><code>from classes import functions
</code></pre>

<p>I have tried to include it in the manifest using things like this:<br>
./classes or ./classes/functions</p>

<p>but I have had no luck, it keeps saying either that module is not found or things like pip.exceptions.InstallationError: Invalid requirement: './classes/functions'</p>

<p>I dont know how to add the dependency</p>

<p>manifest.yml</p>

<pre><code>---
applications:
- name: chatbotstest
  random-route: true
  memory: 256M
</code></pre>

<p>Procfile (the file that I use to run the app)</p>

<pre><code>web: python watson/bot.py
</code></pre>

<p>when I print my sys.path I get this:</p>

<pre><code>    ['..', '/home/vcap/app/watson', '/home/vcap/deps/0/python/lib/python36.zip', '/home/vcap/deps/0/py
e/vcap/deps/0/python/lib/python3.6/lib-dynload', '/home/vcap/deps/0/python/lib/python3.6/site-packages', '/home/vcap/deps/0/python/lib/python3.6/site-
-py3.6.egg', '/home/vcap/deps/0/python/lib/python3.6/site-packages/pip-9.0.1-py3.6.egg']
</code></pre>

<p>I have tried to add the folder parent to my script using </p>

<p>Thanks a lot for your help!!!</p>
",<python><flask><pip><ibm-cloud><requirements>,2018-06-04 16:48:48,47,0,2,50698219,"<p>Thanks a lot, this finally worked for me, the answered you pointed me to gave me the solution, thanks a lot again!</p>

<pre><code>currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parentdir = os.path.dirname(currentdir)
sys.path.insert(0,parentdir)
</code></pre>
",2018-06,i want to upload a flask server to bluemix the structure of my project is something like this classes functions py watson bot py requirements txt runtime txt procfile manifest yml my bot py has this dependency from classes import functions i have tried to include it in the manifest using things like this classes or classes functions but i have had no luck it keeps saying either that module is not found or things like pip exceptions installationerror invalid requirement classes functions i dont know how to add the dependency manifest yml applications name chatbotstest random route true memory  m procfile the file that i use to run the app web python watson bot py when i print my sys path i get this home vcap app watson home vcap deps   python lib python  zip home vcap deps   py e vcap deps   python lib python    lib dynload home vcap deps   python lib python    site packages home vcap deps   python lib python    site py    egg home vcap deps   python lib python    site packages pip       py    egg i have tried to add the folder parent to my script using thanks a lot for your help,thanks a lot this finally worked for me the answered you pointed me to gave me the solution thanks a lot again currentdir os path dirname os path abspath inspect getfile inspect currentframe parentdir os path dirname currentdir sys path insert   parentdir,"['python', 'flask', 'pip', 'ibm-cloud', 'requirements']","['i', 'want', 'to', 'upload', 'a', 'flask', 'server', 'to', 'bluemix', 'the', 'structure', 'of', 'my', 'project', 'is', 'something', 'like', 'this', 'classes', 'functions', 'py', 'watson', 'bot', 'py', 'requirements', 'txt', 'runtime', 'txt', 'procfile', 'manifest', 'yml', 'my', 'bot', 'py', 'has', 'this', 'dependency', 'from', 'classes', 'import', 'functions', 'i', 'have', 'tried', 'to', 'include', 'it', 'in', 'the', 'manifest', 'using', 'things', 'like', 'this', 'classes', 'or', 'classes', 'functions', 'but', 'i', 'have', 'had', 'no', 'luck', 'it', 'keeps', 'saying', 'either', 'that', 'module', 'is', 'not', 'found', 'or', 'things', 'like', 'pip', 'exceptions', 'installationerror', 'invalid', 'requirement', 'classes', 'functions', 'i', 'dont', 'know', 'how', 'to', 'add', 'the', 'dependency', 'manifest', 'yml', 'applications', 'name', 'chatbotstest', 'random', 'route', 'true', 'memory', 'm', 'procfile', 'the', 'file', 'that', 'i', 'use', 'to', 'run', 'the', 'app', 'web', 'python', 'watson', 'bot', 'py', 'when', 'i', 'print', 'my', 'sys', 'path', 'i', 'get', 'this', 'home', 'vcap', 'app', 'watson', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'zip', 'home', 'vcap', 'deps', 'py', 'e', 'vcap', 'deps', 'python', 'lib', 'python', 'lib', 'dynload', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'site', 'packages', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'site', 'py', 'egg', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'site', 'packages', 'pip', 'py', 'egg', 'i', 'have', 'tried', 'to', 'add', 'the', 'folder', 'parent', 'to', 'my', 'script', 'using', 'thanks', 'a', 'lot', 'for', 'your', 'help']","['thanks', 'a', 'lot', 'this', 'finally', 'worked', 'for', 'me', 'the', 'answered', 'you', 'pointed', 'me', 'to', 'gave', 'me', 'the', 'solution', 'thanks', 'a', 'lot', 'again', 'currentdir', 'os', 'path', 'dirname', 'os', 'path', 'abspath', 'inspect', 'getfile', 'inspect', 'currentframe', 'parentdir', 'os', 'path', 'dirname', 'currentdir', 'sys', 'path', 'insert', 'parentdir']","['want', 'upload', 'flask', 'server', 'bluemix', 'structure', 'project', 'something', 'like', 'class', 'function', 'py', 'watson', 'bot', 'py', 'requirement', 'txt', 'runtime', 'txt', 'procfile', 'manifest', 'yml', 'bot', 'py', 'ha', 'dependency', 'class', 'import', 'function', 'tried', 'include', 'manifest', 'using', 'thing', 'like', 'class', 'class', 'function', 'luck', 'keep', 'saying', 'either', 'module', 'found', 'thing', 'like', 'pip', 'exception', 'installationerror', 'invalid', 'requirement', 'class', 'function', 'dont', 'know', 'add', 'dependency', 'manifest', 'yml', 'application', 'name', 'chatbotstest', 'random', 'route', 'true', 'memory', 'procfile', 'file', 'use', 'run', 'app', 'web', 'python', 'watson', 'bot', 'py', 'print', 'sys', 'path', 'get', 'home', 'vcap', 'app', 'watson', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'zip', 'home', 'vcap', 'deps', 'py', 'e', 'vcap', 'deps', 'python', 'lib', 'python', 'lib', 'dynload', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'site', 'package', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'site', 'py', 'egg', 'home', 'vcap', 'deps', 'python', 'lib', 'python', 'site', 'package', 'pip', 'py', 'egg', 'tried', 'add', 'folder', 'parent', 'script', 'using', 'thanks', 'lot', 'help']","['thanks', 'a', 'lot', 'this', 'finally', 'worked', 'for', 'me', 'the', 'answered', 'you', 'pointed', 'me', 'to', 'gave', 'me', 'the', 'solution', 'thanks', 'a', 'lot', 'again', 'currentdir', 'o', 'path', 'dirname', 'o', 'path', 'abspath', 'inspect', 'getfile', 'inspect', 'currentframe', 'parentdir', 'o', 'path', 'dirname', 'currentdir', 'sys', 'path', 'insert', 'parentdir']",System Requirements and AWS,3,"{'neg': 0.014, 'neu': 0.886, 'pos': 0.099, 'compound': 0.9057}",0.35,3,Python Package Installation and Management,3query
50362158,Need answers regarding MongoDB set up on local machine for lot of data,"<p>I have data more than 200gb and it is in JSON and CSV format and more than 300millian rows (documents). </p>

<p>I want to store it in MongoDB Database. I want to know that what requirement of the machine to handle this process like store and retrieval and manipulation of data. Also what time it would take to search data from whole data?</p>
",<mongodb><performance><mongodb-query><requirements>,2018-05-16 03:40:44,60,0,1,50364319,"<p>IMO, technical choice depends on your data structure and how to use these data. Below answer <strong>assumed you store all the data into a single collection in a single mongodb instance in a single machine</strong>.</p>

<hr>

<p>I did an experiment in the past to test the performance of mongodb with large data. I will share the result to you.</p>

<h2>Data volume</h2>

<ul>
<li>Amount of data: 1 Billion</li>
<li>document format: 4 fields(ObjectID + Int + String + Date) ~ 200Bytes/document</li>
<li>All documents are stored into one collection</li>
</ul>

<h2>Hardware</h2>

<ul>
<li>CPU: Intel(R) Xeon(R) CPU E5-2620 v2 @ 2.10Ghz(4 cores)</li>
<li>RAM: 32GB</li>
<li>Disk: 2TB LSI MRSASRoMB-8i SCSI Disk Device</li>
</ul>

<h2>Software</h2>

<ul>
<li>OS: Redhat Sever6.4-X86-64 with Ext4</li>
<li>Mongodb: 3.2 x64 (engine: wireTiger, cacheSize set to 28GB)</li>
</ul>

<h2>Test result</h2>

<h3>Insert performance</h3>

<p>Before index creation: No additional index(only default _id index)
After index creation: Add one more index on the string field</p>

<pre><code>╔══════════════════════╦═══════════════════════╦══════════════════════╗
║                      ║ Before index creation ║ After index creation ║
╠══════════════════════╬═══════════════════════╬══════════════════════╣
║ Single thread insert ║ 656/s - 746/s         ║ 534/s - 712/s        ║
║ 10 Threads insert    ║ 3817/s - 3964/s       ║ 3306/s - 3389/s      ║
╚══════════════════════╩═══════════════════════╩══════════════════════╝
</code></pre>

<h3>Query performance</h3>

<p>Query by the string field.</p>

<pre><code>╔═══════════════════╦═══════════════════════╦══════════════════════╗
║                   ║ Before index creation ║ After index creation ║
╠═══════════════════╬═══════════════════════╬══════════════════════╣
║ Return 1 document ║ 1268904 ms            ║ 15 ms                ║
╚═══════════════════╩═══════════════════════╩══════════════════════╝
</code></pre>

<h3>Build index</h3>

<p>If build index on string field after already 1 Billion documents in the collection, <strong>it takes ~3 hours to finish.</strong></p>

<h3>RAM consumption</h3>

<p>In the insert test, when all the cahce(28GB) runs out, the insert speed will drop.</p>

<h2>Conclusion</h2>

<ol>
<li><p>No big different between before index &amp; after index in insert performance.(In my condition, not sure when created a lot of indexes)</p></li>
<li><p>Mongodb tend to use as much as RAM it can, if you have large hot data, you'd better provide large RAM to it.</p></li>
<li><p>If built good index, then the query performance is good at Billion data level.</p></li>
<li><p>Build index on large data will cost you a lot of time.</p></li>
</ol>
",2018-05,i have data more than  gb and it is in json and csv format and more than  millian rows documents i want to store it in mongodb database i want to know that what requirement of the machine to handle this process like store and retrieval and manipulation of data also what time it would take to search data from whole data,imo technical choice depends on your data structure and how to use these data below answer assumed you store all the data into a single collection in a single mongodb instance in a single machine i did an experiment in the past to test the performance of mongodb with large data i will share the result to you data volume amount of data   billion document format   fields objectid int string date  bytes document all documents are stored into one collection hardware cpu intel r xeon r cpu e    v     ghz   cores ram  gb disk  tb lsi mrsasromb  i scsi disk device software os redhat sever    x    with ext  mongodb     x  engine wiretiger cachesize set to  gb test result insert performance before index creation no additional index only default _id index after index creation add one more index on the string field before index creation after index creation single thread insert   s   s   s   s   threads insert   s   s   s   s query performance query by the string field before index creation after index creation return   document   ms   ms build index if build index on string field after already   billion documents in the collection it takes   hours to finish ram consumption in the insert test when all the cahce  gb runs out the insert speed will drop conclusion no big different between before index after index in insert performance in my condition not sure when created a lot of indexes mongodb tend to use as much as ram it can if you have large hot data you d better provide large ram to it if built good index then the query performance is good at billion data level build index on large data will cost you a lot of time,"['mongodb', 'performance', 'mongodb-query', 'requirements']","['i', 'have', 'data', 'more', 'than', 'gb', 'and', 'it', 'is', 'in', 'json', 'and', 'csv', 'format', 'and', 'more', 'than', 'millian', 'rows', 'documents', 'i', 'want', 'to', 'store', 'it', 'in', 'mongodb', 'database', 'i', 'want', 'to', 'know', 'that', 'what', 'requirement', 'of', 'the', 'machine', 'to', 'handle', 'this', 'process', 'like', 'store', 'and', 'retrieval', 'and', 'manipulation', 'of', 'data', 'also', 'what', 'time', 'it', 'would', 'take', 'to', 'search', 'data', 'from', 'whole', 'data']","['imo', 'technical', 'choice', 'depends', 'on', 'your', 'data', 'structure', 'and', 'how', 'to', 'use', 'these', 'data', 'below', 'answer', 'assumed', 'you', 'store', 'all', 'the', 'data', 'into', 'a', 'single', 'collection', 'in', 'a', 'single', 'mongodb', 'instance', 'in', 'a', 'single', 'machine', 'i', 'did', 'an', 'experiment', 'in', 'the', 'past', 'to', 'test', 'the', 'performance', 'of', 'mongodb', 'with', 'large', 'data', 'i', 'will', 'share', 'the', 'result', 'to', 'you', 'data', 'volume', 'amount', 'of', 'data', 'billion', 'document', 'format', 'fields', 'objectid', 'int', 'string', 'date', 'bytes', 'document', 'all', 'documents', 'are', 'stored', 'into', 'one', 'collection', 'hardware', 'cpu', 'intel', 'r', 'xeon', 'r', 'cpu', 'e', 'v', 'ghz', 'cores', 'ram', 'gb', 'disk', 'tb', 'lsi', 'mrsasromb', 'i', 'scsi', 'disk', 'device', 'software', 'os', 'redhat', 'sever', 'x', 'with', 'ext', 'mongodb', 'x', 'engine', 'wiretiger', 'cachesize', 'set', 'to', 'gb', 'test', 'result', 'insert', 'performance', 'before', 'index', 'creation', 'no', 'additional', 'index', 'only', 'default', '_id', 'index', 'after', 'index', 'creation', 'add', 'one', 'more', 'index', 'on', 'the', 'string', 'field', 'before', 'index', 'creation', 'after', 'index', 'creation', 'single', 'thread', 'insert', 's', 's', 's', 's', 'threads', 'insert', 's', 's', 's', 's', 'query', 'performance', 'query', 'by', 'the', 'string', 'field', 'before', 'index', 'creation', 'after', 'index', 'creation', 'return', 'document', 'ms', 'ms', 'build', 'index', 'if', 'build', 'index', 'on', 'string', 'field', 'after', 'already', 'billion', 'documents', 'in', 'the', 'collection', 'it', 'takes', 'hours', 'to', 'finish', 'ram', 'consumption', 'in', 'the', 'insert', 'test', 'when', 'all', 'the', 'cahce', 'gb', 'runs', 'out', 'the', 'insert', 'speed', 'will', 'drop', 'conclusion', 'no', 'big', 'different', 'between', 'before', 'index', 'after', 'index', 'in', 'insert', 'performance', 'in', 'my', 'condition', 'not', 'sure', 'when', 'created', 'a', 'lot', 'of', 'indexes', 'mongodb', 'tend', 'to', 'use', 'as', 'much', 'as', 'ram', 'it', 'can', 'if', 'you', 'have', 'large', 'hot', 'data', 'you', 'd', 'better', 'provide', 'large', 'ram', 'to', 'it', 'if', 'built', 'good', 'index', 'then', 'the', 'query', 'performance', 'is', 'good', 'at', 'billion', 'data', 'level', 'build', 'index', 'on', 'large', 'data', 'will', 'cost', 'you', 'a', 'lot', 'of', 'time']","['data', 'gb', 'json', 'csv', 'format', 'millian', 'row', 'document', 'want', 'store', 'mongodb', 'database', 'want', 'know', 'requirement', 'machine', 'handle', 'process', 'like', 'store', 'retrieval', 'manipulation', 'data', 'also', 'time', 'would', 'take', 'search', 'data', 'whole', 'data']","['imo', 'technical', 'choice', 'depends', 'on', 'your', 'data', 'structure', 'and', 'how', 'to', 'use', 'these', 'data', 'below', 'answer', 'assumed', 'you', 'store', 'all', 'the', 'data', 'into', 'a', 'single', 'collection', 'in', 'a', 'single', 'mongodb', 'instance', 'in', 'a', 'single', 'machine', 'i', 'did', 'an', 'experiment', 'in', 'the', 'past', 'to', 'test', 'the', 'performance', 'of', 'mongodb', 'with', 'large', 'data', 'i', 'will', 'share', 'the', 'result', 'to', 'you', 'data', 'volume', 'amount', 'of', 'data', 'billion', 'document', 'format', 'field', 'objectid', 'int', 'string', 'date', 'byte', 'document', 'all', 'document', 'are', 'stored', 'into', 'one', 'collection', 'hardware', 'cpu', 'intel', 'r', 'xeon', 'r', 'cpu', 'e', 'v', 'ghz', 'core', 'ram', 'gb', 'disk', 'tb', 'lsi', 'mrsasromb', 'i', 'scsi', 'disk', 'device', 'software', 'o', 'redhat', 'sever', 'x', 'with', 'ext', 'mongodb', 'x', 'engine', 'wiretiger', 'cachesize', 'set', 'to', 'gb', 'test', 'result', 'insert', 'performance', 'before', 'index', 'creation', 'no', 'additional', 'index', 'only', 'default', '_id', 'index', 'after', 'index', 'creation', 'add', 'one', 'more', 'index', 'on', 'the', 'string', 'field', 'before', 'index', 'creation', 'after', 'index', 'creation', 'single', 'thread', 'insert', 's', 's', 's', 's', 'thread', 'insert', 's', 's', 's', 's', 'query', 'performance', 'query', 'by', 'the', 'string', 'field', 'before', 'index', 'creation', 'after', 'index', 'creation', 'return', 'document', 'm', 'm', 'build', 'index', 'if', 'build', 'index', 'on', 'string', 'field', 'after', 'already', 'billion', 'document', 'in', 'the', 'collection', 'it', 'take', 'hour', 'to', 'finish', 'ram', 'consumption', 'in', 'the', 'insert', 'test', 'when', 'all', 'the', 'cahce', 'gb', 'run', 'out', 'the', 'insert', 'speed', 'will', 'drop', 'conclusion', 'no', 'big', 'different', 'between', 'before', 'index', 'after', 'index', 'in', 'insert', 'performance', 'in', 'my', 'condition', 'not', 'sure', 'when', 'created', 'a', 'lot', 'of', 'index', 'mongodb', 'tend', 'to', 'use', 'a', 'much', 'a', 'ram', 'it', 'can', 'if', 'you', 'have', 'large', 'hot', 'data', 'you', 'd', 'better', 'provide', 'large', 'ram', 'to', 'it', 'if', 'built', 'good', 'index', 'then', 'the', 'query', 'performance', 'is', 'good', 'at', 'billion', 'data', 'level', 'build', 'index', 'on', 'large', 'data', 'will', 'cost', 'you', 'a', 'lot', 'of', 'time']",System Requirements and AWS,3,"{'neg': 0.034, 'neu': 0.888, 'pos': 0.078, 'compound': 0.2263}",0.39999999999999997,3,Python Package Installation and Management,3query
49747973,what necessary requirements to support the arcore in a android phone,"<p>If i have a android phone. and i want to know if my phone support ARCORE?
Is there any requests necessary ?
Such as the fps of the camera、 size of images 、Android version and so on.
I want to get some specific requirements to assess whether or not it is supported.
Thanks!</p>
",<android-camera><requirements><arcore>,2018-04-10 07:38:31,3277,0,1,49760199,"<p>ARCore currently has a specific set of devices that it supports:</p>

<p><a href=""https://developers.google.com/ar/discover/#supported_devices"" rel=""nofollow noreferrer"">https://developers.google.com/ar/discover/#supported_devices</a></p>

<p>Within your application, you can use the <code>ArCoreApk</code> API provided to check whether the current device supports ARCore:</p>

<p><a href=""https://developers.google.com/ar/reference/java/com/google/ar/core/ArCoreApk"" rel=""nofollow noreferrer"">https://developers.google.com/ar/reference/java/com/google/ar/core/ArCoreApk</a></p>

<p>The ARCore sample applications provide a good example of how to use this API:</p>

<p><a href=""https://github.com/google-ar/arcore-android-sdk/blob/master/samples/hello_ar_java/app/src/main/java/com/google/ar/core/examples/java/helloar/HelloArActivity.java#L118"" rel=""nofollow noreferrer"">https://github.com/google-ar/arcore-android-sdk/blob/master/samples/hello_ar_java/app/src/main/java/com/google/ar/core/examples/java/helloar/HelloArActivity.java#L118</a></p>
",2018-04,if i have a android phone and i want to know if my phone support arcore is there any requests necessary such as the fps of the camera size of images android version and so on i want to get some specific requirements to assess whether or not it is supported thanks,arcore currently has a specific set of devices that it supports https developers google com ar discover supported_devices within your application you can use the arcoreapk api provided to check whether the current device supports arcore https developers google com ar reference java com google ar core arcoreapk the arcore sample applications provide a good example of how to use this api https github com google ar arcore android sdk blob master samples hello_ar_java app src main java com google ar core examples java helloar helloaractivity java l,"['android-camera', 'requirements', 'arcore']","['if', 'i', 'have', 'a', 'android', 'phone', 'and', 'i', 'want', 'to', 'know', 'if', 'my', 'phone', 'support', 'arcore', 'is', 'there', 'any', 'requests', 'necessary', 'such', 'as', 'the', 'fps', 'of', 'the', 'camera', 'size', 'of', 'images', 'android', 'version', 'and', 'so', 'on', 'i', 'want', 'to', 'get', 'some', 'specific', 'requirements', 'to', 'assess', 'whether', 'or', 'not', 'it', 'is', 'supported', 'thanks']","['arcore', 'currently', 'has', 'a', 'specific', 'set', 'of', 'devices', 'that', 'it', 'supports', 'https', 'developers', 'google', 'com', 'ar', 'discover', 'supported_devices', 'within', 'your', 'application', 'you', 'can', 'use', 'the', 'arcoreapk', 'api', 'provided', 'to', 'check', 'whether', 'the', 'current', 'device', 'supports', 'arcore', 'https', 'developers', 'google', 'com', 'ar', 'reference', 'java', 'com', 'google', 'ar', 'core', 'arcoreapk', 'the', 'arcore', 'sample', 'applications', 'provide', 'a', 'good', 'example', 'of', 'how', 'to', 'use', 'this', 'api', 'https', 'github', 'com', 'google', 'ar', 'arcore', 'android', 'sdk', 'blob', 'master', 'samples', 'hello_ar_java', 'app', 'src', 'main', 'java', 'com', 'google', 'ar', 'core', 'examples', 'java', 'helloar', 'helloaractivity', 'java', 'l']","['android', 'phone', 'want', 'know', 'phone', 'support', 'arcore', 'request', 'necessary', 'fps', 'camera', 'size', 'image', 'android', 'version', 'want', 'get', 'specific', 'requirement', 'ass', 'whether', 'supported', 'thanks']","['arcore', 'currently', 'ha', 'a', 'specific', 'set', 'of', 'device', 'that', 'it', 'support', 'http', 'developer', 'google', 'com', 'ar', 'discover', 'supported_devices', 'within', 'your', 'application', 'you', 'can', 'use', 'the', 'arcoreapk', 'api', 'provided', 'to', 'check', 'whether', 'the', 'current', 'device', 'support', 'arcore', 'http', 'developer', 'google', 'com', 'ar', 'reference', 'java', 'com', 'google', 'ar', 'core', 'arcoreapk', 'the', 'arcore', 'sample', 'application', 'provide', 'a', 'good', 'example', 'of', 'how', 'to', 'use', 'this', 'api', 'http', 'github', 'com', 'google', 'ar', 'arcore', 'android', 'sdk', 'blob', 'master', 'sample', 'hello_ar_java', 'app', 'src', 'main', 'java', 'com', 'google', 'ar', 'core', 'example', 'java', 'helloar', 'helloaractivity', 'java', 'l']",System Requirements and AWS,3,"{'neg': 0.038, 'neu': 0.848, 'pos': 0.115, 'compound': 0.457}",0.0,3,Python Package Installation and Management,3query
49067215,Testing if a string is null,"<p>I am pretty new in VBA and I have not yet got used to the syntax completely, so I'm sorry if my question sounds stupid.</p>

<p>I am working with RequisitePro40 and VBA 7.0 in Word 2010. In one of my modules I have the following loop and If conditions:</p>

<pre><code>Dim rqRequirements As ReqPro40.Requirements
Dim rqRequirement As ReqPro40.Requirement
Const eAttrValueLookup_Label = 4
Dim a As Integer
...

For Each vReqKey In rqRequirements
    Set rqRequirement = rqRequirements(vReqKey)

    If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text &lt;&gt; Null Then
        a = 1
    End If

    If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text = Null Then
         a = 2
    End If

 Next
</code></pre>

<p>In each iteration of the loop, both <strong>a = 1</strong> and <strong>a = 2</strong> are executed!!</p>

<p>Based on <a href=""https://learn.microsoft.com/en-us/dotnet/visual-basic/language-reference/operators/comparison-operators"" rel=""nofollow noreferrer"">This</a>, the equality and inequality operators are ""="" and ""&lt;>"". Therefore I would expect that either <strong>a = 1</strong> or <strong>a = 2</strong> execute for a string.
Is there something wrong with my syntax? Or is it a ReqPro related Problem?</p>

<p>I also tried using ""Is"" and ""IsNot"" operators but they result in Compiler error: Type mismatch</p>

<p>Can Someone help me with this?</p>

<p><strong>Update:</strong> The actual goal is to see if the</p>

<blockquote>
  <p>rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text</p>
</blockquote>

<p>is Null or not. I added the second if to show the problem that the statement is somehow not working the way I expect it to work.</p>

<p>Replacing ""Null"" to ""vbNullString"" did not make any changes.</p>

<p>I also tried the IsNull function as @Slai suggested. the result is pretty much the same:</p>

<pre><code>    If IsNull(rqRequirement.AttrValue(att, eAttrValueLookup_Label).text) Then
        a = 3
    End If

    If Not IsNull(rqRequirement.AttrValue(att, eAttrValueLookup_Label).text) Then
        a = 4
    End If
</code></pre>

<p>Both statements <strong>a = 3</strong> and <strong>a = 4</strong> are true and executed.</p>
",<vba><ms-word><requirements>,2018-03-02 10:25:04,30847,8,5,49067344,"<p>1) I think you can use vbNullString to test for empty string. Otherwise use ""Null"" if actual string value.</p>

<p>2) Ensure a is declared as long</p>

<pre><code>If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text &lt;&gt; vbNullString Then

     a = 1

End If

If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text = vbNullString Then
     a = 2
Else
     a = 3
End If
</code></pre>
",2018-03,i am pretty new in vba and i have not yet got used to the syntax completely so i m sorry if my question sounds stupid i am working with requisitepro  and vba     in word   in one of my modules i have the following loop and if conditions dim rqrequirements as reqpro  requirements dim rqrequirement as reqpro  requirement const eattrvaluelookup_label   dim a as integer for each vreqkey in rqrequirements set rqrequirement rqrequirements vreqkey if rqrequirement attrvalue myattrename eattrvaluelookup_label text null then a   end if if rqrequirement attrvalue myattrename eattrvaluelookup_label text null then a   end if next in each iteration of the loop both a   and a   are executed based on this the equality and inequality operators are and therefore i would expect that either a   or a   execute for a string is there something wrong with my syntax or is it a reqpro related problem i also tried using is and isnot operators but they result in compiler error type mismatch can someone help me with this update the actual goal is to see if the rqrequirement attrvalue myattrename eattrvaluelookup_label text is null or not i added the second if to show the problem that the statement is somehow not working the way i expect it to work replacing null to vbnullstring did not make any changes i also tried the isnull function as slai suggested the result is pretty much the same if isnull rqrequirement attrvalue att eattrvaluelookup_label text then a   end if if not isnull rqrequirement attrvalue att eattrvaluelookup_label text then a   end if both statements a   and a   are true and executed,i think you can use vbnullstring to test for empty string otherwise use null if actual string value   ensure a is declared as long if rqrequirement attrvalue myattrename eattrvaluelookup_label text vbnullstring then a   end if if rqrequirement attrvalue myattrename eattrvaluelookup_label text vbnullstring then a   else a   end if,"['vba', 'ms-word', 'requirements']","['i', 'am', 'pretty', 'new', 'in', 'vba', 'and', 'i', 'have', 'not', 'yet', 'got', 'used', 'to', 'the', 'syntax', 'completely', 'so', 'i', 'm', 'sorry', 'if', 'my', 'question', 'sounds', 'stupid', 'i', 'am', 'working', 'with', 'requisitepro', 'and', 'vba', 'in', 'word', 'in', 'one', 'of', 'my', 'modules', 'i', 'have', 'the', 'following', 'loop', 'and', 'if', 'conditions', 'dim', 'rqrequirements', 'as', 'reqpro', 'requirements', 'dim', 'rqrequirement', 'as', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'a', 'as', 'integer', 'for', 'each', 'vreqkey', 'in', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'then', 'a', 'end', 'if', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'then', 'a', 'end', 'if', 'next', 'in', 'each', 'iteration', 'of', 'the', 'loop', 'both', 'a', 'and', 'a', 'are', 'executed', 'based', 'on', 'this', 'the', 'equality', 'and', 'inequality', 'operators', 'are', 'and', 'therefore', 'i', 'would', 'expect', 'that', 'either', 'a', 'or', 'a', 'execute', 'for', 'a', 'string', 'is', 'there', 'something', 'wrong', 'with', 'my', 'syntax', 'or', 'is', 'it', 'a', 'reqpro', 'related', 'problem', 'i', 'also', 'tried', 'using', 'is', 'and', 'isnot', 'operators', 'but', 'they', 'result', 'in', 'compiler', 'error', 'type', 'mismatch', 'can', 'someone', 'help', 'me', 'with', 'this', 'update', 'the', 'actual', 'goal', 'is', 'to', 'see', 'if', 'the', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'is', 'null', 'or', 'not', 'i', 'added', 'the', 'second', 'if', 'to', 'show', 'the', 'problem', 'that', 'the', 'statement', 'is', 'somehow', 'not', 'working', 'the', 'way', 'i', 'expect', 'it', 'to', 'work', 'replacing', 'null', 'to', 'vbnullstring', 'did', 'not', 'make', 'any', 'changes', 'i', 'also', 'tried', 'the', 'isnull', 'function', 'as', 'slai', 'suggested', 'the', 'result', 'is', 'pretty', 'much', 'the', 'same', 'if', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'then', 'a', 'end', 'if', 'if', 'not', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'then', 'a', 'end', 'if', 'both', 'statements', 'a', 'and', 'a', 'are', 'true', 'and', 'executed']","['i', 'think', 'you', 'can', 'use', 'vbnullstring', 'to', 'test', 'for', 'empty', 'string', 'otherwise', 'use', 'null', 'if', 'actual', 'string', 'value', 'ensure', 'a', 'is', 'declared', 'as', 'long', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'vbnullstring', 'then', 'a', 'end', 'if', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'vbnullstring', 'then', 'a', 'else', 'a', 'end', 'if']","['pretty', 'new', 'vba', 'yet', 'got', 'used', 'syntax', 'completely', 'sorry', 'question', 'sound', 'stupid', 'working', 'requisitepro', 'vba', 'word', 'one', 'module', 'following', 'loop', 'condition', 'dim', 'rqrequirements', 'reqpro', 'requirement', 'dim', 'rqrequirement', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'integer', 'vreqkey', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'end', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'end', 'next', 'iteration', 'loop', 'executed', 'based', 'equality', 'inequality', 'operator', 'therefore', 'would', 'expect', 'either', 'execute', 'string', 'something', 'wrong', 'syntax', 'reqpro', 'related', 'problem', 'also', 'tried', 'using', 'isnot', 'operator', 'result', 'compiler', 'error', 'type', 'mismatch', 'someone', 'help', 'update', 'actual', 'goal', 'see', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'added', 'second', 'show', 'problem', 'statement', 'somehow', 'working', 'way', 'expect', 'work', 'replacing', 'null', 'vbnullstring', 'make', 'change', 'also', 'tried', 'isnull', 'function', 'slai', 'suggested', 'result', 'pretty', 'much', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'end', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'end', 'statement', 'true', 'executed']","['i', 'think', 'you', 'can', 'use', 'vbnullstring', 'to', 'test', 'for', 'empty', 'string', 'otherwise', 'use', 'null', 'if', 'actual', 'string', 'value', 'ensure', 'a', 'is', 'declared', 'a', 'long', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'vbnullstring', 'then', 'a', 'end', 'if', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'vbnullstring', 'then', 'a', 'else', 'a', 'end', 'if']",System Requirements and AWS,2,"{'neg': 0.039, 'neu': 0.906, 'pos': 0.055, 'compound': 0.7354}",0.027597402597402596,2,Python Libraries and Environment,3query
49067215,Testing if a string is null,"<p>I am pretty new in VBA and I have not yet got used to the syntax completely, so I'm sorry if my question sounds stupid.</p>

<p>I am working with RequisitePro40 and VBA 7.0 in Word 2010. In one of my modules I have the following loop and If conditions:</p>

<pre><code>Dim rqRequirements As ReqPro40.Requirements
Dim rqRequirement As ReqPro40.Requirement
Const eAttrValueLookup_Label = 4
Dim a As Integer
...

For Each vReqKey In rqRequirements
    Set rqRequirement = rqRequirements(vReqKey)

    If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text &lt;&gt; Null Then
        a = 1
    End If

    If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text = Null Then
         a = 2
    End If

 Next
</code></pre>

<p>In each iteration of the loop, both <strong>a = 1</strong> and <strong>a = 2</strong> are executed!!</p>

<p>Based on <a href=""https://learn.microsoft.com/en-us/dotnet/visual-basic/language-reference/operators/comparison-operators"" rel=""nofollow noreferrer"">This</a>, the equality and inequality operators are ""="" and ""&lt;>"". Therefore I would expect that either <strong>a = 1</strong> or <strong>a = 2</strong> execute for a string.
Is there something wrong with my syntax? Or is it a ReqPro related Problem?</p>

<p>I also tried using ""Is"" and ""IsNot"" operators but they result in Compiler error: Type mismatch</p>

<p>Can Someone help me with this?</p>

<p><strong>Update:</strong> The actual goal is to see if the</p>

<blockquote>
  <p>rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text</p>
</blockquote>

<p>is Null or not. I added the second if to show the problem that the statement is somehow not working the way I expect it to work.</p>

<p>Replacing ""Null"" to ""vbNullString"" did not make any changes.</p>

<p>I also tried the IsNull function as @Slai suggested. the result is pretty much the same:</p>

<pre><code>    If IsNull(rqRequirement.AttrValue(att, eAttrValueLookup_Label).text) Then
        a = 3
    End If

    If Not IsNull(rqRequirement.AttrValue(att, eAttrValueLookup_Label).text) Then
        a = 4
    End If
</code></pre>

<p>Both statements <strong>a = 3</strong> and <strong>a = 4</strong> are true and executed.</p>
",<vba><ms-word><requirements>,2018-03-02 10:25:04,30847,8,5,49068375,"<p>VBA doesn't support testing whether a string is ""Null"". VBA isn't like a .NET language or JavaScript (for example). The basic variable types all have a default value, a String is of zero length (<code>""""</code>) from the moment the variable is declared - it has no uninstantiated state. You can also test for vbNullString.</p>

<p>If you test</p>

<pre><code>Dim s as String
Debug.Print s = Null, s &lt;&gt; Null, s = """", s = ""a"", IsNull(s), s = vbNullString
</code></pre>

<p>The return is</p>

<pre><code>Null  Null  True  False  False  True
</code></pre>

<p>So if you're trying to test whether anything has been assigned to a String variable the only things you can do are:</p>

<pre><code>Debug.Print Len(s), s = """", Len(s) = 0, s = vbNullString
</code></pre>

<p>Which returns</p>

<pre><code>0  True  True True
</code></pre>

<p>Note that the slowest of these possibilities is <code>s = """"</code>, even though it seems the simplest to remember.</p>
",2018-03,i am pretty new in vba and i have not yet got used to the syntax completely so i m sorry if my question sounds stupid i am working with requisitepro  and vba     in word   in one of my modules i have the following loop and if conditions dim rqrequirements as reqpro  requirements dim rqrequirement as reqpro  requirement const eattrvaluelookup_label   dim a as integer for each vreqkey in rqrequirements set rqrequirement rqrequirements vreqkey if rqrequirement attrvalue myattrename eattrvaluelookup_label text null then a   end if if rqrequirement attrvalue myattrename eattrvaluelookup_label text null then a   end if next in each iteration of the loop both a   and a   are executed based on this the equality and inequality operators are and therefore i would expect that either a   or a   execute for a string is there something wrong with my syntax or is it a reqpro related problem i also tried using is and isnot operators but they result in compiler error type mismatch can someone help me with this update the actual goal is to see if the rqrequirement attrvalue myattrename eattrvaluelookup_label text is null or not i added the second if to show the problem that the statement is somehow not working the way i expect it to work replacing null to vbnullstring did not make any changes i also tried the isnull function as slai suggested the result is pretty much the same if isnull rqrequirement attrvalue att eattrvaluelookup_label text then a   end if if not isnull rqrequirement attrvalue att eattrvaluelookup_label text then a   end if both statements a   and a   are true and executed,vba doesn t support testing whether a string is null vba isn t like a net language or javascript for example the basic variable types all have a default value a string is of zero length from the moment the variable is declared it has no uninstantiated state you can also test for vbnullstring if you test dim s as string debug print s null s null s s a isnull s s vbnullstring the return is null null true false false true so if you re trying to test whether anything has been assigned to a string variable the only things you can do are debug print len s s len s   s vbnullstring which returns   true true true note that the slowest of these possibilities is s even though it seems the simplest to remember,"['vba', 'ms-word', 'requirements']","['i', 'am', 'pretty', 'new', 'in', 'vba', 'and', 'i', 'have', 'not', 'yet', 'got', 'used', 'to', 'the', 'syntax', 'completely', 'so', 'i', 'm', 'sorry', 'if', 'my', 'question', 'sounds', 'stupid', 'i', 'am', 'working', 'with', 'requisitepro', 'and', 'vba', 'in', 'word', 'in', 'one', 'of', 'my', 'modules', 'i', 'have', 'the', 'following', 'loop', 'and', 'if', 'conditions', 'dim', 'rqrequirements', 'as', 'reqpro', 'requirements', 'dim', 'rqrequirement', 'as', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'a', 'as', 'integer', 'for', 'each', 'vreqkey', 'in', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'then', 'a', 'end', 'if', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'then', 'a', 'end', 'if', 'next', 'in', 'each', 'iteration', 'of', 'the', 'loop', 'both', 'a', 'and', 'a', 'are', 'executed', 'based', 'on', 'this', 'the', 'equality', 'and', 'inequality', 'operators', 'are', 'and', 'therefore', 'i', 'would', 'expect', 'that', 'either', 'a', 'or', 'a', 'execute', 'for', 'a', 'string', 'is', 'there', 'something', 'wrong', 'with', 'my', 'syntax', 'or', 'is', 'it', 'a', 'reqpro', 'related', 'problem', 'i', 'also', 'tried', 'using', 'is', 'and', 'isnot', 'operators', 'but', 'they', 'result', 'in', 'compiler', 'error', 'type', 'mismatch', 'can', 'someone', 'help', 'me', 'with', 'this', 'update', 'the', 'actual', 'goal', 'is', 'to', 'see', 'if', 'the', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'is', 'null', 'or', 'not', 'i', 'added', 'the', 'second', 'if', 'to', 'show', 'the', 'problem', 'that', 'the', 'statement', 'is', 'somehow', 'not', 'working', 'the', 'way', 'i', 'expect', 'it', 'to', 'work', 'replacing', 'null', 'to', 'vbnullstring', 'did', 'not', 'make', 'any', 'changes', 'i', 'also', 'tried', 'the', 'isnull', 'function', 'as', 'slai', 'suggested', 'the', 'result', 'is', 'pretty', 'much', 'the', 'same', 'if', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'then', 'a', 'end', 'if', 'if', 'not', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'then', 'a', 'end', 'if', 'both', 'statements', 'a', 'and', 'a', 'are', 'true', 'and', 'executed']","['vba', 'doesn', 't', 'support', 'testing', 'whether', 'a', 'string', 'is', 'null', 'vba', 'isn', 't', 'like', 'a', 'net', 'language', 'or', 'javascript', 'for', 'example', 'the', 'basic', 'variable', 'types', 'all', 'have', 'a', 'default', 'value', 'a', 'string', 'is', 'of', 'zero', 'length', 'from', 'the', 'moment', 'the', 'variable', 'is', 'declared', 'it', 'has', 'no', 'uninstantiated', 'state', 'you', 'can', 'also', 'test', 'for', 'vbnullstring', 'if', 'you', 'test', 'dim', 's', 'as', 'string', 'debug', 'print', 's', 'null', 's', 'null', 's', 's', 'a', 'isnull', 's', 's', 'vbnullstring', 'the', 'return', 'is', 'null', 'null', 'true', 'false', 'false', 'true', 'so', 'if', 'you', 're', 'trying', 'to', 'test', 'whether', 'anything', 'has', 'been', 'assigned', 'to', 'a', 'string', 'variable', 'the', 'only', 'things', 'you', 'can', 'do', 'are', 'debug', 'print', 'len', 's', 's', 'len', 's', 's', 'vbnullstring', 'which', 'returns', 'true', 'true', 'true', 'note', 'that', 'the', 'slowest', 'of', 'these', 'possibilities', 'is', 's', 'even', 'though', 'it', 'seems', 'the', 'simplest', 'to', 'remember']","['pretty', 'new', 'vba', 'yet', 'got', 'used', 'syntax', 'completely', 'sorry', 'question', 'sound', 'stupid', 'working', 'requisitepro', 'vba', 'word', 'one', 'module', 'following', 'loop', 'condition', 'dim', 'rqrequirements', 'reqpro', 'requirement', 'dim', 'rqrequirement', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'integer', 'vreqkey', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'end', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'end', 'next', 'iteration', 'loop', 'executed', 'based', 'equality', 'inequality', 'operator', 'therefore', 'would', 'expect', 'either', 'execute', 'string', 'something', 'wrong', 'syntax', 'reqpro', 'related', 'problem', 'also', 'tried', 'using', 'isnot', 'operator', 'result', 'compiler', 'error', 'type', 'mismatch', 'someone', 'help', 'update', 'actual', 'goal', 'see', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'added', 'second', 'show', 'problem', 'statement', 'somehow', 'working', 'way', 'expect', 'work', 'replacing', 'null', 'vbnullstring', 'make', 'change', 'also', 'tried', 'isnull', 'function', 'slai', 'suggested', 'result', 'pretty', 'much', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'end', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'end', 'statement', 'true', 'executed']","['vba', 'doesn', 't', 'support', 'testing', 'whether', 'a', 'string', 'is', 'null', 'vba', 'isn', 't', 'like', 'a', 'net', 'language', 'or', 'javascript', 'for', 'example', 'the', 'basic', 'variable', 'type', 'all', 'have', 'a', 'default', 'value', 'a', 'string', 'is', 'of', 'zero', 'length', 'from', 'the', 'moment', 'the', 'variable', 'is', 'declared', 'it', 'ha', 'no', 'uninstantiated', 'state', 'you', 'can', 'also', 'test', 'for', 'vbnullstring', 'if', 'you', 'test', 'dim', 's', 'a', 'string', 'debug', 'print', 's', 'null', 's', 'null', 's', 's', 'a', 'isnull', 's', 's', 'vbnullstring', 'the', 'return', 'is', 'null', 'null', 'true', 'false', 'false', 'true', 'so', 'if', 'you', 're', 'trying', 'to', 'test', 'whether', 'anything', 'ha', 'been', 'assigned', 'to', 'a', 'string', 'variable', 'the', 'only', 'thing', 'you', 'can', 'do', 'are', 'debug', 'print', 'len', 's', 's', 'len', 's', 's', 'vbnullstring', 'which', 'return', 'true', 'true', 'true', 'note', 'that', 'the', 'slowest', 'of', 'these', 'possibility', 'is', 's', 'even', 'though', 'it', 'seems', 'the', 'simplest', 'to', 'remember']",System Requirements and AWS,2,"{'neg': 0.039, 'neu': 0.906, 'pos': 0.055, 'compound': 0.7354}",0.027597402597402596,2,Python Libraries and Environment,3query
49067215,Testing if a string is null,"<p>I am pretty new in VBA and I have not yet got used to the syntax completely, so I'm sorry if my question sounds stupid.</p>

<p>I am working with RequisitePro40 and VBA 7.0 in Word 2010. In one of my modules I have the following loop and If conditions:</p>

<pre><code>Dim rqRequirements As ReqPro40.Requirements
Dim rqRequirement As ReqPro40.Requirement
Const eAttrValueLookup_Label = 4
Dim a As Integer
...

For Each vReqKey In rqRequirements
    Set rqRequirement = rqRequirements(vReqKey)

    If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text &lt;&gt; Null Then
        a = 1
    End If

    If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text = Null Then
         a = 2
    End If

 Next
</code></pre>

<p>In each iteration of the loop, both <strong>a = 1</strong> and <strong>a = 2</strong> are executed!!</p>

<p>Based on <a href=""https://learn.microsoft.com/en-us/dotnet/visual-basic/language-reference/operators/comparison-operators"" rel=""nofollow noreferrer"">This</a>, the equality and inequality operators are ""="" and ""&lt;>"". Therefore I would expect that either <strong>a = 1</strong> or <strong>a = 2</strong> execute for a string.
Is there something wrong with my syntax? Or is it a ReqPro related Problem?</p>

<p>I also tried using ""Is"" and ""IsNot"" operators but they result in Compiler error: Type mismatch</p>

<p>Can Someone help me with this?</p>

<p><strong>Update:</strong> The actual goal is to see if the</p>

<blockquote>
  <p>rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text</p>
</blockquote>

<p>is Null or not. I added the second if to show the problem that the statement is somehow not working the way I expect it to work.</p>

<p>Replacing ""Null"" to ""vbNullString"" did not make any changes.</p>

<p>I also tried the IsNull function as @Slai suggested. the result is pretty much the same:</p>

<pre><code>    If IsNull(rqRequirement.AttrValue(att, eAttrValueLookup_Label).text) Then
        a = 3
    End If

    If Not IsNull(rqRequirement.AttrValue(att, eAttrValueLookup_Label).text) Then
        a = 4
    End If
</code></pre>

<p>Both statements <strong>a = 3</strong> and <strong>a = 4</strong> are true and executed.</p>
",<vba><ms-word><requirements>,2018-03-02 10:25:04,30847,8,5,49069438,"<p>As others have noted, you want to test against the null version of a string, vbNullString, and not against <code>Null</code> specifically. In addition to this, you also need to make sure your object isn't null itself. For example:</p>

<pre><code>Dim rqRequirements As ReqPro40.Requirements
Dim rqRequirement As ReqPro40.Requirement
Const eAttrValueLookup_Label = 4
Dim a As Long ' Avoid Integer since it has a strong habit of causing overflow errors.
...

For Each vReqKey In rqRequirements
    Set rqRequirement = rqRequirements(vReqKey)

    If Not rqRequirement Is Nothing Then
        If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text &lt;&gt; vbNullString Then
            a = 1
        End If

        If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text = vbNullString Then
             a = 2
        End If
    End If
 Next
</code></pre>

<p>Now, I haven't worked with this specific object type before, but I am fairly certain that <code>AttrValue(""MyAttreName"", eAttrValueLookup_Label)</code> is returning some kind of object. If this is the case, then the below pattern would be preferred:</p>

<pre><code>    Dim rqRequirements As ReqPro40.Requirements
    Dim rqRequirement As ReqPro40.Requirement
    Const eAttrValueLookup_Label = 4
    Dim a As Long ' Avoid Integer since it has a strong habit of causing overflow errors.
    ...

    For Each vReqKey In rqRequirements
        Set rqRequirement = rqRequirements(vReqKey)

        If Not rqRequirement Is Nothing Then
            Dim Attribute as Object ' Or whatever type it should be
            Set Attribute = rq.Requirement.AttrValue(""MyAttreName"", eAttrValueLookup)
            If Not Attribute is Nothing Then
                If Attribute.text &lt;&gt; Null Then
                    a = 1
                End If

                If Attribute.text = Null Then
                     a = 2
                End If
            End If
        End If
     Next
</code></pre>

<p>In this way, we are only ever calling upon the <code>text</code> property of the <code>Attribute</code> if we have actually set the <code>Attribute</code>. This avoids 424 errors down the line.</p>

<p>Finally, if you want to figure out what is happening in the code that is causing both if's to run, do something like this:</p>

<p><code>Debug.Print ""Attribute Text: "", Attribute.Text</code></p>

<p>This will allow you to see what your code is seeing. You can consider using breakpoints as well.</p>
",2018-03,i am pretty new in vba and i have not yet got used to the syntax completely so i m sorry if my question sounds stupid i am working with requisitepro  and vba     in word   in one of my modules i have the following loop and if conditions dim rqrequirements as reqpro  requirements dim rqrequirement as reqpro  requirement const eattrvaluelookup_label   dim a as integer for each vreqkey in rqrequirements set rqrequirement rqrequirements vreqkey if rqrequirement attrvalue myattrename eattrvaluelookup_label text null then a   end if if rqrequirement attrvalue myattrename eattrvaluelookup_label text null then a   end if next in each iteration of the loop both a   and a   are executed based on this the equality and inequality operators are and therefore i would expect that either a   or a   execute for a string is there something wrong with my syntax or is it a reqpro related problem i also tried using is and isnot operators but they result in compiler error type mismatch can someone help me with this update the actual goal is to see if the rqrequirement attrvalue myattrename eattrvaluelookup_label text is null or not i added the second if to show the problem that the statement is somehow not working the way i expect it to work replacing null to vbnullstring did not make any changes i also tried the isnull function as slai suggested the result is pretty much the same if isnull rqrequirement attrvalue att eattrvaluelookup_label text then a   end if if not isnull rqrequirement attrvalue att eattrvaluelookup_label text then a   end if both statements a   and a   are true and executed,as others have noted you want to test against the null version of a string vbnullstring and not against null specifically in addition to this you also need to make sure your object isn t null itself for example dim rqrequirements as reqpro  requirements dim rqrequirement as reqpro  requirement const eattrvaluelookup_label   dim a as long avoid integer since it has a strong habit of causing overflow errors for each vreqkey in rqrequirements set rqrequirement rqrequirements vreqkey if not rqrequirement is nothing then if rqrequirement attrvalue myattrename eattrvaluelookup_label text vbnullstring then a   end if if rqrequirement attrvalue myattrename eattrvaluelookup_label text vbnullstring then a   end if end if next now i haven t worked with this specific object type before but i am fairly certain that attrvalue myattrename eattrvaluelookup_label is returning some kind of object if this is the case then the below pattern would be preferred dim rqrequirements as reqpro  requirements dim rqrequirement as reqpro  requirement const eattrvaluelookup_label   dim a as long avoid integer since it has a strong habit of causing overflow errors for each vreqkey in rqrequirements set rqrequirement rqrequirements vreqkey if not rqrequirement is nothing then dim attribute as object or whatever type it should be set attribute rq requirement attrvalue myattrename eattrvaluelookup if not attribute is nothing then if attribute text null then a   end if if attribute text null then a   end if end if end if next in this way we are only ever calling upon the text property of the attribute if we have actually set the attribute this avoids   errors down the line finally if you want to figure out what is happening in the code that is causing both if s to run do something like this debug print attribute text attribute text this will allow you to see what your code is seeing you can consider using breakpoints as well,"['vba', 'ms-word', 'requirements']","['i', 'am', 'pretty', 'new', 'in', 'vba', 'and', 'i', 'have', 'not', 'yet', 'got', 'used', 'to', 'the', 'syntax', 'completely', 'so', 'i', 'm', 'sorry', 'if', 'my', 'question', 'sounds', 'stupid', 'i', 'am', 'working', 'with', 'requisitepro', 'and', 'vba', 'in', 'word', 'in', 'one', 'of', 'my', 'modules', 'i', 'have', 'the', 'following', 'loop', 'and', 'if', 'conditions', 'dim', 'rqrequirements', 'as', 'reqpro', 'requirements', 'dim', 'rqrequirement', 'as', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'a', 'as', 'integer', 'for', 'each', 'vreqkey', 'in', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'then', 'a', 'end', 'if', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'then', 'a', 'end', 'if', 'next', 'in', 'each', 'iteration', 'of', 'the', 'loop', 'both', 'a', 'and', 'a', 'are', 'executed', 'based', 'on', 'this', 'the', 'equality', 'and', 'inequality', 'operators', 'are', 'and', 'therefore', 'i', 'would', 'expect', 'that', 'either', 'a', 'or', 'a', 'execute', 'for', 'a', 'string', 'is', 'there', 'something', 'wrong', 'with', 'my', 'syntax', 'or', 'is', 'it', 'a', 'reqpro', 'related', 'problem', 'i', 'also', 'tried', 'using', 'is', 'and', 'isnot', 'operators', 'but', 'they', 'result', 'in', 'compiler', 'error', 'type', 'mismatch', 'can', 'someone', 'help', 'me', 'with', 'this', 'update', 'the', 'actual', 'goal', 'is', 'to', 'see', 'if', 'the', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'is', 'null', 'or', 'not', 'i', 'added', 'the', 'second', 'if', 'to', 'show', 'the', 'problem', 'that', 'the', 'statement', 'is', 'somehow', 'not', 'working', 'the', 'way', 'i', 'expect', 'it', 'to', 'work', 'replacing', 'null', 'to', 'vbnullstring', 'did', 'not', 'make', 'any', 'changes', 'i', 'also', 'tried', 'the', 'isnull', 'function', 'as', 'slai', 'suggested', 'the', 'result', 'is', 'pretty', 'much', 'the', 'same', 'if', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'then', 'a', 'end', 'if', 'if', 'not', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'then', 'a', 'end', 'if', 'both', 'statements', 'a', 'and', 'a', 'are', 'true', 'and', 'executed']","['as', 'others', 'have', 'noted', 'you', 'want', 'to', 'test', 'against', 'the', 'null', 'version', 'of', 'a', 'string', 'vbnullstring', 'and', 'not', 'against', 'null', 'specifically', 'in', 'addition', 'to', 'this', 'you', 'also', 'need', 'to', 'make', 'sure', 'your', 'object', 'isn', 't', 'null', 'itself', 'for', 'example', 'dim', 'rqrequirements', 'as', 'reqpro', 'requirements', 'dim', 'rqrequirement', 'as', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'a', 'as', 'long', 'avoid', 'integer', 'since', 'it', 'has', 'a', 'strong', 'habit', 'of', 'causing', 'overflow', 'errors', 'for', 'each', 'vreqkey', 'in', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'if', 'not', 'rqrequirement', 'is', 'nothing', 'then', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'vbnullstring', 'then', 'a', 'end', 'if', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'vbnullstring', 'then', 'a', 'end', 'if', 'end', 'if', 'next', 'now', 'i', 'haven', 't', 'worked', 'with', 'this', 'specific', 'object', 'type', 'before', 'but', 'i', 'am', 'fairly', 'certain', 'that', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'is', 'returning', 'some', 'kind', 'of', 'object', 'if', 'this', 'is', 'the', 'case', 'then', 'the', 'below', 'pattern', 'would', 'be', 'preferred', 'dim', 'rqrequirements', 'as', 'reqpro', 'requirements', 'dim', 'rqrequirement', 'as', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'a', 'as', 'long', 'avoid', 'integer', 'since', 'it', 'has', 'a', 'strong', 'habit', 'of', 'causing', 'overflow', 'errors', 'for', 'each', 'vreqkey', 'in', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'if', 'not', 'rqrequirement', 'is', 'nothing', 'then', 'dim', 'attribute', 'as', 'object', 'or', 'whatever', 'type', 'it', 'should', 'be', 'set', 'attribute', 'rq', 'requirement', 'attrvalue', 'myattrename', 'eattrvaluelookup', 'if', 'not', 'attribute', 'is', 'nothing', 'then', 'if', 'attribute', 'text', 'null', 'then', 'a', 'end', 'if', 'if', 'attribute', 'text', 'null', 'then', 'a', 'end', 'if', 'end', 'if', 'end', 'if', 'next', 'in', 'this', 'way', 'we', 'are', 'only', 'ever', 'calling', 'upon', 'the', 'text', 'property', 'of', 'the', 'attribute', 'if', 'we', 'have', 'actually', 'set', 'the', 'attribute', 'this', 'avoids', 'errors', 'down', 'the', 'line', 'finally', 'if', 'you', 'want', 'to', 'figure', 'out', 'what', 'is', 'happening', 'in', 'the', 'code', 'that', 'is', 'causing', 'both', 'if', 's', 'to', 'run', 'do', 'something', 'like', 'this', 'debug', 'print', 'attribute', 'text', 'attribute', 'text', 'this', 'will', 'allow', 'you', 'to', 'see', 'what', 'your', 'code', 'is', 'seeing', 'you', 'can', 'consider', 'using', 'breakpoints', 'as', 'well']","['pretty', 'new', 'vba', 'yet', 'got', 'used', 'syntax', 'completely', 'sorry', 'question', 'sound', 'stupid', 'working', 'requisitepro', 'vba', 'word', 'one', 'module', 'following', 'loop', 'condition', 'dim', 'rqrequirements', 'reqpro', 'requirement', 'dim', 'rqrequirement', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'integer', 'vreqkey', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'end', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'end', 'next', 'iteration', 'loop', 'executed', 'based', 'equality', 'inequality', 'operator', 'therefore', 'would', 'expect', 'either', 'execute', 'string', 'something', 'wrong', 'syntax', 'reqpro', 'related', 'problem', 'also', 'tried', 'using', 'isnot', 'operator', 'result', 'compiler', 'error', 'type', 'mismatch', 'someone', 'help', 'update', 'actual', 'goal', 'see', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'added', 'second', 'show', 'problem', 'statement', 'somehow', 'working', 'way', 'expect', 'work', 'replacing', 'null', 'vbnullstring', 'make', 'change', 'also', 'tried', 'isnull', 'function', 'slai', 'suggested', 'result', 'pretty', 'much', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'end', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'end', 'statement', 'true', 'executed']","['a', 'others', 'have', 'noted', 'you', 'want', 'to', 'test', 'against', 'the', 'null', 'version', 'of', 'a', 'string', 'vbnullstring', 'and', 'not', 'against', 'null', 'specifically', 'in', 'addition', 'to', 'this', 'you', 'also', 'need', 'to', 'make', 'sure', 'your', 'object', 'isn', 't', 'null', 'itself', 'for', 'example', 'dim', 'rqrequirements', 'a', 'reqpro', 'requirement', 'dim', 'rqrequirement', 'a', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'a', 'a', 'long', 'avoid', 'integer', 'since', 'it', 'ha', 'a', 'strong', 'habit', 'of', 'causing', 'overflow', 'error', 'for', 'each', 'vreqkey', 'in', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'if', 'not', 'rqrequirement', 'is', 'nothing', 'then', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'vbnullstring', 'then', 'a', 'end', 'if', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'vbnullstring', 'then', 'a', 'end', 'if', 'end', 'if', 'next', 'now', 'i', 'haven', 't', 'worked', 'with', 'this', 'specific', 'object', 'type', 'before', 'but', 'i', 'am', 'fairly', 'certain', 'that', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'is', 'returning', 'some', 'kind', 'of', 'object', 'if', 'this', 'is', 'the', 'case', 'then', 'the', 'below', 'pattern', 'would', 'be', 'preferred', 'dim', 'rqrequirements', 'a', 'reqpro', 'requirement', 'dim', 'rqrequirement', 'a', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'a', 'a', 'long', 'avoid', 'integer', 'since', 'it', 'ha', 'a', 'strong', 'habit', 'of', 'causing', 'overflow', 'error', 'for', 'each', 'vreqkey', 'in', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'if', 'not', 'rqrequirement', 'is', 'nothing', 'then', 'dim', 'attribute', 'a', 'object', 'or', 'whatever', 'type', 'it', 'should', 'be', 'set', 'attribute', 'rq', 'requirement', 'attrvalue', 'myattrename', 'eattrvaluelookup', 'if', 'not', 'attribute', 'is', 'nothing', 'then', 'if', 'attribute', 'text', 'null', 'then', 'a', 'end', 'if', 'if', 'attribute', 'text', 'null', 'then', 'a', 'end', 'if', 'end', 'if', 'end', 'if', 'next', 'in', 'this', 'way', 'we', 'are', 'only', 'ever', 'calling', 'upon', 'the', 'text', 'property', 'of', 'the', 'attribute', 'if', 'we', 'have', 'actually', 'set', 'the', 'attribute', 'this', 'avoids', 'error', 'down', 'the', 'line', 'finally', 'if', 'you', 'want', 'to', 'figure', 'out', 'what', 'is', 'happening', 'in', 'the', 'code', 'that', 'is', 'causing', 'both', 'if', 's', 'to', 'run', 'do', 'something', 'like', 'this', 'debug', 'print', 'attribute', 'text', 'attribute', 'text', 'this', 'will', 'allow', 'you', 'to', 'see', 'what', 'your', 'code', 'is', 'seeing', 'you', 'can', 'consider', 'using', 'breakpoints', 'a', 'well']",System Requirements and AWS,2,"{'neg': 0.039, 'neu': 0.906, 'pos': 0.055, 'compound': 0.7354}",0.027597402597402596,2,Python Libraries and Environment,3query
49067215,Testing if a string is null,"<p>I am pretty new in VBA and I have not yet got used to the syntax completely, so I'm sorry if my question sounds stupid.</p>

<p>I am working with RequisitePro40 and VBA 7.0 in Word 2010. In one of my modules I have the following loop and If conditions:</p>

<pre><code>Dim rqRequirements As ReqPro40.Requirements
Dim rqRequirement As ReqPro40.Requirement
Const eAttrValueLookup_Label = 4
Dim a As Integer
...

For Each vReqKey In rqRequirements
    Set rqRequirement = rqRequirements(vReqKey)

    If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text &lt;&gt; Null Then
        a = 1
    End If

    If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text = Null Then
         a = 2
    End If

 Next
</code></pre>

<p>In each iteration of the loop, both <strong>a = 1</strong> and <strong>a = 2</strong> are executed!!</p>

<p>Based on <a href=""https://learn.microsoft.com/en-us/dotnet/visual-basic/language-reference/operators/comparison-operators"" rel=""nofollow noreferrer"">This</a>, the equality and inequality operators are ""="" and ""&lt;>"". Therefore I would expect that either <strong>a = 1</strong> or <strong>a = 2</strong> execute for a string.
Is there something wrong with my syntax? Or is it a ReqPro related Problem?</p>

<p>I also tried using ""Is"" and ""IsNot"" operators but they result in Compiler error: Type mismatch</p>

<p>Can Someone help me with this?</p>

<p><strong>Update:</strong> The actual goal is to see if the</p>

<blockquote>
  <p>rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text</p>
</blockquote>

<p>is Null or not. I added the second if to show the problem that the statement is somehow not working the way I expect it to work.</p>

<p>Replacing ""Null"" to ""vbNullString"" did not make any changes.</p>

<p>I also tried the IsNull function as @Slai suggested. the result is pretty much the same:</p>

<pre><code>    If IsNull(rqRequirement.AttrValue(att, eAttrValueLookup_Label).text) Then
        a = 3
    End If

    If Not IsNull(rqRequirement.AttrValue(att, eAttrValueLookup_Label).text) Then
        a = 4
    End If
</code></pre>

<p>Both statements <strong>a = 3</strong> and <strong>a = 4</strong> are true and executed.</p>
",<vba><ms-word><requirements>,2018-03-02 10:25:04,30847,8,5,49077709,"<p>To ensure mutual exclusivity, ask the question only once.</p>

<pre><code>a = IIf(rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text = vbNullString , 2, 1)
</code></pre>

<p>You can also use an <code>If-Then-Else</code> construct, particularly if you have other actions you want to perform at the same time.</p>

<p>The above code example assumes the  <code>~.text</code> call is correct.</p>
",2018-03,i am pretty new in vba and i have not yet got used to the syntax completely so i m sorry if my question sounds stupid i am working with requisitepro  and vba     in word   in one of my modules i have the following loop and if conditions dim rqrequirements as reqpro  requirements dim rqrequirement as reqpro  requirement const eattrvaluelookup_label   dim a as integer for each vreqkey in rqrequirements set rqrequirement rqrequirements vreqkey if rqrequirement attrvalue myattrename eattrvaluelookup_label text null then a   end if if rqrequirement attrvalue myattrename eattrvaluelookup_label text null then a   end if next in each iteration of the loop both a   and a   are executed based on this the equality and inequality operators are and therefore i would expect that either a   or a   execute for a string is there something wrong with my syntax or is it a reqpro related problem i also tried using is and isnot operators but they result in compiler error type mismatch can someone help me with this update the actual goal is to see if the rqrequirement attrvalue myattrename eattrvaluelookup_label text is null or not i added the second if to show the problem that the statement is somehow not working the way i expect it to work replacing null to vbnullstring did not make any changes i also tried the isnull function as slai suggested the result is pretty much the same if isnull rqrequirement attrvalue att eattrvaluelookup_label text then a   end if if not isnull rqrequirement attrvalue att eattrvaluelookup_label text then a   end if both statements a   and a   are true and executed,to ensure mutual exclusivity ask the question only once a iif rqrequirement attrvalue myattrename eattrvaluelookup_label text vbnullstring     you can also use an if then else construct particularly if you have other actions you want to perform at the same time the above code example assumes the text call is correct,"['vba', 'ms-word', 'requirements']","['i', 'am', 'pretty', 'new', 'in', 'vba', 'and', 'i', 'have', 'not', 'yet', 'got', 'used', 'to', 'the', 'syntax', 'completely', 'so', 'i', 'm', 'sorry', 'if', 'my', 'question', 'sounds', 'stupid', 'i', 'am', 'working', 'with', 'requisitepro', 'and', 'vba', 'in', 'word', 'in', 'one', 'of', 'my', 'modules', 'i', 'have', 'the', 'following', 'loop', 'and', 'if', 'conditions', 'dim', 'rqrequirements', 'as', 'reqpro', 'requirements', 'dim', 'rqrequirement', 'as', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'a', 'as', 'integer', 'for', 'each', 'vreqkey', 'in', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'then', 'a', 'end', 'if', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'then', 'a', 'end', 'if', 'next', 'in', 'each', 'iteration', 'of', 'the', 'loop', 'both', 'a', 'and', 'a', 'are', 'executed', 'based', 'on', 'this', 'the', 'equality', 'and', 'inequality', 'operators', 'are', 'and', 'therefore', 'i', 'would', 'expect', 'that', 'either', 'a', 'or', 'a', 'execute', 'for', 'a', 'string', 'is', 'there', 'something', 'wrong', 'with', 'my', 'syntax', 'or', 'is', 'it', 'a', 'reqpro', 'related', 'problem', 'i', 'also', 'tried', 'using', 'is', 'and', 'isnot', 'operators', 'but', 'they', 'result', 'in', 'compiler', 'error', 'type', 'mismatch', 'can', 'someone', 'help', 'me', 'with', 'this', 'update', 'the', 'actual', 'goal', 'is', 'to', 'see', 'if', 'the', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'is', 'null', 'or', 'not', 'i', 'added', 'the', 'second', 'if', 'to', 'show', 'the', 'problem', 'that', 'the', 'statement', 'is', 'somehow', 'not', 'working', 'the', 'way', 'i', 'expect', 'it', 'to', 'work', 'replacing', 'null', 'to', 'vbnullstring', 'did', 'not', 'make', 'any', 'changes', 'i', 'also', 'tried', 'the', 'isnull', 'function', 'as', 'slai', 'suggested', 'the', 'result', 'is', 'pretty', 'much', 'the', 'same', 'if', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'then', 'a', 'end', 'if', 'if', 'not', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'then', 'a', 'end', 'if', 'both', 'statements', 'a', 'and', 'a', 'are', 'true', 'and', 'executed']","['to', 'ensure', 'mutual', 'exclusivity', 'ask', 'the', 'question', 'only', 'once', 'a', 'iif', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'vbnullstring', 'you', 'can', 'also', 'use', 'an', 'if', 'then', 'else', 'construct', 'particularly', 'if', 'you', 'have', 'other', 'actions', 'you', 'want', 'to', 'perform', 'at', 'the', 'same', 'time', 'the', 'above', 'code', 'example', 'assumes', 'the', 'text', 'call', 'is', 'correct']","['pretty', 'new', 'vba', 'yet', 'got', 'used', 'syntax', 'completely', 'sorry', 'question', 'sound', 'stupid', 'working', 'requisitepro', 'vba', 'word', 'one', 'module', 'following', 'loop', 'condition', 'dim', 'rqrequirements', 'reqpro', 'requirement', 'dim', 'rqrequirement', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'integer', 'vreqkey', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'end', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'end', 'next', 'iteration', 'loop', 'executed', 'based', 'equality', 'inequality', 'operator', 'therefore', 'would', 'expect', 'either', 'execute', 'string', 'something', 'wrong', 'syntax', 'reqpro', 'related', 'problem', 'also', 'tried', 'using', 'isnot', 'operator', 'result', 'compiler', 'error', 'type', 'mismatch', 'someone', 'help', 'update', 'actual', 'goal', 'see', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'added', 'second', 'show', 'problem', 'statement', 'somehow', 'working', 'way', 'expect', 'work', 'replacing', 'null', 'vbnullstring', 'make', 'change', 'also', 'tried', 'isnull', 'function', 'slai', 'suggested', 'result', 'pretty', 'much', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'end', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'end', 'statement', 'true', 'executed']","['to', 'ensure', 'mutual', 'exclusivity', 'ask', 'the', 'question', 'only', 'once', 'a', 'iif', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'vbnullstring', 'you', 'can', 'also', 'use', 'an', 'if', 'then', 'else', 'construct', 'particularly', 'if', 'you', 'have', 'other', 'action', 'you', 'want', 'to', 'perform', 'at', 'the', 'same', 'time', 'the', 'above', 'code', 'example', 'assumes', 'the', 'text', 'call', 'is', 'correct']",System Requirements and AWS,2,"{'neg': 0.039, 'neu': 0.906, 'pos': 0.055, 'compound': 0.7354}",0.027597402597402596,2,Python Libraries and Environment,3query
49067215,Testing if a string is null,"<p>I am pretty new in VBA and I have not yet got used to the syntax completely, so I'm sorry if my question sounds stupid.</p>

<p>I am working with RequisitePro40 and VBA 7.0 in Word 2010. In one of my modules I have the following loop and If conditions:</p>

<pre><code>Dim rqRequirements As ReqPro40.Requirements
Dim rqRequirement As ReqPro40.Requirement
Const eAttrValueLookup_Label = 4
Dim a As Integer
...

For Each vReqKey In rqRequirements
    Set rqRequirement = rqRequirements(vReqKey)

    If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text &lt;&gt; Null Then
        a = 1
    End If

    If rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text = Null Then
         a = 2
    End If

 Next
</code></pre>

<p>In each iteration of the loop, both <strong>a = 1</strong> and <strong>a = 2</strong> are executed!!</p>

<p>Based on <a href=""https://learn.microsoft.com/en-us/dotnet/visual-basic/language-reference/operators/comparison-operators"" rel=""nofollow noreferrer"">This</a>, the equality and inequality operators are ""="" and ""&lt;>"". Therefore I would expect that either <strong>a = 1</strong> or <strong>a = 2</strong> execute for a string.
Is there something wrong with my syntax? Or is it a ReqPro related Problem?</p>

<p>I also tried using ""Is"" and ""IsNot"" operators but they result in Compiler error: Type mismatch</p>

<p>Can Someone help me with this?</p>

<p><strong>Update:</strong> The actual goal is to see if the</p>

<blockquote>
  <p>rqRequirement.AttrValue(""MyAttreName"", eAttrValueLookup_Label).text</p>
</blockquote>

<p>is Null or not. I added the second if to show the problem that the statement is somehow not working the way I expect it to work.</p>

<p>Replacing ""Null"" to ""vbNullString"" did not make any changes.</p>

<p>I also tried the IsNull function as @Slai suggested. the result is pretty much the same:</p>

<pre><code>    If IsNull(rqRequirement.AttrValue(att, eAttrValueLookup_Label).text) Then
        a = 3
    End If

    If Not IsNull(rqRequirement.AttrValue(att, eAttrValueLookup_Label).text) Then
        a = 4
    End If
</code></pre>

<p>Both statements <strong>a = 3</strong> and <strong>a = 4</strong> are true and executed.</p>
",<vba><ms-word><requirements>,2018-03-02 10:25:04,30847,8,5,57083876,"<p>I landed here looking for an answer to ""VBA: How to test if a string is Null""</p>

<p>while this answer may not apply to this particular users situation, it does apply to the subject question.</p>

<pre><code>Dim s As String, s2 As String
s = """"
s2 = vbNullString
Debug.Print StrPtr(s) = 0, StrPtr(s2) = 0
</code></pre>

<p>which returns</p>

<pre><code>False   True
</code></pre>

<p>because <code>vbNullString</code> is a C style NULL pointer for working with COM objects, and so its memory address when returned by the undocumented <code>StrPtr</code> function will always be 0</p>
",2018-03,i am pretty new in vba and i have not yet got used to the syntax completely so i m sorry if my question sounds stupid i am working with requisitepro  and vba     in word   in one of my modules i have the following loop and if conditions dim rqrequirements as reqpro  requirements dim rqrequirement as reqpro  requirement const eattrvaluelookup_label   dim a as integer for each vreqkey in rqrequirements set rqrequirement rqrequirements vreqkey if rqrequirement attrvalue myattrename eattrvaluelookup_label text null then a   end if if rqrequirement attrvalue myattrename eattrvaluelookup_label text null then a   end if next in each iteration of the loop both a   and a   are executed based on this the equality and inequality operators are and therefore i would expect that either a   or a   execute for a string is there something wrong with my syntax or is it a reqpro related problem i also tried using is and isnot operators but they result in compiler error type mismatch can someone help me with this update the actual goal is to see if the rqrequirement attrvalue myattrename eattrvaluelookup_label text is null or not i added the second if to show the problem that the statement is somehow not working the way i expect it to work replacing null to vbnullstring did not make any changes i also tried the isnull function as slai suggested the result is pretty much the same if isnull rqrequirement attrvalue att eattrvaluelookup_label text then a   end if if not isnull rqrequirement attrvalue att eattrvaluelookup_label text then a   end if both statements a   and a   are true and executed,i landed here looking for an answer to vba how to test if a string is null while this answer may not apply to this particular users situation it does apply to the subject question dim s as string s  as string s s  vbnullstring debug print strptr s   strptr s    which returns false true because vbnullstring is a c style null pointer for working with com objects and so its memory address when returned by the undocumented strptr function will always be,"['vba', 'ms-word', 'requirements']","['i', 'am', 'pretty', 'new', 'in', 'vba', 'and', 'i', 'have', 'not', 'yet', 'got', 'used', 'to', 'the', 'syntax', 'completely', 'so', 'i', 'm', 'sorry', 'if', 'my', 'question', 'sounds', 'stupid', 'i', 'am', 'working', 'with', 'requisitepro', 'and', 'vba', 'in', 'word', 'in', 'one', 'of', 'my', 'modules', 'i', 'have', 'the', 'following', 'loop', 'and', 'if', 'conditions', 'dim', 'rqrequirements', 'as', 'reqpro', 'requirements', 'dim', 'rqrequirement', 'as', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'a', 'as', 'integer', 'for', 'each', 'vreqkey', 'in', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'then', 'a', 'end', 'if', 'if', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'then', 'a', 'end', 'if', 'next', 'in', 'each', 'iteration', 'of', 'the', 'loop', 'both', 'a', 'and', 'a', 'are', 'executed', 'based', 'on', 'this', 'the', 'equality', 'and', 'inequality', 'operators', 'are', 'and', 'therefore', 'i', 'would', 'expect', 'that', 'either', 'a', 'or', 'a', 'execute', 'for', 'a', 'string', 'is', 'there', 'something', 'wrong', 'with', 'my', 'syntax', 'or', 'is', 'it', 'a', 'reqpro', 'related', 'problem', 'i', 'also', 'tried', 'using', 'is', 'and', 'isnot', 'operators', 'but', 'they', 'result', 'in', 'compiler', 'error', 'type', 'mismatch', 'can', 'someone', 'help', 'me', 'with', 'this', 'update', 'the', 'actual', 'goal', 'is', 'to', 'see', 'if', 'the', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'is', 'null', 'or', 'not', 'i', 'added', 'the', 'second', 'if', 'to', 'show', 'the', 'problem', 'that', 'the', 'statement', 'is', 'somehow', 'not', 'working', 'the', 'way', 'i', 'expect', 'it', 'to', 'work', 'replacing', 'null', 'to', 'vbnullstring', 'did', 'not', 'make', 'any', 'changes', 'i', 'also', 'tried', 'the', 'isnull', 'function', 'as', 'slai', 'suggested', 'the', 'result', 'is', 'pretty', 'much', 'the', 'same', 'if', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'then', 'a', 'end', 'if', 'if', 'not', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'then', 'a', 'end', 'if', 'both', 'statements', 'a', 'and', 'a', 'are', 'true', 'and', 'executed']","['i', 'landed', 'here', 'looking', 'for', 'an', 'answer', 'to', 'vba', 'how', 'to', 'test', 'if', 'a', 'string', 'is', 'null', 'while', 'this', 'answer', 'may', 'not', 'apply', 'to', 'this', 'particular', 'users', 'situation', 'it', 'does', 'apply', 'to', 'the', 'subject', 'question', 'dim', 's', 'as', 'string', 's', 'as', 'string', 's', 's', 'vbnullstring', 'debug', 'print', 'strptr', 's', 'strptr', 's', 'which', 'returns', 'false', 'true', 'because', 'vbnullstring', 'is', 'a', 'c', 'style', 'null', 'pointer', 'for', 'working', 'with', 'com', 'objects', 'and', 'so', 'its', 'memory', 'address', 'when', 'returned', 'by', 'the', 'undocumented', 'strptr', 'function', 'will', 'always', 'be']","['pretty', 'new', 'vba', 'yet', 'got', 'used', 'syntax', 'completely', 'sorry', 'question', 'sound', 'stupid', 'working', 'requisitepro', 'vba', 'word', 'one', 'module', 'following', 'loop', 'condition', 'dim', 'rqrequirements', 'reqpro', 'requirement', 'dim', 'rqrequirement', 'reqpro', 'requirement', 'const', 'eattrvaluelookup_label', 'dim', 'integer', 'vreqkey', 'rqrequirements', 'set', 'rqrequirement', 'rqrequirements', 'vreqkey', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'end', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'end', 'next', 'iteration', 'loop', 'executed', 'based', 'equality', 'inequality', 'operator', 'therefore', 'would', 'expect', 'either', 'execute', 'string', 'something', 'wrong', 'syntax', 'reqpro', 'related', 'problem', 'also', 'tried', 'using', 'isnot', 'operator', 'result', 'compiler', 'error', 'type', 'mismatch', 'someone', 'help', 'update', 'actual', 'goal', 'see', 'rqrequirement', 'attrvalue', 'myattrename', 'eattrvaluelookup_label', 'text', 'null', 'added', 'second', 'show', 'problem', 'statement', 'somehow', 'working', 'way', 'expect', 'work', 'replacing', 'null', 'vbnullstring', 'make', 'change', 'also', 'tried', 'isnull', 'function', 'slai', 'suggested', 'result', 'pretty', 'much', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'end', 'isnull', 'rqrequirement', 'attrvalue', 'att', 'eattrvaluelookup_label', 'text', 'end', 'statement', 'true', 'executed']","['i', 'landed', 'here', 'looking', 'for', 'an', 'answer', 'to', 'vba', 'how', 'to', 'test', 'if', 'a', 'string', 'is', 'null', 'while', 'this', 'answer', 'may', 'not', 'apply', 'to', 'this', 'particular', 'user', 'situation', 'it', 'doe', 'apply', 'to', 'the', 'subject', 'question', 'dim', 's', 'a', 'string', 's', 'a', 'string', 's', 's', 'vbnullstring', 'debug', 'print', 'strptr', 's', 'strptr', 's', 'which', 'return', 'false', 'true', 'because', 'vbnullstring', 'is', 'a', 'c', 'style', 'null', 'pointer', 'for', 'working', 'with', 'com', 'object', 'and', 'so', 'it', 'memory', 'address', 'when', 'returned', 'by', 'the', 'undocumented', 'strptr', 'function', 'will', 'always', 'be']",System Requirements and AWS,2,"{'neg': 0.039, 'neu': 0.906, 'pos': 0.055, 'compound': 0.7354}",0.027597402597402596,2,Python Libraries and Environment,3query
